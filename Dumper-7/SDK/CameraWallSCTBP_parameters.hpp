#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CameraWallSCTBP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"
#include "SCT_structs.hpp"
#include "AkAudio_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function CameraWallSCTBP.CameraWallSCTBP_C.ExecuteUbergraph_CameraWallSCTBP
// 0x02A0 (0x02A0 - 0x0000)
struct CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x0008(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0048(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHumanoidCharacter*                     K2Node_DynamicCast_AsHumanoid_Character;           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component_1;    // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter_1;                  // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInteractionPayload                    K2Node_ComponentBoundEvent_payload;                // 0x0158(0x0030)(ConstParm, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter_2;                  // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue;        // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x019B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasRecentlyRendered_ReturnValue;          // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_CustomEvent_InteractingCharacter;           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_CustomEvent_Character_2;                    // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_2;        // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x01C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x01D4(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x01E8(0x0010)(ConstParm, ReferenceParm)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x01F8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0210(0x0018)(HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_CustomEvent_Character_1;                    // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0238(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_CustomEvent_Character;                      // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemoveActiveEffectsWithAppliedTags_ReturnValue; // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_3;        // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x024D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x024E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24F[0x1];                                      // 0x024F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_CaptureTargetTransform;         // 0x0250(0x0030)(IsPlainOldData, NoDestructor)
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0280(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_4;          // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_5;               // 0x029A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29B[0x1];                                      // 0x029B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP) == 0x000010, "Wrong alignment on CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP");
static_assert(sizeof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP) == 0x0002A0, "Wrong size on CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, EntryPoint) == 0x000000, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_InputKeyEvent_Key_3) == 0x000008, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, Temp_bool_Has_Been_Initd_Variable) == 0x000020, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_HasAuthority_ReturnValue) == 0x000021, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_HasAuthority_ReturnValue_1) == 0x000022, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, Temp_bool_IsClosed_Variable) == 0x000023, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, Temp_bool_Has_Been_Initd_Variable_1) == 0x000024, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_Add_ByteByte_ReturnValue) == 0x000025, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000028, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000030, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000038, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000040, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_ComponentBoundEvent_bFromSweep) == 0x000044, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_ComponentBoundEvent_SweepResult) == 0x000048, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x0000D8, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000E1, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_GetOwner_ReturnValue) == 0x0000E8, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_DynamicCast_AsCharacter) == 0x0000F0, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_DynamicCast_bSuccess_1) == 0x0000F8, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000100, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_ComponentBoundEvent_OtherActor) == 0x000108, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_ComponentBoundEvent_OtherComp) == 0x000110, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000118, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_DynamicCast_AsHumanoid_Character) == 0x000120, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_DynamicCast_AsHumanoid_Character' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_DynamicCast_bSuccess_2) == 0x000128, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_DynamicCast_AsSkeletal_Mesh_Component_1) == 0x000130, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_DynamicCast_AsSkeletal_Mesh_Component_1' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_DynamicCast_bSuccess_3) == 0x000138, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_IsLocallyControlled_ReturnValue) == 0x000139, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_GetOwner_ReturnValue_1) == 0x000140, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_DynamicCast_AsCharacter_1) == 0x000148, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_DynamicCast_AsCharacter_1' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_DynamicCast_bSuccess_4) == 0x000150, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000151, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000152, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000153, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_ComponentBoundEvent_payload) == 0x000158, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_ComponentBoundEvent_payload' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_Array_Length_ReturnValue) == 0x000188, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_Subtract_IntInt_ReturnValue) == 0x00018C, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_DynamicCast_AsCharacter_2) == 0x000190, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_DynamicCast_AsCharacter_2' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_DynamicCast_bSuccess_5) == 0x000198, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_Conv_IntToByte_ReturnValue) == 0x000199, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_GreaterEqual_ByteByte_ReturnValue) == 0x00019A, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_GreaterEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_HasAuthority_ReturnValue_2) == 0x00019B, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_Event_DeltaSeconds) == 0x00019C, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_WasRecentlyRendered_ReturnValue) == 0x0001A0, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_WasRecentlyRendered_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_CustomEvent_InteractingCharacter) == 0x0001A8, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_CustomEvent_InteractingCharacter' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_CustomEvent_Character_2) == 0x0001B0, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_CustomEvent_Character_2' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_IsLocallyControlled_ReturnValue_2) == 0x0001B8, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_IsLocallyControlled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x0001C0, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x0001C8, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, Temp_bool_IsClosed_Variable_1) == 0x0001D0, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, Temp_delegate_Variable) == 0x0001D4, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, Temp_struct_Variable) == 0x0001E8, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_InputKeyEvent_Key) == 0x0001F8, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_InputKeyEvent_Key_1) == 0x000210, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_GetPlayerController_ReturnValue) == 0x000228, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_CustomEvent_Character_1) == 0x000230, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_CustomEvent_Character_1' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000238, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_CustomEvent_Character) == 0x000240, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_RemoveActiveEffectsWithAppliedTags_ReturnValue) == 0x000248, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_RemoveActiveEffectsWithAppliedTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_IsLocallyControlled_ReturnValue_3) == 0x00024C, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_IsLocallyControlled_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_HasAuthority_ReturnValue_3) == 0x00024D, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_HasAuthority_ReturnValue_4) == 0x00024E, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_CustomEvent_CaptureTargetTransform) == 0x000250, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_CustomEvent_CaptureTargetTransform' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, K2Node_InputKeyEvent_Key_2) == 0x000280, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x000298, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_IsDedicatedServer_ReturnValue_4) == 0x000299, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_IsDedicatedServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_HasAuthority_ReturnValue_5) == 0x00029A, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_HasAuthority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP, CallFunc_PostAkEvent_ReturnValue) == 0x00029C, "Member 'CameraWallSCTBP_C_ExecuteUbergraph_CameraWallSCTBP::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");

// Function CameraWallSCTBP.CameraWallSCTBP_C.TakePictureReroute
// 0x0030 (0x0030 - 0x0000)
struct CameraWallSCTBP_C_TakePictureReroute final
{
public:
	struct FTransform                             CaptureTargetTransform;                            // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CameraWallSCTBP_C_TakePictureReroute) == 0x000010, "Wrong alignment on CameraWallSCTBP_C_TakePictureReroute");
static_assert(sizeof(CameraWallSCTBP_C_TakePictureReroute) == 0x000030, "Wrong size on CameraWallSCTBP_C_TakePictureReroute");
static_assert(offsetof(CameraWallSCTBP_C_TakePictureReroute, CaptureTargetTransform) == 0x000000, "Member 'CameraWallSCTBP_C_TakePictureReroute::CaptureTargetTransform' has a wrong offset!");

// Function CameraWallSCTBP.CameraWallSCTBP_C.EndFullScreenMulticast
// 0x0008 (0x0008 - 0x0000)
struct CameraWallSCTBP_C_EndFullScreenMulticast final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraWallSCTBP_C_EndFullScreenMulticast) == 0x000008, "Wrong alignment on CameraWallSCTBP_C_EndFullScreenMulticast");
static_assert(sizeof(CameraWallSCTBP_C_EndFullScreenMulticast) == 0x000008, "Wrong size on CameraWallSCTBP_C_EndFullScreenMulticast");
static_assert(offsetof(CameraWallSCTBP_C_EndFullScreenMulticast, Character) == 0x000000, "Member 'CameraWallSCTBP_C_EndFullScreenMulticast::Character' has a wrong offset!");

// Function CameraWallSCTBP.CameraWallSCTBP_C.EndFullScreenReroute
// 0x0008 (0x0008 - 0x0000)
struct CameraWallSCTBP_C_EndFullScreenReroute final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraWallSCTBP_C_EndFullScreenReroute) == 0x000008, "Wrong alignment on CameraWallSCTBP_C_EndFullScreenReroute");
static_assert(sizeof(CameraWallSCTBP_C_EndFullScreenReroute) == 0x000008, "Wrong size on CameraWallSCTBP_C_EndFullScreenReroute");
static_assert(offsetof(CameraWallSCTBP_C_EndFullScreenReroute, Character) == 0x000000, "Member 'CameraWallSCTBP_C_EndFullScreenReroute::Character' has a wrong offset!");

// Function CameraWallSCTBP.CameraWallSCTBP_C.StartFullScreenMulticast
// 0x0008 (0x0008 - 0x0000)
struct CameraWallSCTBP_C_StartFullScreenMulticast final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraWallSCTBP_C_StartFullScreenMulticast) == 0x000008, "Wrong alignment on CameraWallSCTBP_C_StartFullScreenMulticast");
static_assert(sizeof(CameraWallSCTBP_C_StartFullScreenMulticast) == 0x000008, "Wrong size on CameraWallSCTBP_C_StartFullScreenMulticast");
static_assert(offsetof(CameraWallSCTBP_C_StartFullScreenMulticast, Character) == 0x000000, "Member 'CameraWallSCTBP_C_StartFullScreenMulticast::Character' has a wrong offset!");

// Function CameraWallSCTBP.CameraWallSCTBP_C.StartFullScreenServer
// 0x0008 (0x0008 - 0x0000)
struct CameraWallSCTBP_C_StartFullScreenServer final
{
public:
	class ACharacter*                             InteractingCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraWallSCTBP_C_StartFullScreenServer) == 0x000008, "Wrong alignment on CameraWallSCTBP_C_StartFullScreenServer");
static_assert(sizeof(CameraWallSCTBP_C_StartFullScreenServer) == 0x000008, "Wrong size on CameraWallSCTBP_C_StartFullScreenServer");
static_assert(offsetof(CameraWallSCTBP_C_StartFullScreenServer, InteractingCharacter) == 0x000000, "Member 'CameraWallSCTBP_C_StartFullScreenServer::InteractingCharacter' has a wrong offset!");

// Function CameraWallSCTBP.CameraWallSCTBP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct CameraWallSCTBP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraWallSCTBP_C_ReceiveTick) == 0x000004, "Wrong alignment on CameraWallSCTBP_C_ReceiveTick");
static_assert(sizeof(CameraWallSCTBP_C_ReceiveTick) == 0x000004, "Wrong size on CameraWallSCTBP_C_ReceiveTick");
static_assert(offsetof(CameraWallSCTBP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'CameraWallSCTBP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function CameraWallSCTBP.CameraWallSCTBP_C.BndEvt__Interaction_K2Node_ComponentBoundEvent_2_InteractionDelegate__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct CameraWallSCTBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_2_InteractionDelegate__DelegateSignature final
{
public:
	struct FInteractionPayload                    Payload;                                           // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(CameraWallSCTBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_2_InteractionDelegate__DelegateSignature) == 0x000008, "Wrong alignment on CameraWallSCTBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_2_InteractionDelegate__DelegateSignature");
static_assert(sizeof(CameraWallSCTBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_2_InteractionDelegate__DelegateSignature) == 0x000030, "Wrong size on CameraWallSCTBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_2_InteractionDelegate__DelegateSignature");
static_assert(offsetof(CameraWallSCTBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_2_InteractionDelegate__DelegateSignature, Payload) == 0x000000, "Member 'CameraWallSCTBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_2_InteractionDelegate__DelegateSignature::Payload' has a wrong offset!");

// Function CameraWallSCTBP.CameraWallSCTBP_C.BndEvt__RenderCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function CameraWallSCTBP.CameraWallSCTBP_C.BndEvt__RenderCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'CameraWallSCTBP_C_BndEvt__RenderCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function CameraWallSCTBP.CameraWallSCTBP_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct CameraWallSCTBP_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CameraWallSCTBP_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on CameraWallSCTBP_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0");
static_assert(sizeof(CameraWallSCTBP_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on CameraWallSCTBP_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0");
static_assert(offsetof(CameraWallSCTBP_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'CameraWallSCTBP_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function CameraWallSCTBP.CameraWallSCTBP_C.InpActEvt_F_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct CameraWallSCTBP_C_InpActEvt_F_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CameraWallSCTBP_C_InpActEvt_F_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on CameraWallSCTBP_C_InpActEvt_F_K2Node_InputKeyEvent_1");
static_assert(sizeof(CameraWallSCTBP_C_InpActEvt_F_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on CameraWallSCTBP_C_InpActEvt_F_K2Node_InputKeyEvent_1");
static_assert(offsetof(CameraWallSCTBP_C_InpActEvt_F_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'CameraWallSCTBP_C_InpActEvt_F_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function CameraWallSCTBP.CameraWallSCTBP_C.InpActEvt_A_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct CameraWallSCTBP_C_InpActEvt_A_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CameraWallSCTBP_C_InpActEvt_A_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on CameraWallSCTBP_C_InpActEvt_A_K2Node_InputKeyEvent_2");
static_assert(sizeof(CameraWallSCTBP_C_InpActEvt_A_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on CameraWallSCTBP_C_InpActEvt_A_K2Node_InputKeyEvent_2");
static_assert(offsetof(CameraWallSCTBP_C_InpActEvt_A_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'CameraWallSCTBP_C_InpActEvt_A_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function CameraWallSCTBP.CameraWallSCTBP_C.InpActEvt_D_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct CameraWallSCTBP_C_InpActEvt_D_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CameraWallSCTBP_C_InpActEvt_D_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on CameraWallSCTBP_C_InpActEvt_D_K2Node_InputKeyEvent_3");
static_assert(sizeof(CameraWallSCTBP_C_InpActEvt_D_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on CameraWallSCTBP_C_InpActEvt_D_K2Node_InputKeyEvent_3");
static_assert(offsetof(CameraWallSCTBP_C_InpActEvt_D_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'CameraWallSCTBP_C_InpActEvt_D_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function CameraWallSCTBP.CameraWallSCTBP_C.UserConstructionScript
// 0x00BC (0x00BC - 0x0000)
struct CameraWallSCTBP_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0024(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraWallSCTBP_C_UserConstructionScript) == 0x000004, "Wrong alignment on CameraWallSCTBP_C_UserConstructionScript");
static_assert(sizeof(CameraWallSCTBP_C_UserConstructionScript) == 0x0000BC, "Wrong size on CameraWallSCTBP_C_UserConstructionScript");
static_assert(offsetof(CameraWallSCTBP_C_UserConstructionScript, CallFunc_BreakTransform_Location) == 0x000000, "Member 'CameraWallSCTBP_C_UserConstructionScript::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_UserConstructionScript, CallFunc_BreakTransform_Rotation) == 0x00000C, "Member 'CameraWallSCTBP_C_UserConstructionScript::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_UserConstructionScript, CallFunc_BreakTransform_Scale) == 0x000018, "Member 'CameraWallSCTBP_C_UserConstructionScript::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000024, "Member 'CameraWallSCTBP_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_UserConstructionScript, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B0, "Member 'CameraWallSCTBP_C_UserConstructionScript::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function CameraWallSCTBP.CameraWallSCTBP_C.OnRep_ActiveCamera
// 0x0002 (0x0002 - 0x0000)
struct CameraWallSCTBP_C_OnRep_ActiveCamera final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CameraWallSCTBP_C_OnRep_ActiveCamera) == 0x000001, "Wrong alignment on CameraWallSCTBP_C_OnRep_ActiveCamera");
static_assert(sizeof(CameraWallSCTBP_C_OnRep_ActiveCamera) == 0x000002, "Wrong size on CameraWallSCTBP_C_OnRep_ActiveCamera");
static_assert(offsetof(CameraWallSCTBP_C_OnRep_ActiveCamera, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'CameraWallSCTBP_C_OnRep_ActiveCamera::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_OnRep_ActiveCamera, CallFunc_IsDedicatedServer_ReturnValue) == 0x000001, "Member 'CameraWallSCTBP_C_OnRep_ActiveCamera::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function CameraWallSCTBP.CameraWallSCTBP_C.SwitchCamera
// 0x0018 (0x0018 - 0x0000)
struct CameraWallSCTBP_C_SwitchCamera final
{
public:
	bool                                          SetCameraActive;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurveilanceCameraSCTBP_C*              CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CameraWallSCTBP_C_SwitchCamera) == 0x000008, "Wrong alignment on CameraWallSCTBP_C_SwitchCamera");
static_assert(sizeof(CameraWallSCTBP_C_SwitchCamera) == 0x000018, "Wrong size on CameraWallSCTBP_C_SwitchCamera");
static_assert(offsetof(CameraWallSCTBP_C_SwitchCamera, SetCameraActive) == 0x000000, "Member 'CameraWallSCTBP_C_SwitchCamera::SetCameraActive' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_SwitchCamera, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'CameraWallSCTBP_C_SwitchCamera::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_SwitchCamera, CallFunc_Array_Get_Item) == 0x000008, "Member 'CameraWallSCTBP_C_SwitchCamera::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_SwitchCamera, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'CameraWallSCTBP_C_SwitchCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_SwitchCamera, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000011, "Member 'CameraWallSCTBP_C_SwitchCamera::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function CameraWallSCTBP.CameraWallSCTBP_C.UpdateViewTarget
// 0x0010 (0x0010 - 0x0000)
struct CameraWallSCTBP_C_UpdateViewTarget final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurveilanceCameraSCTBP_C*              CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraWallSCTBP_C_UpdateViewTarget) == 0x000008, "Wrong alignment on CameraWallSCTBP_C_UpdateViewTarget");
static_assert(sizeof(CameraWallSCTBP_C_UpdateViewTarget) == 0x000010, "Wrong size on CameraWallSCTBP_C_UpdateViewTarget");
static_assert(offsetof(CameraWallSCTBP_C_UpdateViewTarget, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'CameraWallSCTBP_C_UpdateViewTarget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_UpdateViewTarget, CallFunc_Array_Get_Item) == 0x000008, "Member 'CameraWallSCTBP_C_UpdateViewTarget::CallFunc_Array_Get_Item' has a wrong offset!");

// Function CameraWallSCTBP.CameraWallSCTBP_C.UpdateViewIndex
// 0x001C (0x001C - 0x0000)
struct CameraWallSCTBP_C_UpdateViewIndex final
{
public:
	int32                                         Increment;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CameraWallSCTBP_C_UpdateViewIndex) == 0x000004, "Wrong alignment on CameraWallSCTBP_C_UpdateViewIndex");
static_assert(sizeof(CameraWallSCTBP_C_UpdateViewIndex) == 0x00001C, "Wrong size on CameraWallSCTBP_C_UpdateViewIndex");
static_assert(offsetof(CameraWallSCTBP_C_UpdateViewIndex, Increment) == 0x000000, "Member 'CameraWallSCTBP_C_UpdateViewIndex::Increment' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_UpdateViewIndex, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'CameraWallSCTBP_C_UpdateViewIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_UpdateViewIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'CameraWallSCTBP_C_UpdateViewIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_UpdateViewIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'CameraWallSCTBP_C_UpdateViewIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_UpdateViewIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'CameraWallSCTBP_C_UpdateViewIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_UpdateViewIndex, CallFunc_Array_Length_ReturnValue_1) == 0x000014, "Member 'CameraWallSCTBP_C_UpdateViewIndex::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_UpdateViewIndex, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'CameraWallSCTBP_C_UpdateViewIndex::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function CameraWallSCTBP.CameraWallSCTBP_C.LocalEndFullScreen
// 0x0018 (0x0018 - 0x0000)
struct CameraWallSCTBP_C_LocalEndFullScreen final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraWallSCTBP_C_LocalEndFullScreen) == 0x000008, "Wrong alignment on CameraWallSCTBP_C_LocalEndFullScreen");
static_assert(sizeof(CameraWallSCTBP_C_LocalEndFullScreen) == 0x000018, "Wrong size on CameraWallSCTBP_C_LocalEndFullScreen");
static_assert(offsetof(CameraWallSCTBP_C_LocalEndFullScreen, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'CameraWallSCTBP_C_LocalEndFullScreen::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_LocalEndFullScreen, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'CameraWallSCTBP_C_LocalEndFullScreen::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_LocalEndFullScreen, CallFunc_GetPlayerController_ReturnValue_1) == 0x000010, "Member 'CameraWallSCTBP_C_LocalEndFullScreen::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");

// Function CameraWallSCTBP.CameraWallSCTBP_C.ServerEndFullScreen
// 0x0018 (0x0018 - 0x0000)
struct CameraWallSCTBP_C_ServerEndFullScreen final
{
public:
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CameraWallSCTBP_C_ServerEndFullScreen) == 0x000008, "Wrong alignment on CameraWallSCTBP_C_ServerEndFullScreen");
static_assert(sizeof(CameraWallSCTBP_C_ServerEndFullScreen) == 0x000018, "Wrong size on CameraWallSCTBP_C_ServerEndFullScreen");
static_assert(offsetof(CameraWallSCTBP_C_ServerEndFullScreen, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000000, "Member 'CameraWallSCTBP_C_ServerEndFullScreen::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ServerEndFullScreen, K2Node_DynamicCast_AsCharacter_SCTBP) == 0x000008, "Member 'CameraWallSCTBP_C_ServerEndFullScreen::K2Node_DynamicCast_AsCharacter_SCTBP' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ServerEndFullScreen, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'CameraWallSCTBP_C_ServerEndFullScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function CameraWallSCTBP.CameraWallSCTBP_C.ServerTakePicture
// 0x0050 (0x0050 - 0x0000)
struct CameraWallSCTBP_C_ServerTakePicture final
{
public:
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurveilanceCameraSCTBP_C*              CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(CameraWallSCTBP_C_ServerTakePicture) == 0x000010, "Wrong alignment on CameraWallSCTBP_C_ServerTakePicture");
static_assert(sizeof(CameraWallSCTBP_C_ServerTakePicture) == 0x000050, "Wrong size on CameraWallSCTBP_C_ServerTakePicture");
static_assert(offsetof(CameraWallSCTBP_C_ServerTakePicture, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000000, "Member 'CameraWallSCTBP_C_ServerTakePicture::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ServerTakePicture, CallFunc_Array_Get_Item) == 0x000008, "Member 'CameraWallSCTBP_C_ServerTakePicture::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ServerTakePicture, K2Node_DynamicCast_AsCharacter_SCTBP) == 0x000010, "Member 'CameraWallSCTBP_C_ServerTakePicture::K2Node_DynamicCast_AsCharacter_SCTBP' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ServerTakePicture, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'CameraWallSCTBP_C_ServerTakePicture::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_ServerTakePicture, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'CameraWallSCTBP_C_ServerTakePicture::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");

// Function CameraWallSCTBP.CameraWallSCTBP_C.OnRep_PictureTransform
// 0x00B4 (0x00B4 - 0x0000)
struct CameraWallSCTBP_C_OnRep_PictureTransform final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0028(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(CameraWallSCTBP_C_OnRep_PictureTransform) == 0x000004, "Wrong alignment on CameraWallSCTBP_C_OnRep_PictureTransform");
static_assert(sizeof(CameraWallSCTBP_C_OnRep_PictureTransform) == 0x0000B4, "Wrong size on CameraWallSCTBP_C_OnRep_PictureTransform");
static_assert(offsetof(CameraWallSCTBP_C_OnRep_PictureTransform, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'CameraWallSCTBP_C_OnRep_PictureTransform::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_OnRep_PictureTransform, CallFunc_IsDedicatedServer_ReturnValue) == 0x000001, "Member 'CameraWallSCTBP_C_OnRep_PictureTransform::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_OnRep_PictureTransform, CallFunc_BreakTransform_Location) == 0x000004, "Member 'CameraWallSCTBP_C_OnRep_PictureTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_OnRep_PictureTransform, CallFunc_BreakTransform_Rotation) == 0x000010, "Member 'CameraWallSCTBP_C_OnRep_PictureTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_OnRep_PictureTransform, CallFunc_BreakTransform_Scale) == 0x00001C, "Member 'CameraWallSCTBP_C_OnRep_PictureTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_OnRep_PictureTransform, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000028, "Member 'CameraWallSCTBP_C_OnRep_PictureTransform::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");

// Function CameraWallSCTBP.CameraWallSCTBP_C.SetActiveCamera
// 0x0018 (0x0018 - 0x0000)
struct CameraWallSCTBP_C_SetActiveCamera final
{
public:
	uint8                                         Index_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurveilanceCameraSCTBP_C*              CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CameraWallSCTBP_C_SetActiveCamera) == 0x000008, "Wrong alignment on CameraWallSCTBP_C_SetActiveCamera");
static_assert(sizeof(CameraWallSCTBP_C_SetActiveCamera) == 0x000018, "Wrong size on CameraWallSCTBP_C_SetActiveCamera");
static_assert(offsetof(CameraWallSCTBP_C_SetActiveCamera, Index_0) == 0x000000, "Member 'CameraWallSCTBP_C_SetActiveCamera::Index_0' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_SetActiveCamera, Active) == 0x000001, "Member 'CameraWallSCTBP_C_SetActiveCamera::Active' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_SetActiveCamera, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'CameraWallSCTBP_C_SetActiveCamera::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_SetActiveCamera, CallFunc_Array_Get_Item) == 0x000008, "Member 'CameraWallSCTBP_C_SetActiveCamera::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_SetActiveCamera, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'CameraWallSCTBP_C_SetActiveCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function CameraWallSCTBP.CameraWallSCTBP_C.CanHideDot
// 0x0018 (0x0018 - 0x0000)
struct CameraWallSCTBP_C_CanHideDot final
{
public:
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0000(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CameraWallSCTBP_C_CanHideDot) == 0x000008, "Wrong alignment on CameraWallSCTBP_C_CanHideDot");
static_assert(sizeof(CameraWallSCTBP_C_CanHideDot) == 0x000018, "Wrong size on CameraWallSCTBP_C_CanHideDot");
static_assert(offsetof(CameraWallSCTBP_C_CanHideDot, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000000, "Member 'CameraWallSCTBP_C_CanHideDot::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_CanHideDot, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'CameraWallSCTBP_C_CanHideDot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraWallSCTBP_C_CanHideDot, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'CameraWallSCTBP_C_CanHideDot::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}

