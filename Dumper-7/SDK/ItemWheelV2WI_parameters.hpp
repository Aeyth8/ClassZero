#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemWheelV2WI

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SCT_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ItemWheelV2WI.ItemWheelV2WI_C.ExecuteUbergraph_ItemWheelV2WI
// 0x0168 (0x0168 - 0x0000)
struct ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      CallFunc_GetSCT_Player_Character_AsCharacter_SCT;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventory*                             CallFunc_GetSCT_Player_Character_CharacterInventory; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVisibleItemsAmount_ReturnValue;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVisibleItemsAmount_ReturnValue_1;      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCanvasNoItemVisibility_NoItems;        // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FItemDetails>                   CallFunc_GetCharacterItems_ItemDetails;            // 0x0078(0x0010)(ReferenceParm)
	class UItemWheelV2EntryWI_C*                  CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterWI_C*                         CallFunc_GetSCT_CharacterWidget_CharacterWI;       // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      CallFunc_GetSCT_Player_Character_AsCharacter_SCT_1; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventory*                             CallFunc_GetSCT_Player_Character_CharacterInventory_1; // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      CallFunc_GetSCT_Player_Character_AsCharacter_SCT_2; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventory*                             CallFunc_GetSCT_Player_Character_CharacterInventory_2; // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetRotated2D_ReturnValue;                 // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetRotated2D_ReturnValue_1;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue_1;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PiePermutation_Return;                    // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetActiveHoveredPieEntry_Output_Get;      // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_126[0x2];                                      // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      CallFunc_GetSCT_Player_Character_AsCharacter_SCT_3; // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventory*                             CallFunc_GetSCT_Player_Character_CharacterInventory_3; // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemWheelV2EntryWI_C*                  CallFunc_Array_Get_Item_1;                         // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPower*                                 CallFunc_TryGetPowerInSlot_ReturnValue;            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0148(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize2DSquared_ReturnValue;               // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI) == 0x000008, "Wrong alignment on ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI");
static_assert(sizeof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI) == 0x000168, "Wrong size on ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, EntryPoint) == 0x000000, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::EntryPoint' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, K2Node_Event_IsDesignTime) == 0x000006, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, Temp_bool_Has_Been_Initd_Variable_1) == 0x000007, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, K2Node_Event_MyGeometry) == 0x000008, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, K2Node_Event_InDeltaTime) == 0x000040, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_GetSCT_Player_Character_AsCharacter_SCT) == 0x000048, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_GetSCT_Player_Character_AsCharacter_SCT' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_GetSCT_Player_Character_CharacterInventory) == 0x000050, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_GetSCT_Player_Character_CharacterInventory' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_GetVisibleItemsAmount_ReturnValue) == 0x000058, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_GetVisibleItemsAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_GetVisibleItemsAmount_ReturnValue_1) == 0x00005C, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_GetVisibleItemsAmount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000060, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000064, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000068, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00006C, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_Add_FloatFloat_ReturnValue) == 0x000070, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_SetCanvasNoItemVisibility_NoItems) == 0x000074, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_SetCanvasNoItemVisibility_NoItems' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_GetCharacterItems_ItemDetails) == 0x000078, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_GetCharacterItems_ItemDetails' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_Array_Get_Item) == 0x000088, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_GetSCT_CharacterWidget_CharacterWI) == 0x000090, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_GetSCT_CharacterWidget_CharacterWI' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_PlayAnimation_ReturnValue) == 0x0000A0, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_GetSCT_Player_Character_AsCharacter_SCT_1) == 0x0000A8, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_GetSCT_Player_Character_AsCharacter_SCT_1' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_GetSCT_Player_Character_CharacterInventory_1) == 0x0000B0, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_GetSCT_Player_Character_CharacterInventory_1' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_IsLocallyControlled_ReturnValue) == 0x0000B8, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_GetSCT_Player_Character_AsCharacter_SCT_2) == 0x0000C0, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_GetSCT_Player_Character_AsCharacter_SCT_2' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_GetSCT_Player_Character_CharacterInventory_2) == 0x0000C8, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_GetSCT_Player_Character_CharacterInventory_2' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x0000D0, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_VSize2D_ReturnValue) == 0x0000D4, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_Normal2D_ReturnValue) == 0x0000D8, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_GetRotated2D_ReturnValue) == 0x0000E0, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_GetRotated2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_GetRotated2D_ReturnValue_1) == 0x0000E8, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_GetRotated2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_BreakVector2D_X) == 0x0000F0, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_BreakVector2D_Y) == 0x0000F4, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_BreakVector2D_X_1) == 0x0000F8, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_BreakVector2D_Y_1) == 0x0000FC, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_DegAtan2_ReturnValue) == 0x000100, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_DegAtan2_ReturnValue_1) == 0x000104, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_DegAtan2_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000108, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x00010C, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000110, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000114, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_FFloor_ReturnValue) == 0x000118, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_PiePermutation_Return) == 0x00011C, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_PiePermutation_Return' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_SetActiveHoveredPieEntry_Output_Get) == 0x000120, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_SetActiveHoveredPieEntry_Output_Get' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000124, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, Temp_bool_IsClosed_Variable_1) == 0x000125, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_GetSCT_Player_Character_AsCharacter_SCT_3) == 0x000128, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_GetSCT_Player_Character_AsCharacter_SCT_3' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_GetSCT_Player_Character_CharacterInventory_3) == 0x000130, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_GetSCT_Player_Character_CharacterInventory_3' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_Array_Get_Item_1) == 0x000138, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_TryGetPowerInSlot_ReturnValue) == 0x000140, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_TryGetPowerInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, K2Node_CreateDelegate_OutputDelegate) == 0x000148, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000158, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_VSize2DSquared_ReturnValue) == 0x00015C, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_VSize2DSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000160, "Member 'ItemWheelV2WI_C_ExecuteUbergraph_ItemWheelV2WI::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function ItemWheelV2WI.ItemWheelV2WI_C.Tick
// 0x003C (0x003C - 0x0000)
struct ItemWheelV2WI_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemWheelV2WI_C_Tick) == 0x000004, "Wrong alignment on ItemWheelV2WI_C_Tick");
static_assert(sizeof(ItemWheelV2WI_C_Tick) == 0x00003C, "Wrong size on ItemWheelV2WI_C_Tick");
static_assert(offsetof(ItemWheelV2WI_C_Tick, MyGeometry) == 0x000000, "Member 'ItemWheelV2WI_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_Tick, InDeltaTime) == 0x000038, "Member 'ItemWheelV2WI_C_Tick::InDeltaTime' has a wrong offset!");

// Function ItemWheelV2WI.ItemWheelV2WI_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ItemWheelV2WI_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemWheelV2WI_C_PreConstruct) == 0x000001, "Wrong alignment on ItemWheelV2WI_C_PreConstruct");
static_assert(sizeof(ItemWheelV2WI_C_PreConstruct) == 0x000001, "Wrong size on ItemWheelV2WI_C_PreConstruct");
static_assert(offsetof(ItemWheelV2WI_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ItemWheelV2WI_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ItemWheelV2WI.ItemWheelV2WI_C.PiePermutation
// 0x0010 (0x0010 - 0x0000)
struct ItemWheelV2WI_C_PiePermutation final
{
public:
	float                                         DistanceFromCenter;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Return;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemWheelV2WI_C_PiePermutation) == 0x000004, "Wrong alignment on ItemWheelV2WI_C_PiePermutation");
static_assert(sizeof(ItemWheelV2WI_C_PiePermutation) == 0x000010, "Wrong size on ItemWheelV2WI_C_PiePermutation");
static_assert(offsetof(ItemWheelV2WI_C_PiePermutation, DistanceFromCenter) == 0x000000, "Member 'ItemWheelV2WI_C_PiePermutation::DistanceFromCenter' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_PiePermutation, Index_0) == 0x000004, "Member 'ItemWheelV2WI_C_PiePermutation::Index_0' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_PiePermutation, Return) == 0x000008, "Member 'ItemWheelV2WI_C_PiePermutation::Return' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_PiePermutation, CallFunc_Less_FloatFloat_ReturnValue) == 0x00000C, "Member 'ItemWheelV2WI_C_PiePermutation::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function ItemWheelV2WI.ItemWheelV2WI_C.UnhoverCurrentEntrySelection
// 0x0068 (0x0068 - 0x0000)
struct ItemWheelV2WI_C_UnhoverCurrentEntrySelection final
{
public:
	int32                                         EntryIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemWheelV2EntryWI_C*                  CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FItemDetails                           CallFunc_GetItemDetails_ReturnValue;               // 0x0010(0x0050)(ConstParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemWheelV2WI_C_UnhoverCurrentEntrySelection) == 0x000008, "Wrong alignment on ItemWheelV2WI_C_UnhoverCurrentEntrySelection");
static_assert(sizeof(ItemWheelV2WI_C_UnhoverCurrentEntrySelection) == 0x000068, "Wrong size on ItemWheelV2WI_C_UnhoverCurrentEntrySelection");
static_assert(offsetof(ItemWheelV2WI_C_UnhoverCurrentEntrySelection, EntryIndex) == 0x000000, "Member 'ItemWheelV2WI_C_UnhoverCurrentEntrySelection::EntryIndex' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_UnhoverCurrentEntrySelection, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'ItemWheelV2WI_C_UnhoverCurrentEntrySelection::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_UnhoverCurrentEntrySelection, CallFunc_Array_Get_Item) == 0x000008, "Member 'ItemWheelV2WI_C_UnhoverCurrentEntrySelection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_UnhoverCurrentEntrySelection, CallFunc_GetItemDetails_ReturnValue) == 0x000010, "Member 'ItemWheelV2WI_C_UnhoverCurrentEntrySelection::CallFunc_GetItemDetails_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_UnhoverCurrentEntrySelection, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000060, "Member 'ItemWheelV2WI_C_UnhoverCurrentEntrySelection::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function ItemWheelV2WI.ItemWheelV2WI_C.HoverCurrentEntrySelection
// 0x0068 (0x0068 - 0x0000)
struct ItemWheelV2WI_C_HoverCurrentEntrySelection final
{
public:
	int32                                         EntryIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemWheelV2EntryWI_C*                  CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FItemDetails                           CallFunc_GetItemDetails_ReturnValue;               // 0x0010(0x0050)(ConstParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemWheelV2WI_C_HoverCurrentEntrySelection) == 0x000008, "Wrong alignment on ItemWheelV2WI_C_HoverCurrentEntrySelection");
static_assert(sizeof(ItemWheelV2WI_C_HoverCurrentEntrySelection) == 0x000068, "Wrong size on ItemWheelV2WI_C_HoverCurrentEntrySelection");
static_assert(offsetof(ItemWheelV2WI_C_HoverCurrentEntrySelection, EntryIndex) == 0x000000, "Member 'ItemWheelV2WI_C_HoverCurrentEntrySelection::EntryIndex' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_HoverCurrentEntrySelection, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'ItemWheelV2WI_C_HoverCurrentEntrySelection::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_HoverCurrentEntrySelection, CallFunc_Array_Get_Item) == 0x000008, "Member 'ItemWheelV2WI_C_HoverCurrentEntrySelection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_HoverCurrentEntrySelection, CallFunc_GetItemDetails_ReturnValue) == 0x000010, "Member 'ItemWheelV2WI_C_HoverCurrentEntrySelection::CallFunc_GetItemDetails_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_HoverCurrentEntrySelection, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000060, "Member 'ItemWheelV2WI_C_HoverCurrentEntrySelection::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function ItemWheelV2WI.ItemWheelV2WI_C.GetCharacterVisibleItems
// 0x00B0 (0x00B0 - 0x0000)
struct ItemWheelV2WI_C_GetCharacterVisibleItems final
{
public:
	TArray<struct FItemDetails>                   Return;                                            // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FItemDetails>                   L_ItemDetails;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      CallFunc_GetSCT_Player_Character_AsCharacter_SCT;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventory*                             CallFunc_GetSCT_Player_Character_CharacterInventory; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FItemDetails>                   CallFunc_GetAllItems_ReturnValue;                  // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemDetails                           CallFunc_Array_Get_Item;                           // 0x0058(0x0050)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemWheelV2WI_C_GetCharacterVisibleItems) == 0x000008, "Wrong alignment on ItemWheelV2WI_C_GetCharacterVisibleItems");
static_assert(sizeof(ItemWheelV2WI_C_GetCharacterVisibleItems) == 0x0000B0, "Wrong size on ItemWheelV2WI_C_GetCharacterVisibleItems");
static_assert(offsetof(ItemWheelV2WI_C_GetCharacterVisibleItems, Return) == 0x000000, "Member 'ItemWheelV2WI_C_GetCharacterVisibleItems::Return' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_GetCharacterVisibleItems, L_ItemDetails) == 0x000010, "Member 'ItemWheelV2WI_C_GetCharacterVisibleItems::L_ItemDetails' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_GetCharacterVisibleItems, Temp_int_Array_Index_Variable) == 0x000020, "Member 'ItemWheelV2WI_C_GetCharacterVisibleItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_GetCharacterVisibleItems, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'ItemWheelV2WI_C_GetCharacterVisibleItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_GetCharacterVisibleItems, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'ItemWheelV2WI_C_GetCharacterVisibleItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_GetCharacterVisibleItems, CallFunc_GetSCT_Player_Character_AsCharacter_SCT) == 0x000030, "Member 'ItemWheelV2WI_C_GetCharacterVisibleItems::CallFunc_GetSCT_Player_Character_AsCharacter_SCT' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_GetCharacterVisibleItems, CallFunc_GetSCT_Player_Character_CharacterInventory) == 0x000038, "Member 'ItemWheelV2WI_C_GetCharacterVisibleItems::CallFunc_GetSCT_Player_Character_CharacterInventory' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_GetCharacterVisibleItems, CallFunc_GetAllItems_ReturnValue) == 0x000040, "Member 'ItemWheelV2WI_C_GetCharacterVisibleItems::CallFunc_GetAllItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_GetCharacterVisibleItems, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'ItemWheelV2WI_C_GetCharacterVisibleItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_GetCharacterVisibleItems, CallFunc_Array_Get_Item) == 0x000058, "Member 'ItemWheelV2WI_C_GetCharacterVisibleItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_GetCharacterVisibleItems, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'ItemWheelV2WI_C_GetCharacterVisibleItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_GetCharacterVisibleItems, CallFunc_Array_Add_ReturnValue) == 0x0000AC, "Member 'ItemWheelV2WI_C_GetCharacterVisibleItems::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function ItemWheelV2WI.ItemWheelV2WI_C.GetVisibleItemsAmount
// 0x0008 (0x0008 - 0x0000)
struct ItemWheelV2WI_C_GetVisibleItemsAmount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemWheelV2WI_C_GetVisibleItemsAmount) == 0x000004, "Wrong alignment on ItemWheelV2WI_C_GetVisibleItemsAmount");
static_assert(sizeof(ItemWheelV2WI_C_GetVisibleItemsAmount) == 0x000008, "Wrong size on ItemWheelV2WI_C_GetVisibleItemsAmount");
static_assert(offsetof(ItemWheelV2WI_C_GetVisibleItemsAmount, ReturnValue) == 0x000000, "Member 'ItemWheelV2WI_C_GetVisibleItemsAmount::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_GetVisibleItemsAmount, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'ItemWheelV2WI_C_GetVisibleItemsAmount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function ItemWheelV2WI.ItemWheelV2WI_C.CalculateAngle
// 0x0028 (0x0028 - 0x0000)
struct ItemWheelV2WI_C_CalculateAngle final
{
public:
	int32                                         A;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FItemDetails>                   CallFunc_GetCharacterItems_ItemDetails;            // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemWheelV2WI_C_CalculateAngle) == 0x000008, "Wrong alignment on ItemWheelV2WI_C_CalculateAngle");
static_assert(sizeof(ItemWheelV2WI_C_CalculateAngle) == 0x000028, "Wrong size on ItemWheelV2WI_C_CalculateAngle");
static_assert(offsetof(ItemWheelV2WI_C_CalculateAngle, A) == 0x000000, "Member 'ItemWheelV2WI_C_CalculateAngle::A' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_CalculateAngle, ReturnValue) == 0x000004, "Member 'ItemWheelV2WI_C_CalculateAngle::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_CalculateAngle, CallFunc_GetCharacterItems_ItemDetails) == 0x000008, "Member 'ItemWheelV2WI_C_CalculateAngle::CallFunc_GetCharacterItems_ItemDetails' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_CalculateAngle, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'ItemWheelV2WI_C_CalculateAngle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_CalculateAngle, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00001C, "Member 'ItemWheelV2WI_C_CalculateAngle::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_CalculateAngle, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'ItemWheelV2WI_C_CalculateAngle::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_CalculateAngle, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000024, "Member 'ItemWheelV2WI_C_CalculateAngle::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");

// Function ItemWheelV2WI.ItemWheelV2WI_C.SetCanvasNoItemVisibility
// 0x0020 (0x0020 - 0x0000)
struct ItemWheelV2WI_C_SetCanvasNoItemVisibility final
{
public:
	bool                                          NoItems_0;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FItemDetails>                   CallFunc_GetCharacterItems_ItemDetails;            // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemWheelV2WI_C_SetCanvasNoItemVisibility) == 0x000008, "Wrong alignment on ItemWheelV2WI_C_SetCanvasNoItemVisibility");
static_assert(sizeof(ItemWheelV2WI_C_SetCanvasNoItemVisibility) == 0x000020, "Wrong size on ItemWheelV2WI_C_SetCanvasNoItemVisibility");
static_assert(offsetof(ItemWheelV2WI_C_SetCanvasNoItemVisibility, NoItems_0) == 0x000000, "Member 'ItemWheelV2WI_C_SetCanvasNoItemVisibility::NoItems_0' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetCanvasNoItemVisibility, Temp_bool_Variable) == 0x000001, "Member 'ItemWheelV2WI_C_SetCanvasNoItemVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetCanvasNoItemVisibility, Temp_byte_Variable) == 0x000002, "Member 'ItemWheelV2WI_C_SetCanvasNoItemVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetCanvasNoItemVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'ItemWheelV2WI_C_SetCanvasNoItemVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetCanvasNoItemVisibility, CallFunc_GetCharacterItems_ItemDetails) == 0x000008, "Member 'ItemWheelV2WI_C_SetCanvasNoItemVisibility::CallFunc_GetCharacterItems_ItemDetails' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetCanvasNoItemVisibility, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'ItemWheelV2WI_C_SetCanvasNoItemVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetCanvasNoItemVisibility, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'ItemWheelV2WI_C_SetCanvasNoItemVisibility::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetCanvasNoItemVisibility, K2Node_Select_Default) == 0x00001D, "Member 'ItemWheelV2WI_C_SetCanvasNoItemVisibility::K2Node_Select_Default' has a wrong offset!");

// Function ItemWheelV2WI.ItemWheelV2WI_C.GetCursorOutOfAngle
// 0x0008 (0x0008 - 0x0000)
struct ItemWheelV2WI_C_GetCursorOutOfAngle final
{
public:
	float                                         Degree;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemWheelV2WI_C_GetCursorOutOfAngle) == 0x000004, "Wrong alignment on ItemWheelV2WI_C_GetCursorOutOfAngle");
static_assert(sizeof(ItemWheelV2WI_C_GetCursorOutOfAngle) == 0x000008, "Wrong size on ItemWheelV2WI_C_GetCursorOutOfAngle");
static_assert(offsetof(ItemWheelV2WI_C_GetCursorOutOfAngle, Degree) == 0x000000, "Member 'ItemWheelV2WI_C_GetCursorOutOfAngle::Degree' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_GetCursorOutOfAngle, ReturnValue) == 0x000004, "Member 'ItemWheelV2WI_C_GetCursorOutOfAngle::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_GetCursorOutOfAngle, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000005, "Member 'ItemWheelV2WI_C_GetCursorOutOfAngle::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_GetCursorOutOfAngle, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'ItemWheelV2WI_C_GetCursorOutOfAngle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ItemWheelV2WI.ItemWheelV2WI_C.SetupPieParameters
// 0x00C8 (0x00C8 - 0x0000)
struct ItemWheelV2WI_C_SetupPieParameters final
{
public:
	TArray<struct FItemDetails>                   TargetArray;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateAngle_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FItemDetails>                   CallFunc_GetCharacterItems_ItemDetails;            // 0x0030(0x0010)(ReferenceParm)
	struct FItemDetails                           CallFunc_Array_Get_Item;                           // 0x0040(0x0050)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemWheelV2EntryWI_C*                  CallFunc_Create_ReturnValue;                       // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemWheelV2WI_C_SetupPieParameters) == 0x000008, "Wrong alignment on ItemWheelV2WI_C_SetupPieParameters");
static_assert(sizeof(ItemWheelV2WI_C_SetupPieParameters) == 0x0000C8, "Wrong size on ItemWheelV2WI_C_SetupPieParameters");
static_assert(offsetof(ItemWheelV2WI_C_SetupPieParameters, TargetArray) == 0x000000, "Member 'ItemWheelV2WI_C_SetupPieParameters::TargetArray' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetupPieParameters, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'ItemWheelV2WI_C_SetupPieParameters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetupPieParameters, Temp_int_Array_Index_Variable) == 0x000014, "Member 'ItemWheelV2WI_C_SetupPieParameters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetupPieParameters, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000018, "Member 'ItemWheelV2WI_C_SetupPieParameters::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetupPieParameters, CallFunc_CalculateAngle_ReturnValue) == 0x00001C, "Member 'ItemWheelV2WI_C_SetupPieParameters::CallFunc_CalculateAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetupPieParameters, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'ItemWheelV2WI_C_SetupPieParameters::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetupPieParameters, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000024, "Member 'ItemWheelV2WI_C_SetupPieParameters::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetupPieParameters, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'ItemWheelV2WI_C_SetupPieParameters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetupPieParameters, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'ItemWheelV2WI_C_SetupPieParameters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetupPieParameters, CallFunc_GetCharacterItems_ItemDetails) == 0x000030, "Member 'ItemWheelV2WI_C_SetupPieParameters::CallFunc_GetCharacterItems_ItemDetails' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetupPieParameters, CallFunc_Array_Get_Item) == 0x000040, "Member 'ItemWheelV2WI_C_SetupPieParameters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetupPieParameters, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'ItemWheelV2WI_C_SetupPieParameters::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetupPieParameters, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'ItemWheelV2WI_C_SetupPieParameters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetupPieParameters, K2Node_SwitchEnum_CmpSuccess) == 0x000095, "Member 'ItemWheelV2WI_C_SetupPieParameters::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetupPieParameters, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000098, "Member 'ItemWheelV2WI_C_SetupPieParameters::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetupPieParameters, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'ItemWheelV2WI_C_SetupPieParameters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetupPieParameters, CallFunc_GetPlayerController_ReturnValue) == 0x0000A8, "Member 'ItemWheelV2WI_C_SetupPieParameters::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetupPieParameters, CallFunc_Create_ReturnValue) == 0x0000B0, "Member 'ItemWheelV2WI_C_SetupPieParameters::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetupPieParameters, CallFunc_AddChildToCanvas_ReturnValue) == 0x0000B8, "Member 'ItemWheelV2WI_C_SetupPieParameters::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetupPieParameters, CallFunc_Array_Add_ReturnValue) == 0x0000C0, "Member 'ItemWheelV2WI_C_SetupPieParameters::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function ItemWheelV2WI.ItemWheelV2WI_C.GetCharacterItems
// 0x0048 (0x0048 - 0x0000)
struct ItemWheelV2WI_C_GetCharacterItems final
{
public:
	TArray<struct FItemDetails>                   ItemDetails;                                       // 0x0000(0x0010)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FItemDetails>                   Temp_struct_Variable;                              // 0x0018(0x0010)(ReferenceParm)
	TArray<struct FItemDetails>                   CallFunc_GetCharacterVisibleItems_Return;          // 0x0028(0x0010)(ReferenceParm)
	TArray<struct FItemDetails>                   K2Node_Select_Default;                             // 0x0038(0x0010)(ReferenceParm)
};
static_assert(alignof(ItemWheelV2WI_C_GetCharacterItems) == 0x000008, "Wrong alignment on ItemWheelV2WI_C_GetCharacterItems");
static_assert(sizeof(ItemWheelV2WI_C_GetCharacterItems) == 0x000048, "Wrong size on ItemWheelV2WI_C_GetCharacterItems");
static_assert(offsetof(ItemWheelV2WI_C_GetCharacterItems, ItemDetails) == 0x000000, "Member 'ItemWheelV2WI_C_GetCharacterItems::ItemDetails' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_GetCharacterItems, Temp_bool_Variable) == 0x000010, "Member 'ItemWheelV2WI_C_GetCharacterItems::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_GetCharacterItems, Temp_struct_Variable) == 0x000018, "Member 'ItemWheelV2WI_C_GetCharacterItems::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_GetCharacterItems, CallFunc_GetCharacterVisibleItems_Return) == 0x000028, "Member 'ItemWheelV2WI_C_GetCharacterItems::CallFunc_GetCharacterVisibleItems_Return' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_GetCharacterItems, K2Node_Select_Default) == 0x000038, "Member 'ItemWheelV2WI_C_GetCharacterItems::K2Node_Select_Default' has a wrong offset!");

// Function ItemWheelV2WI.ItemWheelV2WI_C.GetOnly1PieEntry
// 0x000C (0x000C - 0x0000)
struct ItemWheelV2WI_C_GetOnly1PieEntry final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemWheelV2WI_C_GetOnly1PieEntry) == 0x000004, "Wrong alignment on ItemWheelV2WI_C_GetOnly1PieEntry");
static_assert(sizeof(ItemWheelV2WI_C_GetOnly1PieEntry) == 0x00000C, "Wrong size on ItemWheelV2WI_C_GetOnly1PieEntry");
static_assert(offsetof(ItemWheelV2WI_C_GetOnly1PieEntry, ReturnValue) == 0x000000, "Member 'ItemWheelV2WI_C_GetOnly1PieEntry::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_GetOnly1PieEntry, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'ItemWheelV2WI_C_GetOnly1PieEntry::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_GetOnly1PieEntry, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'ItemWheelV2WI_C_GetOnly1PieEntry::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function ItemWheelV2WI.ItemWheelV2WI_C.TryGetPowerInSlot
// 0x0038 (0x0038 - 0x0000)
struct ItemWheelV2WI_C_TryGetPowerInSlot final
{
public:
	bool                                          Slot1Empty;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPower*                                 Power;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPower*                                 CallFunc_TryGetPowerInSlot_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemWheelV2WI_C_TryGetPowerInSlot) == 0x000008, "Wrong alignment on ItemWheelV2WI_C_TryGetPowerInSlot");
static_assert(sizeof(ItemWheelV2WI_C_TryGetPowerInSlot) == 0x000038, "Wrong size on ItemWheelV2WI_C_TryGetPowerInSlot");
static_assert(offsetof(ItemWheelV2WI_C_TryGetPowerInSlot, Slot1Empty) == 0x000000, "Member 'ItemWheelV2WI_C_TryGetPowerInSlot::Slot1Empty' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_TryGetPowerInSlot, Power) == 0x000008, "Member 'ItemWheelV2WI_C_TryGetPowerInSlot::Power' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_TryGetPowerInSlot, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000010, "Member 'ItemWheelV2WI_C_TryGetPowerInSlot::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_TryGetPowerInSlot, K2Node_DynamicCast_AsCharacter_SCTBP) == 0x000018, "Member 'ItemWheelV2WI_C_TryGetPowerInSlot::K2Node_DynamicCast_AsCharacter_SCTBP' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_TryGetPowerInSlot, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ItemWheelV2WI_C_TryGetPowerInSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_TryGetPowerInSlot, CallFunc_TryGetPowerInSlot_ReturnValue) == 0x000028, "Member 'ItemWheelV2WI_C_TryGetPowerInSlot::CallFunc_TryGetPowerInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_TryGetPowerInSlot, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000030, "Member 'ItemWheelV2WI_C_TryGetPowerInSlot::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function ItemWheelV2WI.ItemWheelV2WI_C.SetItemInSlotAsNotEquipped
// 0x0078 (0x0078 - 0x0000)
struct ItemWheelV2WI_C_SetItemInSlotAsNotEquipped final
{
public:
	EInventorySlotID                              Slot_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemWheelV2EntryWI_C*                  CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemDetails                           CallFunc_GetItemDetails_ReturnValue;               // 0x0020(0x0050)(ConstParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemWheelV2WI_C_SetItemInSlotAsNotEquipped) == 0x000008, "Wrong alignment on ItemWheelV2WI_C_SetItemInSlotAsNotEquipped");
static_assert(sizeof(ItemWheelV2WI_C_SetItemInSlotAsNotEquipped) == 0x000078, "Wrong size on ItemWheelV2WI_C_SetItemInSlotAsNotEquipped");
static_assert(offsetof(ItemWheelV2WI_C_SetItemInSlotAsNotEquipped, Slot_0) == 0x000000, "Member 'ItemWheelV2WI_C_SetItemInSlotAsNotEquipped::Slot_0' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetItemInSlotAsNotEquipped, Temp_int_Array_Index_Variable) == 0x000004, "Member 'ItemWheelV2WI_C_SetItemInSlotAsNotEquipped::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetItemInSlotAsNotEquipped, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'ItemWheelV2WI_C_SetItemInSlotAsNotEquipped::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetItemInSlotAsNotEquipped, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'ItemWheelV2WI_C_SetItemInSlotAsNotEquipped::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetItemInSlotAsNotEquipped, CallFunc_Array_Get_Item) == 0x000010, "Member 'ItemWheelV2WI_C_SetItemInSlotAsNotEquipped::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetItemInSlotAsNotEquipped, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'ItemWheelV2WI_C_SetItemInSlotAsNotEquipped::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetItemInSlotAsNotEquipped, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'ItemWheelV2WI_C_SetItemInSlotAsNotEquipped::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetItemInSlotAsNotEquipped, CallFunc_GetItemDetails_ReturnValue) == 0x000020, "Member 'ItemWheelV2WI_C_SetItemInSlotAsNotEquipped::CallFunc_GetItemDetails_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetItemInSlotAsNotEquipped, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000070, "Member 'ItemWheelV2WI_C_SetItemInSlotAsNotEquipped::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function ItemWheelV2WI.ItemWheelV2WI_C.SetActiveHoveredPieEntry
// 0x000C (0x000C - 0x0000)
struct ItemWheelV2WI_C_SetActiveHoveredPieEntry final
{
public:
	int32                                         ActiveHoveredPieEntry_0;                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Output_Get;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingGamepad_Value;                     // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemWheelV2WI_C_SetActiveHoveredPieEntry) == 0x000004, "Wrong alignment on ItemWheelV2WI_C_SetActiveHoveredPieEntry");
static_assert(sizeof(ItemWheelV2WI_C_SetActiveHoveredPieEntry) == 0x00000C, "Wrong size on ItemWheelV2WI_C_SetActiveHoveredPieEntry");
static_assert(offsetof(ItemWheelV2WI_C_SetActiveHoveredPieEntry, ActiveHoveredPieEntry_0) == 0x000000, "Member 'ItemWheelV2WI_C_SetActiveHoveredPieEntry::ActiveHoveredPieEntry_0' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetActiveHoveredPieEntry, Output_Get) == 0x000004, "Member 'ItemWheelV2WI_C_SetActiveHoveredPieEntry::Output_Get' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetActiveHoveredPieEntry, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'ItemWheelV2WI_C_SetActiveHoveredPieEntry::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetActiveHoveredPieEntry, CallFunc_IsUsingGamepad_Value) == 0x000009, "Member 'ItemWheelV2WI_C_SetActiveHoveredPieEntry::CallFunc_IsUsingGamepad_Value' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_SetActiveHoveredPieEntry, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'ItemWheelV2WI_C_SetActiveHoveredPieEntry::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ItemWheelV2WI.ItemWheelV2WI_C.IsUsingGamepad
// 0x0020 (0x0020 - 0x0000)
struct ItemWheelV2WI_C_IsUsingGamepad final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USCTGameInstance*                       K2Node_DynamicCast_AsSCTGame_Instance;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESCTControllerType                            CallFunc_GetLastControllerType_ReturnValue;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemWheelV2WI_C_IsUsingGamepad) == 0x000008, "Wrong alignment on ItemWheelV2WI_C_IsUsingGamepad");
static_assert(sizeof(ItemWheelV2WI_C_IsUsingGamepad) == 0x000020, "Wrong size on ItemWheelV2WI_C_IsUsingGamepad");
static_assert(offsetof(ItemWheelV2WI_C_IsUsingGamepad, Value) == 0x000000, "Member 'ItemWheelV2WI_C_IsUsingGamepad::Value' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_IsUsingGamepad, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'ItemWheelV2WI_C_IsUsingGamepad::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_IsUsingGamepad, K2Node_DynamicCast_AsSCTGame_Instance) == 0x000010, "Member 'ItemWheelV2WI_C_IsUsingGamepad::K2Node_DynamicCast_AsSCTGame_Instance' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_IsUsingGamepad, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ItemWheelV2WI_C_IsUsingGamepad::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_IsUsingGamepad, CallFunc_GetLastControllerType_ReturnValue) == 0x000019, "Member 'ItemWheelV2WI_C_IsUsingGamepad::CallFunc_GetLastControllerType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemWheelV2WI_C_IsUsingGamepad, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'ItemWheelV2WI_C_IsUsingGamepad::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

}

