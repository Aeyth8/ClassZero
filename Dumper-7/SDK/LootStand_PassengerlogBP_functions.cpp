#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LootStand_PassengerlogBP

#include "Basic.hpp"

#include "LootStand_PassengerlogBP_classes.hpp"
#include "LootStand_PassengerlogBP_parameters.hpp"


namespace SDK
{

// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.ExecuteUbergraph_LootStand_PassengerlogBP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootStand_PassengerlogBP_C::ExecuteUbergraph_LootStand_PassengerlogBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "ExecuteUbergraph_LootStand_PassengerlogBP");

	Params::LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.BndEvt__Interaction_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void ALootStand_PassengerlogBP_C::BndEvt__Interaction_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature(const struct FInteractionPayload& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "BndEvt__Interaction_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature");

	Params::LootStand_PassengerlogBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.BndEvt__Interaction_K2Node_ComponentBoundEvent_2_InteractionSuccessfulDelegate__DelegateSignature
// (BlueprintEvent)

void ALootStand_PassengerlogBP_C::BndEvt__Interaction_K2Node_ComponentBoundEvent_2_InteractionSuccessfulDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "BndEvt__Interaction_K2Node_ComponentBoundEvent_2_InteractionSuccessfulDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.Confirmed Empty Or Item Looted
// (BlueprintCallable, BlueprintEvent)

void ALootStand_PassengerlogBP_C::Confirmed_Empty_Or_Item_Looted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "Confirmed Empty Or Item Looted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.BndEvt__Interaction Component_secondary_K2Node_ComponentBoundEvent_4_InteractionEndedDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// bool                                    WasCancelled                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ALootStand_PassengerlogBP_C::BndEvt__Interaction_Component_secondary_K2Node_ComponentBoundEvent_4_InteractionEndedDelegate__DelegateSignature(const struct FInteractionPayload& Payload, bool WasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "BndEvt__Interaction Component_secondary_K2Node_ComponentBoundEvent_4_InteractionEndedDelegate__DelegateSignature");

	Params::LootStand_PassengerlogBP_C_BndEvt__Interaction_Component_secondary_K2Node_ComponentBoundEvent_4_InteractionEndedDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);
	Parms.WasCancelled = WasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.BndEvt__Interaction Component_secondary_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void ALootStand_PassengerlogBP_C::BndEvt__Interaction_Component_secondary_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature(const struct FInteractionPayload& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "BndEvt__Interaction Component_secondary_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature");

	Params::LootStand_PassengerlogBP_C_BndEvt__Interaction_Component_secondary_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.BndEvt__Interaction Component_secondary_K2Node_ComponentBoundEvent_0_InteractionSuccessfulDelegate__DelegateSignature
// (BlueprintEvent)

void ALootStand_PassengerlogBP_C::BndEvt__Interaction_Component_secondary_K2Node_ComponentBoundEvent_0_InteractionSuccessfulDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "BndEvt__Interaction Component_secondary_K2Node_ComponentBoundEvent_0_InteractionSuccessfulDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.LootPickedUp_Cosmetic
// (BlueprintCallable, BlueprintEvent)

void ALootStand_PassengerlogBP_C::LootPickedUp_Cosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "LootPickedUp_Cosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.OpenStart_Cosmetic
// (BlueprintCallable, BlueprintEvent)

void ALootStand_PassengerlogBP_C::OpenStart_Cosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "OpenStart_Cosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ALootStand_PassengerlogBP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ALootStand_PassengerlogBP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.RemoveLogAndPreventInteraction
// (Public, BlueprintCallable, BlueprintEvent)

void ALootStand_PassengerlogBP_C::RemoveLogAndPreventInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "RemoveLogAndPreventInteraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.AutoGrantLoot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInventory*                       Instigator_Inventory                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootStand_PassengerlogBP_C::AutoGrantLoot(class UInventory* Instigator_Inventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "AutoGrantLoot");

	Params::LootStand_PassengerlogBP_C_AutoGrantLoot Parms{};

	Parms.Instigator_Inventory = Instigator_Inventory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.OnCollected
// (Public, BlueprintCallable, BlueprintEvent)

void ALootStand_PassengerlogBP_C::OnCollected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "OnCollected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.GrantPassengerLogInformation
// (Public, BlueprintCallable, BlueprintEvent)

void ALootStand_PassengerlogBP_C::GrantPassengerLogInformation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "GrantPassengerLogInformation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.CreateLogInformation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ALootStand_PassengerlogBP_C::CreateLogInformation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "CreateLogInformation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.SabotageLog
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)

void ALootStand_PassengerlogBP_C::SabotageLog(const struct FInteractionPayload& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "SabotageLog");

	Params::LootStand_PassengerlogBP_C_SabotageLog Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.PrintInvalidLogTypeWarning
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ALootStand_PassengerlogBP_C::PrintInvalidLogTypeWarning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "PrintInvalidLogTypeWarning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.DisablePassengerLog
// (Public, BlueprintCallable, BlueprintEvent)

void ALootStand_PassengerlogBP_C::DisablePassengerLog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "DisablePassengerLog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.CheckDisablePassengerLog
// (Public, BlueprintCallable, BlueprintEvent)

void ALootStand_PassengerlogBP_C::CheckDisablePassengerLog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "CheckDisablePassengerLog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.QueryInitializePassengerLog
// (Public, BlueprintCallable, BlueprintEvent)

void ALootStand_PassengerlogBP_C::QueryInitializePassengerLog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "QueryInitializePassengerLog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.RenderXray
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ALootStand_PassengerlogBP_C::RenderXray(bool On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "RenderXray");

	Params::LootStand_PassengerlogBP_C_RenderXray Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.PermanentlyDisableInteraction
// (Public, BlueprintCallable, BlueprintEvent)

void ALootStand_PassengerlogBP_C::PermanentlyDisableInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "PermanentlyDisableInteraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.OnRep_CanCreatePassengerLog
// (BlueprintCallable, BlueprintEvent)

void ALootStand_PassengerlogBP_C::OnRep_CanCreatePassengerLog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "OnRep_CanCreatePassengerLog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.TryGetInteractingPlayerController
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ASCTPlayerController*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

class ASCTPlayerController* ALootStand_PassengerlogBP_C::TryGetInteractingPlayerController(bool* IsValid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "TryGetInteractingPlayerController");

	Params::LootStand_PassengerlogBP_C_TryGetInteractingPlayerController Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.TryGetInteractingPlayerState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ASCTPlayerState*                  PlayerState                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Valid                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ALootStand_PassengerlogBP_C::TryGetInteractingPlayerState(class ASCTPlayerState** PlayerState, bool* Is_Valid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "TryGetInteractingPlayerState");

	Params::LootStand_PassengerlogBP_C_TryGetInteractingPlayerState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerState != nullptr)
		*PlayerState = Parms.PlayerState;

	if (Is_Valid != nullptr)
		*Is_Valid = Parms.Is_Valid;
}


// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.ShouldCreatePassengerLog
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ALootStand_PassengerlogBP_C::ShouldCreatePassengerLog() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootStand_PassengerlogBP_C", "ShouldCreatePassengerLog");

	Params::LootStand_PassengerlogBP_C_ShouldCreatePassengerLog Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

