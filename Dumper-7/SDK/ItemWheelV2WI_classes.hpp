#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemWheelV2WI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SCT_structs.hpp"
#include "SCT_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ItemWheelV2WI.ItemWheelV2WI_C
// 0x00D0 (0x0350 - 0x0280)
class UItemWheelV2WI_C final : public UWidgetSCT
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UWidgetAnimation*                       OpenAnim;                                          // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BG;                                                // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_NoItems;                                    // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CenterIndicatorRotator;                            // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CircleBG;                                          // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DeadzoneVisualizer;                                // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UItemWheelHelpTextWI_C*                 ItemWheelHelpTextWI;                               // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PieContainer;                                      // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RadialBGLarge;                                     // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RadialBGMid;                                       // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RadialBGSmall;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Description;                                  // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Name;                                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ThinframeOuter;                                    // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PieMaterial;                                       // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PieBorderContrast;                                 // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PieInnerRadius;                                    // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PieOuterRadius;                                    // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PieSize;                                           // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PieOffset;                                         // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UItemWheelV2EntryWI_C*>          PieEntries;                                        // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         ActiveHoveredPieEntry;                             // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoItems;                                           // 0x032C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32D[0x3];                                      // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeadzoneSize;                                      // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemWheelV3SlotWI_C*                   NewVar_0;                                          // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugItems;                                        // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              MousePos;                                          // 0x0344(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ItemWheelV2WI(int32 EntryPoint);
	void Destruct();
	void Construct();
	void Clear_If_Null();
	void SlotInput1();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void PiePermutation(float DistanceFromCenter, int32 Index_0, int32* Return);
	void UnhoverCurrentEntrySelection(int32 EntryIndex);
	void HoverCurrentEntrySelection(int32 EntryIndex);
	void GetCharacterVisibleItems(TArray<struct FItemDetails>* Return);
	int32 GetVisibleItemsAmount();
	float CalculateAngle(int32 A);
	void SetCanvasNoItemVisibility(bool* NoItems_0);
	bool GetCursorOutOfAngle(float Degree);
	void SetupPieParameters(const TArray<struct FItemDetails>& TargetArray);
	void GetCharacterItems(TArray<struct FItemDetails>* ItemDetails);
	bool GetOnly1PieEntry();
	void TryGetPowerInSlot(bool* Slot1Empty, class UPower** Power);
	void SetItemInSlotAsNotEquipped(EInventorySlotID Slot_0);
	void SetActiveHoveredPieEntry(int32 ActiveHoveredPieEntry_0, int32* Output_Get);

	void IsUsingGamepad(bool* Value) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ItemWheelV2WI_C">();
	}
	static class UItemWheelV2WI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemWheelV2WI_C>();
	}
};
static_assert(alignof(UItemWheelV2WI_C) == 0x000008, "Wrong alignment on UItemWheelV2WI_C");
static_assert(sizeof(UItemWheelV2WI_C) == 0x000350, "Wrong size on UItemWheelV2WI_C");
static_assert(offsetof(UItemWheelV2WI_C, UberGraphFrame) == 0x000280, "Member 'UItemWheelV2WI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, OpenAnim) == 0x000288, "Member 'UItemWheelV2WI_C::OpenAnim' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, BG) == 0x000290, "Member 'UItemWheelV2WI_C::BG' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, Canvas_NoItems) == 0x000298, "Member 'UItemWheelV2WI_C::Canvas_NoItems' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, CenterIndicatorRotator) == 0x0002A0, "Member 'UItemWheelV2WI_C::CenterIndicatorRotator' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, CircleBG) == 0x0002A8, "Member 'UItemWheelV2WI_C::CircleBG' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, DeadzoneVisualizer) == 0x0002B0, "Member 'UItemWheelV2WI_C::DeadzoneVisualizer' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, ItemWheelHelpTextWI) == 0x0002B8, "Member 'UItemWheelV2WI_C::ItemWheelHelpTextWI' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, PieContainer) == 0x0002C0, "Member 'UItemWheelV2WI_C::PieContainer' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, RadialBGLarge) == 0x0002C8, "Member 'UItemWheelV2WI_C::RadialBGLarge' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, RadialBGMid) == 0x0002D0, "Member 'UItemWheelV2WI_C::RadialBGMid' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, RadialBGSmall) == 0x0002D8, "Member 'UItemWheelV2WI_C::RadialBGSmall' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, Text_Description) == 0x0002E0, "Member 'UItemWheelV2WI_C::Text_Description' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, Text_Name) == 0x0002E8, "Member 'UItemWheelV2WI_C::Text_Name' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, ThinframeOuter) == 0x0002F0, "Member 'UItemWheelV2WI_C::ThinframeOuter' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, PieMaterial) == 0x0002F8, "Member 'UItemWheelV2WI_C::PieMaterial' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, PieBorderContrast) == 0x000300, "Member 'UItemWheelV2WI_C::PieBorderContrast' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, PieInnerRadius) == 0x000304, "Member 'UItemWheelV2WI_C::PieInnerRadius' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, PieOuterRadius) == 0x000308, "Member 'UItemWheelV2WI_C::PieOuterRadius' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, PieSize) == 0x00030C, "Member 'UItemWheelV2WI_C::PieSize' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, PieOffset) == 0x000310, "Member 'UItemWheelV2WI_C::PieOffset' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, PieEntries) == 0x000318, "Member 'UItemWheelV2WI_C::PieEntries' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, ActiveHoveredPieEntry) == 0x000328, "Member 'UItemWheelV2WI_C::ActiveHoveredPieEntry' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, NoItems) == 0x00032C, "Member 'UItemWheelV2WI_C::NoItems' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, DeadzoneSize) == 0x000330, "Member 'UItemWheelV2WI_C::DeadzoneSize' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, NewVar_0) == 0x000338, "Member 'UItemWheelV2WI_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, DebugItems) == 0x000340, "Member 'UItemWheelV2WI_C::DebugItems' has a wrong offset!");
static_assert(offsetof(UItemWheelV2WI_C, MousePos) == 0x000344, "Member 'UItemWheelV2WI_C::MousePos' has a wrong offset!");

}

