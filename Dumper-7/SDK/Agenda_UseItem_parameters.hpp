#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Agenda_UseItem

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Agenda_UseItem.Agenda_UseItem_C.ExecuteUbergraph_Agenda_UseItem
// 0x0024 (0x0024 - 0x0000)
struct Agenda_UseItem_C_ExecuteUbergraph_Agenda_UseItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APlayerController* InstigatorController, class APlayerController* TargetController, TSubclassOf<class UPower> PowerType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class APlayerController* Controller, TSubclassOf<class UPower> Power)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(Agenda_UseItem_C_ExecuteUbergraph_Agenda_UseItem) == 0x000004, "Wrong alignment on Agenda_UseItem_C_ExecuteUbergraph_Agenda_UseItem");
static_assert(sizeof(Agenda_UseItem_C_ExecuteUbergraph_Agenda_UseItem) == 0x000024, "Wrong size on Agenda_UseItem_C_ExecuteUbergraph_Agenda_UseItem");
static_assert(offsetof(Agenda_UseItem_C_ExecuteUbergraph_Agenda_UseItem, EntryPoint) == 0x000000, "Member 'Agenda_UseItem_C_ExecuteUbergraph_Agenda_UseItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_ExecuteUbergraph_Agenda_UseItem, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Agenda_UseItem_C_ExecuteUbergraph_Agenda_UseItem::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_ExecuteUbergraph_Agenda_UseItem, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'Agenda_UseItem_C_ExecuteUbergraph_Agenda_UseItem::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function Agenda_UseItem.Agenda_UseItem_C.GetRandomItem
// 0x0018 (0x0018 - 0x0000)
struct Agenda_UseItem_C_GetRandomItem final
{
public:
	class UClass*                                 Output;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Agenda_UseItem_C_GetRandomItem) == 0x000008, "Wrong alignment on Agenda_UseItem_C_GetRandomItem");
static_assert(sizeof(Agenda_UseItem_C_GetRandomItem) == 0x000018, "Wrong size on Agenda_UseItem_C_GetRandomItem");
static_assert(offsetof(Agenda_UseItem_C_GetRandomItem, Output) == 0x000000, "Member 'Agenda_UseItem_C_GetRandomItem::Output' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetRandomItem, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'Agenda_UseItem_C_GetRandomItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetRandomItem, CallFunc_RandomInteger_ReturnValue) == 0x00000C, "Member 'Agenda_UseItem_C_GetRandomItem::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetRandomItem, CallFunc_Array_Get_Item) == 0x000010, "Member 'Agenda_UseItem_C_GetRandomItem::CallFunc_Array_Get_Item' has a wrong offset!");

// Function Agenda_UseItem.Agenda_UseItem_C.SelectItem
// 0x0008 (0x0008 - 0x0000)
struct Agenda_UseItem_C_SelectItem final
{
public:
	class UClass*                                 CallFunc_GetRandomItem_Output;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Agenda_UseItem_C_SelectItem) == 0x000008, "Wrong alignment on Agenda_UseItem_C_SelectItem");
static_assert(sizeof(Agenda_UseItem_C_SelectItem) == 0x000008, "Wrong size on Agenda_UseItem_C_SelectItem");
static_assert(offsetof(Agenda_UseItem_C_SelectItem, CallFunc_GetRandomItem_Output) == 0x000000, "Member 'Agenda_UseItem_C_SelectItem::CallFunc_GetRandomItem_Output' has a wrong offset!");

// Function Agenda_UseItem.Agenda_UseItem_C.OnPowerAdded
// 0x0018 (0x0018 - 0x0000)
struct Agenda_UseItem_C_OnPowerAdded final
{
public:
	class APlayerController*                      Controller_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Power;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControllerSelf_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Agenda_UseItem_C_OnPowerAdded) == 0x000008, "Wrong alignment on Agenda_UseItem_C_OnPowerAdded");
static_assert(sizeof(Agenda_UseItem_C_OnPowerAdded) == 0x000018, "Wrong size on Agenda_UseItem_C_OnPowerAdded");
static_assert(offsetof(Agenda_UseItem_C_OnPowerAdded, Controller_0) == 0x000000, "Member 'Agenda_UseItem_C_OnPowerAdded::Controller_0' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_OnPowerAdded, Power) == 0x000008, "Member 'Agenda_UseItem_C_OnPowerAdded::Power' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_OnPowerAdded, CallFunc_IsControllerSelf_ReturnValue) == 0x000010, "Member 'Agenda_UseItem_C_OnPowerAdded::CallFunc_IsControllerSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_OnPowerAdded, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000011, "Member 'Agenda_UseItem_C_OnPowerAdded::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_OnPowerAdded, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'Agenda_UseItem_C_OnPowerAdded::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Agenda_UseItem.Agenda_UseItem_C.OnPowerUsed
// 0x0020 (0x0020 - 0x0000)
struct Agenda_UseItem_C_OnPowerUsed final
{
public:
	class APlayerController*                      InstigatorController;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      TargetController;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 PowerType;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControllerSelf_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Agenda_UseItem_C_OnPowerUsed) == 0x000008, "Wrong alignment on Agenda_UseItem_C_OnPowerUsed");
static_assert(sizeof(Agenda_UseItem_C_OnPowerUsed) == 0x000020, "Wrong size on Agenda_UseItem_C_OnPowerUsed");
static_assert(offsetof(Agenda_UseItem_C_OnPowerUsed, InstigatorController) == 0x000000, "Member 'Agenda_UseItem_C_OnPowerUsed::InstigatorController' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_OnPowerUsed, TargetController) == 0x000008, "Member 'Agenda_UseItem_C_OnPowerUsed::TargetController' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_OnPowerUsed, PowerType) == 0x000010, "Member 'Agenda_UseItem_C_OnPowerUsed::PowerType' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_OnPowerUsed, CallFunc_IsControllerSelf_ReturnValue) == 0x000018, "Member 'Agenda_UseItem_C_OnPowerUsed::CallFunc_IsControllerSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_OnPowerUsed, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000019, "Member 'Agenda_UseItem_C_OnPowerUsed::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_OnPowerUsed, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'Agenda_UseItem_C_OnPowerUsed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Agenda_UseItem.Agenda_UseItem_C.GetDescription
// 0x0088 (0x0088 - 0x0000)
struct Agenda_UseItem_C_GetDescription final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0060(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Agenda_UseItem_C_GetDescription) == 0x000008, "Wrong alignment on Agenda_UseItem_C_GetDescription");
static_assert(sizeof(Agenda_UseItem_C_GetDescription) == 0x000088, "Wrong size on Agenda_UseItem_C_GetDescription");
static_assert(offsetof(Agenda_UseItem_C_GetDescription, ReturnValue) == 0x000000, "Member 'Agenda_UseItem_C_GetDescription::ReturnValue' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetDescription, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'Agenda_UseItem_C_GetDescription::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetDescription, K2Node_MakeArray_Array) == 0x000050, "Member 'Agenda_UseItem_C_GetDescription::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetDescription, CallFunc_Format_ReturnValue) == 0x000060, "Member 'Agenda_UseItem_C_GetDescription::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetDescription, CallFunc_Conv_TextToString_ReturnValue) == 0x000078, "Member 'Agenda_UseItem_C_GetDescription::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function Agenda_UseItem.Agenda_UseItem_C.GetProgression
// 0x0058 (0x0058 - 0x0000)
struct Agenda_UseItem_C_GetProgression final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasSucceeded_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetScanDescription_Result;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetScanDescription_Result_1;              // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObtainScannerDescription_Result;       // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Agenda_UseItem_C_GetProgression) == 0x000008, "Wrong alignment on Agenda_UseItem_C_GetProgression");
static_assert(sizeof(Agenda_UseItem_C_GetProgression) == 0x000058, "Wrong size on Agenda_UseItem_C_GetProgression");
static_assert(offsetof(Agenda_UseItem_C_GetProgression, ReturnValue) == 0x000000, "Member 'Agenda_UseItem_C_GetProgression::ReturnValue' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetProgression, Temp_bool_Variable) == 0x000010, "Member 'Agenda_UseItem_C_GetProgression::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetProgression, CallFunc_HasSucceeded_ReturnValue) == 0x000011, "Member 'Agenda_UseItem_C_GetProgression::CallFunc_HasSucceeded_ReturnValue' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetProgression, CallFunc_GetScanDescription_Result) == 0x000018, "Member 'Agenda_UseItem_C_GetProgression::CallFunc_GetScanDescription_Result' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetProgression, CallFunc_GetScanDescription_Result_1) == 0x000028, "Member 'Agenda_UseItem_C_GetProgression::CallFunc_GetScanDescription_Result_1' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetProgression, CallFunc_GetObtainScannerDescription_Result) == 0x000038, "Member 'Agenda_UseItem_C_GetProgression::CallFunc_GetObtainScannerDescription_Result' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetProgression, K2Node_Select_Default) == 0x000048, "Member 'Agenda_UseItem_C_GetProgression::K2Node_Select_Default' has a wrong offset!");

// Function Agenda_UseItem.Agenda_UseItem_C.GetObtainScannerDescription
// 0x0088 (0x0088 - 0x0000)
struct Agenda_UseItem_C_GetObtainScannerDescription final
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0060(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Agenda_UseItem_C_GetObtainScannerDescription) == 0x000008, "Wrong alignment on Agenda_UseItem_C_GetObtainScannerDescription");
static_assert(sizeof(Agenda_UseItem_C_GetObtainScannerDescription) == 0x000088, "Wrong size on Agenda_UseItem_C_GetObtainScannerDescription");
static_assert(offsetof(Agenda_UseItem_C_GetObtainScannerDescription, Result) == 0x000000, "Member 'Agenda_UseItem_C_GetObtainScannerDescription::Result' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetObtainScannerDescription, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'Agenda_UseItem_C_GetObtainScannerDescription::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetObtainScannerDescription, K2Node_MakeArray_Array) == 0x000050, "Member 'Agenda_UseItem_C_GetObtainScannerDescription::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetObtainScannerDescription, CallFunc_Format_ReturnValue) == 0x000060, "Member 'Agenda_UseItem_C_GetObtainScannerDescription::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetObtainScannerDescription, CallFunc_Conv_TextToString_ReturnValue) == 0x000078, "Member 'Agenda_UseItem_C_GetObtainScannerDescription::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function Agenda_UseItem.Agenda_UseItem_C.GetScanDescription
// 0x0148 (0x0148 - 0x0000)
struct Agenda_UseItem_C_GetScanDescription final
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0030(0x0018)()
	bool                                          CallFunc_HasSucceeded_ReturnValue;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetVerb_Value;                            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0060(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0078(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0090(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0110(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0120(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Agenda_UseItem_C_GetScanDescription) == 0x000008, "Wrong alignment on Agenda_UseItem_C_GetScanDescription");
static_assert(sizeof(Agenda_UseItem_C_GetScanDescription) == 0x000148, "Wrong size on Agenda_UseItem_C_GetScanDescription");
static_assert(offsetof(Agenda_UseItem_C_GetScanDescription, Result) == 0x000000, "Member 'Agenda_UseItem_C_GetScanDescription::Result' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetScanDescription, Temp_bool_Variable) == 0x000010, "Member 'Agenda_UseItem_C_GetScanDescription::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetScanDescription, Temp_text_Variable) == 0x000018, "Member 'Agenda_UseItem_C_GetScanDescription::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetScanDescription, Temp_text_Variable_1) == 0x000030, "Member 'Agenda_UseItem_C_GetScanDescription::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetScanDescription, CallFunc_HasSucceeded_ReturnValue) == 0x000048, "Member 'Agenda_UseItem_C_GetScanDescription::CallFunc_HasSucceeded_ReturnValue' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetScanDescription, CallFunc_GetVerb_Value) == 0x000050, "Member 'Agenda_UseItem_C_GetScanDescription::CallFunc_GetVerb_Value' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetScanDescription, CallFunc_Conv_StringToText_ReturnValue) == 0x000060, "Member 'Agenda_UseItem_C_GetScanDescription::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetScanDescription, K2Node_Select_Default) == 0x000078, "Member 'Agenda_UseItem_C_GetScanDescription::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetScanDescription, K2Node_MakeStruct_FormatArgumentData) == 0x000090, "Member 'Agenda_UseItem_C_GetScanDescription::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetScanDescription, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D0, "Member 'Agenda_UseItem_C_GetScanDescription::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetScanDescription, K2Node_MakeArray_Array) == 0x000110, "Member 'Agenda_UseItem_C_GetScanDescription::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetScanDescription, CallFunc_Format_ReturnValue) == 0x000120, "Member 'Agenda_UseItem_C_GetScanDescription::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetScanDescription, CallFunc_Conv_TextToString_ReturnValue) == 0x000138, "Member 'Agenda_UseItem_C_GetScanDescription::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function Agenda_UseItem.Agenda_UseItem_C.GetVerb
// 0x0028 (0x0028 - 0x0000)
struct Agenda_UseItem_C_GetVerb final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Map_Find_Value;                           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Agenda_UseItem_C_GetVerb) == 0x000008, "Wrong alignment on Agenda_UseItem_C_GetVerb");
static_assert(sizeof(Agenda_UseItem_C_GetVerb) == 0x000028, "Wrong size on Agenda_UseItem_C_GetVerb");
static_assert(offsetof(Agenda_UseItem_C_GetVerb, Value) == 0x000000, "Member 'Agenda_UseItem_C_GetVerb::Value' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetVerb, CallFunc_Map_Find_Value) == 0x000010, "Member 'Agenda_UseItem_C_GetVerb::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Agenda_UseItem_C_GetVerb, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'Agenda_UseItem_C_GetVerb::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

}

