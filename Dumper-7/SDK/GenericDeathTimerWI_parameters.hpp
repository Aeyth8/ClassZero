#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GenericDeathTimerWI

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function GenericDeathTimerWI.GenericDeathTimerWI_C.ExecuteUbergraph_GenericDeathTimerWI
// 0x0088 (0x0088 - 0x0000)
struct GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Duration;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_OptionalDescriptor;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Text;                           // 0x0018(0x0018)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlayingForward_ReturnValue;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x004C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI) == 0x000008, "Wrong alignment on GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI");
static_assert(sizeof(GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI) == 0x000088, "Wrong size on GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI");
static_assert(offsetof(GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI, EntryPoint) == 0x000000, "Member 'GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI::EntryPoint' has a wrong offset!");
static_assert(offsetof(GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI, K2Node_CustomEvent_Duration) == 0x000004, "Member 'GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI, K2Node_CustomEvent_OptionalDescriptor) == 0x000008, "Member 'GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI::K2Node_CustomEvent_OptionalDescriptor' has a wrong offset!");
static_assert(offsetof(GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI, K2Node_CustomEvent_Text) == 0x000018, "Member 'GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI, K2Node_Event_IsDesignTime) == 0x000030, "Member 'GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000034, "Member 'GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI, CallFunc_PlayAnimationForward_ReturnValue) == 0x000038, "Member 'GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000040, "Member 'GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI, CallFunc_IsAnimationPlayingForward_ReturnValue) == 0x000048, "Member 'GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI::CallFunc_IsAnimationPlayingForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI, K2Node_Event_MyGeometry) == 0x00004C, "Member 'GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI, K2Node_Event_InDeltaTime) == 0x000084, "Member 'GenericDeathTimerWI_C_ExecuteUbergraph_GenericDeathTimerWI::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function GenericDeathTimerWI.GenericDeathTimerWI_C.Tick
// 0x003C (0x003C - 0x0000)
struct GenericDeathTimerWI_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericDeathTimerWI_C_Tick) == 0x000004, "Wrong alignment on GenericDeathTimerWI_C_Tick");
static_assert(sizeof(GenericDeathTimerWI_C_Tick) == 0x00003C, "Wrong size on GenericDeathTimerWI_C_Tick");
static_assert(offsetof(GenericDeathTimerWI_C_Tick, MyGeometry) == 0x000000, "Member 'GenericDeathTimerWI_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(GenericDeathTimerWI_C_Tick, InDeltaTime) == 0x000038, "Member 'GenericDeathTimerWI_C_Tick::InDeltaTime' has a wrong offset!");

// Function GenericDeathTimerWI.GenericDeathTimerWI_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct GenericDeathTimerWI_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GenericDeathTimerWI_C_PreConstruct) == 0x000001, "Wrong alignment on GenericDeathTimerWI_C_PreConstruct");
static_assert(sizeof(GenericDeathTimerWI_C_PreConstruct) == 0x000001, "Wrong size on GenericDeathTimerWI_C_PreConstruct");
static_assert(offsetof(GenericDeathTimerWI_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'GenericDeathTimerWI_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function GenericDeathTimerWI.GenericDeathTimerWI_C.StartProgress
// 0x0030 (0x0030 - 0x0000)
struct GenericDeathTimerWI_C_StartProgress final
{
public:
	float                                         Duration_0;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OptionalDescriptor;                                // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GenericDeathTimerWI_C_StartProgress) == 0x000008, "Wrong alignment on GenericDeathTimerWI_C_StartProgress");
static_assert(sizeof(GenericDeathTimerWI_C_StartProgress) == 0x000030, "Wrong size on GenericDeathTimerWI_C_StartProgress");
static_assert(offsetof(GenericDeathTimerWI_C_StartProgress, Duration_0) == 0x000000, "Member 'GenericDeathTimerWI_C_StartProgress::Duration_0' has a wrong offset!");
static_assert(offsetof(GenericDeathTimerWI_C_StartProgress, OptionalDescriptor) == 0x000008, "Member 'GenericDeathTimerWI_C_StartProgress::OptionalDescriptor' has a wrong offset!");
static_assert(offsetof(GenericDeathTimerWI_C_StartProgress, Text) == 0x000018, "Member 'GenericDeathTimerWI_C_StartProgress::Text' has a wrong offset!");

// Function GenericDeathTimerWI.GenericDeathTimerWI_C.CalculateProgress
// 0x0014 (0x0014 - 0x0000)
struct GenericDeathTimerWI_C_CalculateProgress final
{
public:
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericDeathTimerWI_C_CalculateProgress) == 0x000004, "Wrong alignment on GenericDeathTimerWI_C_CalculateProgress");
static_assert(sizeof(GenericDeathTimerWI_C_CalculateProgress) == 0x000014, "Wrong size on GenericDeathTimerWI_C_CalculateProgress");
static_assert(offsetof(GenericDeathTimerWI_C_CalculateProgress, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'GenericDeathTimerWI_C_CalculateProgress::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericDeathTimerWI_C_CalculateProgress, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'GenericDeathTimerWI_C_CalculateProgress::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericDeathTimerWI_C_CalculateProgress, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'GenericDeathTimerWI_C_CalculateProgress::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericDeathTimerWI_C_CalculateProgress, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'GenericDeathTimerWI_C_CalculateProgress::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericDeathTimerWI_C_CalculateProgress, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000010, "Member 'GenericDeathTimerWI_C_CalculateProgress::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");

}

