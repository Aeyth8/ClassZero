#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: bpc_ac_Hacking

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass bpc_ac_Hacking.bpc_ac_Hacking_C
// 0x0028 (0x00D8 - 0x00B0)
class Ubpc_ac_Hacking_C final : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_             OnHackingStateChanged;                             // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsHacked;                                          // 0x00C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnHackingInit;                                     // 0x00C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnHackingStateChanged__DelegateSignature(bool IsHacked_0);
	void OnHackingInit__DelegateSignature();
	void HackingSuccess();
	void HackingFailed();
	void HackingInit();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"bpc_ac_Hacking_C">();
	}
	static class Ubpc_ac_Hacking_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<Ubpc_ac_Hacking_C>();
	}
};
static_assert(alignof(Ubpc_ac_Hacking_C) == 0x000008, "Wrong alignment on Ubpc_ac_Hacking_C");
static_assert(sizeof(Ubpc_ac_Hacking_C) == 0x0000D8, "Wrong size on Ubpc_ac_Hacking_C");
static_assert(offsetof(Ubpc_ac_Hacking_C, OnHackingStateChanged) == 0x0000B0, "Member 'Ubpc_ac_Hacking_C::OnHackingStateChanged' has a wrong offset!");
static_assert(offsetof(Ubpc_ac_Hacking_C, IsHacked) == 0x0000C0, "Member 'Ubpc_ac_Hacking_C::IsHacked' has a wrong offset!");
static_assert(offsetof(Ubpc_ac_Hacking_C, OnHackingInit) == 0x0000C8, "Member 'Ubpc_ac_Hacking_C::OnHackingInit' has a wrong offset!");

}

