#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GamepadScrollUtilityWI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FCT_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass GamepadScrollUtilityWI.GamepadScrollUtilityWI_C
// 0x0030 (0x02A8 - 0x0278)
class UGamepadScrollUtilityWI_C final : public UGamepadScrollUtility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UScrollBox*                             ScrollBox;                                         // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScrollMultiplier;                                  // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnGamepadScrolled;                                 // 0x0290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          UseScrollTime;                                     // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DesiredScrollTime;                                 // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnGamepadScrolled__DelegateSignature(float CurrentOffset);
	void ExecuteUbergraph_GamepadScrollUtilityWI(int32 EntryPoint);
	void OnGamepadScroll(float ScrollValue);
	void PerformScroll(float ScrollValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GamepadScrollUtilityWI_C">();
	}
	static class UGamepadScrollUtilityWI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGamepadScrollUtilityWI_C>();
	}
};
static_assert(alignof(UGamepadScrollUtilityWI_C) == 0x000008, "Wrong alignment on UGamepadScrollUtilityWI_C");
static_assert(sizeof(UGamepadScrollUtilityWI_C) == 0x0002A8, "Wrong size on UGamepadScrollUtilityWI_C");
static_assert(offsetof(UGamepadScrollUtilityWI_C, UberGraphFrame) == 0x000278, "Member 'UGamepadScrollUtilityWI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGamepadScrollUtilityWI_C, ScrollBox) == 0x000280, "Member 'UGamepadScrollUtilityWI_C::ScrollBox' has a wrong offset!");
static_assert(offsetof(UGamepadScrollUtilityWI_C, ScrollMultiplier) == 0x000288, "Member 'UGamepadScrollUtilityWI_C::ScrollMultiplier' has a wrong offset!");
static_assert(offsetof(UGamepadScrollUtilityWI_C, OnGamepadScrolled) == 0x000290, "Member 'UGamepadScrollUtilityWI_C::OnGamepadScrolled' has a wrong offset!");
static_assert(offsetof(UGamepadScrollUtilityWI_C, UseScrollTime) == 0x0002A0, "Member 'UGamepadScrollUtilityWI_C::UseScrollTime' has a wrong offset!");
static_assert(offsetof(UGamepadScrollUtilityWI_C, DesiredScrollTime) == 0x0002A4, "Member 'UGamepadScrollUtilityWI_C::DesiredScrollTime' has a wrong offset!");

}

