#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WallTeleporterSCTBP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SCT_structs.hpp"
#include "E_interactionAnim_structs.hpp"
#include "AkAudio_structs.hpp"
#include "E_interactionAnimState_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WallTeleporterSCTBP.WallTeleporterSCTBP_C.ExecuteUbergraph_WallTeleporterSCTBP
// 0x0258 (0x0258 - 0x0000)
struct WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0018(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0028(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInteractionPayload                    K2Node_ComponentBoundEvent_payload_2;              // 0x0040(0x0030)(ConstParm, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0090(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_2;                            // 0x00A0(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x00B4(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_interactionAnim                             K2Node_CustomEvent_Animation;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_interactionAnimState                        K2Node_CustomEvent_State;                          // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP;              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_3;                            // 0x00F8(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_PostAkEvent_ReturnValue_2;                // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x011C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0130(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3;                          // 0x0138(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_Get_Destination_Location_and_Rotation_ReturnValue; // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_Destination_Location_and_Rotation_ReturnValue_Yaw; // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_4;                            // 0x0168(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_PostAkEvent_ReturnValue_3;                // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0180(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0190(0x0008)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_4;                          // 0x01C8(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue_4;                // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInteractionPayload                    K2Node_ComponentBoundEvent_payload_1;              // 0x01E0(0x0030)(ConstParm, NoDestructor, ContainsInstancedReference)
	struct FInteractionPayload                    K2Node_ComponentBoundEvent_payload;                // 0x0210(0x0030)(ConstParm, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_ComponentBoundEvent_wasCancelled;           // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter_1;                  // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP) == 0x000008, "Wrong alignment on WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP");
static_assert(sizeof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP) == 0x000258, "Wrong size on WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, EntryPoint) == 0x000000, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, Temp_struct_Variable) == 0x000008, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, Temp_delegate_Variable) == 0x000018, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, Temp_struct_Variable_1) == 0x000028, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, CallFunc_IsDedicatedServer_ReturnValue) == 0x000038, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, K2Node_ComponentBoundEvent_payload_2) == 0x000040, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::K2Node_ComponentBoundEvent_payload_2' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000070, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, K2Node_ComponentBoundEvent_OtherActor) == 0x000078, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, K2Node_ComponentBoundEvent_OtherComp) == 0x000080, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000088, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, K2Node_Event_DeltaSeconds) == 0x00008C, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, Temp_delegate_Variable_1) == 0x000090, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, Temp_struct_Variable_2) == 0x0000A0, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x0000B0, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, Temp_delegate_Variable_2) == 0x0000B4, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x0000C4, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, CallFunc_PostAkEvent_ReturnValue) == 0x0000C8, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, CallFunc_PostAkEvent_ReturnValue_1) == 0x0000CC, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x0000D0, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, K2Node_CustomEvent_Actor) == 0x0000D8, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, K2Node_CustomEvent_Animation) == 0x0000E0, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::K2Node_CustomEvent_Animation' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, K2Node_CustomEvent_State) == 0x0000E1, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::K2Node_CustomEvent_State' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, K2Node_DynamicCast_AsCharacter_SCTBP) == 0x0000E8, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::K2Node_DynamicCast_AsCharacter_SCTBP' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, CallFunc_IsValid_ReturnValue) == 0x0000F1, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, Temp_struct_Variable_3) == 0x0000F8, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, CallFunc_PostAkEvent_ReturnValue_2) == 0x000108, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::CallFunc_PostAkEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, CallFunc_HasAuthority_ReturnValue) == 0x00010C, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, K2Node_DynamicCast_AsCharacter) == 0x000110, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, K2Node_DynamicCast_bSuccess_1) == 0x000118, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, CallFunc_IsLocallyControlled_ReturnValue) == 0x000119, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, K2Node_CreateDelegate_OutputDelegate) == 0x00011C, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000130, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, Temp_delegate_Variable_3) == 0x000138, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, CallFunc_Get_Destination_Location_and_Rotation_ReturnValue) == 0x000148, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::CallFunc_Get_Destination_Location_and_Rotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, CallFunc_Get_Destination_Location_and_Rotation_ReturnValue_Yaw) == 0x000154, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::CallFunc_Get_Destination_Location_and_Rotation_ReturnValue_Yaw' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, CallFunc_MakeRotator_ReturnValue) == 0x000158, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, Temp_struct_Variable_4) == 0x000168, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, CallFunc_PostAkEvent_ReturnValue_3) == 0x000178, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::CallFunc_PostAkEvent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00017C, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, K2Node_CreateDelegate_OutputDelegate_1) == 0x000180, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000190, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, K2Node_DynamicCast_AsICharacter_SCT) == 0x000198, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, K2Node_DynamicCast_bSuccess_2) == 0x0001A8, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, CallFunc_IsValid_ReturnValue_1) == 0x0001A9, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0001B0, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, CallFunc_IsValid_ReturnValue_2) == 0x0001B8, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x0001C0, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, Temp_delegate_Variable_4) == 0x0001C8, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::Temp_delegate_Variable_4' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, CallFunc_IsValid_ReturnValue_3) == 0x0001D8, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, CallFunc_PostAkEvent_ReturnValue_4) == 0x0001DC, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::CallFunc_PostAkEvent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, K2Node_ComponentBoundEvent_payload_1) == 0x0001E0, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::K2Node_ComponentBoundEvent_payload_1' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, K2Node_ComponentBoundEvent_payload) == 0x000210, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::K2Node_ComponentBoundEvent_payload' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, K2Node_ComponentBoundEvent_wasCancelled) == 0x000240, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::K2Node_ComponentBoundEvent_wasCancelled' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, K2Node_DynamicCast_AsCharacter_1) == 0x000248, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::K2Node_DynamicCast_AsCharacter_1' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, K2Node_DynamicCast_bSuccess_3) == 0x000250, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000251, "Member 'WallTeleporterSCTBP_C_ExecuteUbergraph_WallTeleporterSCTBP::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");

// Function WallTeleporterSCTBP.WallTeleporterSCTBP_C.BndEvt__WallTeleporterSCTBP_ShortcutKeyInteractionComponent_K2Node_ComponentBoundEvent_2_InteractionEndedDelegate__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct WallTeleporterSCTBP_C_BndEvt__WallTeleporterSCTBP_ShortcutKeyInteractionComponent_K2Node_ComponentBoundEvent_2_InteractionEndedDelegate__DelegateSignature final
{
public:
	struct FInteractionPayload                    Payload;                                           // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	bool                                          WasCancelled;                                      // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WallTeleporterSCTBP_C_BndEvt__WallTeleporterSCTBP_ShortcutKeyInteractionComponent_K2Node_ComponentBoundEvent_2_InteractionEndedDelegate__DelegateSignature) == 0x000008, "Wrong alignment on WallTeleporterSCTBP_C_BndEvt__WallTeleporterSCTBP_ShortcutKeyInteractionComponent_K2Node_ComponentBoundEvent_2_InteractionEndedDelegate__DelegateSignature");
static_assert(sizeof(WallTeleporterSCTBP_C_BndEvt__WallTeleporterSCTBP_ShortcutKeyInteractionComponent_K2Node_ComponentBoundEvent_2_InteractionEndedDelegate__DelegateSignature) == 0x000038, "Wrong size on WallTeleporterSCTBP_C_BndEvt__WallTeleporterSCTBP_ShortcutKeyInteractionComponent_K2Node_ComponentBoundEvent_2_InteractionEndedDelegate__DelegateSignature");
static_assert(offsetof(WallTeleporterSCTBP_C_BndEvt__WallTeleporterSCTBP_ShortcutKeyInteractionComponent_K2Node_ComponentBoundEvent_2_InteractionEndedDelegate__DelegateSignature, Payload) == 0x000000, "Member 'WallTeleporterSCTBP_C_BndEvt__WallTeleporterSCTBP_ShortcutKeyInteractionComponent_K2Node_ComponentBoundEvent_2_InteractionEndedDelegate__DelegateSignature::Payload' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_BndEvt__WallTeleporterSCTBP_ShortcutKeyInteractionComponent_K2Node_ComponentBoundEvent_2_InteractionEndedDelegate__DelegateSignature, WasCancelled) == 0x000030, "Member 'WallTeleporterSCTBP_C_BndEvt__WallTeleporterSCTBP_ShortcutKeyInteractionComponent_K2Node_ComponentBoundEvent_2_InteractionEndedDelegate__DelegateSignature::WasCancelled' has a wrong offset!");

// Function WallTeleporterSCTBP.WallTeleporterSCTBP_C.BndEvt__WallTeleporterSCTBP_ShortcutKeyInteractionComponent_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct WallTeleporterSCTBP_C_BndEvt__WallTeleporterSCTBP_ShortcutKeyInteractionComponent_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature final
{
public:
	struct FInteractionPayload                    Payload;                                           // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(WallTeleporterSCTBP_C_BndEvt__WallTeleporterSCTBP_ShortcutKeyInteractionComponent_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature) == 0x000008, "Wrong alignment on WallTeleporterSCTBP_C_BndEvt__WallTeleporterSCTBP_ShortcutKeyInteractionComponent_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature");
static_assert(sizeof(WallTeleporterSCTBP_C_BndEvt__WallTeleporterSCTBP_ShortcutKeyInteractionComponent_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature) == 0x000030, "Wrong size on WallTeleporterSCTBP_C_BndEvt__WallTeleporterSCTBP_ShortcutKeyInteractionComponent_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature");
static_assert(offsetof(WallTeleporterSCTBP_C_BndEvt__WallTeleporterSCTBP_ShortcutKeyInteractionComponent_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature, Payload) == 0x000000, "Member 'WallTeleporterSCTBP_C_BndEvt__WallTeleporterSCTBP_ShortcutKeyInteractionComponent_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature::Payload' has a wrong offset!");

// Function WallTeleporterSCTBP.WallTeleporterSCTBP_C.Play Animation Server
// 0x0010 (0x0010 - 0x0000)
struct WallTeleporterSCTBP_C_Play_Animation_Server final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_interactionAnim                             Animation;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_interactionAnimState                        State;                                             // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WallTeleporterSCTBP_C_Play_Animation_Server) == 0x000008, "Wrong alignment on WallTeleporterSCTBP_C_Play_Animation_Server");
static_assert(sizeof(WallTeleporterSCTBP_C_Play_Animation_Server) == 0x000010, "Wrong size on WallTeleporterSCTBP_C_Play_Animation_Server");
static_assert(offsetof(WallTeleporterSCTBP_C_Play_Animation_Server, Actor) == 0x000000, "Member 'WallTeleporterSCTBP_C_Play_Animation_Server::Actor' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_Play_Animation_Server, Animation) == 0x000008, "Member 'WallTeleporterSCTBP_C_Play_Animation_Server::Animation' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_Play_Animation_Server, State) == 0x000009, "Member 'WallTeleporterSCTBP_C_Play_Animation_Server::State' has a wrong offset!");

// Function WallTeleporterSCTBP.WallTeleporterSCTBP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct WallTeleporterSCTBP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WallTeleporterSCTBP_C_ReceiveTick) == 0x000004, "Wrong alignment on WallTeleporterSCTBP_C_ReceiveTick");
static_assert(sizeof(WallTeleporterSCTBP_C_ReceiveTick) == 0x000004, "Wrong size on WallTeleporterSCTBP_C_ReceiveTick");
static_assert(offsetof(WallTeleporterSCTBP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'WallTeleporterSCTBP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function WallTeleporterSCTBP.WallTeleporterSCTBP_C.BndEvt__CharacterOverlapper_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WallTeleporterSCTBP_C_BndEvt__CharacterOverlapper_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WallTeleporterSCTBP_C_BndEvt__CharacterOverlapper_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on WallTeleporterSCTBP_C_BndEvt__CharacterOverlapper_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(WallTeleporterSCTBP_C_BndEvt__CharacterOverlapper_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on WallTeleporterSCTBP_C_BndEvt__CharacterOverlapper_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(WallTeleporterSCTBP_C_BndEvt__CharacterOverlapper_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'WallTeleporterSCTBP_C_BndEvt__CharacterOverlapper_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_BndEvt__CharacterOverlapper_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'WallTeleporterSCTBP_C_BndEvt__CharacterOverlapper_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_BndEvt__CharacterOverlapper_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'WallTeleporterSCTBP_C_BndEvt__CharacterOverlapper_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_BndEvt__CharacterOverlapper_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'WallTeleporterSCTBP_C_BndEvt__CharacterOverlapper_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function WallTeleporterSCTBP.WallTeleporterSCTBP_C.BndEvt__Interaction_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct WallTeleporterSCTBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature final
{
public:
	struct FInteractionPayload                    Payload;                                           // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(WallTeleporterSCTBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature) == 0x000008, "Wrong alignment on WallTeleporterSCTBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature");
static_assert(sizeof(WallTeleporterSCTBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature) == 0x000030, "Wrong size on WallTeleporterSCTBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature");
static_assert(offsetof(WallTeleporterSCTBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature, Payload) == 0x000000, "Member 'WallTeleporterSCTBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature::Payload' has a wrong offset!");

// Function WallTeleporterSCTBP.WallTeleporterSCTBP_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct WallTeleporterSCTBP_C_UserConstructionScript final
{
public:
	TScriptInterface<class IInteractionSubComponentInterface> CallFunc_AddSubComponent_component_CastInput;      // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
};
static_assert(alignof(WallTeleporterSCTBP_C_UserConstructionScript) == 0x000008, "Wrong alignment on WallTeleporterSCTBP_C_UserConstructionScript");
static_assert(sizeof(WallTeleporterSCTBP_C_UserConstructionScript) == 0x000010, "Wrong size on WallTeleporterSCTBP_C_UserConstructionScript");
static_assert(offsetof(WallTeleporterSCTBP_C_UserConstructionScript, CallFunc_AddSubComponent_component_CastInput) == 0x000000, "Member 'WallTeleporterSCTBP_C_UserConstructionScript::CallFunc_AddSubComponent_component_CastInput' has a wrong offset!");

// Function WallTeleporterSCTBP.WallTeleporterSCTBP_C.Play Audio on Actor
// 0x0020 (0x0020 - 0x0000)
struct WallTeleporterSCTBP_C_Play_Audio_on_Actor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          AkEvent;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WallTeleporterSCTBP_C_Play_Audio_on_Actor) == 0x000008, "Wrong alignment on WallTeleporterSCTBP_C_Play_Audio_on_Actor");
static_assert(sizeof(WallTeleporterSCTBP_C_Play_Audio_on_Actor) == 0x000020, "Wrong size on WallTeleporterSCTBP_C_Play_Audio_on_Actor");
static_assert(offsetof(WallTeleporterSCTBP_C_Play_Audio_on_Actor, Actor) == 0x000000, "Member 'WallTeleporterSCTBP_C_Play_Audio_on_Actor::Actor' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_Play_Audio_on_Actor, AkEvent) == 0x000008, "Member 'WallTeleporterSCTBP_C_Play_Audio_on_Actor::AkEvent' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_Play_Audio_on_Actor, K2Node_DynamicCast_AsCharacter_SCTBP) == 0x000010, "Member 'WallTeleporterSCTBP_C_Play_Audio_on_Actor::K2Node_DynamicCast_AsCharacter_SCTBP' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_Play_Audio_on_Actor, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WallTeleporterSCTBP_C_Play_Audio_on_Actor::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WallTeleporterSCTBP.WallTeleporterSCTBP_C.Commit Destination Cooldown
// 0x0001 (0x0001 - 0x0000)
struct WallTeleporterSCTBP_C_Commit_Destination_Cooldown final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WallTeleporterSCTBP_C_Commit_Destination_Cooldown) == 0x000001, "Wrong alignment on WallTeleporterSCTBP_C_Commit_Destination_Cooldown");
static_assert(sizeof(WallTeleporterSCTBP_C_Commit_Destination_Cooldown) == 0x000001, "Wrong size on WallTeleporterSCTBP_C_Commit_Destination_Cooldown");
static_assert(offsetof(WallTeleporterSCTBP_C_Commit_Destination_Cooldown, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WallTeleporterSCTBP_C_Commit_Destination_Cooldown::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WallTeleporterSCTBP.WallTeleporterSCTBP_C.Get Destination Location and Rotation
// 0x0034 (0x0034 - 0x0000)
struct WallTeleporterSCTBP_C_Get_Destination_Location_and_Rotation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue_Yaw;                                   // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WallTeleporterSCTBP_C_Get_Destination_Location_and_Rotation) == 0x000004, "Wrong alignment on WallTeleporterSCTBP_C_Get_Destination_Location_and_Rotation");
static_assert(sizeof(WallTeleporterSCTBP_C_Get_Destination_Location_and_Rotation) == 0x000034, "Wrong size on WallTeleporterSCTBP_C_Get_Destination_Location_and_Rotation");
static_assert(offsetof(WallTeleporterSCTBP_C_Get_Destination_Location_and_Rotation, ReturnValue) == 0x000000, "Member 'WallTeleporterSCTBP_C_Get_Destination_Location_and_Rotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_Get_Destination_Location_and_Rotation, ReturnValue_Yaw) == 0x00000C, "Member 'WallTeleporterSCTBP_C_Get_Destination_Location_and_Rotation::ReturnValue_Yaw' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_Get_Destination_Location_and_Rotation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'WallTeleporterSCTBP_C_Get_Destination_Location_and_Rotation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_Get_Destination_Location_and_Rotation, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x00001C, "Member 'WallTeleporterSCTBP_C_Get_Destination_Location_and_Rotation::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_Get_Destination_Location_and_Rotation, CallFunc_BreakRotator_Roll) == 0x000028, "Member 'WallTeleporterSCTBP_C_Get_Destination_Location_and_Rotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_Get_Destination_Location_and_Rotation, CallFunc_BreakRotator_Pitch) == 0x00002C, "Member 'WallTeleporterSCTBP_C_Get_Destination_Location_and_Rotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_Get_Destination_Location_and_Rotation, CallFunc_BreakRotator_Yaw) == 0x000030, "Member 'WallTeleporterSCTBP_C_Get_Destination_Location_and_Rotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");

// Function WallTeleporterSCTBP.WallTeleporterSCTBP_C.Toggle Destination Camera UI
// 0x0020 (0x0020 - 0x0000)
struct WallTeleporterSCTBP_C_Toggle_Destination_Camera_UI final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterWI_C*                         CallFunc_GetSCT_CharacterWidget_CharacterWI;       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WallTeleporterSCTBP_C_Toggle_Destination_Camera_UI) == 0x000008, "Wrong alignment on WallTeleporterSCTBP_C_Toggle_Destination_Camera_UI");
static_assert(sizeof(WallTeleporterSCTBP_C_Toggle_Destination_Camera_UI) == 0x000020, "Wrong size on WallTeleporterSCTBP_C_Toggle_Destination_Camera_UI");
static_assert(offsetof(WallTeleporterSCTBP_C_Toggle_Destination_Camera_UI, Enable) == 0x000000, "Member 'WallTeleporterSCTBP_C_Toggle_Destination_Camera_UI::Enable' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_Toggle_Destination_Camera_UI, K2Node_DynamicCast_AsCharacter) == 0x000008, "Member 'WallTeleporterSCTBP_C_Toggle_Destination_Camera_UI::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_Toggle_Destination_Camera_UI, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WallTeleporterSCTBP_C_Toggle_Destination_Camera_UI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_Toggle_Destination_Camera_UI, CallFunc_IsLocallyControlled_ReturnValue) == 0x000011, "Member 'WallTeleporterSCTBP_C_Toggle_Destination_Camera_UI::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_Toggle_Destination_Camera_UI, CallFunc_GetSCT_CharacterWidget_CharacterWI) == 0x000018, "Member 'WallTeleporterSCTBP_C_Toggle_Destination_Camera_UI::CallFunc_GetSCT_CharacterWidget_CharacterWI' has a wrong offset!");

// Function WallTeleporterSCTBP.WallTeleporterSCTBP_C.RenderXray
// 0x0010 (0x0010 - 0x0000)
struct WallTeleporterSCTBP_C_RenderXray final
{
public:
	bool                                          On;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WallTeleporterSCTBP_C_RenderXray) == 0x000004, "Wrong alignment on WallTeleporterSCTBP_C_RenderXray");
static_assert(sizeof(WallTeleporterSCTBP_C_RenderXray) == 0x000010, "Wrong size on WallTeleporterSCTBP_C_RenderXray");
static_assert(offsetof(WallTeleporterSCTBP_C_RenderXray, On) == 0x000000, "Member 'WallTeleporterSCTBP_C_RenderXray::On' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_RenderXray, Temp_bool_Variable) == 0x000001, "Member 'WallTeleporterSCTBP_C_RenderXray::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_RenderXray, Temp_int_Variable) == 0x000004, "Member 'WallTeleporterSCTBP_C_RenderXray::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_RenderXray, Temp_int_Variable_1) == 0x000008, "Member 'WallTeleporterSCTBP_C_RenderXray::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_RenderXray, K2Node_Select_Default) == 0x00000C, "Member 'WallTeleporterSCTBP_C_RenderXray::K2Node_Select_Default' has a wrong offset!");

// Function WallTeleporterSCTBP.WallTeleporterSCTBP_C.GetOutlineMeshes
// 0x0020 (0x0020 - 0x0000)
struct WallTeleporterSCTBP_C_GetOutlineMeshes final
{
public:
	TArray<class UPrimitiveComponent*>            ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	TArray<class UPrimitiveComponent*>            K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WallTeleporterSCTBP_C_GetOutlineMeshes) == 0x000008, "Wrong alignment on WallTeleporterSCTBP_C_GetOutlineMeshes");
static_assert(sizeof(WallTeleporterSCTBP_C_GetOutlineMeshes) == 0x000020, "Wrong size on WallTeleporterSCTBP_C_GetOutlineMeshes");
static_assert(offsetof(WallTeleporterSCTBP_C_GetOutlineMeshes, ReturnValue) == 0x000000, "Member 'WallTeleporterSCTBP_C_GetOutlineMeshes::ReturnValue' has a wrong offset!");
static_assert(offsetof(WallTeleporterSCTBP_C_GetOutlineMeshes, K2Node_MakeArray_Array) == 0x000010, "Member 'WallTeleporterSCTBP_C_GetOutlineMeshes::K2Node_MakeArray_Array' has a wrong offset!");

}

