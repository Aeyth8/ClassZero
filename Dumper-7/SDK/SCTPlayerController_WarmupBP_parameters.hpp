#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SCTPlayerController_WarmupBP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"
#include "SCT_structs.hpp"


namespace SDK::Params
{

// Function SCTPlayerController_WarmupBP.SCTPlayerController_WarmupBP_C.OnGetUserCustomization__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct SCTPlayerController_WarmupBP_C_OnGetUserCustomization__DelegateSignature final
{
public:
	class FString                                 AccelByteId;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerController_WarmupBP_C_OnGetUserCustomization__DelegateSignature) == 0x000008, "Wrong alignment on SCTPlayerController_WarmupBP_C_OnGetUserCustomization__DelegateSignature");
static_assert(sizeof(SCTPlayerController_WarmupBP_C_OnGetUserCustomization__DelegateSignature) == 0x000010, "Wrong size on SCTPlayerController_WarmupBP_C_OnGetUserCustomization__DelegateSignature");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_OnGetUserCustomization__DelegateSignature, AccelByteId) == 0x000000, "Member 'SCTPlayerController_WarmupBP_C_OnGetUserCustomization__DelegateSignature::AccelByteId' has a wrong offset!");

// Function SCTPlayerController_WarmupBP.SCTPlayerController_WarmupBP_C.ExecuteUbergraph_SCTPlayerController_WarmupBP
// 0x03A8 (0x03A8 - 0x0000)
struct SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFCTPartyConnectionCallbackProxy*       CallFunc_LeaveParty_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFCTPartyConnectionCallbackProxy*       CallFunc_LeaveParty_ReturnValue_1;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_5;                        // 0x0040(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0060(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0078(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue_1;           // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93[0x5];                                       // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAccelByteGIS*                          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00A0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasPendingConsoleSessionInvite_ReturnValue; // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAccelByteGIS*                          CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAccelByteGIS*                          CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPendingConsoleSessionInvite_ReturnValue_1; // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_4;                        // 0x00D0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x00E8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0100(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0118(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0130(0x0018)(HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0148(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0158(0x0010)(ZeroConstructor, NoDestructor)
	class UAccelByteGIS*                          CallFunc_GetGameInstanceSubsystem_ReturnValue_3;   // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAccelByteGIS*                          CallFunc_GetGameInstanceSubsystem_ReturnValue_4;   // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPendingConsoleLaunchMultiplayerIntent_ReturnValue; // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x017C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0190(0x0018)()
	bool                                          CallFunc_IsConsolePlatform_ReturnValue;            // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UModal*                                 CallFunc_GetModal_ReturnValue;                     // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsThumbVoteMenuVisible_ReturnValue;       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x01BC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsInGameMenuVisible_ReturnValue;          // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CF[0x1];                                      // 0x01CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UReportPlayerWI_C*>              CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x01D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x01E8(0x0010)(ZeroConstructor, NoDestructor)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x01F8(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0210(0x0018)()
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFCTGameInstanceBP_C*                   K2Node_DynamicCast_AsFCTGame_Instance_BP;          // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x023C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x024C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_3;            // 0x0260(0x0018)()
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFCTPartyConnectionCallbackProxy*       CallFunc_LeaveParty_ReturnValue_2;                 // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFCTGameInstanceBP_C*                   K2Node_DynamicCast_AsFCTGame_Instance_BP_1;        // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_292[0x6];                                      // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFCTPartyConnectionCallbackProxy*       CallFunc_LeaveParty_ReturnValue_3;                 // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_4;            // 0x02B0(0x0018)()
	struct FPassengerLogInformation               K2Node_Event_logInformation;                       // 0x02C8(0x0028)(ConstParm)
	class UCharacterWI_C*                         CallFunc_GetSCT_CharacterWidget_CharacterWI;       // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_PossessedPawn;                        // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ASCTPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_10;           // 0x0304(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState*                        K2Node_CustomEvent_PlayerState;                    // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue_1;                   // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_322[0x6];                                      // 0x0322(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState*                        K2Node_DynamicCast_AsSCTPlayer_State;              // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_332[0x2];                                      // 0x0332(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x0334(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_12;           // 0x0344(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_13;           // 0x0354(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_14;           // 0x0368(0x0010)(ZeroConstructor, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsXboxPlatform_ReturnValue;               // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USCTGameInstance*                       K2Node_DynamicCast_AsSCTGame_Instance;             // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsXboxUserLoggedIn_ReturnValue;           // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_392[0x6];                                      // 0x0392(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFCTPartyConnectionCallbackProxy*       CallFunc_LeaveParty_ReturnValue_4;                 // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP) == 0x000008, "Wrong alignment on SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP");
static_assert(sizeof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP) == 0x0003A8, "Wrong size on SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, EntryPoint) == 0x000000, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_LeaveParty_ReturnValue) == 0x000008, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_LeaveParty_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_LeaveParty_ReturnValue_1) == 0x000038, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_LeaveParty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_InputKeyEvent_Key_5) == 0x000040, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_InputKeyEvent_Key_5' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_IsValid_ReturnValue_2) == 0x000059, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_InputActionEvent_Key_1) == 0x000060, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_InputActionEvent_Key) == 0x000078, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000090, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_Key_IsGamepadKey_ReturnValue_1) == 0x000091, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_Key_IsGamepadKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_Not_PreBool_ReturnValue) == 0x000092, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000098, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000A0, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_HasPendingConsoleSessionInvite_ReturnValue) == 0x0000B0, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_HasPendingConsoleSessionInvite_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x0000B8, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x0000C0, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_HasPendingConsoleSessionInvite_ReturnValue_1) == 0x0000C8, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_HasPendingConsoleSessionInvite_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C9, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_InputKeyEvent_Key_4) == 0x0000D0, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_InputKeyEvent_Key_4' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_InputKeyEvent_Key_3) == 0x0000E8, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_InputKeyEvent_Key_2) == 0x000100, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_InputKeyEvent_Key_1) == 0x000118, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_InputKeyEvent_Key) == 0x000130, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_CreateDelegate_OutputDelegate_3) == 0x000148, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_CreateDelegate_OutputDelegate_4) == 0x000158, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_GetGameInstanceSubsystem_ReturnValue_3) == 0x000168, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_GetGameInstanceSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_GetGameInstanceSubsystem_ReturnValue_4) == 0x000170, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_GetGameInstanceSubsystem_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_HasPendingConsoleLaunchMultiplayerIntent_ReturnValue) == 0x000178, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_HasPendingConsoleLaunchMultiplayerIntent_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_CreateDelegate_OutputDelegate_5) == 0x00017C, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_MakeLiteralText_ReturnValue) == 0x000190, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_IsConsolePlatform_ReturnValue) == 0x0001A8, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_IsConsolePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_GetModal_ReturnValue) == 0x0001B0, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_GetModal_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_IsThumbVoteMenuVisible_ReturnValue) == 0x0001B8, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_IsThumbVoteMenuVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_CreateDelegate_OutputDelegate_6) == 0x0001BC, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_IsInGameMenuVisible_ReturnValue) == 0x0001CC, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_IsInGameMenuVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_BooleanOR_ReturnValue) == 0x0001CD, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001CE, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x0001D0, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_Array_Length_ReturnValue) == 0x0001E0, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001E4, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_CreateDelegate_OutputDelegate_7) == 0x0001E8, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_MakeLiteralText_ReturnValue_1) == 0x0001F8, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000210, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_GetGameInstance_ReturnValue) == 0x000228, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_DynamicCast_AsFCTGame_Instance_BP) == 0x000230, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_DynamicCast_AsFCTGame_Instance_BP' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_DynamicCast_bSuccess) == 0x000238, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_CreateDelegate_OutputDelegate_8) == 0x00023C, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_CreateDelegate_OutputDelegate_9) == 0x00024C, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_MakeLiteralText_ReturnValue_3) == 0x000260, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_MakeLiteralText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_GetGameInstance_ReturnValue_1) == 0x000278, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_LeaveParty_ReturnValue_2) == 0x000280, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_LeaveParty_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_DynamicCast_AsFCTGame_Instance_BP_1) == 0x000288, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_DynamicCast_AsFCTGame_Instance_BP_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_DynamicCast_bSuccess_1) == 0x000290, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_IsValid_ReturnValue_3) == 0x000291, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_GetGameUserSettings_ReturnValue) == 0x000298, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_LeaveParty_ReturnValue_3) == 0x0002A0, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_LeaveParty_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_IsValid_ReturnValue_4) == 0x0002A8, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_MakeLiteralText_ReturnValue_4) == 0x0002B0, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_MakeLiteralText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_Event_logInformation) == 0x0002C8, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_Event_logInformation' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_GetSCT_CharacterWidget_CharacterWI) == 0x0002F0, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_GetSCT_CharacterWidget_CharacterWI' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_Event_PossessedPawn) == 0x0002F8, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_Event_PossessedPawn' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_IsActive_ReturnValue) == 0x000300, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_CreateDelegate_OutputDelegate_10) == 0x000304, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_CustomEvent_PlayerState) == 0x000318, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_CustomEvent_PlayerState' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_IsValid_ReturnValue_5) == 0x000320, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_IsActive_ReturnValue_1) == 0x000321, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_IsActive_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_DynamicCast_AsSCTPlayer_State) == 0x000328, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_DynamicCast_AsSCTPlayer_State' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_DynamicCast_bSuccess_2) == 0x000330, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_HasAuthority_ReturnValue) == 0x000331, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_CreateDelegate_OutputDelegate_11) == 0x000334, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_CreateDelegate_OutputDelegate_12) == 0x000344, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_CreateDelegate_OutputDelegate_13) == 0x000354, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_HasAuthority_ReturnValue_1) == 0x000364, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_CreateDelegate_OutputDelegate_14) == 0x000368, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_GetGameInstance_ReturnValue_2) == 0x000378, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_IsXboxPlatform_ReturnValue) == 0x000380, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_IsXboxPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_DynamicCast_AsSCTGame_Instance) == 0x000388, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_DynamicCast_AsSCTGame_Instance' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, K2Node_DynamicCast_bSuccess_3) == 0x000390, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_IsXboxUserLoggedIn_ReturnValue) == 0x000391, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_IsXboxUserLoggedIn_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_LeaveParty_ReturnValue_4) == 0x000398, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_LeaveParty_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP, CallFunc_IsValid_ReturnValue_6) == 0x0003A0, "Member 'SCTPlayerController_WarmupBP_C_ExecuteUbergraph_SCTPlayerController_WarmupBP::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");

// Function SCTPlayerController_WarmupBP.SCTPlayerController_WarmupBP_C.PlayerStateReceivedOnClient
// 0x0008 (0x0008 - 0x0000)
struct SCTPlayerController_WarmupBP_C_PlayerStateReceivedOnClient final
{
public:
	class ASCTPlayerState*                        PlayerState_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerController_WarmupBP_C_PlayerStateReceivedOnClient) == 0x000008, "Wrong alignment on SCTPlayerController_WarmupBP_C_PlayerStateReceivedOnClient");
static_assert(sizeof(SCTPlayerController_WarmupBP_C_PlayerStateReceivedOnClient) == 0x000008, "Wrong size on SCTPlayerController_WarmupBP_C_PlayerStateReceivedOnClient");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_PlayerStateReceivedOnClient, PlayerState_0) == 0x000000, "Member 'SCTPlayerController_WarmupBP_C_PlayerStateReceivedOnClient::PlayerState_0' has a wrong offset!");

// Function SCTPlayerController_WarmupBP.SCTPlayerController_WarmupBP_C.ReceivePossess
// 0x0008 (0x0008 - 0x0000)
struct SCTPlayerController_WarmupBP_C_ReceivePossess final
{
public:
	class APawn*                                  PossessedPawn;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerController_WarmupBP_C_ReceivePossess) == 0x000008, "Wrong alignment on SCTPlayerController_WarmupBP_C_ReceivePossess");
static_assert(sizeof(SCTPlayerController_WarmupBP_C_ReceivePossess) == 0x000008, "Wrong size on SCTPlayerController_WarmupBP_C_ReceivePossess");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_ReceivePossess, PossessedPawn) == 0x000000, "Member 'SCTPlayerController_WarmupBP_C_ReceivePossess::PossessedPawn' has a wrong offset!");

// Function SCTPlayerController_WarmupBP.SCTPlayerController_WarmupBP_C.K2_OnGrantedPassengerLogInformation
// 0x0028 (0x0028 - 0x0000)
struct SCTPlayerController_WarmupBP_C_K2_OnGrantedPassengerLogInformation final
{
public:
	struct FPassengerLogInformation               LogInformation;                                    // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(SCTPlayerController_WarmupBP_C_K2_OnGrantedPassengerLogInformation) == 0x000008, "Wrong alignment on SCTPlayerController_WarmupBP_C_K2_OnGrantedPassengerLogInformation");
static_assert(sizeof(SCTPlayerController_WarmupBP_C_K2_OnGrantedPassengerLogInformation) == 0x000028, "Wrong size on SCTPlayerController_WarmupBP_C_K2_OnGrantedPassengerLogInformation");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_K2_OnGrantedPassengerLogInformation, LogInformation) == 0x000000, "Member 'SCTPlayerController_WarmupBP_C_K2_OnGrantedPassengerLogInformation::LogInformation' has a wrong offset!");

// Function SCTPlayerController_WarmupBP.SCTPlayerController_WarmupBP_C.InpActEvt_Gamepad_FaceButton_Left_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_FaceButton_Left_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_FaceButton_Left_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_FaceButton_Left_K2Node_InputKeyEvent_0");
static_assert(sizeof(SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_FaceButton_Left_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_FaceButton_Left_K2Node_InputKeyEvent_0");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_FaceButton_Left_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_FaceButton_Left_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function SCTPlayerController_WarmupBP.SCTPlayerController_WarmupBP_C.InpActEvt_Gamepad_FaceButton_Right_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_FaceButton_Right_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_FaceButton_Right_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_FaceButton_Right_K2Node_InputKeyEvent_1");
static_assert(sizeof(SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_FaceButton_Right_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_FaceButton_Right_K2Node_InputKeyEvent_1");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_FaceButton_Right_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_FaceButton_Right_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function SCTPlayerController_WarmupBP.SCTPlayerController_WarmupBP_C.InpActEvt_Gamepad_FaceButton_Top_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_FaceButton_Top_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_FaceButton_Top_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_FaceButton_Top_K2Node_InputKeyEvent_2");
static_assert(sizeof(SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_FaceButton_Top_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_FaceButton_Top_K2Node_InputKeyEvent_2");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_FaceButton_Top_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_FaceButton_Top_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function SCTPlayerController_WarmupBP.SCTPlayerController_WarmupBP_C.InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_3");
static_assert(sizeof(SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_3");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function SCTPlayerController_WarmupBP.SCTPlayerController_WarmupBP_C.InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_4
// 0x0018 (0x0018 - 0x0000)
struct SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_4) == 0x000008, "Wrong alignment on SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_4");
static_assert(sizeof(SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_4) == 0x000018, "Wrong size on SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_4");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_4, Key) == 0x000000, "Member 'SCTPlayerController_WarmupBP_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_4::Key' has a wrong offset!");

// Function SCTPlayerController_WarmupBP.SCTPlayerController_WarmupBP_C.InpActEvt_EscapeAMenu_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct SCTPlayerController_WarmupBP_C_InpActEvt_EscapeAMenu_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerController_WarmupBP_C_InpActEvt_EscapeAMenu_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on SCTPlayerController_WarmupBP_C_InpActEvt_EscapeAMenu_K2Node_InputActionEvent_0");
static_assert(sizeof(SCTPlayerController_WarmupBP_C_InpActEvt_EscapeAMenu_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on SCTPlayerController_WarmupBP_C_InpActEvt_EscapeAMenu_K2Node_InputActionEvent_0");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_InpActEvt_EscapeAMenu_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'SCTPlayerController_WarmupBP_C_InpActEvt_EscapeAMenu_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function SCTPlayerController_WarmupBP.SCTPlayerController_WarmupBP_C.InpActEvt_ToggleAllChat_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct SCTPlayerController_WarmupBP_C_InpActEvt_ToggleAllChat_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerController_WarmupBP_C_InpActEvt_ToggleAllChat_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on SCTPlayerController_WarmupBP_C_InpActEvt_ToggleAllChat_K2Node_InputActionEvent_1");
static_assert(sizeof(SCTPlayerController_WarmupBP_C_InpActEvt_ToggleAllChat_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on SCTPlayerController_WarmupBP_C_InpActEvt_ToggleAllChat_K2Node_InputActionEvent_1");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_InpActEvt_ToggleAllChat_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'SCTPlayerController_WarmupBP_C_InpActEvt_ToggleAllChat_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function SCTPlayerController_WarmupBP.SCTPlayerController_WarmupBP_C.InpActEvt_AnyKey_K2Node_InputKeyEvent_5
// 0x0018 (0x0018 - 0x0000)
struct SCTPlayerController_WarmupBP_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerController_WarmupBP_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_5) == 0x000008, "Wrong alignment on SCTPlayerController_WarmupBP_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_5");
static_assert(sizeof(SCTPlayerController_WarmupBP_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_5) == 0x000018, "Wrong size on SCTPlayerController_WarmupBP_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_5");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_5, Key) == 0x000000, "Member 'SCTPlayerController_WarmupBP_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_5::Key' has a wrong offset!");

// Function SCTPlayerController_WarmupBP.SCTPlayerController_WarmupBP_C.SetGameInstanceReference
// 0x0020 (0x0020 - 0x0000)
struct SCTPlayerController_WarmupBP_C_SetGameInstanceReference final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFCTGameInstanceBP_C*                   K2Node_DynamicCast_AsFCTGame_Instance_BP;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SCTPlayerController_WarmupBP_C_SetGameInstanceReference) == 0x000008, "Wrong alignment on SCTPlayerController_WarmupBP_C_SetGameInstanceReference");
static_assert(sizeof(SCTPlayerController_WarmupBP_C_SetGameInstanceReference) == 0x000020, "Wrong size on SCTPlayerController_WarmupBP_C_SetGameInstanceReference");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_SetGameInstanceReference, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'SCTPlayerController_WarmupBP_C_SetGameInstanceReference::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_SetGameInstanceReference, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'SCTPlayerController_WarmupBP_C_SetGameInstanceReference::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_SetGameInstanceReference, K2Node_DynamicCast_AsFCTGame_Instance_BP) == 0x000010, "Member 'SCTPlayerController_WarmupBP_C_SetGameInstanceReference::K2Node_DynamicCast_AsFCTGame_Instance_BP' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_SetGameInstanceReference, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'SCTPlayerController_WarmupBP_C_SetGameInstanceReference::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function SCTPlayerController_WarmupBP.SCTPlayerController_WarmupBP_C.SpawnAndSetTextChatActorObject
// 0x0050 (0x0050 - 0x0000)
struct SCTPlayerController_WarmupBP_C_SpawnAndSetTextChatActorObject final
{
public:
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATextChatActorObject_C*                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerController_WarmupBP_C_SpawnAndSetTextChatActorObject) == 0x000010, "Wrong alignment on SCTPlayerController_WarmupBP_C_SpawnAndSetTextChatActorObject");
static_assert(sizeof(SCTPlayerController_WarmupBP_C_SpawnAndSetTextChatActorObject) == 0x000050, "Wrong size on SCTPlayerController_WarmupBP_C_SpawnAndSetTextChatActorObject");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_SpawnAndSetTextChatActorObject, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000000, "Member 'SCTPlayerController_WarmupBP_C_SpawnAndSetTextChatActorObject::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_SpawnAndSetTextChatActorObject, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'SCTPlayerController_WarmupBP_C_SpawnAndSetTextChatActorObject::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_SpawnAndSetTextChatActorObject, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'SCTPlayerController_WarmupBP_C_SpawnAndSetTextChatActorObject::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_SpawnAndSetTextChatActorObject, CallFunc_FinishSpawningActor_ReturnValue) == 0x000048, "Member 'SCTPlayerController_WarmupBP_C_SpawnAndSetTextChatActorObject::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function SCTPlayerController_WarmupBP.SCTPlayerController_WarmupBP_C.OnRep_bIsPlayerStateAvailableOnClient
// 0x0018 (0x0018 - 0x0000)
struct SCTPlayerController_WarmupBP_C_OnRep_bIsPlayerStateAvailableOnClient final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAccelByteGIS*                          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SCTPlayerController_WarmupBP_C_OnRep_bIsPlayerStateAvailableOnClient) == 0x000008, "Wrong alignment on SCTPlayerController_WarmupBP_C_OnRep_bIsPlayerStateAvailableOnClient");
static_assert(sizeof(SCTPlayerController_WarmupBP_C_OnRep_bIsPlayerStateAvailableOnClient) == 0x000018, "Wrong size on SCTPlayerController_WarmupBP_C_OnRep_bIsPlayerStateAvailableOnClient");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_OnRep_bIsPlayerStateAvailableOnClient, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'SCTPlayerController_WarmupBP_C_OnRep_bIsPlayerStateAvailableOnClient::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_OnRep_bIsPlayerStateAvailableOnClient, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'SCTPlayerController_WarmupBP_C_OnRep_bIsPlayerStateAvailableOnClient::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerController_WarmupBP_C_OnRep_bIsPlayerStateAvailableOnClient, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'SCTPlayerController_WarmupBP_C_OnRep_bIsPlayerStateAvailableOnClient::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

