#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBpSCT

#include "Basic.hpp"

#include "PivotParams_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "E_interactionAnim_structs.hpp"
#include "E_interactionAnimState_structs.hpp"
#include "Stance_structs.hpp"
#include "MovementMode_structs.hpp"
#include "TurnAnims_structs.hpp"
#include "IdleEntryState_structs.hpp"
#include "Gait_structs.hpp"
#include "RPC_Enum_structs.hpp"
#include "MovementDirection_structs.hpp"


namespace SDK::Params
{

// Function AnimBpSCT.AnimBpSCT_C.ExecuteUbergraph_AnimBpSCT
// 0x05F0 (0x05F0 - 0x0000)
struct AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_MontageToPlay;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_InPlayRate;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_InTimeToStartMontageAt;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bStopAllMontages;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_1; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_2; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_3; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_4;            // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_4; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_5; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_5;            // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_6;            // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_6; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_7;            // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_7; // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_8;            // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_9;            // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2; // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_10;           // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_97[0x1];                                       // 0x0097(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_11;           // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_11;       // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_12;           // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_12;       // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_8; // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_9; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_13;           // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_14;           // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6[0x2];                                       // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_10; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_15;           // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_13;       // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_5; // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_16;           // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_14;       // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C7[0x1];                                       // 0x00C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_11; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_17;           // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_6; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_18;           // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_15;       // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_16;       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_17;       // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_18;       // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_19;       // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_20;       // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x00DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_21;       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_22;       // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEnd_ReturnValue; // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_23;       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_19;           // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_24;       // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_25;       // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_26;       // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_27;       // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_28;       // 0x00EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_29;       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_30;       // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue; // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_20;           // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_31;       // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_32;       // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_33;       // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EIdleEntryState                               Temp_byte_Variable;                                // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_34;       // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EIdleEntryState                               Temp_byte_Variable_1;                              // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EIdleEntryState                               Temp_byte_Variable_2;                              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EIdleEntryState                               Temp_byte_Variable_3;                              // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EIdleEntryState                               Temp_byte_Variable_4;                              // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EStance                                       Temp_byte_Variable_5;                              // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0107(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_7; // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_21;           // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_35;       // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_12; // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_22;           // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_36;       // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_8; // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_9; // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_23;           // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_24;           // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_37;       // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_38;       // 0x0127(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_39;       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_13; // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_25;           // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_14; // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_26;           // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue;       // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_142[0x2];                                      // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_15; // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_27;           // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14B[0x1];                                      // 0x014B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_16; // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_28;           // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_152[0x2];                                      // 0x0152(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_17; // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_29;           // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_40;       // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_41;       // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_42;       // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_43;       // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x015F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_44;       // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_162[0x2];                                      // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_18; // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_30;           // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_45;       // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_46;       // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16B[0x1];                                      // 0x016B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_19; // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_31;           // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_32;           // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_172[0x2];                                      // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_20; // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_33;           // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x017B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_4;          // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_1;     // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_4;                // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_5;                // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_47;       // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_5;          // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_48;       // 0x02A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_34;           // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_2;     // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_2;      // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_49;       // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B3[0x1];                                      // 0x02B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_3;     // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_3;      // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_15;                // 0x02BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_16;                // 0x02BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_4;     // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_6;          // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_4;      // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_17;                // 0x02C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_50;       // 0x02C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_10; // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_35;           // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_51;       // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_18;                // 0x02CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_52;       // 0x02CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_53;       // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_19;                // 0x02CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CE[0x2];                                      // 0x02CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_11; // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_36;           // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_5;     // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_5;      // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x02DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_20;                // 0x02DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DF[0x1];                                      // 0x02DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_6;     // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_6;      // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x02E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_21;                // 0x02E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x02E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_7;     // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_7;      // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x02ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_22;                // 0x02EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_7;          // 0x02EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_54;       // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_55;       // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_14;                 // 0x02F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_23;                // 0x02F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_56;       // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_24;                // 0x02F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x02F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F7[0x1];                                      // 0x02F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_8;     // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_25;                // 0x02FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FE[0x2];                                      // 0x02FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_57;       // 0x0305(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0306(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNAND_ReturnValue;                  // 0x0307(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_26;                // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_9;     // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_8;      // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_58;       // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_27;                // 0x0312(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_28;                // 0x0313(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_59;       // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_60;       // 0x0315(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNAND_ReturnValue_1;                // 0x0316(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_317[0x1];                                      // 0x0317(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_10;    // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_9;      // 0x031D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_8;          // 0x031E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x031F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_37;           // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_29;                // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_322[0x2];                                      // 0x0322(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue_2;                        // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_15;                 // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x0329(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_30;                // 0x032A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32B[0x1];                                      // 0x032B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP;              // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x035A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_38;           // 0x035B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_4;         // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_31;                // 0x035D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_32;                // 0x035E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Enable;                               // 0x035F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x0362(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0363(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue_3;                        // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_39;           // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_33;                // 0x036D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36E[0x2];                                      // 0x036E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_3;                          // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_7;                 // 0x038C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x03AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_5;         // 0x03AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_34;                // 0x03AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_40;           // 0x03AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_35;                // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_4;                        // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_6;         // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD[0x3];                                      // 0x03BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_36;                // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_37;                // 0x03C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_38;                // 0x03C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x03C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementDirection                            K2Node_Select_Default_1;                           // 0x03D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_7;         // 0x03D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_41;           // 0x03D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_39;                // 0x03D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_9;          // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_4;          // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DA[0x2];                                      // 0x03DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue_2;                      // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingRootMotion_ReturnValue;          // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTurnAnims                             K2Node_Select_Default_2;                           // 0x03E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTurnAnims                             K2Node_Select_Default_3;                           // 0x03F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTurnAnims                             K2Node_Select_Default_4;                           // 0x0408(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_42;           // 0x041A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_8;         // 0x041B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_40;                // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EIdleEntryState                               K2Node_Event_IdleEntryState;                       // 0x041D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41E[0x2];                                      // 0x041E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Event_TurnInPlaceMontage;                   // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ShouldTurnInPlace;                    // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_TurningInPlace;                       // 0x0429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_TurningRight;                         // 0x042A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42B[0x1];                                      // 0x042B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPivotParams                           K2Node_Event_PivotParameters;                      // 0x042C(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_FaceDown;                             // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_441[0x3];                                      // 0x0441(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PoseName;                             // 0x0444(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGait                                         K2Node_Event_NewGait;                              // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStance                                       K2Node_Event_NewStance;                            // 0x044D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	MovementMode::EMovementMode                   K2Node_Event_NewMovementMode_1;                    // 0x044E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44F[0x1];                                      // 0x044F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default_5;                           // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_61;       // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_459[0x3];                                      // 0x0459(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue_5;                        // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_9;         // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALighter_C*                             K2Node_DynamicCast_AsLighter;                      // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_CreateAnimProp_AnimProp;                  // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALighter_C*                             K2Node_DynamicCast_AsLighter_1;                    // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InputValue_1;                         // 0x0489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48A[0x6];                                      // 0x048A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_CreateAnimProp_AnimProp_1;                // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALifeBuoy_C*                            K2Node_DynamicCast_AsLife_Buoy;                    // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALifeBuoy_C*                            K2Node_DynamicCast_AsLife_Buoy_1;                  // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_5;          // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InputValue;                           // 0x04B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B3[0x1];                                      // 0x04B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_TargetLocation;                       // 0x04B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Direction;                            // 0x04C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_10;         // 0x04D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_10;        // 0x04D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D6[0x2];                                      // 0x04D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1; // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_43;           // 0x04DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DD[0x3];                                      // 0x04DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_CreateAnimProp_AnimProp_2;                // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_41;                // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Aiming;                               // 0x04E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         K2Node_Event_AimType;                              // 0x04EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_EmoteID;                              // 0x04EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERPC_Enum                                     K2Node_Event_RPC;                                  // 0x04EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_EnableRotationOverride;               // 0x04ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EE[0x2];                                      // 0x04EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_Event_Rotation;                             // 0x04F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EIdleEntryState                               K2Node_Select_Default_6;                           // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EIdleEntryState                               K2Node_Select_Default_7;                           // 0x0501(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EIdleEntryState                               K2Node_Select_Default_8;                           // 0x0502(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EIdleEntryState                               K2Node_Select_Default_9;                           // 0x0503(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ToRagdoll;                            // 0x0504(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_505[0x3];                                      // 0x0505(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_OptionalImpulse;                      // 0x0508(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Force;                                // 0x0514(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_515[0x3];                                      // 0x0515(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_CustomEvent_Animation;                      // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_InPlayRate_1;                   // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_InTimeToStartMontageAt_1;       // 0x0524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue; // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue_1; // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ShouldSprint;                         // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_539[0x3];                                      // 0x0539(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x053C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	Engine::EMovementMode                         K2Node_Event_PrevMovementMode;                     // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Engine::EMovementMode                         K2Node_Event_NewMovementMode;                      // 0x05C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_PrevCustomMode;                       // 0x05CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_NewCustomMode;                        // 0x05CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x05D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Event_AddAmount;                            // 0x05DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Abs_ReturnValue_6;                        // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_44;           // 0x05EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT) == 0x000008, "Wrong alignment on AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT");
static_assert(sizeof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT) == 0x0005F0, "Wrong size on AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, EntryPoint) == 0x000000, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::EntryPoint' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_CustomEvent_MontageToPlay) == 0x000008, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_CustomEvent_MontageToPlay' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_CustomEvent_InPlayRate) == 0x000010, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_CustomEvent_InPlayRate' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_CustomEvent_InTimeToStartMontageAt) == 0x000014, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_CustomEvent_InTimeToStartMontageAt' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_CustomEvent_bStopAllMontages) == 0x000018, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_CustomEvent_bStopAllMontages' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Montage_Play_ReturnValue) == 0x00001C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanOR_ReturnValue) == 0x000021, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000022, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000023, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_1) == 0x000025, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000026, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_2) == 0x000027, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000028, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_3) == 0x000029, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x00002A, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanOR_ReturnValue_1) == 0x00002B, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x00002C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakVector_X) == 0x000030, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakVector_Y) == 0x000034, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakVector_Z) == 0x000038, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00003C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x00003D, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x000040, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue) == 0x000044, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Not_PreBool_ReturnValue) == 0x000045, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue) == 0x000048, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x00004D, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_1) == 0x000050, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000054, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_2) == 0x000058, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x00005C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x00005D, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Not_PreBool_ReturnValue_1) == 0x00005E, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_4) == 0x00005F, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanOR_ReturnValue_2) == 0x000060, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanOR_ReturnValue_3) == 0x000061, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_3) == 0x000064, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanOR_ReturnValue_4) == 0x000068, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_4) == 0x000069, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_5) == 0x00006A, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_4) == 0x00006C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_5) == 0x000070, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_5) == 0x000074, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_6) == 0x000075, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_6) == 0x000078, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_7) == 0x00007C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_7) == 0x000080, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_8) == 0x000084, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1) == 0x000088, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_9) == 0x00008C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Not_PreBool_ReturnValue_2) == 0x00008D, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2) == 0x000090, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_10) == 0x000094, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanOR_ReturnValue_5) == 0x000095, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x000096, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3) == 0x000098, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_11) == 0x00009C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_11) == 0x00009D, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4) == 0x0000A0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanOR_ReturnValue_6) == 0x0000A4, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_12) == 0x0000A5, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanOR_ReturnValue_7) == 0x0000A6, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_12) == 0x0000A7, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000A8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_8) == 0x0000AC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_9) == 0x0000B0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_13) == 0x0000B4, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_14) == 0x0000B5, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_10) == 0x0000B8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_15) == 0x0000BC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_13) == 0x0000BD, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_5) == 0x0000C0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000C4, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_16) == 0x0000C5, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_14) == 0x0000C6, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_11) == 0x0000C8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_17) == 0x0000CC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_6) == 0x0000D0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_18) == 0x0000D4, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_15) == 0x0000D5, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Not_PreBool_ReturnValue_4) == 0x0000D6, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanOR_ReturnValue_8) == 0x0000D7, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_16) == 0x0000D8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanOR_ReturnValue_9) == 0x0000D9, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanOR_ReturnValue_10) == 0x0000DA, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_17) == 0x0000DB, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_18) == 0x0000DC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_19) == 0x0000DD, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_20) == 0x0000DE, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0000DF, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_21) == 0x0000E0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_22) == 0x0000E1, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetInstanceAssetPlayerTimeFromEnd_ReturnValue) == 0x0000E4, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetInstanceAssetPlayerTimeFromEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_23) == 0x0000E8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_19) == 0x0000E9, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_24) == 0x0000EA, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_25) == 0x0000EB, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_6) == 0x0000EC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_26) == 0x0000ED, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_27) == 0x0000EE, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_28) == 0x0000EF, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_29) == 0x0000F0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x0000F1, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x0000F2, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_30) == 0x0000F3, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue) == 0x0000F4, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_20) == 0x0000F8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_31) == 0x0000F9, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_32) == 0x0000FA, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_33) == 0x0000FB, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, Temp_byte_Variable) == 0x0000FC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_34) == 0x0000FD, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, Temp_byte_Variable_1) == 0x0000FE, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, Temp_bool_Variable) == 0x0000FF, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, Temp_byte_Variable_2) == 0x000100, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, Temp_bool_Variable_1) == 0x000101, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, Temp_byte_Variable_3) == 0x000102, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, Temp_byte_Variable_4) == 0x000103, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, Temp_bool_Variable_2) == 0x000104, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, Temp_byte_Variable_5) == 0x000105, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, Temp_bool_Variable_3) == 0x000106, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, Temp_bool_Variable_4) == 0x000107, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, Temp_bool_Variable_5) == 0x000108, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, Temp_bool_Variable_6) == 0x000109, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, Temp_bool_Variable_7) == 0x00010A, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, Temp_bool_Variable_8) == 0x00010B, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_7) == 0x00010C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_21) == 0x000110, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000111, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanOR_ReturnValue_11) == 0x000112, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_35) == 0x000113, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_12) == 0x000114, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_22) == 0x000118, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_36) == 0x000119, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_8) == 0x00011C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_9) == 0x000120, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_23) == 0x000124, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_24) == 0x000125, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_37) == 0x000126, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_38) == 0x000127, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_39) == 0x000128, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_13) == 0x00012C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_25) == 0x000130, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_14) == 0x000134, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_26) == 0x000138, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetInstanceStateWeight_ReturnValue) == 0x00013C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetInstanceStateWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000140, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_7) == 0x000141, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_15) == 0x000144, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_8) == 0x000148, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_27) == 0x000149, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanOR_ReturnValue_12) == 0x00014A, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_16) == 0x00014C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_28) == 0x000150, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_9) == 0x000151, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_17) == 0x000154, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_29) == 0x000158, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_40) == 0x000159, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_10) == 0x00015A, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanOR_ReturnValue_13) == 0x00015B, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_41) == 0x00015C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_42) == 0x00015D, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_43) == 0x00015E, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Not_PreBool_ReturnValue_5) == 0x00015F, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_11) == 0x000160, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_44) == 0x000161, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_18) == 0x000164, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_30) == 0x000168, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_45) == 0x000169, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_46) == 0x00016A, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_19) == 0x00016C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_31) == 0x000170, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_32) == 0x000171, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_20) == 0x000174, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_33) == 0x000178, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000179, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00017A, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00017B, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_NotEqual_ByteByte_ReturnValue_4) == 0x00017C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_NotEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetInstanceStateWeight_ReturnValue_1) == 0x000180, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetInstanceStateWeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_MakeVector_ReturnValue) == 0x000184, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000190, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_MakeVector_ReturnValue_1) == 0x000194, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakVector2D_X) == 0x0001A0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakVector2D_Y) == 0x0001A4, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001A8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_12) == 0x0001AC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0001B0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0001B4, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0001B8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_MakeRotator_ReturnValue) == 0x0001BC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_MakeRotator_ReturnValue_1) == 0x0001C8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_MakeRotator_ReturnValue_2) == 0x0001D4, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_MakeRotator_ReturnValue_3) == 0x0001E0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_MakeVector_ReturnValue_2) == 0x0001EC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakVector_X_1) == 0x0001F8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakVector_Y_1) == 0x0001FC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakVector_Z_1) == 0x000200, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakVector_X_2) == 0x000204, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakVector_Y_2) == 0x000208, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakVector_Z_2) == 0x00020C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_MakeVector_ReturnValue_3) == 0x000210, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_MakeVector_ReturnValue_4) == 0x00021C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_MakeRotator_ReturnValue_4) == 0x000228, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_MakeRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_MakeRotator_ReturnValue_5) == 0x000234, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_MakeRotator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakTransform_Location) == 0x000240, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakTransform_Rotation) == 0x00024C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakTransform_Scale) == 0x000258, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakTransform_Location_1) == 0x000264, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakTransform_Rotation_1) == 0x000270, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakTransform_Scale_1) == 0x00027C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_MakeVector_ReturnValue_5) == 0x000288, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_MakeVector_ReturnValue_6) == 0x000294, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_47) == 0x0002A0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_13) == 0x0002A1, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_NotEqual_ByteByte_ReturnValue_5) == 0x0002A2, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_NotEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_48) == 0x0002A3, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Abs_ReturnValue) == 0x0002A4, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_34) == 0x0002A8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetInstanceStateWeight_ReturnValue_2) == 0x0002AC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetInstanceStateWeight_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_FloatFloat_ReturnValue_2) == 0x0002B0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_14) == 0x0002B1, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_49) == 0x0002B2, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetInstanceStateWeight_ReturnValue_3) == 0x0002B4, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetInstanceStateWeight_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_FloatFloat_ReturnValue_3) == 0x0002B8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Not_PreBool_ReturnValue_6) == 0x0002B9, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_15) == 0x0002BA, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_16) == 0x0002BB, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetInstanceStateWeight_ReturnValue_4) == 0x0002BC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetInstanceStateWeight_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_NotEqual_ByteByte_ReturnValue_6) == 0x0002C0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_NotEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_FloatFloat_ReturnValue_4) == 0x0002C1, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_17) == 0x0002C2, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_50) == 0x0002C3, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_10) == 0x0002C4, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_35) == 0x0002C8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_51) == 0x0002C9, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_18) == 0x0002CA, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_52) == 0x0002CB, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_52' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_53) == 0x0002CC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_53' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_19) == 0x0002CD, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_11) == 0x0002D0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_36) == 0x0002D4, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetInstanceStateWeight_ReturnValue_5) == 0x0002D8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetInstanceStateWeight_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_FloatFloat_ReturnValue_5) == 0x0002DC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Not_PreBool_ReturnValue_7) == 0x0002DD, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_20) == 0x0002DE, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetInstanceStateWeight_ReturnValue_6) == 0x0002E0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetInstanceStateWeight_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_FloatFloat_ReturnValue_6) == 0x0002E4, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Not_PreBool_ReturnValue_8) == 0x0002E5, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_21) == 0x0002E6, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Not_PreBool_ReturnValue_9) == 0x0002E7, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetInstanceStateWeight_ReturnValue_7) == 0x0002E8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetInstanceStateWeight_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_FloatFloat_ReturnValue_7) == 0x0002EC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Not_PreBool_ReturnValue_10) == 0x0002ED, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_22) == 0x0002EE, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_NotEqual_ByteByte_ReturnValue_7) == 0x0002EF, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_NotEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_54) == 0x0002F0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_54' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_55) == 0x0002F1, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_55' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanOR_ReturnValue_14) == 0x0002F2, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanOR_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_23) == 0x0002F3, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_56) == 0x0002F4, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_56' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_24) == 0x0002F5, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Not_PreBool_ReturnValue_11) == 0x0002F6, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetInstanceStateWeight_ReturnValue_8) == 0x0002F8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetInstanceStateWeight_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x0002FC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_25) == 0x0002FD, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Abs_ReturnValue_1) == 0x000300, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000304, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_57) == 0x000305, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_57' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000306, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanNAND_ReturnValue) == 0x000307, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanNAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_26) == 0x000308, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetInstanceStateWeight_ReturnValue_9) == 0x00030C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetInstanceStateWeight_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_FloatFloat_ReturnValue_8) == 0x000310, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_58) == 0x000311, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_58' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_27) == 0x000312, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_28) == 0x000313, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_59) == 0x000314, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_59' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_60) == 0x000315, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_60' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanNAND_ReturnValue_1) == 0x000316, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanNAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetInstanceStateWeight_ReturnValue_10) == 0x000318, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetInstanceStateWeight_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Not_PreBool_ReturnValue_12) == 0x00031C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_FloatFloat_ReturnValue_9) == 0x00031D, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_NotEqual_ByteByte_ReturnValue_8) == 0x00031E, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_NotEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Not_PreBool_ReturnValue_13) == 0x00031F, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_37) == 0x000320, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_29) == 0x000321, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Abs_ReturnValue_2) == 0x000324, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanOR_ReturnValue_15) == 0x000328, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanOR_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x000329, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_30) == 0x00032A, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_DeltaTimeX) == 0x00032C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000330, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x000338, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_DynamicCast_AsCharacter) == 0x000340, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_DynamicCast_bSuccess) == 0x000348, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_DynamicCast_AsCharacter_SCTBP) == 0x000350, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_DynamicCast_AsCharacter_SCTBP' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_DynamicCast_bSuccess_1) == 0x000358, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_IsValid_ReturnValue) == 0x000359, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_IsDedicatedServer_ReturnValue) == 0x00035A, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_38) == 0x00035B, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Greater_FloatFloat_ReturnValue_4) == 0x00035C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Greater_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_31) == 0x00035D, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_32) == 0x00035E, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_Enable) == 0x00035F, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_Enable' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000360, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000361, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x000362, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_SwitchEnum_CmpSuccess) == 0x000363, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_SwitchEnum_CmpSuccess_1) == 0x000364, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Abs_ReturnValue_3) == 0x000368, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_39) == 0x00036C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_33) == 0x00036D, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakVector_X_3) == 0x000370, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakVector_Y_3) == 0x000374, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakVector_Z_3) == 0x000378, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakVector_X_4) == 0x00037C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakVector_Y_4) == 0x000380, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakVector_Z_4) == 0x000384, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000388, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_MakeVector_ReturnValue_7) == 0x00038C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_MakeVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_VSize_ReturnValue) == 0x000398, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetFloatValue_ReturnValue) == 0x00039C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakVector_X_5) == 0x0003A0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakVector_Y_5) == 0x0003A4, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakVector_Z_5) == 0x0003A8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0003AC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Greater_FloatFloat_ReturnValue_5) == 0x0003AD, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Greater_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_34) == 0x0003AE, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_40) == 0x0003AF, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_35) == 0x0003B0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0003B4, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Abs_ReturnValue_4) == 0x0003B8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Abs_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Greater_FloatFloat_ReturnValue_6) == 0x0003BC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Greater_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_RandomFloatInRange_ReturnValue) == 0x0003C0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_36) == 0x0003C4, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_37) == 0x0003C5, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_38) == 0x0003C6, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x0003C7, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_VSize_ReturnValue_1) == 0x0003C8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_MapRangeClamped_ReturnValue) == 0x0003CC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Select_Default) == 0x0003D0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Select_Default_1) == 0x0003D4, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Greater_FloatFloat_ReturnValue_7) == 0x0003D5, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Greater_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_41) == 0x0003D6, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_39) == 0x0003D7, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_NotEqual_ByteByte_ReturnValue_9) == 0x0003D8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_NotEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_IsDedicatedServer_ReturnValue_4) == 0x0003D9, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_IsDedicatedServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_VSize_ReturnValue_2) == 0x0003DC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_IsPlayingRootMotion_ReturnValue) == 0x0003E0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_IsPlayingRootMotion_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Select_Default_2) == 0x0003E8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Select_Default_3) == 0x0003F8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Select_Default_4) == 0x000408, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_SwitchEnum_CmpSuccess_2) == 0x000418, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_SwitchEnum_CmpSuccess_3) == 0x000419, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_42) == 0x00041A, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Greater_FloatFloat_ReturnValue_8) == 0x00041B, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Greater_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_40) == 0x00041C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_IdleEntryState) == 0x00041D, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_IdleEntryState' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_TurnInPlaceMontage) == 0x000420, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_TurnInPlaceMontage' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_ShouldTurnInPlace) == 0x000428, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_ShouldTurnInPlace' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_TurningInPlace) == 0x000429, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_TurningInPlace' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_TurningRight) == 0x00042A, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_TurningRight' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_PivotParameters) == 0x00042C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_PivotParameters' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_FaceDown) == 0x000440, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_FaceDown' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_PoseName) == 0x000444, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_PoseName' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_NewGait) == 0x00044C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_NewGait' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_NewStance) == 0x00044D, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_NewStance' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_NewMovementMode_1) == 0x00044E, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_NewMovementMode_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Select_Default_5) == 0x000450, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_EqualEqual_ByteByte_ReturnValue_61) == 0x000458, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_EqualEqual_ByteByte_ReturnValue_61' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Abs_ReturnValue_5) == 0x00045C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Abs_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Greater_FloatFloat_ReturnValue_9) == 0x000460, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Greater_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_DynamicCast_AsLighter) == 0x000468, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_DynamicCast_AsLighter' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_DynamicCast_bSuccess_2) == 0x000470, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_CreateAnimProp_AnimProp) == 0x000478, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_CreateAnimProp_AnimProp' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_DynamicCast_AsLighter_1) == 0x000480, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_DynamicCast_AsLighter_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_DynamicCast_bSuccess_3) == 0x000488, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_InputValue_1) == 0x000489, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_InputValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_CreateAnimProp_AnimProp_1) == 0x000490, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_CreateAnimProp_AnimProp_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_DynamicCast_AsLife_Buoy) == 0x000498, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_DynamicCast_AsLife_Buoy' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_DynamicCast_bSuccess_4) == 0x0004A0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_DynamicCast_AsLife_Buoy_1) == 0x0004A8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_DynamicCast_AsLife_Buoy_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_DynamicCast_bSuccess_5) == 0x0004B0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_IsDedicatedServer_ReturnValue_5) == 0x0004B1, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_IsDedicatedServer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_InputValue) == 0x0004B2, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_InputValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_TargetLocation) == 0x0004B4, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_TargetLocation' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_Direction) == 0x0004C0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_Direction' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakVector2D_X_1) == 0x0004CC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BreakVector2D_Y_1) == 0x0004D0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_NotEqual_ByteByte_ReturnValue_10) == 0x0004D4, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_NotEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Greater_FloatFloat_ReturnValue_10) == 0x0004D5, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Greater_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1) == 0x0004D8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_43) == 0x0004DC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_CreateAnimProp_AnimProp_2) == 0x0004E0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_CreateAnimProp_AnimProp_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_BooleanAND_ReturnValue_41) == 0x0004E8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_BooleanAND_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_Aiming) == 0x0004E9, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_Aiming' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_AimType) == 0x0004EA, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_AimType' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_EmoteID) == 0x0004EB, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_EmoteID' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_RPC) == 0x0004EC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_RPC' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_EnableRotationOverride) == 0x0004ED, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_EnableRotationOverride' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_Rotation) == 0x0004F0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_Rotation' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0004FC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Select_Default_6) == 0x000500, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Select_Default_7) == 0x000501, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Select_Default_8) == 0x000502, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Select_Default_9) == 0x000503, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_ToRagdoll) == 0x000504, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_ToRagdoll' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_OptionalImpulse) == 0x000508, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_OptionalImpulse' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_Force) == 0x000514, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_Force' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_CustomEvent_Animation) == 0x000518, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_CustomEvent_Animation' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_CustomEvent_InPlayRate_1) == 0x000520, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_CustomEvent_InPlayRate_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_CustomEvent_InTimeToStartMontageAt_1) == 0x000524, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_CustomEvent_InTimeToStartMontageAt_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue) == 0x000528, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue_1) == 0x000530, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_ShouldSprint) == 0x000538, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_ShouldSprint' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_Hit) == 0x00053C, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_PrevMovementMode) == 0x0005C8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_PrevMovementMode' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_NewMovementMode) == 0x0005C9, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_NewMovementMode' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_PrevCustomMode) == 0x0005CA, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_PrevCustomMode' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_NewCustomMode) == 0x0005CB, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_NewCustomMode' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetCurveValue_ReturnValue) == 0x0005CC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_GetCurveValue_ReturnValue_1) == 0x0005D0, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_MakeVector2D_ReturnValue) == 0x0005D4, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, K2Node_Event_AddAmount) == 0x0005DC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::K2Node_Event_AddAmount' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Abs_ReturnValue_6) == 0x0005E8, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Abs_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT, CallFunc_Less_FloatFloat_ReturnValue_44) == 0x0005EC, "Member 'AnimBpSCT_C_ExecuteUbergraph_AnimBpSCT::CallFunc_Less_FloatFloat_ReturnValue_44' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.PlayMontage(Networked)
// 0x0018 (0x0018 - 0x0000)
struct AnimBpSCT_C_PlayMontage_Networked_ final
{
public:
	class UAnimMontage*                           MontageToPlay;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InPlayRate;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InTimeToStartMontageAt;                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStopAllMontages;                                  // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBpSCT_C_PlayMontage_Networked_) == 0x000008, "Wrong alignment on AnimBpSCT_C_PlayMontage_Networked_");
static_assert(sizeof(AnimBpSCT_C_PlayMontage_Networked_) == 0x000018, "Wrong size on AnimBpSCT_C_PlayMontage_Networked_");
static_assert(offsetof(AnimBpSCT_C_PlayMontage_Networked_, MontageToPlay) == 0x000000, "Member 'AnimBpSCT_C_PlayMontage_Networked_::MontageToPlay' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_PlayMontage_Networked_, InPlayRate) == 0x000008, "Member 'AnimBpSCT_C_PlayMontage_Networked_::InPlayRate' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_PlayMontage_Networked_, InTimeToStartMontageAt) == 0x00000C, "Member 'AnimBpSCT_C_PlayMontage_Networked_::InTimeToStartMontageAt' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_PlayMontage_Networked_, bStopAllMontages) == 0x000010, "Member 'AnimBpSCT_C_PlayMontage_Networked_::bStopAllMontages' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.AddCharacterRotationBPI
// 0x000C (0x000C - 0x0000)
struct AnimBpSCT_C_AddCharacterRotationBPI final
{
public:
	struct FRotator                               AddAmount;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBpSCT_C_AddCharacterRotationBPI) == 0x000004, "Wrong alignment on AnimBpSCT_C_AddCharacterRotationBPI");
static_assert(sizeof(AnimBpSCT_C_AddCharacterRotationBPI) == 0x00000C, "Wrong size on AnimBpSCT_C_AddCharacterRotationBPI");
static_assert(offsetof(AnimBpSCT_C_AddCharacterRotationBPI, AddAmount) == 0x000000, "Member 'AnimBpSCT_C_AddCharacterRotationBPI::AddAmount' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.MovementModeChangedBPI
// 0x0004 (0x0004 - 0x0000)
struct AnimBpSCT_C_MovementModeChangedBPI final
{
public:
	Engine::EMovementMode                         PrevMovementMode_0;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Engine::EMovementMode                         NewMovementMode;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PrevCustomMode;                                    // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         NewCustomMode;                                     // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_MovementModeChangedBPI) == 0x000001, "Wrong alignment on AnimBpSCT_C_MovementModeChangedBPI");
static_assert(sizeof(AnimBpSCT_C_MovementModeChangedBPI) == 0x000004, "Wrong size on AnimBpSCT_C_MovementModeChangedBPI");
static_assert(offsetof(AnimBpSCT_C_MovementModeChangedBPI, PrevMovementMode_0) == 0x000000, "Member 'AnimBpSCT_C_MovementModeChangedBPI::PrevMovementMode_0' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_MovementModeChangedBPI, NewMovementMode) == 0x000001, "Member 'AnimBpSCT_C_MovementModeChangedBPI::NewMovementMode' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_MovementModeChangedBPI, PrevCustomMode) == 0x000002, "Member 'AnimBpSCT_C_MovementModeChangedBPI::PrevCustomMode' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_MovementModeChangedBPI, NewCustomMode) == 0x000003, "Member 'AnimBpSCT_C_MovementModeChangedBPI::NewCustomMode' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.LandedBPI
// 0x008C (0x008C - 0x0000)
struct AnimBpSCT_C_LandedBPI final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x008C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AnimBpSCT_C_LandedBPI) == 0x000004, "Wrong alignment on AnimBpSCT_C_LandedBPI");
static_assert(sizeof(AnimBpSCT_C_LandedBPI) == 0x00008C, "Wrong size on AnimBpSCT_C_LandedBPI");
static_assert(offsetof(AnimBpSCT_C_LandedBPI, Hit) == 0x000000, "Member 'AnimBpSCT_C_LandedBPI::Hit' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.ShouldSprintBPI
// 0x0001 (0x0001 - 0x0000)
struct AnimBpSCT_C_ShouldSprintBPI final
{
public:
	bool                                          ShouldSprint;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBpSCT_C_ShouldSprintBPI) == 0x000001, "Wrong alignment on AnimBpSCT_C_ShouldSprintBPI");
static_assert(sizeof(AnimBpSCT_C_ShouldSprintBPI) == 0x000001, "Wrong size on AnimBpSCT_C_ShouldSprintBPI");
static_assert(offsetof(AnimBpSCT_C_ShouldSprintBPI, ShouldSprint) == 0x000000, "Member 'AnimBpSCT_C_ShouldSprintBPI::ShouldSprint' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.IdleTransition
// 0x0010 (0x0010 - 0x0000)
struct AnimBpSCT_C_IdleTransition final
{
public:
	class UAnimSequenceBase*                      Animation;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InPlayRate;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InTimeToStartMontageAt;                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_IdleTransition) == 0x000008, "Wrong alignment on AnimBpSCT_C_IdleTransition");
static_assert(sizeof(AnimBpSCT_C_IdleTransition) == 0x000010, "Wrong size on AnimBpSCT_C_IdleTransition");
static_assert(offsetof(AnimBpSCT_C_IdleTransition, Animation) == 0x000000, "Member 'AnimBpSCT_C_IdleTransition::Animation' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_IdleTransition, InPlayRate) == 0x000008, "Member 'AnimBpSCT_C_IdleTransition::InPlayRate' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_IdleTransition, InTimeToStartMontageAt) == 0x00000C, "Member 'AnimBpSCT_C_IdleTransition::InTimeToStartMontageAt' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.ToRagdollBPI
// 0x0014 (0x0014 - 0x0000)
struct AnimBpSCT_C_ToRagdollBPI final
{
public:
	bool                                          ToRagdoll;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OptionalImpulse;                                   // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Force;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBpSCT_C_ToRagdollBPI) == 0x000004, "Wrong alignment on AnimBpSCT_C_ToRagdollBPI");
static_assert(sizeof(AnimBpSCT_C_ToRagdollBPI) == 0x000014, "Wrong size on AnimBpSCT_C_ToRagdollBPI");
static_assert(offsetof(AnimBpSCT_C_ToRagdollBPI, ToRagdoll) == 0x000000, "Member 'AnimBpSCT_C_ToRagdollBPI::ToRagdoll' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ToRagdollBPI, OptionalImpulse) == 0x000004, "Member 'AnimBpSCT_C_ToRagdollBPI::OptionalImpulse' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_ToRagdollBPI, Force) == 0x000010, "Member 'AnimBpSCT_C_ToRagdollBPI::Force' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.SetCharacterRotationBPI
// 0x0010 (0x0010 - 0x0000)
struct AnimBpSCT_C_SetCharacterRotationBPI final
{
public:
	ERPC_Enum                                     RPC;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableRotationOverride;                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rotation;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBpSCT_C_SetCharacterRotationBPI) == 0x000004, "Wrong alignment on AnimBpSCT_C_SetCharacterRotationBPI");
static_assert(sizeof(AnimBpSCT_C_SetCharacterRotationBPI) == 0x000010, "Wrong size on AnimBpSCT_C_SetCharacterRotationBPI");
static_assert(offsetof(AnimBpSCT_C_SetCharacterRotationBPI, RPC) == 0x000000, "Member 'AnimBpSCT_C_SetCharacterRotationBPI::RPC' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_SetCharacterRotationBPI, EnableRotationOverride) == 0x000001, "Member 'AnimBpSCT_C_SetCharacterRotationBPI::EnableRotationOverride' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_SetCharacterRotationBPI, Rotation) == 0x000004, "Member 'AnimBpSCT_C_SetCharacterRotationBPI::Rotation' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.PlayEmoteBPI
// 0x0001 (0x0001 - 0x0000)
struct AnimBpSCT_C_PlayEmoteBPI final
{
public:
	uint8                                         EmoteID;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_PlayEmoteBPI) == 0x000001, "Wrong alignment on AnimBpSCT_C_PlayEmoteBPI");
static_assert(sizeof(AnimBpSCT_C_PlayEmoteBPI) == 0x000001, "Wrong size on AnimBpSCT_C_PlayEmoteBPI");
static_assert(offsetof(AnimBpSCT_C_PlayEmoteBPI, EmoteID) == 0x000000, "Member 'AnimBpSCT_C_PlayEmoteBPI::EmoteID' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.SetAimingBPI
// 0x0002 (0x0002 - 0x0000)
struct AnimBpSCT_C_SetAimingBPI final
{
public:
	bool                                          Aiming_0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         AimType_0;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_SetAimingBPI) == 0x000001, "Wrong alignment on AnimBpSCT_C_SetAimingBPI");
static_assert(sizeof(AnimBpSCT_C_SetAimingBPI) == 0x000002, "Wrong size on AnimBpSCT_C_SetAimingBPI");
static_assert(offsetof(AnimBpSCT_C_SetAimingBPI, Aiming_0) == 0x000000, "Member 'AnimBpSCT_C_SetAimingBPI::Aiming_0' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_SetAimingBPI, AimType_0) == 0x000001, "Member 'AnimBpSCT_C_SetAimingBPI::AimType_0' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.LaunchRagdollBPI
// 0x0018 (0x0018 - 0x0000)
struct AnimBpSCT_C_LaunchRagdollBPI final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction_0;                                       // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_LaunchRagdollBPI) == 0x000004, "Wrong alignment on AnimBpSCT_C_LaunchRagdollBPI");
static_assert(sizeof(AnimBpSCT_C_LaunchRagdollBPI) == 0x000018, "Wrong size on AnimBpSCT_C_LaunchRagdollBPI");
static_assert(offsetof(AnimBpSCT_C_LaunchRagdollBPI, TargetLocation) == 0x000000, "Member 'AnimBpSCT_C_LaunchRagdollBPI::TargetLocation' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_LaunchRagdollBPI, Direction_0) == 0x00000C, "Member 'AnimBpSCT_C_LaunchRagdollBPI::Direction_0' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.BeingCarriedCorpseBPI
// 0x0001 (0x0001 - 0x0000)
struct AnimBpSCT_C_BeingCarriedCorpseBPI final
{
public:
	bool                                          InputValue;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBpSCT_C_BeingCarriedCorpseBPI) == 0x000001, "Wrong alignment on AnimBpSCT_C_BeingCarriedCorpseBPI");
static_assert(sizeof(AnimBpSCT_C_BeingCarriedCorpseBPI) == 0x000001, "Wrong size on AnimBpSCT_C_BeingCarriedCorpseBPI");
static_assert(offsetof(AnimBpSCT_C_BeingCarriedCorpseBPI, InputValue) == 0x000000, "Member 'AnimBpSCT_C_BeingCarriedCorpseBPI::InputValue' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.CarryingCorpseBPI
// 0x0001 (0x0001 - 0x0000)
struct AnimBpSCT_C_CarryingCorpseBPI final
{
public:
	bool                                          InputValue;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBpSCT_C_CarryingCorpseBPI) == 0x000001, "Wrong alignment on AnimBpSCT_C_CarryingCorpseBPI");
static_assert(sizeof(AnimBpSCT_C_CarryingCorpseBPI) == 0x000001, "Wrong size on AnimBpSCT_C_CarryingCorpseBPI");
static_assert(offsetof(AnimBpSCT_C_CarryingCorpseBPI, InputValue) == 0x000000, "Member 'AnimBpSCT_C_CarryingCorpseBPI::InputValue' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.SetMovementModeBPI
// 0x0001 (0x0001 - 0x0000)
struct AnimBpSCT_C_SetMovementModeBPI final
{
public:
	MovementMode::EMovementMode                   NewMovementMode;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_SetMovementModeBPI) == 0x000001, "Wrong alignment on AnimBpSCT_C_SetMovementModeBPI");
static_assert(sizeof(AnimBpSCT_C_SetMovementModeBPI) == 0x000001, "Wrong size on AnimBpSCT_C_SetMovementModeBPI");
static_assert(offsetof(AnimBpSCT_C_SetMovementModeBPI, NewMovementMode) == 0x000000, "Member 'AnimBpSCT_C_SetMovementModeBPI::NewMovementMode' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.SetStanceBPI
// 0x0001 (0x0001 - 0x0000)
struct AnimBpSCT_C_SetStanceBPI final
{
public:
	EStance                                       NewStance;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_SetStanceBPI) == 0x000001, "Wrong alignment on AnimBpSCT_C_SetStanceBPI");
static_assert(sizeof(AnimBpSCT_C_SetStanceBPI) == 0x000001, "Wrong size on AnimBpSCT_C_SetStanceBPI");
static_assert(offsetof(AnimBpSCT_C_SetStanceBPI, NewStance) == 0x000000, "Member 'AnimBpSCT_C_SetStanceBPI::NewStance' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.SetGaitBPI
// 0x0001 (0x0001 - 0x0000)
struct AnimBpSCT_C_SetGaitBPI final
{
public:
	EGait                                         NewGait;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_SetGaitBPI) == 0x000001, "Wrong alignment on AnimBpSCT_C_SetGaitBPI");
static_assert(sizeof(AnimBpSCT_C_SetGaitBPI) == 0x000001, "Wrong size on AnimBpSCT_C_SetGaitBPI");
static_assert(offsetof(AnimBpSCT_C_SetGaitBPI, NewGait) == 0x000000, "Member 'AnimBpSCT_C_SetGaitBPI::NewGait' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.SavePoseSnapshotBPI
// 0x0008 (0x0008 - 0x0000)
struct AnimBpSCT_C_SavePoseSnapshotBPI final
{
public:
	class FName                                   PoseName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_SavePoseSnapshotBPI) == 0x000004, "Wrong alignment on AnimBpSCT_C_SavePoseSnapshotBPI");
static_assert(sizeof(AnimBpSCT_C_SavePoseSnapshotBPI) == 0x000008, "Wrong size on AnimBpSCT_C_SavePoseSnapshotBPI");
static_assert(offsetof(AnimBpSCT_C_SavePoseSnapshotBPI, PoseName) == 0x000000, "Member 'AnimBpSCT_C_SavePoseSnapshotBPI::PoseName' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.PlayGetUpAnimBPI
// 0x0001 (0x0001 - 0x0000)
struct AnimBpSCT_C_PlayGetUpAnimBPI final
{
public:
	bool                                          FaceDown;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBpSCT_C_PlayGetUpAnimBPI) == 0x000001, "Wrong alignment on AnimBpSCT_C_PlayGetUpAnimBPI");
static_assert(sizeof(AnimBpSCT_C_PlayGetUpAnimBPI) == 0x000001, "Wrong size on AnimBpSCT_C_PlayGetUpAnimBPI");
static_assert(offsetof(AnimBpSCT_C_PlayGetUpAnimBPI, FaceDown) == 0x000000, "Member 'AnimBpSCT_C_PlayGetUpAnimBPI::FaceDown' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.AnimNotifyPivotBPI
// 0x0014 (0x0014 - 0x0000)
struct AnimBpSCT_C_AnimNotifyPivotBPI final
{
public:
	struct FPivotParams                           PivotParameters;                                   // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_AnimNotifyPivotBPI) == 0x000004, "Wrong alignment on AnimBpSCT_C_AnimNotifyPivotBPI");
static_assert(sizeof(AnimBpSCT_C_AnimNotifyPivotBPI) == 0x000014, "Wrong size on AnimBpSCT_C_AnimNotifyPivotBPI");
static_assert(offsetof(AnimBpSCT_C_AnimNotifyPivotBPI, PivotParameters) == 0x000000, "Member 'AnimBpSCT_C_AnimNotifyPivotBPI::PivotParameters' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.AnimNotifyTurnInPlaceBPI
// 0x0010 (0x0010 - 0x0000)
struct AnimBpSCT_C_AnimNotifyTurnInPlaceBPI final
{
public:
	class UAnimMontage*                           TurnInPlaceMontage;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldTurnInPlace_0;                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TurningInPlace_0;                                  // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TurningRight_0;                                    // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBpSCT_C_AnimNotifyTurnInPlaceBPI) == 0x000008, "Wrong alignment on AnimBpSCT_C_AnimNotifyTurnInPlaceBPI");
static_assert(sizeof(AnimBpSCT_C_AnimNotifyTurnInPlaceBPI) == 0x000010, "Wrong size on AnimBpSCT_C_AnimNotifyTurnInPlaceBPI");
static_assert(offsetof(AnimBpSCT_C_AnimNotifyTurnInPlaceBPI, TurnInPlaceMontage) == 0x000000, "Member 'AnimBpSCT_C_AnimNotifyTurnInPlaceBPI::TurnInPlaceMontage' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_AnimNotifyTurnInPlaceBPI, ShouldTurnInPlace_0) == 0x000008, "Member 'AnimBpSCT_C_AnimNotifyTurnInPlaceBPI::ShouldTurnInPlace_0' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_AnimNotifyTurnInPlaceBPI, TurningInPlace_0) == 0x000009, "Member 'AnimBpSCT_C_AnimNotifyTurnInPlaceBPI::TurningInPlace_0' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_AnimNotifyTurnInPlaceBPI, TurningRight_0) == 0x00000A, "Member 'AnimBpSCT_C_AnimNotifyTurnInPlaceBPI::TurningRight_0' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.AnimNotifyIdleEntryStateBPI
// 0x0001 (0x0001 - 0x0000)
struct AnimBpSCT_C_AnimNotifyIdleEntryStateBPI final
{
public:
	EIdleEntryState                               IdleEntryState_0;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_AnimNotifyIdleEntryStateBPI) == 0x000001, "Wrong alignment on AnimBpSCT_C_AnimNotifyIdleEntryStateBPI");
static_assert(sizeof(AnimBpSCT_C_AnimNotifyIdleEntryStateBPI) == 0x000001, "Wrong size on AnimBpSCT_C_AnimNotifyIdleEntryStateBPI");
static_assert(offsetof(AnimBpSCT_C_AnimNotifyIdleEntryStateBPI, IdleEntryState_0) == 0x000000, "Member 'AnimBpSCT_C_AnimNotifyIdleEntryStateBPI::IdleEntryState_0' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.EnableIKandAimOffsetBPI
// 0x0001 (0x0001 - 0x0000)
struct AnimBpSCT_C_EnableIKandAimOffsetBPI final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBpSCT_C_EnableIKandAimOffsetBPI) == 0x000001, "Wrong alignment on AnimBpSCT_C_EnableIKandAimOffsetBPI");
static_assert(sizeof(AnimBpSCT_C_EnableIKandAimOffsetBPI) == 0x000001, "Wrong size on AnimBpSCT_C_EnableIKandAimOffsetBPI");
static_assert(offsetof(AnimBpSCT_C_EnableIKandAimOffsetBPI, Enable) == 0x000000, "Member 'AnimBpSCT_C_EnableIKandAimOffsetBPI::Enable' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct AnimBpSCT_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on AnimBpSCT_C_BlueprintUpdateAnimation");
static_assert(sizeof(AnimBpSCT_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on AnimBpSCT_C_BlueprintUpdateAnimation");
static_assert(offsetof(AnimBpSCT_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'AnimBpSCT_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.CalculateMovementDirection
// 0x0028 (0x0028 - 0x0000)
struct AnimBpSCT_C_CalculateMovementDirection final
{
public:
	float                                         DirectionThresholdMin;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DirectionThresholdMax;                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Buffer;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewLocalVar_0;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_1;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBpSCT_C_CalculateMovementDirection) == 0x000004, "Wrong alignment on AnimBpSCT_C_CalculateMovementDirection");
static_assert(sizeof(AnimBpSCT_C_CalculateMovementDirection) == 0x000028, "Wrong size on AnimBpSCT_C_CalculateMovementDirection");
static_assert(offsetof(AnimBpSCT_C_CalculateMovementDirection, DirectionThresholdMin) == 0x000000, "Member 'AnimBpSCT_C_CalculateMovementDirection::DirectionThresholdMin' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateMovementDirection, DirectionThresholdMax) == 0x000004, "Member 'AnimBpSCT_C_CalculateMovementDirection::DirectionThresholdMax' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateMovementDirection, Buffer) == 0x000008, "Member 'AnimBpSCT_C_CalculateMovementDirection::Buffer' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateMovementDirection, NewLocalVar_0) == 0x00000C, "Member 'AnimBpSCT_C_CalculateMovementDirection::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateMovementDirection, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'AnimBpSCT_C_CalculateMovementDirection::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateMovementDirection, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'AnimBpSCT_C_CalculateMovementDirection::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateMovementDirection, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000018, "Member 'AnimBpSCT_C_CalculateMovementDirection::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateMovementDirection, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'AnimBpSCT_C_CalculateMovementDirection::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateMovementDirection, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000020, "Member 'AnimBpSCT_C_CalculateMovementDirection::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateMovementDirection, CallFunc_InRange_FloatFloat_ReturnValue_1) == 0x000021, "Member 'AnimBpSCT_C_CalculateMovementDirection::CallFunc_InRange_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateMovementDirection, Temp_bool_Variable) == 0x000022, "Member 'AnimBpSCT_C_CalculateMovementDirection::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateMovementDirection, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000023, "Member 'AnimBpSCT_C_CalculateMovementDirection::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateMovementDirection, K2Node_Select_Default) == 0x000024, "Member 'AnimBpSCT_C_CalculateMovementDirection::K2Node_Select_Default' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.CalculateGroundedLeaningValues
// 0x008C (0x008C - 0x0000)
struct AnimBpSCT_C_CalculateGroundedLeaningValues final
{
public:
	float                                         LeanAcceleration;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeanRotation;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxAcceleration_ReturnValue;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_2;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_4;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_CalculateGroundedLeaningValues) == 0x000004, "Wrong alignment on AnimBpSCT_C_CalculateGroundedLeaningValues");
static_assert(sizeof(AnimBpSCT_C_CalculateGroundedLeaningValues) == 0x00008C, "Wrong size on AnimBpSCT_C_CalculateGroundedLeaningValues");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, LeanAcceleration) == 0x000000, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::LeanAcceleration' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, LeanRotation) == 0x000004, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::LeanRotation' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_MakeVector_ReturnValue) == 0x00000C, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_GetMaxAcceleration_ReturnValue) == 0x000018, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_GetMaxAcceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_RotateAngleAxis_ReturnValue) == 0x00001C, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000028, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_BreakVector_X) == 0x00002C, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_BreakVector_Y) == 0x000030, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_BreakVector_Z) == 0x000034, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_MakeVector2D_ReturnValue) == 0x000038, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000040, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_Abs_ReturnValue) == 0x000044, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000048, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_MapRangeClamped_ReturnValue_2) == 0x00004C, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000050, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000054, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00005C, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000060, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000064, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_MapRangeClamped_ReturnValue_4) == 0x000068, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00006C, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000070, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_BreakRotator_Roll) == 0x00007C, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_BreakRotator_Pitch) == 0x000080, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_BreakRotator_Yaw) == 0x000084, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGroundedLeaningValues, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000088, "Member 'AnimBpSCT_C_CalculateGroundedLeaningValues::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.CalculateAimOffset
// 0x0040 (0x0040 - 0x0000)
struct AnimBpSCT_C_CalculateAimOffset final
{
public:
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Vector2DInterpTo_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_CalculateAimOffset) == 0x000004, "Wrong alignment on AnimBpSCT_C_CalculateAimOffset");
static_assert(sizeof(AnimBpSCT_C_CalculateAimOffset) == 0x000040, "Wrong size on AnimBpSCT_C_CalculateAimOffset");
static_assert(offsetof(AnimBpSCT_C_CalculateAimOffset, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'AnimBpSCT_C_CalculateAimOffset::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateAimOffset, CallFunc_BreakVector2D_X) == 0x000004, "Member 'AnimBpSCT_C_CalculateAimOffset::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateAimOffset, CallFunc_BreakVector2D_Y) == 0x000008, "Member 'AnimBpSCT_C_CalculateAimOffset::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateAimOffset, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x00000C, "Member 'AnimBpSCT_C_CalculateAimOffset::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateAimOffset, CallFunc_BreakRotator_Roll) == 0x000018, "Member 'AnimBpSCT_C_CalculateAimOffset::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateAimOffset, CallFunc_BreakRotator_Pitch) == 0x00001C, "Member 'AnimBpSCT_C_CalculateAimOffset::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateAimOffset, CallFunc_BreakRotator_Yaw) == 0x000020, "Member 'AnimBpSCT_C_CalculateAimOffset::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateAimOffset, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'AnimBpSCT_C_CalculateAimOffset::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateAimOffset, CallFunc_MakeVector2D_ReturnValue) == 0x000028, "Member 'AnimBpSCT_C_CalculateAimOffset::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateAimOffset, CallFunc_Abs_ReturnValue) == 0x000030, "Member 'AnimBpSCT_C_CalculateAimOffset::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateAimOffset, CallFunc_MapRangeClamped_ReturnValue) == 0x000034, "Member 'AnimBpSCT_C_CalculateAimOffset::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateAimOffset, CallFunc_Vector2DInterpTo_ReturnValue) == 0x000038, "Member 'AnimBpSCT_C_CalculateAimOffset::CallFunc_Vector2DInterpTo_ReturnValue' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.TurnInPlace (Delay)
// 0x0088 (0x0088 - 0x0000)
struct AnimBpSCT_C_TurnInPlace__Delay_ final
{
public:
	float                                         MaxCameraSpeed;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AimYawLimit_1;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayTime_1;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate_1;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTurnAnims                             Turn_Anims_1;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AimYawLimit_2;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayTime_2;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate_2;                                        // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTurnAnims                             Turn_Anims_2;                                      // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default_1;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default_2;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Montage_IsPlaying_ReturnValue;            // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_TurnInPlace__Delay_) == 0x000008, "Wrong alignment on AnimBpSCT_C_TurnInPlace__Delay_");
static_assert(sizeof(AnimBpSCT_C_TurnInPlace__Delay_) == 0x000088, "Wrong size on AnimBpSCT_C_TurnInPlace__Delay_");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, MaxCameraSpeed) == 0x000000, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::MaxCameraSpeed' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, AimYawLimit_1) == 0x000004, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::AimYawLimit_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, DelayTime_1) == 0x000008, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::DelayTime_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, PlayRate_1) == 0x00000C, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::PlayRate_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, Turn_Anims_1) == 0x000010, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::Turn_Anims_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, AimYawLimit_2) == 0x000020, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::AimYawLimit_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, DelayTime_2) == 0x000024, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::DelayTime_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, PlayRate_2) == 0x000028, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::PlayRate_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, Turn_Anims_2) == 0x000030, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::Turn_Anims_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, Temp_bool_Variable) == 0x000040, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, Temp_bool_Variable_1) == 0x000041, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, Temp_bool_Variable_2) == 0x000042, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, Temp_bool_Variable_3) == 0x000043, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, CallFunc_Abs_ReturnValue) == 0x000044, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, CallFunc_Abs_ReturnValue_1) == 0x000048, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, CallFunc_Less_FloatFloat_ReturnValue) == 0x00004C, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, CallFunc_MapRangeClamped_ReturnValue) == 0x000050, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000054, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000055, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, CallFunc_BooleanAND_ReturnValue) == 0x000056, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000057, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000058, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, K2Node_Select_Default) == 0x000060, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, K2Node_Select_Default_1) == 0x000068, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, K2Node_Select_Default_2) == 0x000070, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, K2Node_Select_Default_3) == 0x000078, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, CallFunc_Montage_IsPlaying_ReturnValue) == 0x00007C, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::CallFunc_Montage_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000080, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Delay_, CallFunc_Add_FloatFloat_ReturnValue) == 0x000084, "Member 'AnimBpSCT_C_TurnInPlace__Delay_::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.GetVariablesFromBaseCharacterBP
// 0x0064 (0x0064 - 0x0000)
struct AnimBpSCT_C_GetVariablesFromBaseCharacterBP final
{
public:
	struct FVector                                CallFunc_GetEssentialValuesBPI_Velocity;           // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEssentialValuesBPI_IsMoving;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEssentialValuesBPI_HasMovementInput;   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEssentialValuesBPI_IsAiming;           // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetEssentialValuesBPI_AimType;            // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEssentialValuesBPI_Direction;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEssentialValuesBPI_CharacterRotationDifference; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEssentialValuesBPI_VelocityDifference; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEssentialValuesBPI_AimYawDelta;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEssentialValuesBPI_AimYawRate;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetEssentialValuesBPI_CharacterRotation;  // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetEssentialValuesBPI_LookingRotation;    // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetEssentialValuesBPI_LastVelocityRotation; // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetEssentialValuesBPI_LastMovementInputRotation; // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEssentialValuesBPI_CarryingCorpse;     // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEssentialValuesBPI_BeingCarriedCorpse; // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEssentialValuesBPI_AlcoholPercent;     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_GetVariablesFromBaseCharacterBP) == 0x000004, "Wrong alignment on AnimBpSCT_C_GetVariablesFromBaseCharacterBP");
static_assert(sizeof(AnimBpSCT_C_GetVariablesFromBaseCharacterBP) == 0x000064, "Wrong size on AnimBpSCT_C_GetVariablesFromBaseCharacterBP");
static_assert(offsetof(AnimBpSCT_C_GetVariablesFromBaseCharacterBP, CallFunc_GetEssentialValuesBPI_Velocity) == 0x000000, "Member 'AnimBpSCT_C_GetVariablesFromBaseCharacterBP::CallFunc_GetEssentialValuesBPI_Velocity' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetVariablesFromBaseCharacterBP, CallFunc_GetEssentialValuesBPI_IsMoving) == 0x00000C, "Member 'AnimBpSCT_C_GetVariablesFromBaseCharacterBP::CallFunc_GetEssentialValuesBPI_IsMoving' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetVariablesFromBaseCharacterBP, CallFunc_GetEssentialValuesBPI_HasMovementInput) == 0x00000D, "Member 'AnimBpSCT_C_GetVariablesFromBaseCharacterBP::CallFunc_GetEssentialValuesBPI_HasMovementInput' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetVariablesFromBaseCharacterBP, CallFunc_GetEssentialValuesBPI_IsAiming) == 0x00000E, "Member 'AnimBpSCT_C_GetVariablesFromBaseCharacterBP::CallFunc_GetEssentialValuesBPI_IsAiming' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetVariablesFromBaseCharacterBP, CallFunc_GetEssentialValuesBPI_AimType) == 0x00000F, "Member 'AnimBpSCT_C_GetVariablesFromBaseCharacterBP::CallFunc_GetEssentialValuesBPI_AimType' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetVariablesFromBaseCharacterBP, CallFunc_GetEssentialValuesBPI_Direction) == 0x000010, "Member 'AnimBpSCT_C_GetVariablesFromBaseCharacterBP::CallFunc_GetEssentialValuesBPI_Direction' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetVariablesFromBaseCharacterBP, CallFunc_GetEssentialValuesBPI_CharacterRotationDifference) == 0x000014, "Member 'AnimBpSCT_C_GetVariablesFromBaseCharacterBP::CallFunc_GetEssentialValuesBPI_CharacterRotationDifference' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetVariablesFromBaseCharacterBP, CallFunc_GetEssentialValuesBPI_VelocityDifference) == 0x000018, "Member 'AnimBpSCT_C_GetVariablesFromBaseCharacterBP::CallFunc_GetEssentialValuesBPI_VelocityDifference' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetVariablesFromBaseCharacterBP, CallFunc_GetEssentialValuesBPI_AimYawDelta) == 0x00001C, "Member 'AnimBpSCT_C_GetVariablesFromBaseCharacterBP::CallFunc_GetEssentialValuesBPI_AimYawDelta' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetVariablesFromBaseCharacterBP, CallFunc_GetEssentialValuesBPI_AimYawRate) == 0x000020, "Member 'AnimBpSCT_C_GetVariablesFromBaseCharacterBP::CallFunc_GetEssentialValuesBPI_AimYawRate' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetVariablesFromBaseCharacterBP, CallFunc_GetEssentialValuesBPI_CharacterRotation) == 0x000024, "Member 'AnimBpSCT_C_GetVariablesFromBaseCharacterBP::CallFunc_GetEssentialValuesBPI_CharacterRotation' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetVariablesFromBaseCharacterBP, CallFunc_GetEssentialValuesBPI_LookingRotation) == 0x000030, "Member 'AnimBpSCT_C_GetVariablesFromBaseCharacterBP::CallFunc_GetEssentialValuesBPI_LookingRotation' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetVariablesFromBaseCharacterBP, CallFunc_GetEssentialValuesBPI_LastVelocityRotation) == 0x00003C, "Member 'AnimBpSCT_C_GetVariablesFromBaseCharacterBP::CallFunc_GetEssentialValuesBPI_LastVelocityRotation' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetVariablesFromBaseCharacterBP, CallFunc_GetEssentialValuesBPI_LastMovementInputRotation) == 0x000048, "Member 'AnimBpSCT_C_GetVariablesFromBaseCharacterBP::CallFunc_GetEssentialValuesBPI_LastMovementInputRotation' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetVariablesFromBaseCharacterBP, CallFunc_GetEssentialValuesBPI_CarryingCorpse) == 0x000054, "Member 'AnimBpSCT_C_GetVariablesFromBaseCharacterBP::CallFunc_GetEssentialValuesBPI_CarryingCorpse' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetVariablesFromBaseCharacterBP, CallFunc_GetEssentialValuesBPI_BeingCarriedCorpse) == 0x000055, "Member 'AnimBpSCT_C_GetVariablesFromBaseCharacterBP::CallFunc_GetEssentialValuesBPI_BeingCarriedCorpse' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetVariablesFromBaseCharacterBP, CallFunc_GetEssentialValuesBPI_AlcoholPercent) == 0x000058, "Member 'AnimBpSCT_C_GetVariablesFromBaseCharacterBP::CallFunc_GetEssentialValuesBPI_AlcoholPercent' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetVariablesFromBaseCharacterBP, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00005C, "Member 'AnimBpSCT_C_GetVariablesFromBaseCharacterBP::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetVariablesFromBaseCharacterBP, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000060, "Member 'AnimBpSCT_C_GetVariablesFromBaseCharacterBP::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.CalculateStartPosition
// 0x0002 (0x0002 - 0x0000)
struct AnimBpSCT_C_CalculateStartPosition final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBpSCT_C_CalculateStartPosition) == 0x000001, "Wrong alignment on AnimBpSCT_C_CalculateStartPosition");
static_assert(sizeof(AnimBpSCT_C_CalculateStartPosition) == 0x000002, "Wrong size on AnimBpSCT_C_CalculateStartPosition");
static_assert(offsetof(AnimBpSCT_C_CalculateStartPosition, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'AnimBpSCT_C_CalculateStartPosition::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateStartPosition, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000001, "Member 'AnimBpSCT_C_CalculateStartPosition::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.TurnInPlace (Responsive)
// 0x0040 (0x0040 - 0x0000)
struct AnimBpSCT_C_TurnInPlace__Responsive_ final
{
public:
	float                                         AimYawLimit;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTurnAnims                             Turn_Anims;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Montage_IsPlaying_ReturnValue;            // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBpSCT_C_TurnInPlace__Responsive_) == 0x000008, "Wrong alignment on AnimBpSCT_C_TurnInPlace__Responsive_");
static_assert(sizeof(AnimBpSCT_C_TurnInPlace__Responsive_) == 0x000040, "Wrong size on AnimBpSCT_C_TurnInPlace__Responsive_");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Responsive_, AimYawLimit) == 0x000000, "Member 'AnimBpSCT_C_TurnInPlace__Responsive_::AimYawLimit' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Responsive_, Turn_Anims) == 0x000008, "Member 'AnimBpSCT_C_TurnInPlace__Responsive_::Turn_Anims' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Responsive_, PlayRate) == 0x000018, "Member 'AnimBpSCT_C_TurnInPlace__Responsive_::PlayRate' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Responsive_, Temp_bool_Variable) == 0x00001C, "Member 'AnimBpSCT_C_TurnInPlace__Responsive_::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Responsive_, CallFunc_Abs_ReturnValue) == 0x000020, "Member 'AnimBpSCT_C_TurnInPlace__Responsive_::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Responsive_, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000024, "Member 'AnimBpSCT_C_TurnInPlace__Responsive_::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Responsive_, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'AnimBpSCT_C_TurnInPlace__Responsive_::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Responsive_, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'AnimBpSCT_C_TurnInPlace__Responsive_::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Responsive_, K2Node_Select_Default) == 0x000030, "Member 'AnimBpSCT_C_TurnInPlace__Responsive_::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Responsive_, CallFunc_Abs_ReturnValue_1) == 0x000038, "Member 'AnimBpSCT_C_TurnInPlace__Responsive_::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Responsive_, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'AnimBpSCT_C_TurnInPlace__Responsive_::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Responsive_, CallFunc_Montage_IsPlaying_ReturnValue) == 0x00003D, "Member 'AnimBpSCT_C_TurnInPlace__Responsive_::CallFunc_Montage_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_TurnInPlace__Responsive_, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x00003E, "Member 'AnimBpSCT_C_TurnInPlace__Responsive_::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.CalculateGaitValue
// 0x0018 (0x0018 - 0x0000)
struct AnimBpSCT_C_CalculateGaitValue final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_CalculateGaitValue) == 0x000004, "Wrong alignment on AnimBpSCT_C_CalculateGaitValue");
static_assert(sizeof(AnimBpSCT_C_CalculateGaitValue) == 0x000018, "Wrong size on AnimBpSCT_C_CalculateGaitValue");
static_assert(offsetof(AnimBpSCT_C_CalculateGaitValue, Temp_bool_Variable) == 0x000000, "Member 'AnimBpSCT_C_CalculateGaitValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGaitValue, Temp_bool_Variable_1) == 0x000001, "Member 'AnimBpSCT_C_CalculateGaitValue::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGaitValue, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000002, "Member 'AnimBpSCT_C_CalculateGaitValue::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGaitValue, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000003, "Member 'AnimBpSCT_C_CalculateGaitValue::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGaitValue, CallFunc_MapRangeClamped_ReturnValue) == 0x000004, "Member 'AnimBpSCT_C_CalculateGaitValue::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGaitValue, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000008, "Member 'AnimBpSCT_C_CalculateGaitValue::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGaitValue, K2Node_Select_Default) == 0x00000C, "Member 'AnimBpSCT_C_CalculateGaitValue::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGaitValue, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000010, "Member 'AnimBpSCT_C_CalculateGaitValue::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateGaitValue, K2Node_Select_Default_1) == 0x000014, "Member 'AnimBpSCT_C_CalculateGaitValue::K2Node_Select_Default_1' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.CalculatePlayRates
// 0x0060 (0x0060 - 0x0000)
struct AnimBpSCT_C_CalculatePlayRates final
{
public:
	float                                         WalkAnimSpeed;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RunAnimSpeed;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SprintAnimSpeed;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CrouchAnimSpeed;                                   // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewLocalVar_1;                                     // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue_1;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue_2;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue_3;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_CalculatePlayRates) == 0x000004, "Wrong alignment on AnimBpSCT_C_CalculatePlayRates");
static_assert(sizeof(AnimBpSCT_C_CalculatePlayRates) == 0x000060, "Wrong size on AnimBpSCT_C_CalculatePlayRates");
static_assert(offsetof(AnimBpSCT_C_CalculatePlayRates, WalkAnimSpeed) == 0x000000, "Member 'AnimBpSCT_C_CalculatePlayRates::WalkAnimSpeed' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculatePlayRates, RunAnimSpeed) == 0x000004, "Member 'AnimBpSCT_C_CalculatePlayRates::RunAnimSpeed' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculatePlayRates, SprintAnimSpeed) == 0x000008, "Member 'AnimBpSCT_C_CalculatePlayRates::SprintAnimSpeed' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculatePlayRates, CrouchAnimSpeed) == 0x00000C, "Member 'AnimBpSCT_C_CalculatePlayRates::CrouchAnimSpeed' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculatePlayRates, NewLocalVar_1) == 0x000010, "Member 'AnimBpSCT_C_CalculatePlayRates::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculatePlayRates, CallFunc_K2_GetComponentScale_ReturnValue) == 0x00001C, "Member 'AnimBpSCT_C_CalculatePlayRates::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculatePlayRates, Temp_bool_Variable) == 0x000028, "Member 'AnimBpSCT_C_CalculatePlayRates::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculatePlayRates, CallFunc_BreakVector_X) == 0x00002C, "Member 'AnimBpSCT_C_CalculatePlayRates::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculatePlayRates, CallFunc_BreakVector_Y) == 0x000030, "Member 'AnimBpSCT_C_CalculatePlayRates::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculatePlayRates, CallFunc_BreakVector_Z) == 0x000034, "Member 'AnimBpSCT_C_CalculatePlayRates::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculatePlayRates, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000038, "Member 'AnimBpSCT_C_CalculatePlayRates::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculatePlayRates, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00003C, "Member 'AnimBpSCT_C_CalculatePlayRates::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculatePlayRates, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000040, "Member 'AnimBpSCT_C_CalculatePlayRates::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculatePlayRates, CallFunc_MapRangeUnclamped_ReturnValue_1) == 0x000044, "Member 'AnimBpSCT_C_CalculatePlayRates::CallFunc_MapRangeUnclamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculatePlayRates, CallFunc_MapRangeUnclamped_ReturnValue_2) == 0x000048, "Member 'AnimBpSCT_C_CalculatePlayRates::CallFunc_MapRangeUnclamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculatePlayRates, CallFunc_MapRangeUnclamped_ReturnValue_3) == 0x00004C, "Member 'AnimBpSCT_C_CalculatePlayRates::CallFunc_MapRangeUnclamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculatePlayRates, CallFunc_MapRangeClamped_ReturnValue) == 0x000050, "Member 'AnimBpSCT_C_CalculatePlayRates::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculatePlayRates, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000054, "Member 'AnimBpSCT_C_CalculatePlayRates::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculatePlayRates, K2Node_Select_Default) == 0x000058, "Member 'AnimBpSCT_C_CalculatePlayRates::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculatePlayRates, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00005C, "Member 'AnimBpSCT_C_CalculatePlayRates::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.On ALS_MovementMode Changed
// 0x0001 (0x0001 - 0x0000)
struct AnimBpSCT_C_On_ALS_MovementMode_Changed final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBpSCT_C_On_ALS_MovementMode_Changed) == 0x000001, "Wrong alignment on AnimBpSCT_C_On_ALS_MovementMode_Changed");
static_assert(sizeof(AnimBpSCT_C_On_ALS_MovementMode_Changed) == 0x000001, "Wrong size on AnimBpSCT_C_On_ALS_MovementMode_Changed");
static_assert(offsetof(AnimBpSCT_C_On_ALS_MovementMode_Changed, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'AnimBpSCT_C_On_ALS_MovementMode_Changed::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.CalculateInAirLeaningValues
// 0x001C (0x001C - 0x0000)
struct AnimBpSCT_C_CalculateInAirLeaningValues final
{
public:
	float                                         CallFunc_BreakVector_X;                            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_CalculateInAirLeaningValues) == 0x000004, "Wrong alignment on AnimBpSCT_C_CalculateInAirLeaningValues");
static_assert(sizeof(AnimBpSCT_C_CalculateInAirLeaningValues) == 0x00001C, "Wrong size on AnimBpSCT_C_CalculateInAirLeaningValues");
static_assert(offsetof(AnimBpSCT_C_CalculateInAirLeaningValues, CallFunc_BreakVector_X) == 0x000000, "Member 'AnimBpSCT_C_CalculateInAirLeaningValues::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateInAirLeaningValues, CallFunc_BreakVector_Y) == 0x000004, "Member 'AnimBpSCT_C_CalculateInAirLeaningValues::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateInAirLeaningValues, CallFunc_BreakVector_Z) == 0x000008, "Member 'AnimBpSCT_C_CalculateInAirLeaningValues::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateInAirLeaningValues, CallFunc_NormalizeToRange_ReturnValue) == 0x00000C, "Member 'AnimBpSCT_C_CalculateInAirLeaningValues::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateInAirLeaningValues, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'AnimBpSCT_C_CalculateInAirLeaningValues::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateInAirLeaningValues, CallFunc_MapRangeClamped_ReturnValue) == 0x000014, "Member 'AnimBpSCT_C_CalculateInAirLeaningValues::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateInAirLeaningValues, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000018, "Member 'AnimBpSCT_C_CalculateInAirLeaningValues::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.CalculateLandPredictionAlpha
// 0x01E8 (0x01E8 - 0x0000)
struct AnimBpSCT_C_CalculateLandPredictionAlpha final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EDrawDebugTrace                               Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetWalkableFloorZ_ReturnValue;         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_WithoutHemisphere_ReturnValue; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               K2Node_Select_Default;                             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x00C0(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x014E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14F[0x1];                                      // 0x014F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_ReturnValue_2;                  // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBpSCT_C_CalculateLandPredictionAlpha) == 0x000008, "Wrong alignment on AnimBpSCT_C_CalculateLandPredictionAlpha");
static_assert(sizeof(AnimBpSCT_C_CalculateLandPredictionAlpha) == 0x0001E8, "Wrong size on AnimBpSCT_C_CalculateLandPredictionAlpha");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, Temp_object_Variable) == 0x000000, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, Temp_bool_Variable) == 0x000010, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, Temp_byte_Variable) == 0x000011, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, Temp_byte_Variable_1) == 0x000012, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000014, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000018, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_FInterpTo_ReturnValue) == 0x00001C, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_FInterpTo_ReturnValue_1) == 0x000020, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x000024, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakVector_X) == 0x000028, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakVector_Y) == 0x00002C, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakVector_Z) == 0x000030, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000038, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_Less_FloatFloat_ReturnValue) == 0x000040, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000044, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakVector_X_1) == 0x000050, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakVector_Y_1) == 0x000054, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakVector_Z_1) == 0x000058, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakVector_X_2) == 0x00005C, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakVector_Y_2) == 0x000060, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakVector_Z_2) == 0x000064, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_K2_GetWalkableFloorZ_ReturnValue) == 0x000068, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_K2_GetWalkableFloorZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_FClamp_ReturnValue) == 0x00006C, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_MapRangeClamped_ReturnValue) == 0x000070, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_MakeVector_ReturnValue) == 0x000074, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_Normal_ReturnValue) == 0x000080, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x00008C, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000090, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_GetScaledCapsuleHalfHeight_WithoutHemisphere_ReturnValue) == 0x00009C, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_GetScaledCapsuleHalfHeight_WithoutHemisphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000A0, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_MakeVector_ReturnValue_1) == 0x0000A4, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, K2Node_Select_Default) == 0x0000B0, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B4, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_SphereTraceSingle_OutHit) == 0x0000C0, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_SphereTraceSingle_ReturnValue) == 0x00014C, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakHitResult_bBlockingHit) == 0x00014D, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakHitResult_bInitialOverlap) == 0x00014E, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakHitResult_Time) == 0x000150, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakHitResult_Distance) == 0x000154, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakHitResult_Location) == 0x000158, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakHitResult_ImpactPoint) == 0x000164, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakHitResult_Normal) == 0x000170, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakHitResult_ImpactNormal) == 0x00017C, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakHitResult_PhysMat) == 0x000188, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakHitResult_HitActor) == 0x000190, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakHitResult_HitComponent) == 0x000198, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakHitResult_HitBoneName) == 0x0001A0, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakHitResult_HitItem) == 0x0001A8, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakHitResult_FaceIndex) == 0x0001AC, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakHitResult_TraceStart) == 0x0001B0, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakHitResult_TraceEnd) == 0x0001BC, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0001C8, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakVector_X_3) == 0x0001CC, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakVector_Y_3) == 0x0001D0, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BreakVector_Z_3) == 0x0001D4, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_GetFloatValue_ReturnValue) == 0x0001D8, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0001DC, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_FInterpTo_ReturnValue_2) == 0x0001E0, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_FInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CalculateLandPredictionAlpha, CallFunc_BooleanAND_ReturnValue) == 0x0001E4, "Member 'AnimBpSCT_C_CalculateLandPredictionAlpha::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.SetReferences
// 0x0008 (0x0008 - 0x0000)
struct AnimBpSCT_C_SetReferences final
{
public:
	class UAnimComponent_SCT_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_SetReferences) == 0x000008, "Wrong alignment on AnimBpSCT_C_SetReferences");
static_assert(sizeof(AnimBpSCT_C_SetReferences) == 0x000008, "Wrong size on AnimBpSCT_C_SetReferences");
static_assert(offsetof(AnimBpSCT_C_SetReferences, CallFunc_GetComponentByClass_ReturnValue) == 0x000000, "Member 'AnimBpSCT_C_SetReferences::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.SetDefaultValues 
// 0x0020 (0x0020 - 0x0000)
struct AnimBpSCT_C_SetDefaultValues_ final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSetupValuesBPI_CrouchSpeed;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSetupValuesBPI_WalkSpeed;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSetupValuesBPI_RunSpeed;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSetupValuesBPI_SprintSpeed;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSetupValuesBPI_Female;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_SetDefaultValues_) == 0x000004, "Wrong alignment on AnimBpSCT_C_SetDefaultValues_");
static_assert(sizeof(AnimBpSCT_C_SetDefaultValues_) == 0x000020, "Wrong size on AnimBpSCT_C_SetDefaultValues_");
static_assert(offsetof(AnimBpSCT_C_SetDefaultValues_, Temp_bool_Variable) == 0x000000, "Member 'AnimBpSCT_C_SetDefaultValues_::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_SetDefaultValues_, Temp_bool_Variable_1) == 0x000001, "Member 'AnimBpSCT_C_SetDefaultValues_::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_SetDefaultValues_, CallFunc_GetSetupValuesBPI_CrouchSpeed) == 0x000004, "Member 'AnimBpSCT_C_SetDefaultValues_::CallFunc_GetSetupValuesBPI_CrouchSpeed' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_SetDefaultValues_, CallFunc_GetSetupValuesBPI_WalkSpeed) == 0x000008, "Member 'AnimBpSCT_C_SetDefaultValues_::CallFunc_GetSetupValuesBPI_WalkSpeed' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_SetDefaultValues_, CallFunc_GetSetupValuesBPI_RunSpeed) == 0x00000C, "Member 'AnimBpSCT_C_SetDefaultValues_::CallFunc_GetSetupValuesBPI_RunSpeed' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_SetDefaultValues_, CallFunc_GetSetupValuesBPI_SprintSpeed) == 0x000010, "Member 'AnimBpSCT_C_SetDefaultValues_::CallFunc_GetSetupValuesBPI_SprintSpeed' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_SetDefaultValues_, CallFunc_GetSetupValuesBPI_Female) == 0x000014, "Member 'AnimBpSCT_C_SetDefaultValues_::CallFunc_GetSetupValuesBPI_Female' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_SetDefaultValues_, K2Node_Select_Default) == 0x000018, "Member 'AnimBpSCT_C_SetDefaultValues_::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_SetDefaultValues_, K2Node_Select_Default_1) == 0x00001C, "Member 'AnimBpSCT_C_SetDefaultValues_::K2Node_Select_Default_1' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.FootIK
// 0x0510 (0x0510 - 0x0000)
struct AnimBpSCT_C_FootIK final
{
public:
	struct FVector                                RightFootOffsetTargets;                            // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LeftFootOffsetTargets;                             // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0018(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStance                                       Temp_byte_Variable;                                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStance                                       Temp_byte_Variable_1;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_1;                           // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_4;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Vector2DInterpTo_ReturnValue;             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Vector2DInterpTo_ReturnValue_1;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStance                                       Temp_byte_Variable_2;                              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_6;                          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_2;                           // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_7;                          // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_7;                          // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_7;                          // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_8;                          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_8;                          // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_8;                          // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStance                                       Temp_byte_Variable_3;                              // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_3;                           // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_9;                          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_9;                          // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_9;                          // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_10;                         // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_10;                         // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_10;                         // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_11;                         // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_11;                         // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_11;                         // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_12;                         // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_12;                         // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_12;                         // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_13;                         // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_13;                         // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_13;                         // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_14;                         // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_14;                         // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_14;                         // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_7;                 // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x024C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_8;                 // 0x02DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EA[0x2];                                      // 0x02EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0338(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x035C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_15;                         // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_15;                         // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_15;                         // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_9;                 // 0x0378(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x0388(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x0414(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_415[0x3];                                      // 0x0415(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x041D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41E[0x2];                                      // 0x041E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0428(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0434(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0440(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x044C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0468(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0480(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x048C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue_1;                   // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_16;                         // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_16;                         // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_16;                         // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue_2;                   // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue_3;                   // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_17;                         // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_17;                         // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_17;                         // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_3;                     // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_4;                     // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D9[0x3];                                      // 0x04D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_10;                // 0x04DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_18;                         // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_18;                         // 0x04EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_18;                         // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x04F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F5[0x3];                                      // 0x04F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_5;                     // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_11;                // 0x0500(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_FootIK) == 0x000008, "Wrong alignment on AnimBpSCT_C_FootIK");
static_assert(sizeof(AnimBpSCT_C_FootIK) == 0x000510, "Wrong size on AnimBpSCT_C_FootIK");
static_assert(offsetof(AnimBpSCT_C_FootIK, RightFootOffsetTargets) == 0x000000, "Member 'AnimBpSCT_C_FootIK::RightFootOffsetTargets' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, LeftFootOffsetTargets) == 0x00000C, "Member 'AnimBpSCT_C_FootIK::LeftFootOffsetTargets' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, Temp_object_Variable) == 0x000018, "Member 'AnimBpSCT_C_FootIK::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_X) == 0x000028, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Y) == 0x00002C, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Z) == 0x000030, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, Temp_object_Variable_1) == 0x000038, "Member 'AnimBpSCT_C_FootIK::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_MakeVector2D_ReturnValue) == 0x000048, "Member 'AnimBpSCT_C_FootIK::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_X_1) == 0x000050, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Y_1) == 0x000054, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Z_1) == 0x000058, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_MakeVector2D_ReturnValue_1) == 0x00005C, "Member 'AnimBpSCT_C_FootIK::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, Temp_byte_Variable) == 0x000064, "Member 'AnimBpSCT_C_FootIK::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000068, "Member 'AnimBpSCT_C_FootIK::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x00006C, "Member 'AnimBpSCT_C_FootIK::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, Temp_byte_Variable_1) == 0x000070, "Member 'AnimBpSCT_C_FootIK::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, K2Node_Select_Default) == 0x000074, "Member 'AnimBpSCT_C_FootIK::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_X_2) == 0x000080, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Y_2) == 0x000084, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Z_2) == 0x000088, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, K2Node_Select_Default_1) == 0x00008C, "Member 'AnimBpSCT_C_FootIK::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_X_3) == 0x000098, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Y_3) == 0x00009C, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Z_3) == 0x0000A0, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0000A4, "Member 'AnimBpSCT_C_FootIK::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x0000A5, "Member 'AnimBpSCT_C_FootIK::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_X_4) == 0x0000A8, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Y_4) == 0x0000AC, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Z_4) == 0x0000B0, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_X_5) == 0x0000B4, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Y_5) == 0x0000B8, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Z_5) == 0x0000BC, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_FInterpTo_ReturnValue) == 0x0000C0, "Member 'AnimBpSCT_C_FootIK::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_FInterpTo_ReturnValue_1) == 0x0000C4, "Member 'AnimBpSCT_C_FootIK::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000C8, "Member 'AnimBpSCT_C_FootIK::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000CC, "Member 'AnimBpSCT_C_FootIK::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_MakeVector2D_ReturnValue_2) == 0x0000D0, "Member 'AnimBpSCT_C_FootIK::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_MakeVector2D_ReturnValue_3) == 0x0000D8, "Member 'AnimBpSCT_C_FootIK::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_Vector2DInterpTo_ReturnValue) == 0x0000E0, "Member 'AnimBpSCT_C_FootIK::CallFunc_Vector2DInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_Vector2DInterpTo_ReturnValue_1) == 0x0000E8, "Member 'AnimBpSCT_C_FootIK::CallFunc_Vector2DInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector2D_X) == 0x0000F0, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector2D_Y) == 0x0000F4, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector2D_X_1) == 0x0000F8, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector2D_Y_1) == 0x0000FC, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_MakeVector_ReturnValue) == 0x000100, "Member 'AnimBpSCT_C_FootIK::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_MakeVector_ReturnValue_1) == 0x00010C, "Member 'AnimBpSCT_C_FootIK::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, Temp_byte_Variable_2) == 0x000118, "Member 'AnimBpSCT_C_FootIK::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_X_6) == 0x00011C, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Y_6) == 0x000120, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Z_6) == 0x000124, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, K2Node_Select_Default_2) == 0x000128, "Member 'AnimBpSCT_C_FootIK::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_X_7) == 0x000134, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Y_7) == 0x000138, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Z_7) == 0x00013C, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_X_8) == 0x000140, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Y_8) == 0x000144, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Z_8) == 0x000148, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_Less_FloatFloat_ReturnValue) == 0x00014C, "Member 'AnimBpSCT_C_FootIK::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_SelectFloat_ReturnValue) == 0x000150, "Member 'AnimBpSCT_C_FootIK::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, Temp_byte_Variable_3) == 0x000154, "Member 'AnimBpSCT_C_FootIK::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000158, "Member 'AnimBpSCT_C_FootIK::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, K2Node_Select_Default_3) == 0x00015C, "Member 'AnimBpSCT_C_FootIK::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_X_9) == 0x000168, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_X_9' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Y_9) == 0x00016C, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Y_9' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Z_9) == 0x000170, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Z_9' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_GetOwningComponent_ReturnValue) == 0x000178, "Member 'AnimBpSCT_C_FootIK::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000180, "Member 'AnimBpSCT_C_FootIK::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_GetSocketLocation_ReturnValue) == 0x00018C, "Member 'AnimBpSCT_C_FootIK::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_X_10) == 0x000198, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_X_10' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Y_10) == 0x00019C, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Y_10' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Z_10) == 0x0001A0, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Z_10' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_X_11) == 0x0001A4, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_X_11' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Y_11) == 0x0001A8, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Y_11' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Z_11) == 0x0001AC, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Z_11' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_MakeVector_ReturnValue_2) == 0x0001B0, "Member 'AnimBpSCT_C_FootIK::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_MakeVector_ReturnValue_3) == 0x0001BC, "Member 'AnimBpSCT_C_FootIK::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_MakeVector_ReturnValue_4) == 0x0001C8, "Member 'AnimBpSCT_C_FootIK::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_Add_VectorVector_ReturnValue) == 0x0001D4, "Member 'AnimBpSCT_C_FootIK::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_GetSocketLocation_ReturnValue_1) == 0x0001E0, "Member 'AnimBpSCT_C_FootIK::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_X_12) == 0x0001EC, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_X_12' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Y_12) == 0x0001F0, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Y_12' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Z_12) == 0x0001F4, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Z_12' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_X_13) == 0x0001F8, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_X_13' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Y_13) == 0x0001FC, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Y_13' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Z_13) == 0x000200, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Z_13' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000204, "Member 'AnimBpSCT_C_FootIK::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_MakeVector_ReturnValue_5) == 0x000208, "Member 'AnimBpSCT_C_FootIK::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_MakeVector_ReturnValue_6) == 0x000214, "Member 'AnimBpSCT_C_FootIK::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000220, "Member 'AnimBpSCT_C_FootIK::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x00022C, "Member 'AnimBpSCT_C_FootIK::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_X_14) == 0x000230, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_X_14' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Y_14) == 0x000234, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Y_14' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Z_14) == 0x000238, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Z_14' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_MakeVector_ReturnValue_7) == 0x00023C, "Member 'AnimBpSCT_C_FootIK::CallFunc_MakeVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000248, "Member 'AnimBpSCT_C_FootIK::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_LineTraceSingle_OutHit) == 0x00024C, "Member 'AnimBpSCT_C_FootIK::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_LineTraceSingle_ReturnValue) == 0x0002D8, "Member 'AnimBpSCT_C_FootIK::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_MakeVector_ReturnValue_8) == 0x0002DC, "Member 'AnimBpSCT_C_FootIK::CallFunc_MakeVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_bBlockingHit) == 0x0002E8, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002E9, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_Time) == 0x0002EC, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_Distance) == 0x0002F0, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_Location) == 0x0002F4, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_ImpactPoint) == 0x000300, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_Normal) == 0x00030C, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_ImpactNormal) == 0x000318, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_PhysMat) == 0x000328, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_HitActor) == 0x000330, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_HitComponent) == 0x000338, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_HitBoneName) == 0x000340, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_HitItem) == 0x000348, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_FaceIndex) == 0x00034C, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_TraceStart) == 0x000350, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_TraceEnd) == 0x00035C, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000368, "Member 'AnimBpSCT_C_FootIK::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_X_15) == 0x00036C, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_X_15' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Y_15) == 0x000370, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Y_15' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Z_15) == 0x000374, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Z_15' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_MakeVector_ReturnValue_9) == 0x000378, "Member 'AnimBpSCT_C_FootIK::CallFunc_MakeVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_DegAtan2_ReturnValue) == 0x000384, "Member 'AnimBpSCT_C_FootIK::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_LineTraceSingle_OutHit_1) == 0x000388, "Member 'AnimBpSCT_C_FootIK::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_LineTraceSingle_ReturnValue_1) == 0x000414, "Member 'AnimBpSCT_C_FootIK::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_FClamp_ReturnValue) == 0x000418, "Member 'AnimBpSCT_C_FootIK::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_bBlockingHit_1) == 0x00041C, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x00041D, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_Time_1) == 0x000420, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_Distance_1) == 0x000424, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_Location_1) == 0x000428, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000434, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_Normal_1) == 0x000440, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_ImpactNormal_1) == 0x00044C, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_PhysMat_1) == 0x000458, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_HitActor_1) == 0x000460, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_HitComponent_1) == 0x000468, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_HitBoneName_1) == 0x000470, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_HitItem_1) == 0x000478, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_FaceIndex_1) == 0x00047C, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_TraceStart_1) == 0x000480, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakHitResult_TraceEnd_1) == 0x00048C, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_DegAtan2_ReturnValue_1) == 0x000498, "Member 'AnimBpSCT_C_FootIK::CallFunc_DegAtan2_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_X_16) == 0x00049C, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_X_16' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Y_16) == 0x0004A0, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Y_16' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Z_16) == 0x0004A4, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Z_16' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_FClamp_ReturnValue_1) == 0x0004A8, "Member 'AnimBpSCT_C_FootIK::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_DegAtan2_ReturnValue_2) == 0x0004AC, "Member 'AnimBpSCT_C_FootIK::CallFunc_DegAtan2_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0004B0, "Member 'AnimBpSCT_C_FootIK::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_FClamp_ReturnValue_2) == 0x0004B4, "Member 'AnimBpSCT_C_FootIK::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_DegAtan2_ReturnValue_3) == 0x0004B8, "Member 'AnimBpSCT_C_FootIK::CallFunc_DegAtan2_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_X_17) == 0x0004BC, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_X_17' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Y_17) == 0x0004C0, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Y_17' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Z_17) == 0x0004C4, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Z_17' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_FClamp_ReturnValue_3) == 0x0004C8, "Member 'AnimBpSCT_C_FootIK::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x0004CC, "Member 'AnimBpSCT_C_FootIK::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0004D0, "Member 'AnimBpSCT_C_FootIK::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_FClamp_ReturnValue_4) == 0x0004D4, "Member 'AnimBpSCT_C_FootIK::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BooleanOR_ReturnValue) == 0x0004D8, "Member 'AnimBpSCT_C_FootIK::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_MakeVector_ReturnValue_10) == 0x0004DC, "Member 'AnimBpSCT_C_FootIK::CallFunc_MakeVector_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_X_18) == 0x0004E8, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_X_18' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Y_18) == 0x0004EC, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Y_18' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BreakVector_Z_18) == 0x0004F0, "Member 'AnimBpSCT_C_FootIK::CallFunc_BreakVector_Z_18' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_BooleanOR_ReturnValue_1) == 0x0004F4, "Member 'AnimBpSCT_C_FootIK::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x0004F8, "Member 'AnimBpSCT_C_FootIK::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_FClamp_ReturnValue_5) == 0x0004FC, "Member 'AnimBpSCT_C_FootIK::CallFunc_FClamp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_FootIK, CallFunc_MakeVector_ReturnValue_11) == 0x000500, "Member 'AnimBpSCT_C_FootIK::CallFunc_MakeVector_ReturnValue_11' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.RagdollIK
// 0x00A0 (0x00A0 - 0x0000)
struct AnimBpSCT_C_RagdollIK final
{
public:
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue_1;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBpSCT_C_RagdollIK) == 0x000010, "Wrong alignment on AnimBpSCT_C_RagdollIK");
static_assert(sizeof(AnimBpSCT_C_RagdollIK) == 0x0000A0, "Wrong size on AnimBpSCT_C_RagdollIK");
static_assert(offsetof(AnimBpSCT_C_RagdollIK, CallFunc_GetOwningComponent_ReturnValue) == 0x000000, "Member 'AnimBpSCT_C_RagdollIK::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_RagdollIK, CallFunc_GetSocketRotation_ReturnValue) == 0x000008, "Member 'AnimBpSCT_C_RagdollIK::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_RagdollIK, CallFunc_GetSocketLocation_ReturnValue) == 0x000014, "Member 'AnimBpSCT_C_RagdollIK::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_RagdollIK, CallFunc_GetSocketRotation_ReturnValue_1) == 0x000020, "Member 'AnimBpSCT_C_RagdollIK::CallFunc_GetSocketRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_RagdollIK, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'AnimBpSCT_C_RagdollIK::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_RagdollIK, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000060, "Member 'AnimBpSCT_C_RagdollIK::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_RagdollIK, CallFunc_MakeTransform_ReturnValue_1) == 0x000070, "Member 'AnimBpSCT_C_RagdollIK::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.EnableIKandAimOffset
// 0x0008 (0x0008 - 0x0000)
struct AnimBpSCT_C_EnableIKandAimOffset final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_EnableIKandAimOffset) == 0x000004, "Wrong alignment on AnimBpSCT_C_EnableIKandAimOffset");
static_assert(sizeof(AnimBpSCT_C_EnableIKandAimOffset) == 0x000008, "Wrong size on AnimBpSCT_C_EnableIKandAimOffset");
static_assert(offsetof(AnimBpSCT_C_EnableIKandAimOffset, Enable) == 0x000000, "Member 'AnimBpSCT_C_EnableIKandAimOffset::Enable' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_EnableIKandAimOffset, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'AnimBpSCT_C_EnableIKandAimOffset::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.CreateAnimProp
// 0x0070 (0x0070 - 0x0000)
struct AnimBpSCT_C_CreateAnimProp final
{
public:
	class UClass*                                 Class_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachSocket;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 AnimProp_0;                                        // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_CreateAnimProp) == 0x000010, "Wrong alignment on AnimBpSCT_C_CreateAnimProp");
static_assert(sizeof(AnimBpSCT_C_CreateAnimProp) == 0x000070, "Wrong size on AnimBpSCT_C_CreateAnimProp");
static_assert(offsetof(AnimBpSCT_C_CreateAnimProp, Class_0) == 0x000000, "Member 'AnimBpSCT_C_CreateAnimProp::Class_0' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CreateAnimProp, AttachSocket) == 0x000008, "Member 'AnimBpSCT_C_CreateAnimProp::AttachSocket' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CreateAnimProp, AnimProp_0) == 0x000010, "Member 'AnimBpSCT_C_CreateAnimProp::AnimProp_0' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CreateAnimProp, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'AnimBpSCT_C_CreateAnimProp::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CreateAnimProp, CallFunc_GetOwningComponent_ReturnValue) == 0x000050, "Member 'AnimBpSCT_C_CreateAnimProp::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CreateAnimProp, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000058, "Member 'AnimBpSCT_C_CreateAnimProp::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_CreateAnimProp, CallFunc_FinishSpawningActor_ReturnValue) == 0x000060, "Member 'AnimBpSCT_C_CreateAnimProp::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.OnRep_isInteracting
// 0x0001 (0x0001 - 0x0000)
struct AnimBpSCT_C_OnRep_isInteracting final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBpSCT_C_OnRep_isInteracting) == 0x000001, "Wrong alignment on AnimBpSCT_C_OnRep_isInteracting");
static_assert(sizeof(AnimBpSCT_C_OnRep_isInteracting) == 0x000001, "Wrong size on AnimBpSCT_C_OnRep_isInteracting");
static_assert(offsetof(AnimBpSCT_C_OnRep_isInteracting, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'AnimBpSCT_C_OnRep_isInteracting::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.interactionAnim
// 0x0020 (0x0020 - 0x0000)
struct AnimBpSCT_C_InteractionAnim final
{
public:
	E_interactionAnim                             Animation;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_interactionAnimState                        State;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue_1;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue_2;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue_3;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue_4;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue_5;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_InteractionAnim) == 0x000004, "Wrong alignment on AnimBpSCT_C_InteractionAnim");
static_assert(sizeof(AnimBpSCT_C_InteractionAnim) == 0x000020, "Wrong size on AnimBpSCT_C_InteractionAnim");
static_assert(offsetof(AnimBpSCT_C_InteractionAnim, Animation) == 0x000000, "Member 'AnimBpSCT_C_InteractionAnim::Animation' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_InteractionAnim, State) == 0x000001, "Member 'AnimBpSCT_C_InteractionAnim::State' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_InteractionAnim, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'AnimBpSCT_C_InteractionAnim::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_InteractionAnim, K2Node_SwitchEnum_CmpSuccess_1) == 0x000003, "Member 'AnimBpSCT_C_InteractionAnim::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_InteractionAnim, K2Node_SwitchEnum_CmpSuccess_2) == 0x000004, "Member 'AnimBpSCT_C_InteractionAnim::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_InteractionAnim, K2Node_SwitchEnum_CmpSuccess_3) == 0x000005, "Member 'AnimBpSCT_C_InteractionAnim::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_InteractionAnim, K2Node_SwitchEnum_CmpSuccess_4) == 0x000006, "Member 'AnimBpSCT_C_InteractionAnim::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_InteractionAnim, CallFunc_Montage_Play_ReturnValue) == 0x000008, "Member 'AnimBpSCT_C_InteractionAnim::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_InteractionAnim, CallFunc_Montage_Play_ReturnValue_1) == 0x00000C, "Member 'AnimBpSCT_C_InteractionAnim::CallFunc_Montage_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_InteractionAnim, CallFunc_Montage_Play_ReturnValue_2) == 0x000010, "Member 'AnimBpSCT_C_InteractionAnim::CallFunc_Montage_Play_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_InteractionAnim, CallFunc_Montage_Play_ReturnValue_3) == 0x000014, "Member 'AnimBpSCT_C_InteractionAnim::CallFunc_Montage_Play_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_InteractionAnim, CallFunc_Montage_Play_ReturnValue_4) == 0x000018, "Member 'AnimBpSCT_C_InteractionAnim::CallFunc_Montage_Play_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_InteractionAnim, CallFunc_Montage_Play_ReturnValue_5) == 0x00001C, "Member 'AnimBpSCT_C_InteractionAnim::CallFunc_Montage_Play_ReturnValue_5' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AnimBpSCT_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AnimBpSCT_C_AnimGraph) == 0x000008, "Wrong alignment on AnimBpSCT_C_AnimGraph");
static_assert(sizeof(AnimBpSCT_C_AnimGraph) == 0x000010, "Wrong size on AnimBpSCT_C_AnimGraph");
static_assert(offsetof(AnimBpSCT_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'AnimBpSCT_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.GetEssentialValuesBPI
// 0x0128 (0x0128 - 0x0000)
struct AnimBpSCT_C_GetEssentialValuesBPI final
{
public:
	struct FVector                                InVelocity;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InIsMoving;                                        // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InHasMovementInput;                                // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InIsAiming;                                        // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         InAimType;                                         // 0x000F(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InDirection;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InCharacterRotationDifference;                     // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InVelocityDifference;                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAimYawDelta;                                     // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InAimYawRate;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               InCharacterRotation;                               // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               InLookingRotation;                                 // 0x0030(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               InLastVelocityRotation;                            // 0x003C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               InLastMovementInputRotation;                       // 0x0048(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InCarryingCorpse;                                  // 0x0054(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InBeingCarriedCorpse;                              // 0x0055(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InAlcoholPercent;                                  // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity_0;                                        // 0x005C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMoving_0;                                        // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HasMovementInput_0;                                // 0x0069(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsAiming;                                          // 0x006A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         AimType_0;                                         // 0x006B(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Direction_0;                                       // 0x006C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharacterRotationDifference_0;                     // 0x0070(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_VelocityDifference_0;                        // 0x0074(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AimYawDelta_0;                                     // 0x0078(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AimYawRate_0;                                      // 0x007C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CharacterRotation_0;                               // 0x0080(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               LookingRotation_0;                                 // 0x008C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               LastVelocityRotation_0;                            // 0x0098(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               LastMovementInputRotation_0;                       // 0x00A4(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CarryingCorpse_0;                                  // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          BeingCarriedCorpse;                                // 0x00B1(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AlcoholPercent_0;                                  // 0x00B4(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIAnimBp_C>            K2Node_DynamicCast_AsIAnim_Bp;                     // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetEssentialValuesBPI_Velocity;           // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEssentialValuesBPI_IsMoving;           // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEssentialValuesBPI_HasMovementInput;   // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEssentialValuesBPI_IsAiming;           // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetEssentialValuesBPI_AimType;            // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEssentialValuesBPI_Direction;          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEssentialValuesBPI_CharacterRotationDifference; // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEssentialValuesBPI_VelocityDifference; // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEssentialValuesBPI_AimYawDelta;        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEssentialValuesBPI_AimYawRate;         // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetEssentialValuesBPI_CharacterRotation;  // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetEssentialValuesBPI_LookingRotation;    // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetEssentialValuesBPI_LastVelocityRotation; // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetEssentialValuesBPI_LastMovementInputRotation; // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEssentialValuesBPI_CarryingCorpse;     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEssentialValuesBPI_BeingCarriedCorpse; // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEssentialValuesBPI_AlcoholPercent;     // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBpSCT_C_GetEssentialValuesBPI) == 0x000008, "Wrong alignment on AnimBpSCT_C_GetEssentialValuesBPI");
static_assert(sizeof(AnimBpSCT_C_GetEssentialValuesBPI) == 0x000128, "Wrong size on AnimBpSCT_C_GetEssentialValuesBPI");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, InVelocity) == 0x000000, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::InVelocity' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, InIsMoving) == 0x00000C, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::InIsMoving' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, InHasMovementInput) == 0x00000D, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::InHasMovementInput' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, InIsAiming) == 0x00000E, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::InIsAiming' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, InAimType) == 0x00000F, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::InAimType' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, InDirection) == 0x000010, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::InDirection' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, InCharacterRotationDifference) == 0x000014, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::InCharacterRotationDifference' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, InVelocityDifference) == 0x000018, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::InVelocityDifference' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, InAimYawDelta) == 0x00001C, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::InAimYawDelta' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, InAimYawRate) == 0x000020, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::InAimYawRate' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, InCharacterRotation) == 0x000024, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::InCharacterRotation' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, InLookingRotation) == 0x000030, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::InLookingRotation' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, InLastVelocityRotation) == 0x00003C, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::InLastVelocityRotation' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, InLastMovementInputRotation) == 0x000048, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::InLastMovementInputRotation' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, InCarryingCorpse) == 0x000054, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::InCarryingCorpse' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, InBeingCarriedCorpse) == 0x000055, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::InBeingCarriedCorpse' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, InAlcoholPercent) == 0x000058, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::InAlcoholPercent' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, Velocity_0) == 0x00005C, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::Velocity_0' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, IsMoving_0) == 0x000068, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::IsMoving_0' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, HasMovementInput_0) == 0x000069, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::HasMovementInput_0' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, IsAiming) == 0x00006A, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::IsAiming' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, AimType_0) == 0x00006B, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::AimType_0' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, Direction_0) == 0x00006C, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::Direction_0' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, CharacterRotationDifference_0) == 0x000070, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::CharacterRotationDifference_0' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, Param_VelocityDifference_0) == 0x000074, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::Param_VelocityDifference_0' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, AimYawDelta_0) == 0x000078, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::AimYawDelta_0' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, AimYawRate_0) == 0x00007C, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::AimYawRate_0' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, CharacterRotation_0) == 0x000080, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::CharacterRotation_0' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, LookingRotation_0) == 0x00008C, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::LookingRotation_0' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, LastVelocityRotation_0) == 0x000098, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::LastVelocityRotation_0' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, LastMovementInputRotation_0) == 0x0000A4, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::LastMovementInputRotation_0' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, CarryingCorpse_0) == 0x0000B0, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::CarryingCorpse_0' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, BeingCarriedCorpse) == 0x0000B1, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::BeingCarriedCorpse' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, AlcoholPercent_0) == 0x0000B4, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::AlcoholPercent_0' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, K2Node_DynamicCast_AsIAnim_Bp) == 0x0000B8, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::K2Node_DynamicCast_AsIAnim_Bp' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, CallFunc_GetEssentialValuesBPI_Velocity) == 0x0000CC, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::CallFunc_GetEssentialValuesBPI_Velocity' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, CallFunc_GetEssentialValuesBPI_IsMoving) == 0x0000D8, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::CallFunc_GetEssentialValuesBPI_IsMoving' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, CallFunc_GetEssentialValuesBPI_HasMovementInput) == 0x0000D9, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::CallFunc_GetEssentialValuesBPI_HasMovementInput' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, CallFunc_GetEssentialValuesBPI_IsAiming) == 0x0000DA, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::CallFunc_GetEssentialValuesBPI_IsAiming' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, CallFunc_GetEssentialValuesBPI_AimType) == 0x0000DB, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::CallFunc_GetEssentialValuesBPI_AimType' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, CallFunc_GetEssentialValuesBPI_Direction) == 0x0000DC, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::CallFunc_GetEssentialValuesBPI_Direction' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, CallFunc_GetEssentialValuesBPI_CharacterRotationDifference) == 0x0000E0, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::CallFunc_GetEssentialValuesBPI_CharacterRotationDifference' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, CallFunc_GetEssentialValuesBPI_VelocityDifference) == 0x0000E4, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::CallFunc_GetEssentialValuesBPI_VelocityDifference' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, CallFunc_GetEssentialValuesBPI_AimYawDelta) == 0x0000E8, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::CallFunc_GetEssentialValuesBPI_AimYawDelta' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, CallFunc_GetEssentialValuesBPI_AimYawRate) == 0x0000EC, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::CallFunc_GetEssentialValuesBPI_AimYawRate' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, CallFunc_GetEssentialValuesBPI_CharacterRotation) == 0x0000F0, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::CallFunc_GetEssentialValuesBPI_CharacterRotation' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, CallFunc_GetEssentialValuesBPI_LookingRotation) == 0x0000FC, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::CallFunc_GetEssentialValuesBPI_LookingRotation' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, CallFunc_GetEssentialValuesBPI_LastVelocityRotation) == 0x000108, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::CallFunc_GetEssentialValuesBPI_LastVelocityRotation' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, CallFunc_GetEssentialValuesBPI_LastMovementInputRotation) == 0x000114, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::CallFunc_GetEssentialValuesBPI_LastMovementInputRotation' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, CallFunc_GetEssentialValuesBPI_CarryingCorpse) == 0x000120, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::CallFunc_GetEssentialValuesBPI_CarryingCorpse' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, CallFunc_GetEssentialValuesBPI_BeingCarriedCorpse) == 0x000121, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::CallFunc_GetEssentialValuesBPI_BeingCarriedCorpse' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetEssentialValuesBPI, CallFunc_GetEssentialValuesBPI_AlcoholPercent) == 0x000124, "Member 'AnimBpSCT_C_GetEssentialValuesBPI::CallFunc_GetEssentialValuesBPI_AlcoholPercent' has a wrong offset!");

// Function AnimBpSCT.AnimBpSCT_C.GetSetupValuesBPI
// 0x0050 (0x0050 - 0x0000)
struct AnimBpSCT_C_GetSetupValuesBPI final
{
public:
	float                                         InCrouchSpeed;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InWalkSpeed;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InRunSpeed;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InSprintSpeed;                                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InFemale;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CrouchSpeed;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WalkSpeed;                                         // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RunSpeed;                                          // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SprintSpeed;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Female_0;                                          // 0x0024(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIAnimBp_C>            K2Node_DynamicCast_AsIAnim_Bp;                     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSetupValuesBPI_CrouchSpeed;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSetupValuesBPI_WalkSpeed;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSetupValuesBPI_RunSpeed;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSetupValuesBPI_SprintSpeed;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSetupValuesBPI_Female;                 // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBpSCT_C_GetSetupValuesBPI) == 0x000008, "Wrong alignment on AnimBpSCT_C_GetSetupValuesBPI");
static_assert(sizeof(AnimBpSCT_C_GetSetupValuesBPI) == 0x000050, "Wrong size on AnimBpSCT_C_GetSetupValuesBPI");
static_assert(offsetof(AnimBpSCT_C_GetSetupValuesBPI, InCrouchSpeed) == 0x000000, "Member 'AnimBpSCT_C_GetSetupValuesBPI::InCrouchSpeed' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetSetupValuesBPI, InWalkSpeed) == 0x000004, "Member 'AnimBpSCT_C_GetSetupValuesBPI::InWalkSpeed' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetSetupValuesBPI, InRunSpeed) == 0x000008, "Member 'AnimBpSCT_C_GetSetupValuesBPI::InRunSpeed' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetSetupValuesBPI, InSprintSpeed) == 0x00000C, "Member 'AnimBpSCT_C_GetSetupValuesBPI::InSprintSpeed' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetSetupValuesBPI, InFemale) == 0x000010, "Member 'AnimBpSCT_C_GetSetupValuesBPI::InFemale' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetSetupValuesBPI, CrouchSpeed) == 0x000014, "Member 'AnimBpSCT_C_GetSetupValuesBPI::CrouchSpeed' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetSetupValuesBPI, WalkSpeed) == 0x000018, "Member 'AnimBpSCT_C_GetSetupValuesBPI::WalkSpeed' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetSetupValuesBPI, RunSpeed) == 0x00001C, "Member 'AnimBpSCT_C_GetSetupValuesBPI::RunSpeed' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetSetupValuesBPI, SprintSpeed) == 0x000020, "Member 'AnimBpSCT_C_GetSetupValuesBPI::SprintSpeed' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetSetupValuesBPI, Female_0) == 0x000024, "Member 'AnimBpSCT_C_GetSetupValuesBPI::Female_0' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetSetupValuesBPI, K2Node_DynamicCast_AsIAnim_Bp) == 0x000028, "Member 'AnimBpSCT_C_GetSetupValuesBPI::K2Node_DynamicCast_AsIAnim_Bp' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetSetupValuesBPI, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'AnimBpSCT_C_GetSetupValuesBPI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetSetupValuesBPI, CallFunc_GetSetupValuesBPI_CrouchSpeed) == 0x00003C, "Member 'AnimBpSCT_C_GetSetupValuesBPI::CallFunc_GetSetupValuesBPI_CrouchSpeed' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetSetupValuesBPI, CallFunc_GetSetupValuesBPI_WalkSpeed) == 0x000040, "Member 'AnimBpSCT_C_GetSetupValuesBPI::CallFunc_GetSetupValuesBPI_WalkSpeed' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetSetupValuesBPI, CallFunc_GetSetupValuesBPI_RunSpeed) == 0x000044, "Member 'AnimBpSCT_C_GetSetupValuesBPI::CallFunc_GetSetupValuesBPI_RunSpeed' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetSetupValuesBPI, CallFunc_GetSetupValuesBPI_SprintSpeed) == 0x000048, "Member 'AnimBpSCT_C_GetSetupValuesBPI::CallFunc_GetSetupValuesBPI_SprintSpeed' has a wrong offset!");
static_assert(offsetof(AnimBpSCT_C_GetSetupValuesBPI, CallFunc_GetSetupValuesBPI_Female) == 0x00004C, "Member 'AnimBpSCT_C_GetSetupValuesBPI::CallFunc_GetSetupValuesBPI_Female' has a wrong offset!");

}

