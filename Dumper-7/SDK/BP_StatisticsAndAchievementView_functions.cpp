#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StatisticsAndAchievementView

#include "Basic.hpp"

#include "BP_StatisticsAndAchievementView_classes.hpp"
#include "BP_StatisticsAndAchievementView_parameters.hpp"


namespace SDK
{

// Function BP_StatisticsAndAchievementView.BP_StatisticsAndAchievementView_C.OnExitAchievements__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_StatisticsAndAchievementView_C::OnExitAchievements__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatisticsAndAchievementView_C", "OnExitAchievements__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StatisticsAndAchievementView.BP_StatisticsAndAchievementView_C.OnAchievementsQueried__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFCTAchievementList              AchievementList_0                                      (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_StatisticsAndAchievementView_C::OnAchievementsQueried__DelegateSignature(const struct FFCTAchievementList& AchievementList_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatisticsAndAchievementView_C", "OnAchievementsQueried__DelegateSignature");

	Params::BP_StatisticsAndAchievementView_C_OnAchievementsQueried__DelegateSignature Parms{};

	Parms.AchievementList_0 = std::move(AchievementList_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatisticsAndAchievementView.BP_StatisticsAndAchievementView_C.ExecuteUbergraph_BP_StatisticsAndAchievementView
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StatisticsAndAchievementView_C::ExecuteUbergraph_BP_StatisticsAndAchievementView(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatisticsAndAchievementView_C", "ExecuteUbergraph_BP_StatisticsAndAchievementView");

	Params::BP_StatisticsAndAchievementView_C_ExecuteUbergraph_BP_StatisticsAndAchievementView Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatisticsAndAchievementView.BP_StatisticsAndAchievementView_C.OnClientLoggedIn
// (BlueprintCallable, BlueprintEvent)

void UBP_StatisticsAndAchievementView_C::OnClientLoggedIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatisticsAndAchievementView_C", "OnClientLoggedIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StatisticsAndAchievementView.BP_StatisticsAndAchievementView_C.BndEvt__Button_310_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_StatisticsAndAchievementView_C::BndEvt__Button_310_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatisticsAndAchievementView_C", "BndEvt__Button_310_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StatisticsAndAchievementView.BP_StatisticsAndAchievementView_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_StatisticsAndAchievementView_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatisticsAndAchievementView_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StatisticsAndAchievementView.BP_StatisticsAndAchievementView_C.OnSuccess_3CE9B40F422012B8BE63C786B5FBBE1A
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFCTAchievementList              AchievementList_0                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FString                           Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_StatisticsAndAchievementView_C::OnSuccess_3CE9B40F422012B8BE63C786B5FBBE1A(const struct FFCTAchievementList& AchievementList_0, const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatisticsAndAchievementView_C", "OnSuccess_3CE9B40F422012B8BE63C786B5FBBE1A");

	Params::BP_StatisticsAndAchievementView_C_OnSuccess_3CE9B40F422012B8BE63C786B5FBBE1A Parms{};

	Parms.AchievementList_0 = std::move(AchievementList_0);
	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatisticsAndAchievementView.BP_StatisticsAndAchievementView_C.OnError_3CE9B40F422012B8BE63C786B5FBBE1A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_StatisticsAndAchievementView_C::OnError_3CE9B40F422012B8BE63C786B5FBBE1A(const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatisticsAndAchievementView_C", "OnError_3CE9B40F422012B8BE63C786B5FBBE1A");

	Params::BP_StatisticsAndAchievementView_C_OnError_3CE9B40F422012B8BE63C786B5FBBE1A Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatisticsAndAchievementView.BP_StatisticsAndAchievementView_C.InitializeAchievementsList
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFCTAchievementList              Achievements                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_StatisticsAndAchievementView_C::InitializeAchievementsList(const struct FFCTAchievementList& Achievements)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatisticsAndAchievementView_C", "InitializeAchievementsList");

	Params::BP_StatisticsAndAchievementView_C_InitializeAchievementsList Parms{};

	Parms.Achievements = std::move(Achievements);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatisticsAndAchievementView.BP_StatisticsAndAchievementView_C.BuildRecentUnlocksList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UFCTAchievement*>          RecentlyUnlockedAchievements                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_StatisticsAndAchievementView_C::BuildRecentUnlocksList(TArray<class UFCTAchievement*>& RecentlyUnlockedAchievements)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatisticsAndAchievementView_C", "BuildRecentUnlocksList");

	Params::BP_StatisticsAndAchievementView_C_BuildRecentUnlocksList Parms{};

	Parms.RecentlyUnlockedAchievements = std::move(RecentlyUnlockedAchievements);

	UObject::ProcessEvent(Func, &Parms);

	RecentlyUnlockedAchievements = std::move(Parms.RecentlyUnlockedAchievements);
}


// Function BP_StatisticsAndAchievementView.BP_StatisticsAndAchievementView_C.SetProgressBar
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   UnlockedCount                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TotalCount                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StatisticsAndAchievementView_C::SetProgressBar(int32 UnlockedCount, int32 TotalCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatisticsAndAchievementView_C", "SetProgressBar");

	Params::BP_StatisticsAndAchievementView_C_SetProgressBar Parms{};

	Parms.UnlockedCount = UnlockedCount;
	Parms.TotalCount = TotalCount;

	UObject::ProcessEvent(Func, &Parms);
}

}

