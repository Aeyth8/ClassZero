#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LootStandPersonoidBP

#include "Basic.hpp"

#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function LootStandPersonoidBP.LootStandPersonoidBP_C.ExecuteUbergraph_LootStandPersonoidBP
// 0x0038 (0x0038 - 0x0000)
struct LootStandPersonoidBP_C_ExecuteUbergraph_LootStandPersonoidBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x001C(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LootStandPersonoidBP_C_ExecuteUbergraph_LootStandPersonoidBP) == 0x000008, "Wrong alignment on LootStandPersonoidBP_C_ExecuteUbergraph_LootStandPersonoidBP");
static_assert(sizeof(LootStandPersonoidBP_C_ExecuteUbergraph_LootStandPersonoidBP) == 0x000038, "Wrong size on LootStandPersonoidBP_C_ExecuteUbergraph_LootStandPersonoidBP");
static_assert(offsetof(LootStandPersonoidBP_C_ExecuteUbergraph_LootStandPersonoidBP, EntryPoint) == 0x000000, "Member 'LootStandPersonoidBP_C_ExecuteUbergraph_LootStandPersonoidBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(LootStandPersonoidBP_C_ExecuteUbergraph_LootStandPersonoidBP, Temp_struct_Variable) == 0x000008, "Member 'LootStandPersonoidBP_C_ExecuteUbergraph_LootStandPersonoidBP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(LootStandPersonoidBP_C_ExecuteUbergraph_LootStandPersonoidBP, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'LootStandPersonoidBP_C_ExecuteUbergraph_LootStandPersonoidBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStandPersonoidBP_C_ExecuteUbergraph_LootStandPersonoidBP, Temp_delegate_Variable) == 0x00001C, "Member 'LootStandPersonoidBP_C_ExecuteUbergraph_LootStandPersonoidBP::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(LootStandPersonoidBP_C_ExecuteUbergraph_LootStandPersonoidBP, CallFunc_HasAuthority_ReturnValue) == 0x00002C, "Member 'LootStandPersonoidBP_C_ExecuteUbergraph_LootStandPersonoidBP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStandPersonoidBP_C_ExecuteUbergraph_LootStandPersonoidBP, CallFunc_PostAkEvent_ReturnValue) == 0x000030, "Member 'LootStandPersonoidBP_C_ExecuteUbergraph_LootStandPersonoidBP::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");

// Function LootStandPersonoidBP.LootStandPersonoidBP_C.AutoGrantLoot
// 0x0020 (0x0020 - 0x0000)
struct LootStandPersonoidBP_C_AutoGrantLoot final
{
public:
	class UInventory*                             Instigator_Inventory;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LootStandPersonoidBP_C_AutoGrantLoot) == 0x000008, "Wrong alignment on LootStandPersonoidBP_C_AutoGrantLoot");
static_assert(sizeof(LootStandPersonoidBP_C_AutoGrantLoot) == 0x000020, "Wrong size on LootStandPersonoidBP_C_AutoGrantLoot");
static_assert(offsetof(LootStandPersonoidBP_C_AutoGrantLoot, Instigator_Inventory) == 0x000000, "Member 'LootStandPersonoidBP_C_AutoGrantLoot::Instigator_Inventory' has a wrong offset!");
static_assert(offsetof(LootStandPersonoidBP_C_AutoGrantLoot, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'LootStandPersonoidBP_C_AutoGrantLoot::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStandPersonoidBP_C_AutoGrantLoot, K2Node_DynamicCast_AsCharacter_SCTBP) == 0x000010, "Member 'LootStandPersonoidBP_C_AutoGrantLoot::K2Node_DynamicCast_AsCharacter_SCTBP' has a wrong offset!");
static_assert(offsetof(LootStandPersonoidBP_C_AutoGrantLoot, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'LootStandPersonoidBP_C_AutoGrantLoot::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function LootStandPersonoidBP.LootStandPersonoidBP_C.OnRep_NotOpened
// 0x0001 (0x0001 - 0x0000)
struct LootStandPersonoidBP_C_OnRep_NotOpened final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LootStandPersonoidBP_C_OnRep_NotOpened) == 0x000001, "Wrong alignment on LootStandPersonoidBP_C_OnRep_NotOpened");
static_assert(sizeof(LootStandPersonoidBP_C_OnRep_NotOpened) == 0x000001, "Wrong size on LootStandPersonoidBP_C_OnRep_NotOpened");
static_assert(offsetof(LootStandPersonoidBP_C_OnRep_NotOpened, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'LootStandPersonoidBP_C_OnRep_NotOpened::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function LootStandPersonoidBP.LootStandPersonoidBP_C.RenderXray
// 0x0014 (0x0014 - 0x0000)
struct LootStandPersonoidBP_C_RenderXray final
{
public:
	bool                                          On;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LootStandPersonoidBP_C_RenderXray) == 0x000004, "Wrong alignment on LootStandPersonoidBP_C_RenderXray");
static_assert(sizeof(LootStandPersonoidBP_C_RenderXray) == 0x000014, "Wrong size on LootStandPersonoidBP_C_RenderXray");
static_assert(offsetof(LootStandPersonoidBP_C_RenderXray, On) == 0x000000, "Member 'LootStandPersonoidBP_C_RenderXray::On' has a wrong offset!");
static_assert(offsetof(LootStandPersonoidBP_C_RenderXray, Temp_int_Variable) == 0x000004, "Member 'LootStandPersonoidBP_C_RenderXray::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(LootStandPersonoidBP_C_RenderXray, Temp_int_Variable_1) == 0x000008, "Member 'LootStandPersonoidBP_C_RenderXray::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(LootStandPersonoidBP_C_RenderXray, Temp_bool_Variable) == 0x00000C, "Member 'LootStandPersonoidBP_C_RenderXray::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(LootStandPersonoidBP_C_RenderXray, K2Node_Select_Default) == 0x000010, "Member 'LootStandPersonoidBP_C_RenderXray::K2Node_Select_Default' has a wrong offset!");

// Function LootStandPersonoidBP.LootStandPersonoidBP_C.OnRep_PadLocked
// 0x0028 (0x0028 - 0x0000)
struct LootStandPersonoidBP_C_OnRep_PadLocked final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInteractionSubComponentInterface> CallFunc_AddSubComponent_component_CastInput;      // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TScriptInterface<class IInteractionSubComponentInterface> CallFunc_RemoveSubComponent_component_CastInput;   // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
};
static_assert(alignof(LootStandPersonoidBP_C_OnRep_PadLocked) == 0x000008, "Wrong alignment on LootStandPersonoidBP_C_OnRep_PadLocked");
static_assert(sizeof(LootStandPersonoidBP_C_OnRep_PadLocked) == 0x000028, "Wrong size on LootStandPersonoidBP_C_OnRep_PadLocked");
static_assert(offsetof(LootStandPersonoidBP_C_OnRep_PadLocked, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'LootStandPersonoidBP_C_OnRep_PadLocked::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStandPersonoidBP_C_OnRep_PadLocked, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'LootStandPersonoidBP_C_OnRep_PadLocked::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootStandPersonoidBP_C_OnRep_PadLocked, CallFunc_AddSubComponent_component_CastInput) == 0x000008, "Member 'LootStandPersonoidBP_C_OnRep_PadLocked::CallFunc_AddSubComponent_component_CastInput' has a wrong offset!");
static_assert(offsetof(LootStandPersonoidBP_C_OnRep_PadLocked, CallFunc_RemoveSubComponent_component_CastInput) == 0x000018, "Member 'LootStandPersonoidBP_C_OnRep_PadLocked::CallFunc_RemoveSubComponent_component_CastInput' has a wrong offset!");

}

