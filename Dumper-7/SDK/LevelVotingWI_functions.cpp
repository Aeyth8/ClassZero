#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LevelVotingWI

#include "Basic.hpp"

#include "LevelVotingWI_classes.hpp"
#include "LevelVotingWI_parameters.hpp"


namespace SDK
{

// Function LevelVotingWI.LevelVotingWI_C.ExecuteUbergraph_LevelVotingWI
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULevelVotingWI_C::ExecuteUbergraph_LevelVotingWI(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelVotingWI_C", "ExecuteUbergraph_LevelVotingWI");

	Params::LevelVotingWI_C_ExecuteUbergraph_LevelVotingWI Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LevelVotingWI.LevelVotingWI_C.Pressed Options
// (BlueprintCallable, BlueprintEvent)

void ULevelVotingWI_C::Pressed_Options()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelVotingWI_C", "Pressed Options");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevelVotingWI.LevelVotingWI_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ULevelVotingWI_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelVotingWI_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevelVotingWI.LevelVotingWI_C.PopulateChildren
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ULevelVotingWI_C::PopulateChildren()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelVotingWI_C", "PopulateChildren");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevelVotingWI.LevelVotingWI_C.Disable Selections
// (Public, BlueprintCallable, BlueprintEvent)

void ULevelVotingWI_C::Disable_Selections()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelVotingWI_C", "Disable Selections");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevelVotingWI.LevelVotingWI_C.On Final Level Selected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSelectedLevelData               SelectedLevel                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void ULevelVotingWI_C::On_Final_Level_Selected(const struct FSelectedLevelData& SelectedLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelVotingWI_C", "On Final Level Selected");

	Params::LevelVotingWI_C_On_Final_Level_Selected Parms{};

	Parms.SelectedLevel = std::move(SelectedLevel);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LevelVotingWI.LevelVotingWI_C.OnTotalVotesChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   UpdatedLevel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewVoteCount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULevelVotingWI_C::OnTotalVotesChanged(int32 UpdatedLevel, int32 NewVoteCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelVotingWI_C", "OnTotalVotesChanged");

	Params::LevelVotingWI_C_OnTotalVotesChanged Parms{};

	Parms.UpdatedLevel = UpdatedLevel;
	Parms.NewVoteCount = NewVoteCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LevelVotingWI.LevelVotingWI_C.UpdateTimeoutText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ULevelVotingWI_C::UpdateTimeoutText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelVotingWI_C", "UpdateTimeoutText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevelVotingWI.LevelVotingWI_C.Bind To Callbacks
// (Public, BlueprintCallable, BlueprintEvent)

void ULevelVotingWI_C::Bind_To_Callbacks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelVotingWI_C", "Bind To Callbacks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevelVotingWI.LevelVotingWI_C.Timeout Time Changed
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ServerTimeoutTime                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULevelVotingWI_C::Timeout_Time_Changed(float ServerTimeoutTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelVotingWI_C", "Timeout Time Changed");

	Params::LevelVotingWI_C_Timeout_Time_Changed Parms{};

	Parms.ServerTimeoutTime = ServerTimeoutTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LevelVotingWI.LevelVotingWI_C.Communicate Finished To Children
// (Public, BlueprintCallable, BlueprintEvent)

void ULevelVotingWI_C::Communicate_Finished_To_Children()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelVotingWI_C", "Communicate Finished To Children");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevelVotingWI.LevelVotingWI_C.Show Final Level Panel
// (Public, BlueprintCallable, BlueprintEvent)

void ULevelVotingWI_C::Show_Final_Level_Panel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelVotingWI_C", "Show Final Level Panel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevelVotingWI.LevelVotingWI_C.GetTimeoutTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   Secconds                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULevelVotingWI_C::GetTimeoutTime(int32* Secconds) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevelVotingWI_C", "GetTimeoutTime");

	Params::LevelVotingWI_C_GetTimeoutTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Secconds != nullptr)
		*Secconds = Parms.Secconds;
}

}

