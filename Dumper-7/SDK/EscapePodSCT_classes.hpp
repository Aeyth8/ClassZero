#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EscapePodSCT

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "SCT_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass EscapePodSCT.EscapePodSCT_C
// 0x00D0 (0x02F0 - 0x0220)
class AEscapePodSCT_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class USceneComponent*                        KeyCardSpawnLocation;                              // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Button_General_SimplePresser_Escape;               // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   CoopActorSCT;                                      // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak;                                                // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Nine_distort_pt3;                                  // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystemFireBig;                             // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystemFire;                                // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class Ubpc_ac_Opener_C*                       bpc_ac_Opener;                                     // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Pod;                                            // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Launched;                                          // 0x0288(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AButton_General_SimplePresser_C*        ButtonSimple;                                      // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      InteractingCharacter;                              // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RGBInt;                                            // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0xC];                                      // 0x02A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             KeycardSpawnTransform;                             // 0x02B0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class ACharacterSCTBP_C*                      EscapedCharacter;                                  // 0x02E0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_EscapePodSCT(int32 EntryPoint);
	void Launch_Visuals();
	void OnButtonPressed(class ACharacterSCTBP_C* PressingCharacter);
	void Launch();
	void BndEvt__bpc_ac_Opener_K2Node_ComponentBoundEvent_0_OnOpenStateChanged__DelegateSignature(bool IsOpening);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void OnRep_Launched();
	void AddScore(const class UObject* Character);
	void DropKeycards();
	void HandleTakeMyChancesInSpaceAchievement();
	void AddKarmaForEscaping();
	void Server_LatentInteractionSuccess(bool InteractingActorIsCharacter, class AActor* InteractingInstigator, class AActor* InteractionFacilitator, bool* Void);
	void InteractReleased(bool InteractingActorIsCharacter, class AActor* InteractingActor, bool* Void);
	void GetCanInteract(bool IsSimulated, bool InteractingActorIsCharacter, class AActor* InteractingActor, bool* CanInteract);
	void InteractPressed(bool InteractingActorIsCharacter, class AActor* InteractingActor, const struct FHitResult& InteractedHitResult, bool* Success);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EscapePodSCT_C">();
	}
	static class AEscapePodSCT_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEscapePodSCT_C>();
	}
};
static_assert(alignof(AEscapePodSCT_C) == 0x000010, "Wrong alignment on AEscapePodSCT_C");
static_assert(sizeof(AEscapePodSCT_C) == 0x0002F0, "Wrong size on AEscapePodSCT_C");
static_assert(offsetof(AEscapePodSCT_C, UberGraphFrame) == 0x000220, "Member 'AEscapePodSCT_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AEscapePodSCT_C, KeyCardSpawnLocation) == 0x000228, "Member 'AEscapePodSCT_C::KeyCardSpawnLocation' has a wrong offset!");
static_assert(offsetof(AEscapePodSCT_C, Button_General_SimplePresser_Escape) == 0x000230, "Member 'AEscapePodSCT_C::Button_General_SimplePresser_Escape' has a wrong offset!");
static_assert(offsetof(AEscapePodSCT_C, CoopActorSCT) == 0x000238, "Member 'AEscapePodSCT_C::CoopActorSCT' has a wrong offset!");
static_assert(offsetof(AEscapePodSCT_C, Scene) == 0x000240, "Member 'AEscapePodSCT_C::Scene' has a wrong offset!");
static_assert(offsetof(AEscapePodSCT_C, Ak) == 0x000248, "Member 'AEscapePodSCT_C::Ak' has a wrong offset!");
static_assert(offsetof(AEscapePodSCT_C, Nine_distort_pt3) == 0x000250, "Member 'AEscapePodSCT_C::Nine_distort_pt3' has a wrong offset!");
static_assert(offsetof(AEscapePodSCT_C, ParticleSystemFireBig) == 0x000258, "Member 'AEscapePodSCT_C::ParticleSystemFireBig' has a wrong offset!");
static_assert(offsetof(AEscapePodSCT_C, ParticleSystemFire) == 0x000260, "Member 'AEscapePodSCT_C::ParticleSystemFire' has a wrong offset!");
static_assert(offsetof(AEscapePodSCT_C, ParticleSystem) == 0x000268, "Member 'AEscapePodSCT_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AEscapePodSCT_C, bpc_ac_Opener) == 0x000270, "Member 'AEscapePodSCT_C::bpc_ac_Opener' has a wrong offset!");
static_assert(offsetof(AEscapePodSCT_C, SM_Pod) == 0x000278, "Member 'AEscapePodSCT_C::SM_Pod' has a wrong offset!");
static_assert(offsetof(AEscapePodSCT_C, DefaultSceneRoot) == 0x000280, "Member 'AEscapePodSCT_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AEscapePodSCT_C, Launched) == 0x000288, "Member 'AEscapePodSCT_C::Launched' has a wrong offset!");
static_assert(offsetof(AEscapePodSCT_C, ButtonSimple) == 0x000290, "Member 'AEscapePodSCT_C::ButtonSimple' has a wrong offset!");
static_assert(offsetof(AEscapePodSCT_C, InteractingCharacter) == 0x000298, "Member 'AEscapePodSCT_C::InteractingCharacter' has a wrong offset!");
static_assert(offsetof(AEscapePodSCT_C, RGBInt) == 0x0002A0, "Member 'AEscapePodSCT_C::RGBInt' has a wrong offset!");
static_assert(offsetof(AEscapePodSCT_C, KeycardSpawnTransform) == 0x0002B0, "Member 'AEscapePodSCT_C::KeycardSpawnTransform' has a wrong offset!");
static_assert(offsetof(AEscapePodSCT_C, EscapedCharacter) == 0x0002E0, "Member 'AEscapePodSCT_C::EscapedCharacter' has a wrong offset!");

}

