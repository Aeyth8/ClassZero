#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AirlockVoteWI

#include "Basic.hpp"

#include "EAirlockVoteType_structs.hpp"


namespace SDK::Params
{

// Function AirlockVoteWI.AirlockVoteWI_C.ExecuteUbergraph_AirlockVoteWI
// 0x0028 (0x0028 - 0x0000)
struct AirlockVoteWI_C_ExecuteUbergraph_AirlockVoteWI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAirlockVoteType                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVoteWI_C_ExecuteUbergraph_AirlockVoteWI) == 0x000008, "Wrong alignment on AirlockVoteWI_C_ExecuteUbergraph_AirlockVoteWI");
static_assert(sizeof(AirlockVoteWI_C_ExecuteUbergraph_AirlockVoteWI) == 0x000028, "Wrong size on AirlockVoteWI_C_ExecuteUbergraph_AirlockVoteWI");
static_assert(offsetof(AirlockVoteWI_C_ExecuteUbergraph_AirlockVoteWI, EntryPoint) == 0x000000, "Member 'AirlockVoteWI_C_ExecuteUbergraph_AirlockVoteWI::EntryPoint' has a wrong offset!");
static_assert(offsetof(AirlockVoteWI_C_ExecuteUbergraph_AirlockVoteWI, Temp_byte_Variable) == 0x000004, "Member 'AirlockVoteWI_C_ExecuteUbergraph_AirlockVoteWI::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVoteWI_C_ExecuteUbergraph_AirlockVoteWI, Temp_object_Variable) == 0x000008, "Member 'AirlockVoteWI_C_ExecuteUbergraph_AirlockVoteWI::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVoteWI_C_ExecuteUbergraph_AirlockVoteWI, Temp_object_Variable_1) == 0x000010, "Member 'AirlockVoteWI_C_ExecuteUbergraph_AirlockVoteWI::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(AirlockVoteWI_C_ExecuteUbergraph_AirlockVoteWI, Temp_object_Variable_2) == 0x000018, "Member 'AirlockVoteWI_C_ExecuteUbergraph_AirlockVoteWI::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(AirlockVoteWI_C_ExecuteUbergraph_AirlockVoteWI, K2Node_Select_Default) == 0x000020, "Member 'AirlockVoteWI_C_ExecuteUbergraph_AirlockVoteWI::K2Node_Select_Default' has a wrong offset!");

// Function AirlockVoteWI.AirlockVoteWI_C.AddEntries
// 0x0030 (0x0030 - 0x0000)
struct AirlockVoteWI_C_AddEntries final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAirlockVoteEntryWI_C*                  CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVoteWI_C_AddEntries) == 0x000008, "Wrong alignment on AirlockVoteWI_C_AddEntries");
static_assert(sizeof(AirlockVoteWI_C_AddEntries) == 0x000030, "Wrong size on AirlockVoteWI_C_AddEntries");
static_assert(offsetof(AirlockVoteWI_C_AddEntries, Temp_int_Array_Index_Variable) == 0x000000, "Member 'AirlockVoteWI_C_AddEntries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVoteWI_C_AddEntries, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'AirlockVoteWI_C_AddEntries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVoteWI_C_AddEntries, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'AirlockVoteWI_C_AddEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVoteWI_C_AddEntries, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'AirlockVoteWI_C_AddEntries::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVoteWI_C_AddEntries, CallFunc_Create_ReturnValue) == 0x000018, "Member 'AirlockVoteWI_C_AddEntries::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVoteWI_C_AddEntries, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'AirlockVoteWI_C_AddEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVoteWI_C_AddEntries, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'AirlockVoteWI_C_AddEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVoteWI_C_AddEntries, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000028, "Member 'AirlockVoteWI_C_AddEntries::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");

}

