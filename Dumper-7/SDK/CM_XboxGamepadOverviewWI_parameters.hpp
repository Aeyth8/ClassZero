#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CM_XboxGamepadOverviewWI

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function CM_XboxGamepadOverviewWI.CM_XboxGamepadOverviewWI_C.ExecuteUbergraph_CM_XboxGamepadOverviewWI
// 0x0058 (0x0058 - 0x0000)
struct CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETextJustify                                  Temp_byte_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_1;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETextJustify                                  Temp_byte_Variable_2;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_3;                              // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLanguage_ReturnValue;           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  K2Node_Select_Default_1;                           // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLanguage_ReturnValue_1;         // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETextJustify                                  K2Node_Select_Default_2;                           // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI) == 0x000008, "Wrong alignment on CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI");
static_assert(sizeof(CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI) == 0x000058, "Wrong size on CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI");
static_assert(offsetof(CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI, EntryPoint) == 0x000000, "Member 'CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI::EntryPoint' has a wrong offset!");
static_assert(offsetof(CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI, CallFunc_GetPlatformName_ReturnValue) == 0x000008, "Member 'CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI, Temp_bool_Variable) == 0x000018, "Member 'CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000019, "Member 'CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI, Temp_byte_Variable) == 0x00001A, "Member 'CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI, Temp_byte_Variable_1) == 0x00001B, "Member 'CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI, Temp_bool_Variable_1) == 0x00001C, "Member 'CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI, Temp_byte_Variable_2) == 0x00001D, "Member 'CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI, Temp_byte_Variable_3) == 0x00001E, "Member 'CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI, Temp_bool_Variable_2) == 0x00001F, "Member 'CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI, Temp_byte_Variable_4) == 0x000020, "Member 'CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI, Temp_byte_Variable_5) == 0x000021, "Member 'CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI, CallFunc_GetCurrentLanguage_ReturnValue) == 0x000028, "Member 'CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI::CallFunc_GetCurrentLanguage_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000038, "Member 'CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI, K2Node_Select_Default) == 0x000039, "Member 'CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI, K2Node_Select_Default_1) == 0x00003A, "Member 'CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI, CallFunc_GetCurrentLanguage_ReturnValue_1) == 0x000040, "Member 'CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI::CallFunc_GetCurrentLanguage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x000050, "Member 'CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI, K2Node_Select_Default_2) == 0x000051, "Member 'CM_XboxGamepadOverviewWI_C_ExecuteUbergraph_CM_XboxGamepadOverviewWI::K2Node_Select_Default_2' has a wrong offset!");

}

