#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TextChatWindowWI

#include "Basic.hpp"

#include "TextChatWindowWI_classes.hpp"
#include "TextChatWindowWI_parameters.hpp"


namespace SDK
{

// Function TextChatWindowWI.TextChatWindowWI_C.ExecuteUbergraph_TextChatWindowWI
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTextChatWindowWI_C::ExecuteUbergraph_TextChatWindowWI(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "ExecuteUbergraph_TextChatWindowWI");

	Params::TextChatWindowWI_C_ExecuteUbergraph_TextChatWindowWI Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TextChatWindowWI.TextChatWindowWI_C.BndEvt__TextChatWindowWI_TextInput_K2Node_ComponentBoundEvent_9_OnEditableTextChangedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UTextChatWindowWI_C::BndEvt__TextChatWindowWI_TextInput_K2Node_ComponentBoundEvent_9_OnEditableTextChangedEvent__DelegateSignature(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "BndEvt__TextChatWindowWI_TextInput_K2Node_ComponentBoundEvent_9_OnEditableTextChangedEvent__DelegateSignature");

	Params::TextChatWindowWI_C_BndEvt__TextChatWindowWI_TextInput_K2Node_ComponentBoundEvent_9_OnEditableTextChangedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TextChatWindowWI.TextChatWindowWI_C.BndEvt__TextChatWindowWI_ControllerIconHelperWIPersonoid_K2Node_ComponentBoundEvent_8_OnShowControllerKeyText__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UTextChatWindowWI_C::BndEvt__TextChatWindowWI_ControllerIconHelperWIPersonoid_K2Node_ComponentBoundEvent_8_OnShowControllerKeyText__DelegateSignature(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "BndEvt__TextChatWindowWI_ControllerIconHelperWIPersonoid_K2Node_ComponentBoundEvent_8_OnShowControllerKeyText__DelegateSignature");

	Params::TextChatWindowWI_C_BndEvt__TextChatWindowWI_ControllerIconHelperWIPersonoid_K2Node_ComponentBoundEvent_8_OnShowControllerKeyText__DelegateSignature Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TextChatWindowWI.TextChatWindowWI_C.BndEvt__TextChatWindowWI_ControllerIconHelperWIPersonoid_K2Node_ComponentBoundEvent_7_OnShowControllerKeyIcon__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UTexture2D*                       Icon                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTextChatWindowWI_C::BndEvt__TextChatWindowWI_ControllerIconHelperWIPersonoid_K2Node_ComponentBoundEvent_7_OnShowControllerKeyIcon__DelegateSignature(class UTexture2D* Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "BndEvt__TextChatWindowWI_ControllerIconHelperWIPersonoid_K2Node_ComponentBoundEvent_7_OnShowControllerKeyIcon__DelegateSignature");

	Params::TextChatWindowWI_C_BndEvt__TextChatWindowWI_ControllerIconHelperWIPersonoid_K2Node_ComponentBoundEvent_7_OnShowControllerKeyIcon__DelegateSignature Parms{};

	Parms.Icon = Icon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TextChatWindowWI.TextChatWindowWI_C.BndEvt__TextChatWindowWI_ControllerIconHelperWIPersonoid_K2Node_ComponentBoundEvent_6_OnShowControllerKeyIcon__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UTexture2D*                       Icon                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTextChatWindowWI_C::BndEvt__TextChatWindowWI_ControllerIconHelperWIPersonoid_K2Node_ComponentBoundEvent_6_OnShowControllerKeyIcon__DelegateSignature(class UTexture2D* Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "BndEvt__TextChatWindowWI_ControllerIconHelperWIPersonoid_K2Node_ComponentBoundEvent_6_OnShowControllerKeyIcon__DelegateSignature");

	Params::TextChatWindowWI_C_BndEvt__TextChatWindowWI_ControllerIconHelperWIPersonoid_K2Node_ComponentBoundEvent_6_OnShowControllerKeyIcon__DelegateSignature Parms{};

	Parms.Icon = Icon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TextChatWindowWI.TextChatWindowWI_C.BndEvt__TextChatWindowWI_ControllerIconHelperWIPersonoid_K2Node_ComponentBoundEvent_5_OnResetControllerKey__DelegateSignature
// (BlueprintEvent)

void UTextChatWindowWI_C::BndEvt__TextChatWindowWI_ControllerIconHelperWIPersonoid_K2Node_ComponentBoundEvent_5_OnResetControllerKey__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "BndEvt__TextChatWindowWI_ControllerIconHelperWIPersonoid_K2Node_ComponentBoundEvent_5_OnResetControllerKey__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TextChatWindowWI.TextChatWindowWI_C.BndEvt__TextChatWindowWI_ControllerIconHelperWIAll_K2Node_ComponentBoundEvent_4_OnShowControllerKeyText__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UTextChatWindowWI_C::BndEvt__TextChatWindowWI_ControllerIconHelperWIAll_K2Node_ComponentBoundEvent_4_OnShowControllerKeyText__DelegateSignature(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "BndEvt__TextChatWindowWI_ControllerIconHelperWIAll_K2Node_ComponentBoundEvent_4_OnShowControllerKeyText__DelegateSignature");

	Params::TextChatWindowWI_C_BndEvt__TextChatWindowWI_ControllerIconHelperWIAll_K2Node_ComponentBoundEvent_4_OnShowControllerKeyText__DelegateSignature Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TextChatWindowWI.TextChatWindowWI_C.BndEvt__TextChatWindowWI_ControllerIconHelperWIAll_K2Node_ComponentBoundEvent_3_OnShowControllerKeyIcon__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UTexture2D*                       Icon                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTextChatWindowWI_C::BndEvt__TextChatWindowWI_ControllerIconHelperWIAll_K2Node_ComponentBoundEvent_3_OnShowControllerKeyIcon__DelegateSignature(class UTexture2D* Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "BndEvt__TextChatWindowWI_ControllerIconHelperWIAll_K2Node_ComponentBoundEvent_3_OnShowControllerKeyIcon__DelegateSignature");

	Params::TextChatWindowWI_C_BndEvt__TextChatWindowWI_ControllerIconHelperWIAll_K2Node_ComponentBoundEvent_3_OnShowControllerKeyIcon__DelegateSignature Parms{};

	Parms.Icon = Icon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TextChatWindowWI.TextChatWindowWI_C.BndEvt__TextChatWindowWI_ControllerIconHelperWIAll_K2Node_ComponentBoundEvent_2_OnShowControllerKeyIcon__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UTexture2D*                       Icon                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTextChatWindowWI_C::BndEvt__TextChatWindowWI_ControllerIconHelperWIAll_K2Node_ComponentBoundEvent_2_OnShowControllerKeyIcon__DelegateSignature(class UTexture2D* Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "BndEvt__TextChatWindowWI_ControllerIconHelperWIAll_K2Node_ComponentBoundEvent_2_OnShowControllerKeyIcon__DelegateSignature");

	Params::TextChatWindowWI_C_BndEvt__TextChatWindowWI_ControllerIconHelperWIAll_K2Node_ComponentBoundEvent_2_OnShowControllerKeyIcon__DelegateSignature Parms{};

	Parms.Icon = Icon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TextChatWindowWI.TextChatWindowWI_C.BndEvt__TextChatWindowWI_ControllerIconHelperWIAll_K2Node_ComponentBoundEvent_1_OnResetControllerKey__DelegateSignature
// (BlueprintEvent)

void UTextChatWindowWI_C::BndEvt__TextChatWindowWI_ControllerIconHelperWIAll_K2Node_ComponentBoundEvent_1_OnResetControllerKey__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "BndEvt__TextChatWindowWI_ControllerIconHelperWIAll_K2Node_ComponentBoundEvent_1_OnResetControllerKey__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TextChatWindowWI.TextChatWindowWI_C.ClearFadeOutTimer
// (BlueprintCallable, BlueprintEvent)

void UTextChatWindowWI_C::ClearFadeOutTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "ClearFadeOutTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TextChatWindowWI.TextChatWindowWI_C.TimerFade
// (BlueprintCallable, BlueprintEvent)

void UTextChatWindowWI_C::TimerFade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "TimerFade");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TextChatWindowWI.TextChatWindowWI_C.RetriggerableFadeOut
// (BlueprintCallable, BlueprintEvent)

void UTextChatWindowWI_C::RetriggerableFadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "RetriggerableFadeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TextChatWindowWI.TextChatWindowWI_C.FadeOut
// (BlueprintCallable, BlueprintEvent)

void UTextChatWindowWI_C::FadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "FadeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TextChatWindowWI.TextChatWindowWI_C.FadeCompleted
// (BlueprintCallable, BlueprintEvent)

void UTextChatWindowWI_C::FadeCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "FadeCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TextChatWindowWI.TextChatWindowWI_C.FadeIn
// (BlueprintCallable, BlueprintEvent)

void UTextChatWindowWI_C::FadeIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "FadeIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TextChatWindowWI.TextChatWindowWI_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UTextChatWindowWI_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "PreConstruct");

	Params::TextChatWindowWI_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TextChatWindowWI.TextChatWindowWI_C.BndEvt__TextInput_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTextChatWindowWI_C::BndEvt__TextInput_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "BndEvt__TextInput_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature");

	Params::TextChatWindowWI_C_BndEvt__TextInput_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TextChatWindowWI.TextChatWindowWI_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)

void UTextChatWindowWI_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TextChatWindowWI.TextChatWindowWI_C.StartTypingInAllChat
// (Public, BlueprintCallable, BlueprintEvent)

void UTextChatWindowWI_C::StartTypingInAllChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "StartTypingInAllChat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TextChatWindowWI.TextChatWindowWI_C.StartTypingInPersonoidChat
// (Public, BlueprintCallable, BlueprintEvent)

void UTextChatWindowWI_C::StartTypingInPersonoidChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "StartTypingInPersonoidChat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TextChatWindowWI.TextChatWindowWI_C.EndTyping
// (Public, BlueprintCallable, BlueprintEvent)

void UTextChatWindowWI_C::EndTyping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "EndTyping");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TextChatWindowWI.TextChatWindowWI_C.AddTextMessage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// uint8                                   TextType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     SenderIdentificationColor                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTextChatWindowWI_C::AddTextMessage(const class FText& Text, uint8 TextType, const struct FLinearColor& SenderIdentificationColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "AddTextMessage");

	Params::TextChatWindowWI_C_AddTextMessage Parms{};

	Parms.Text = std::move(Text);
	Parms.TextType = TextType;
	Parms.SenderIdentificationColor = std::move(SenderIdentificationColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TextChatWindowWI.TextChatWindowWI_C.UpdateFade
// (Public, BlueprintCallable, BlueprintEvent)

void UTextChatWindowWI_C::UpdateFade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "UpdateFade");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TextChatWindowWI.TextChatWindowWI_C.SetChatHistoryBackgroundColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ActiveChannel_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTextChatWindowWI_C::SetChatHistoryBackgroundColor(int32 ActiveChannel_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "SetChatHistoryBackgroundColor");

	Params::TextChatWindowWI_C_SetChatHistoryBackgroundColor Parms{};

	Parms.ActiveChannel_0 = ActiveChannel_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TextChatWindowWI.TextChatWindowWI_C.PlayerFateChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFate                                   Fate                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTextChatWindowWI_C::PlayerFateChanged(EFate Fate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "PlayerFateChanged");

	Params::TextChatWindowWI_C_PlayerFateChanged Parms{};

	Parms.Fate = Fate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TextChatWindowWI.TextChatWindowWI_C.MatchEnded
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMatchEndData                    MatchEndData                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UTextChatWindowWI_C::MatchEnded(const struct FMatchEndData& MatchEndData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "MatchEnded");

	Params::TextChatWindowWI_C_MatchEnded Parms{};

	Parms.MatchEndData = std::move(MatchEndData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TextChatWindowWI.TextChatWindowWI_C.Set Available Channels
// (Public, BlueprintCallable, BlueprintEvent)

void UTextChatWindowWI_C::Set_Available_Channels()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "Set Available Channels");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TextChatWindowWI.TextChatWindowWI_C.SetActiveChannel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ActiveChannel_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Succesful                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UTextChatWindowWI_C::SetActiveChannel(int32 ActiveChannel_0, bool* Succesful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "SetActiveChannel");

	Params::TextChatWindowWI_C_SetActiveChannel Parms{};

	Parms.ActiveChannel_0 = ActiveChannel_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Succesful != nullptr)
		*Succesful = Parms.Succesful;
}


// Function TextChatWindowWI.TextChatWindowWI_C.OnRep_bHasGameEnded
// (BlueprintCallable, BlueprintEvent)

void UTextChatWindowWI_C::OnRep_bHasGameEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "OnRep_bHasGameEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TextChatWindowWI.TextChatWindowWI_C.GetKeyFromInputActionName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Input_Action_Name                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Key                                                    (Parm, OutParm)

void UTextChatWindowWI_C::GetKeyFromInputActionName(class FName Input_Action_Name, class FText* Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "GetKeyFromInputActionName");

	Params::TextChatWindowWI_C_GetKeyFromInputActionName Parms{};

	Parms.Input_Action_Name = Input_Action_Name;

	UObject::ProcessEvent(Func, &Parms);

	if (Key != nullptr)
		*Key = std::move(Parms.Key);
}


// Function TextChatWindowWI.TextChatWindowWI_C.Get_EmphasizedAllChatTextBlock
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UTextChatWindowWI_C::Get_EmphasizedAllChatTextBlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "Get_EmphasizedAllChatTextBlock");

	Params::TextChatWindowWI_C_Get_EmphasizedAllChatTextBlock Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TextChatWindowWI.TextChatWindowWI_C.Get_EmphasizedPersonoidChatTextBlock
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UTextChatWindowWI_C::Get_EmphasizedPersonoidChatTextBlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "Get_EmphasizedPersonoidChatTextBlock");

	Params::TextChatWindowWI_C_Get_EmphasizedPersonoidChatTextBlock Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TextChatWindowWI.TextChatWindowWI_C.UpdateChannelButtonVisuals
// (Public, BlueprintCallable, BlueprintEvent)

void UTextChatWindowWI_C::UpdateChannelButtonVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "UpdateChannelButtonVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TextChatWindowWI.TextChatWindowWI_C.SetAllChatRenderOpacity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InOpacity                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTextChatWindowWI_C::SetAllChatRenderOpacity(float InOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "SetAllChatRenderOpacity");

	Params::TextChatWindowWI_C_SetAllChatRenderOpacity Parms{};

	Parms.InOpacity = InOpacity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TextChatWindowWI.TextChatWindowWI_C.SetPersonoidChatRenderOpacity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InOpacity                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTextChatWindowWI_C::SetPersonoidChatRenderOpacity(float InOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "SetPersonoidChatRenderOpacity");

	Params::TextChatWindowWI_C_SetPersonoidChatRenderOpacity Parms{};

	Parms.InOpacity = InOpacity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TextChatWindowWI.TextChatWindowWI_C.SetDeadEndgameChatRenderOpacity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InOpacity                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTextChatWindowWI_C::SetDeadEndgameChatRenderOpacity(float InOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "SetDeadEndgameChatRenderOpacity");

	Params::TextChatWindowWI_C_SetDeadEndgameChatRenderOpacity Parms{};

	Parms.InOpacity = InOpacity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TextChatWindowWI.TextChatWindowWI_C.InvertRenderOpacityForTabs
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Opacity                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTextChatWindowWI_C::InvertRenderOpacityForTabs(float Opacity, class UWidget* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "InvertRenderOpacityForTabs");

	Params::TextChatWindowWI_C_InvertRenderOpacityForTabs Parms{};

	Parms.Opacity = Opacity;
	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TextChatWindowWI.TextChatWindowWI_C.CreateEmphasizedAllChatText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             KeyText                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             EmphasizedText                                         (Parm, OutParm)

void UTextChatWindowWI_C::CreateEmphasizedAllChatText(const class FText& KeyText, class FText* EmphasizedText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "CreateEmphasizedAllChatText");

	Params::TextChatWindowWI_C_CreateEmphasizedAllChatText Parms{};

	Parms.KeyText = std::move(KeyText);

	UObject::ProcessEvent(Func, &Parms);

	if (EmphasizedText != nullptr)
		*EmphasizedText = std::move(Parms.EmphasizedText);
}


// Function TextChatWindowWI.TextChatWindowWI_C.CreateEmphasizedPersonoidChatText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             KeyText                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             EmphasizedText                                         (Parm, OutParm)

void UTextChatWindowWI_C::CreateEmphasizedPersonoidChatText(const class FText& KeyText, class FText* EmphasizedText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "CreateEmphasizedPersonoidChatText");

	Params::TextChatWindowWI_C_CreateEmphasizedPersonoidChatText Parms{};

	Parms.KeyText = std::move(KeyText);

	UObject::ProcessEvent(Func, &Parms);

	if (EmphasizedText != nullptr)
		*EmphasizedText = std::move(Parms.EmphasizedText);
}


// Function TextChatWindowWI.TextChatWindowWI_C.Clamp Number Of Messages
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MaxNumberOfMessages                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTextChatWindowWI_C::Clamp_Number_Of_Messages(int32 MaxNumberOfMessages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TextChatWindowWI_C", "Clamp Number Of Messages");

	Params::TextChatWindowWI_C_Clamp_Number_Of_Messages Parms{};

	Parms.MaxNumberOfMessages = MaxNumberOfMessages;

	UObject::ProcessEvent(Func, &Parms);
}

}

