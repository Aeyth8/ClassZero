#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MouseSensWI

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function MouseSensWI.MouseSensWI_C.ExecuteUbergraph_MouseSensWI
// 0x0090 (0x0090 - 0x0000)
struct MouseSensWI_C_ExecuteUbergraph_MouseSensWI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_SaveGame_ReturnValue;                     // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Ubp_SpecialOptionsSave_C*               CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGame_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Ubp_SpecialOptionsSave_C*               K2Node_DynamicCast_AsBp_Special_Options_Save;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGame_ReturnValue_1;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Ubp_SpecialOptionsSave_C*               K2Node_DynamicCast_AsBp_Special_Options_Save_1;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGame_ReturnValue_2;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Ubp_SpecialOptionsSave_C*               K2Node_DynamicCast_AsBp_Special_Options_Save_2;    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InitialLoadComplete_ReturnValue;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USCTGameInstance*                       K2Node_DynamicCast_AsSCTGame_Instance;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MouseSensWI_C_ExecuteUbergraph_MouseSensWI) == 0x000008, "Wrong alignment on MouseSensWI_C_ExecuteUbergraph_MouseSensWI");
static_assert(sizeof(MouseSensWI_C_ExecuteUbergraph_MouseSensWI) == 0x000090, "Wrong size on MouseSensWI_C_ExecuteUbergraph_MouseSensWI");
static_assert(offsetof(MouseSensWI_C_ExecuteUbergraph_MouseSensWI, EntryPoint) == 0x000000, "Member 'MouseSensWI_C_ExecuteUbergraph_MouseSensWI::EntryPoint' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_ExecuteUbergraph_MouseSensWI, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'MouseSensWI_C_ExecuteUbergraph_MouseSensWI::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_ExecuteUbergraph_MouseSensWI, CallFunc_SaveGame_ReturnValue) == 0x000014, "Member 'MouseSensWI_C_ExecuteUbergraph_MouseSensWI::CallFunc_SaveGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_ExecuteUbergraph_MouseSensWI, CallFunc_GetInputSettings_ReturnValue) == 0x000018, "Member 'MouseSensWI_C_ExecuteUbergraph_MouseSensWI::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_ExecuteUbergraph_MouseSensWI, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000020, "Member 'MouseSensWI_C_ExecuteUbergraph_MouseSensWI::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_ExecuteUbergraph_MouseSensWI, K2Node_ComponentBoundEvent_Value) == 0x000028, "Member 'MouseSensWI_C_ExecuteUbergraph_MouseSensWI::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_ExecuteUbergraph_MouseSensWI, CallFunc_LoadGame_ReturnValue) == 0x000030, "Member 'MouseSensWI_C_ExecuteUbergraph_MouseSensWI::CallFunc_LoadGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_ExecuteUbergraph_MouseSensWI, K2Node_DynamicCast_AsBp_Special_Options_Save) == 0x000038, "Member 'MouseSensWI_C_ExecuteUbergraph_MouseSensWI::K2Node_DynamicCast_AsBp_Special_Options_Save' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_ExecuteUbergraph_MouseSensWI, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'MouseSensWI_C_ExecuteUbergraph_MouseSensWI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_ExecuteUbergraph_MouseSensWI, CallFunc_LoadGame_ReturnValue_1) == 0x000048, "Member 'MouseSensWI_C_ExecuteUbergraph_MouseSensWI::CallFunc_LoadGame_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_ExecuteUbergraph_MouseSensWI, K2Node_DynamicCast_AsBp_Special_Options_Save_1) == 0x000050, "Member 'MouseSensWI_C_ExecuteUbergraph_MouseSensWI::K2Node_DynamicCast_AsBp_Special_Options_Save_1' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_ExecuteUbergraph_MouseSensWI, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'MouseSensWI_C_ExecuteUbergraph_MouseSensWI::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_ExecuteUbergraph_MouseSensWI, CallFunc_LoadGame_ReturnValue_2) == 0x000060, "Member 'MouseSensWI_C_ExecuteUbergraph_MouseSensWI::CallFunc_LoadGame_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_ExecuteUbergraph_MouseSensWI, K2Node_DynamicCast_AsBp_Special_Options_Save_2) == 0x000068, "Member 'MouseSensWI_C_ExecuteUbergraph_MouseSensWI::K2Node_DynamicCast_AsBp_Special_Options_Save_2' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_ExecuteUbergraph_MouseSensWI, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'MouseSensWI_C_ExecuteUbergraph_MouseSensWI::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_ExecuteUbergraph_MouseSensWI, CallFunc_InitialLoadComplete_ReturnValue) == 0x000071, "Member 'MouseSensWI_C_ExecuteUbergraph_MouseSensWI::CallFunc_InitialLoadComplete_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_ExecuteUbergraph_MouseSensWI, CallFunc_MapRangeClamped_ReturnValue) == 0x000074, "Member 'MouseSensWI_C_ExecuteUbergraph_MouseSensWI::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_ExecuteUbergraph_MouseSensWI, CallFunc_GetGameInstance_ReturnValue) == 0x000078, "Member 'MouseSensWI_C_ExecuteUbergraph_MouseSensWI::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_ExecuteUbergraph_MouseSensWI, K2Node_DynamicCast_AsSCTGame_Instance) == 0x000080, "Member 'MouseSensWI_C_ExecuteUbergraph_MouseSensWI::K2Node_DynamicCast_AsSCTGame_Instance' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_ExecuteUbergraph_MouseSensWI, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'MouseSensWI_C_ExecuteUbergraph_MouseSensWI::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function MouseSensWI.MouseSensWI_C.BndEvt__SliderWI_K2Node_ComponentBoundEvent_0_OnRelease__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct MouseSensWI_C_BndEvt__SliderWI_K2Node_ComponentBoundEvent_0_OnRelease__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MouseSensWI_C_BndEvt__SliderWI_K2Node_ComponentBoundEvent_0_OnRelease__DelegateSignature) == 0x000004, "Wrong alignment on MouseSensWI_C_BndEvt__SliderWI_K2Node_ComponentBoundEvent_0_OnRelease__DelegateSignature");
static_assert(sizeof(MouseSensWI_C_BndEvt__SliderWI_K2Node_ComponentBoundEvent_0_OnRelease__DelegateSignature) == 0x000004, "Wrong size on MouseSensWI_C_BndEvt__SliderWI_K2Node_ComponentBoundEvent_0_OnRelease__DelegateSignature");
static_assert(offsetof(MouseSensWI_C_BndEvt__SliderWI_K2Node_ComponentBoundEvent_0_OnRelease__DelegateSignature, Value) == 0x000000, "Member 'MouseSensWI_C_BndEvt__SliderWI_K2Node_ComponentBoundEvent_0_OnRelease__DelegateSignature::Value' has a wrong offset!");

// Function MouseSensWI.MouseSensWI_C.SetRateForAxis
// 0x0090 (0x0090 - 0x0000)
struct MouseSensWI_C_SetRateForAxis final
{
public:
	class FName                                   KeyMapping_Axis_Name;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   KeyMapping_Key;                                    // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          InvertValue;                                       // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputAxisKeyMapping                   K2Node_MakeStruct_InputAxisKeyMapping;             // 0x0040(0x0028)()
	struct FInputAxisKeyMapping                   K2Node_MakeStruct_InputAxisKeyMapping_1;           // 0x0068(0x0028)()
};
static_assert(alignof(MouseSensWI_C_SetRateForAxis) == 0x000008, "Wrong alignment on MouseSensWI_C_SetRateForAxis");
static_assert(sizeof(MouseSensWI_C_SetRateForAxis) == 0x000090, "Wrong size on MouseSensWI_C_SetRateForAxis");
static_assert(offsetof(MouseSensWI_C_SetRateForAxis, KeyMapping_Axis_Name) == 0x000000, "Member 'MouseSensWI_C_SetRateForAxis::KeyMapping_Axis_Name' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetRateForAxis, KeyMapping_Key) == 0x000008, "Member 'MouseSensWI_C_SetRateForAxis::KeyMapping_Key' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetRateForAxis, InvertValue) == 0x000020, "Member 'MouseSensWI_C_SetRateForAxis::InvertValue' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetRateForAxis, Temp_bool_Variable) == 0x000021, "Member 'MouseSensWI_C_SetRateForAxis::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetRateForAxis, Temp_float_Variable) == 0x000024, "Member 'MouseSensWI_C_SetRateForAxis::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetRateForAxis, Temp_float_Variable_1) == 0x000028, "Member 'MouseSensWI_C_SetRateForAxis::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetRateForAxis, CallFunc_GetInputSettings_ReturnValue) == 0x000030, "Member 'MouseSensWI_C_SetRateForAxis::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetRateForAxis, K2Node_Select_Default) == 0x000038, "Member 'MouseSensWI_C_SetRateForAxis::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetRateForAxis, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00003C, "Member 'MouseSensWI_C_SetRateForAxis::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetRateForAxis, K2Node_MakeStruct_InputAxisKeyMapping) == 0x000040, "Member 'MouseSensWI_C_SetRateForAxis::K2Node_MakeStruct_InputAxisKeyMapping' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetRateForAxis, K2Node_MakeStruct_InputAxisKeyMapping_1) == 0x000068, "Member 'MouseSensWI_C_SetRateForAxis::K2Node_MakeStruct_InputAxisKeyMapping_1' has a wrong offset!");

// Function MouseSensWI.MouseSensWI_C.SetAxisSensitivity
// 0x0168 (0x0168 - 0x0000)
struct MouseSensWI_C_SetAxisSensitivity final
{
public:
	float                                         Sensitivity;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputAxisKeyMapping>           LocalAxisMapping;                                  // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item;                           // 0x0028(0x0028)()
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item_1;                         // 0x0050(0x0028)()
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputAxisKeyMapping                   K2Node_MakeStruct_InputAxisKeyMapping;             // 0x00A0(0x0028)(UObjectWrapper)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_1;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetAxisMappingByName_OutMappings;         // 0x00D8(0x0010)(ReferenceParm)
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetAxisMappingByName_OutMappings_1;       // 0x00E8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_2;           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_3;           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputAxisKeyMapping                   K2Node_MakeStruct_InputAxisKeyMapping_1;           // 0x0118(0x0028)(UObjectWrapper)
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetAxisMappingByName_OutMappings_2;       // 0x0140(0x0010)(ReferenceParm)
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetAxisMappingByName_OutMappings_3;       // 0x0150(0x0010)(ReferenceParm)
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_4;           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MouseSensWI_C_SetAxisSensitivity) == 0x000008, "Wrong alignment on MouseSensWI_C_SetAxisSensitivity");
static_assert(sizeof(MouseSensWI_C_SetAxisSensitivity) == 0x000168, "Wrong size on MouseSensWI_C_SetAxisSensitivity");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, Sensitivity) == 0x000000, "Member 'MouseSensWI_C_SetAxisSensitivity::Sensitivity' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, LocalAxisMapping) == 0x000008, "Member 'MouseSensWI_C_SetAxisSensitivity::LocalAxisMapping' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, Temp_int_Array_Index_Variable) == 0x000018, "Member 'MouseSensWI_C_SetAxisSensitivity::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'MouseSensWI_C_SetAxisSensitivity::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'MouseSensWI_C_SetAxisSensitivity::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'MouseSensWI_C_SetAxisSensitivity::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, CallFunc_Array_Get_Item) == 0x000028, "Member 'MouseSensWI_C_SetAxisSensitivity::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'MouseSensWI_C_SetAxisSensitivity::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000078, "Member 'MouseSensWI_C_SetAxisSensitivity::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000079, "Member 'MouseSensWI_C_SetAxisSensitivity::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, CallFunc_SelectFloat_ReturnValue) == 0x00007C, "Member 'MouseSensWI_C_SetAxisSensitivity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, CallFunc_SelectFloat_ReturnValue_1) == 0x000080, "Member 'MouseSensWI_C_SetAxisSensitivity::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'MouseSensWI_C_SetAxisSensitivity::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'MouseSensWI_C_SetAxisSensitivity::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'MouseSensWI_C_SetAxisSensitivity::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000090, "Member 'MouseSensWI_C_SetAxisSensitivity::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, CallFunc_GetInputSettings_ReturnValue) == 0x000098, "Member 'MouseSensWI_C_SetAxisSensitivity::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, K2Node_MakeStruct_InputAxisKeyMapping) == 0x0000A0, "Member 'MouseSensWI_C_SetAxisSensitivity::K2Node_MakeStruct_InputAxisKeyMapping' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, Temp_int_Loop_Counter_Variable_1) == 0x0000C8, "Member 'MouseSensWI_C_SetAxisSensitivity::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, CallFunc_GetInputSettings_ReturnValue_1) == 0x0000D0, "Member 'MouseSensWI_C_SetAxisSensitivity::CallFunc_GetInputSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, CallFunc_GetAxisMappingByName_OutMappings) == 0x0000D8, "Member 'MouseSensWI_C_SetAxisSensitivity::CallFunc_GetAxisMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, CallFunc_GetAxisMappingByName_OutMappings_1) == 0x0000E8, "Member 'MouseSensWI_C_SetAxisSensitivity::CallFunc_GetAxisMappingByName_OutMappings_1' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000F8, "Member 'MouseSensWI_C_SetAxisSensitivity::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000FC, "Member 'MouseSensWI_C_SetAxisSensitivity::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, CallFunc_GetInputSettings_ReturnValue_2) == 0x000100, "Member 'MouseSensWI_C_SetAxisSensitivity::CallFunc_GetInputSettings_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000108, "Member 'MouseSensWI_C_SetAxisSensitivity::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, CallFunc_GetInputSettings_ReturnValue_3) == 0x000110, "Member 'MouseSensWI_C_SetAxisSensitivity::CallFunc_GetInputSettings_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, K2Node_MakeStruct_InputAxisKeyMapping_1) == 0x000118, "Member 'MouseSensWI_C_SetAxisSensitivity::K2Node_MakeStruct_InputAxisKeyMapping_1' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, CallFunc_GetAxisMappingByName_OutMappings_2) == 0x000140, "Member 'MouseSensWI_C_SetAxisSensitivity::CallFunc_GetAxisMappingByName_OutMappings_2' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, CallFunc_GetAxisMappingByName_OutMappings_3) == 0x000150, "Member 'MouseSensWI_C_SetAxisSensitivity::CallFunc_GetAxisMappingByName_OutMappings_3' has a wrong offset!");
static_assert(offsetof(MouseSensWI_C_SetAxisSensitivity, CallFunc_GetInputSettings_ReturnValue_4) == 0x000160, "Member 'MouseSensWI_C_SetAxisSensitivity::CallFunc_GetInputSettings_ReturnValue_4' has a wrong offset!");

}

