#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SettingsKeybindingWI_Action

#include "Basic.hpp"

#include "SettingsKeybindingWI_Action_classes.hpp"
#include "SettingsKeybindingWI_Action_parameters.hpp"


namespace SDK
{

// Function SettingsKeybindingWI_Action.SettingsKeybindingWI_Action_C.SetGamepadData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void USettingsKeybindingWI_Action_C::SetGamepadData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_Action_C", "SetGamepadData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsKeybindingWI_Action.SettingsKeybindingWI_Action_C.SetKeyboardData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void USettingsKeybindingWI_Action_C::SetKeyboardData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_Action_C", "SetKeyboardData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsKeybindingWI_Action.SettingsKeybindingWI_Action_C.OnSetKeyboardKey
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FInputChord                      Chord                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void USettingsKeybindingWI_Action_C::OnSetKeyboardKey(const struct FInputChord& Chord)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_Action_C", "OnSetKeyboardKey");

	Params::SettingsKeybindingWI_Action_C_OnSetKeyboardKey Parms{};

	Parms.Chord = std::move(Chord);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsKeybindingWI_Action.SettingsKeybindingWI_Action_C.OnSetGamepadKey
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FInputChord                      Chord                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void USettingsKeybindingWI_Action_C::OnSetGamepadKey(const struct FInputChord& Chord)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_Action_C", "OnSetGamepadKey");

	Params::SettingsKeybindingWI_Action_C_OnSetGamepadKey Parms{};

	Parms.Chord = std::move(Chord);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsKeybindingWI_Action.SettingsKeybindingWI_Action_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FInputInformation                Info_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// class UInputSettingsActionSubComponent* Setting                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USettingsKeybindingWI_Action_C::Initialize(const struct FInputInformation& Info_0, class UInputSettingsActionSubComponent* Setting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_Action_C", "Initialize");

	Params::SettingsKeybindingWI_Action_C_Initialize Parms{};

	Parms.Info_0 = std::move(Info_0);
	Parms.Setting = Setting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsKeybindingWI_Action.SettingsKeybindingWI_Action_C.ResetKeyboard
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void USettingsKeybindingWI_Action_C::ResetKeyboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_Action_C", "ResetKeyboard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsKeybindingWI_Action.SettingsKeybindingWI_Action_C.ResetGamepad
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void USettingsKeybindingWI_Action_C::ResetGamepad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_Action_C", "ResetGamepad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsKeybindingWI_Action.SettingsKeybindingWI_Action_C.CanBind
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FInputChord                      Chord                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USettingsKeybindingWI_Action_C::CanBind(const struct FInputChord& Chord, bool* Value) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_Action_C", "CanBind");

	Params::SettingsKeybindingWI_Action_C_CanBind Parms{};

	Parms.Chord = std::move(Chord);

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}

}

