#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: bp_ElectrifiedCable

#include "Basic.hpp"

#include "bp_ElectrifiedCable_classes.hpp"
#include "bp_ElectrifiedCable_parameters.hpp"


namespace SDK
{

// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.ExecuteUbergraph_bp_ElectrifiedCable
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Abp_ElectrifiedCable_C::ExecuteUbergraph_bp_ElectrifiedCable(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "ExecuteUbergraph_bp_ElectrifiedCable");

	Params::bp_ElectrifiedCable_C_ExecuteUbergraph_bp_ElectrifiedCable Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.Audio Electric Cable Zap Character Stop Single
// (BlueprintCallable, BlueprintEvent)

void Abp_ElectrifiedCable_C::Audio_Electric_Cable_Zap_Character_Stop_Single()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "Audio Electric Cable Zap Character Stop Single");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.Character Exit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacterSCTBP_C*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Abp_ElectrifiedCable_C::Character_Exit(class ACharacterSCTBP_C* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "Character Exit");

	Params::bp_ElectrifiedCable_C_Character_Exit Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.Character Entered
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacterSCTBP_C*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Abp_ElectrifiedCable_C::Character_Entered(class ACharacterSCTBP_C* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "Character Entered");

	Params::bp_ElectrifiedCable_C_Character_Entered Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.Destroy Surrounding Buttons
// (BlueprintCallable, BlueprintEvent)

void Abp_ElectrifiedCable_C::Destroy_Surrounding_Buttons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "Destroy Surrounding Buttons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.ResetCableZap
// (BlueprintCallable, BlueprintEvent)

void Abp_ElectrifiedCable_C::ResetCableZap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "ResetCableZap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.Audio Electric Cable Zap Character Stop
// (BlueprintCallable, BlueprintEvent)

void Abp_ElectrifiedCable_C::Audio_Electric_Cable_Zap_Character_Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "Audio Electric Cable Zap Character Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.Audio Electric Cable Zap Character Start
// (BlueprintCallable, BlueprintEvent)

void Abp_ElectrifiedCable_C::Audio_Electric_Cable_Zap_Character_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "Audio Electric Cable Zap Character Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.Audio Electric Cable Disable
// (BlueprintCallable, BlueprintEvent)

void Abp_ElectrifiedCable_C::Audio_Electric_Cable_Disable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "Audio Electric Cable Disable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.Audio Electric Cable Enable
// (BlueprintCallable, BlueprintEvent)

void Abp_ElectrifiedCable_C::Audio_Electric_Cable_Enable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "Audio Electric Cable Enable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.Audio Electric Cable Zap
// (BlueprintCallable, BlueprintEvent)

void Abp_ElectrifiedCable_C::Audio_Electric_Cable_Zap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "Audio Electric Cable Zap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void Abp_ElectrifiedCable_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.StopCosmetics
// (BlueprintCallable, BlueprintEvent)

void Abp_ElectrifiedCable_C::StopCosmetics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "StopCosmetics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.CancelStoppingArcTimer
// (BlueprintCallable, BlueprintEvent)

void Abp_ElectrifiedCable_C::CancelStoppingArcTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "CancelStoppingArcTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.StopArc
// (BlueprintCallable, BlueprintEvent)

void Abp_ElectrifiedCable_C::StopArc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "StopArc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.StartArcing
// (BlueprintCallable, BlueprintEvent)

void Abp_ElectrifiedCable_C::StartArcing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "StartArcing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.StoppingArc
// (BlueprintCallable, BlueprintEvent)

void Abp_ElectrifiedCable_C::StoppingArc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "StoppingArc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.Arc
// (BlueprintCallable, BlueprintEvent)

void Abp_ElectrifiedCable_C::Arc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "Arc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void Abp_ElectrifiedCable_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.OnRep_IsActive
// (BlueprintCallable, BlueprintEvent)

void Abp_ElectrifiedCable_C::OnRep_IsActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "OnRep_IsActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.RescueAllEletrocutingCharacters
// (Public, BlueprintCallable, BlueprintEvent)

void Abp_ElectrifiedCable_C::RescueAllEletrocutingCharacters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "RescueAllEletrocutingCharacters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.ImpulseCable
// (Public, BlueprintCallable, BlueprintEvent)

void Abp_ElectrifiedCable_C::ImpulseCable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "ImpulseCable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.RescueEletrocutingCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacterSCTBP_C*                Item                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Abp_ElectrifiedCable_C::RescueEletrocutingCharacter(const class ACharacterSCTBP_C*& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "RescueEletrocutingCharacter");

	Params::bp_ElectrifiedCable_C_RescueEletrocutingCharacter Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.ElectricityLineTrace
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          OutHit_ImpactPoint                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void Abp_ElectrifiedCable_C::ElectricityLineTrace(struct FVector* OutHit_ImpactPoint, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "ElectricityLineTrace");

	Params::bp_ElectrifiedCable_C_ElectricityLineTrace Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutHit_ImpactPoint != nullptr)
		*OutHit_ImpactPoint = std::move(Parms.OutHit_ImpactPoint);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.OnRep_CharacterInside
// (BlueprintCallable, BlueprintEvent)

void Abp_ElectrifiedCable_C::OnRep_CharacterInside()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "OnRep_CharacterInside");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.Server_LatentInteractionSuccess
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InteractingActorIsCharacter                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           InteractingInstigator                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           InteractionFacilitator                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Void                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void Abp_ElectrifiedCable_C::Server_LatentInteractionSuccess(bool InteractingActorIsCharacter, class AActor* InteractingInstigator, class AActor* InteractionFacilitator, bool* Void)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "Server_LatentInteractionSuccess");

	Params::bp_ElectrifiedCable_C_Server_LatentInteractionSuccess Parms{};

	Parms.InteractingActorIsCharacter = InteractingActorIsCharacter;
	Parms.InteractingInstigator = InteractingInstigator;
	Parms.InteractionFacilitator = InteractionFacilitator;

	UObject::ProcessEvent(Func, &Parms);

	if (Void != nullptr)
		*Void = Parms.Void;
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.InteractReleased
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InteractingActorIsCharacter                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Void                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void Abp_ElectrifiedCable_C::InteractReleased(bool InteractingActorIsCharacter, class AActor* InteractingActor, bool* Void)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "InteractReleased");

	Params::bp_ElectrifiedCable_C_InteractReleased Parms{};

	Parms.InteractingActorIsCharacter = InteractingActorIsCharacter;
	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Void != nullptr)
		*Void = Parms.Void;
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.GetCanInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSimulated                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InteractingActorIsCharacter                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CanInteract                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void Abp_ElectrifiedCable_C::GetCanInteract(bool IsSimulated, bool InteractingActorIsCharacter, class AActor* InteractingActor, bool* CanInteract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "GetCanInteract");

	Params::bp_ElectrifiedCable_C_GetCanInteract Parms{};

	Parms.IsSimulated = IsSimulated;
	Parms.InteractingActorIsCharacter = InteractingActorIsCharacter;
	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);

	if (CanInteract != nullptr)
		*CanInteract = Parms.CanInteract;
}


// Function bp_ElectrifiedCable.bp_ElectrifiedCable_C.InteractPressed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InteractingActorIsCharacter                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       InteractedHitResult                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void Abp_ElectrifiedCable_C::InteractPressed(bool InteractingActorIsCharacter, class AActor* InteractingActor, const struct FHitResult& InteractedHitResult, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ElectrifiedCable_C", "InteractPressed");

	Params::bp_ElectrifiedCable_C_InteractPressed Parms{};

	Parms.InteractingActorIsCharacter = InteractingActorIsCharacter;
	Parms.InteractingActor = InteractingActor;
	Parms.InteractedHitResult = std::move(InteractedHitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}

}

