#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EscapePodSCT

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SCT_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function EscapePodSCT.EscapePodSCT_C.ExecuteUbergraph_EscapePodSCT
// 0x00A8 (0x00A8 - 0x0000)
struct EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDestiny                               K2Node_MakeStruct_Destiny;                         // 0x0014(0x0010)(NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_IsOpening;              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      K2Node_CustomEvent_PressingCharacter;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACharacterSCTBP_C* PressingCharacter)> K2Node_CreateDelegate_OutputDelegate;              // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APawn*>                          CallFunc_GetAllPawnsExceptSelf_OtherPawns;         // 0x0060(0x0010)(ReferenceParm)
	class APawn*                                  CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT) == 0x000008, "Wrong alignment on EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT");
static_assert(sizeof(EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT) == 0x0000A8, "Wrong size on EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT");
static_assert(offsetof(EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT, EntryPoint) == 0x000000, "Member 'EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT::EntryPoint' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000004, "Member 'EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT, Temp_int_Array_Index_Variable) == 0x000010, "Member 'EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT, K2Node_MakeStruct_Destiny) == 0x000014, "Member 'EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT::K2Node_MakeStruct_Destiny' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT, Temp_bool_IsClosed_Variable) == 0x000024, "Member 'EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT, Temp_bool_Has_Been_Initd_Variable) == 0x000025, "Member 'EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT, K2Node_ComponentBoundEvent_IsOpening) == 0x000026, "Member 'EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT::K2Node_ComponentBoundEvent_IsOpening' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT, CallFunc_GetForwardVector_ReturnValue) == 0x000028, "Member 'EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000034, "Member 'EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT, K2Node_CustomEvent_PressingCharacter) == 0x000040, "Member 'EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT::K2Node_CustomEvent_PressingCharacter' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT, K2Node_CreateDelegate_OutputDelegate) == 0x000048, "Member 'EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT, CallFunc_HasAuthority_ReturnValue) == 0x000058, "Member 'EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT, CallFunc_GetAllPawnsExceptSelf_OtherPawns) == 0x000060, "Member 'EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT::CallFunc_GetAllPawnsExceptSelf_OtherPawns' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT, CallFunc_Array_Get_Item) == 0x000070, "Member 'EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000078, "Member 'EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT, K2Node_DynamicCast_AsCharacter_SCTBP) == 0x000088, "Member 'EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT::K2Node_DynamicCast_AsCharacter_SCTBP' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'EscapePodSCT_C_ExecuteUbergraph_EscapePodSCT::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function EscapePodSCT.EscapePodSCT_C.OnButtonPressed
// 0x0008 (0x0008 - 0x0000)
struct EscapePodSCT_C_OnButtonPressed final
{
public:
	class ACharacterSCTBP_C*                      PressingCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EscapePodSCT_C_OnButtonPressed) == 0x000008, "Wrong alignment on EscapePodSCT_C_OnButtonPressed");
static_assert(sizeof(EscapePodSCT_C_OnButtonPressed) == 0x000008, "Wrong size on EscapePodSCT_C_OnButtonPressed");
static_assert(offsetof(EscapePodSCT_C_OnButtonPressed, PressingCharacter) == 0x000000, "Member 'EscapePodSCT_C_OnButtonPressed::PressingCharacter' has a wrong offset!");

// Function EscapePodSCT.EscapePodSCT_C.BndEvt__bpc_ac_Opener_K2Node_ComponentBoundEvent_0_OnOpenStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct EscapePodSCT_C_BndEvt__bpc_ac_Opener_K2Node_ComponentBoundEvent_0_OnOpenStateChanged__DelegateSignature final
{
public:
	bool                                          IsOpening;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EscapePodSCT_C_BndEvt__bpc_ac_Opener_K2Node_ComponentBoundEvent_0_OnOpenStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on EscapePodSCT_C_BndEvt__bpc_ac_Opener_K2Node_ComponentBoundEvent_0_OnOpenStateChanged__DelegateSignature");
static_assert(sizeof(EscapePodSCT_C_BndEvt__bpc_ac_Opener_K2Node_ComponentBoundEvent_0_OnOpenStateChanged__DelegateSignature) == 0x000001, "Wrong size on EscapePodSCT_C_BndEvt__bpc_ac_Opener_K2Node_ComponentBoundEvent_0_OnOpenStateChanged__DelegateSignature");
static_assert(offsetof(EscapePodSCT_C_BndEvt__bpc_ac_Opener_K2Node_ComponentBoundEvent_0_OnOpenStateChanged__DelegateSignature, IsOpening) == 0x000000, "Member 'EscapePodSCT_C_BndEvt__bpc_ac_Opener_K2Node_ComponentBoundEvent_0_OnOpenStateChanged__DelegateSignature::IsOpening' has a wrong offset!");

// Function EscapePodSCT.EscapePodSCT_C.UserConstructionScript
// 0x00C0 (0x00C0 - 0x0000)
struct EscapePodSCT_C_UserConstructionScript final
{
public:
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0000(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AButton_General_SimplePresser_Escape_C* K2Node_DynamicCast_AsButton_General_Simple_Presser_Escape; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACoopActorSCT_C*                        K2Node_DynamicCast_AsCoop_Actor_SCT;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
};
static_assert(alignof(EscapePodSCT_C_UserConstructionScript) == 0x000008, "Wrong alignment on EscapePodSCT_C_UserConstructionScript");
static_assert(sizeof(EscapePodSCT_C_UserConstructionScript) == 0x0000C0, "Wrong size on EscapePodSCT_C_UserConstructionScript");
static_assert(offsetof(EscapePodSCT_C_UserConstructionScript, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000000, "Member 'EscapePodSCT_C_UserConstructionScript::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_UserConstructionScript, K2Node_DynamicCast_AsButton_General_Simple_Presser_Escape) == 0x000090, "Member 'EscapePodSCT_C_UserConstructionScript::K2Node_DynamicCast_AsButton_General_Simple_Presser_Escape' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'EscapePodSCT_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_UserConstructionScript, K2Node_DynamicCast_AsCoop_Actor_SCT) == 0x0000A0, "Member 'EscapePodSCT_C_UserConstructionScript::K2Node_DynamicCast_AsCoop_Actor_SCT' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'EscapePodSCT_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x0000B0, "Member 'EscapePodSCT_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");

// Function EscapePodSCT.EscapePodSCT_C.AddScore
// 0x00D0 (0x00D0 - 0x0000)
struct EscapePodSCT_C_AddScore final
{
public:
	const class UObject*                          Character;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             L_EscapedCharacter;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class APlayerState*                           L_EscapedPlayerState;                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCTGameMode_MatchBP_C*                 K2Node_DynamicCast_AsSCTGame_Mode_Match_BP;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTGameMode_MatchBP_C*                 K2Node_DynamicCast_AsSCTGame_Mode_Match_BP_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASCTPlayerState*>                CallFunc_GetAllAlivePersonoids_ReturnValue;        // 0x0058(0x0010)(ReferenceParm)
	TArray<class ASCTPlayerState*>                CallFunc_GetAllAliveResidents_ReturnValue;         // 0x0068(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerFaction                                Temp_byte_Variable;                                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87[0x1];                                       // 0x0087(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState*                        CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFactionInfoInterface> K2Node_DynamicCast_AsFaction_Info_Interface;       // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerFaction                                CallFunc_GetFaction_ReturnValue;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EscapePodSCT_C_AddScore) == 0x000008, "Wrong alignment on EscapePodSCT_C_AddScore");
static_assert(sizeof(EscapePodSCT_C_AddScore) == 0x0000D0, "Wrong size on EscapePodSCT_C_AddScore");
static_assert(offsetof(EscapePodSCT_C_AddScore, Character) == 0x000000, "Member 'EscapePodSCT_C_AddScore::Character' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, L_EscapedCharacter) == 0x000008, "Member 'EscapePodSCT_C_AddScore::L_EscapedCharacter' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, L_EscapedPlayerState) == 0x000010, "Member 'EscapePodSCT_C_AddScore::L_EscapedPlayerState' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, K2Node_DynamicCast_AsCharacter) == 0x000018, "Member 'EscapePodSCT_C_AddScore::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'EscapePodSCT_C_AddScore::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, CallFunc_GetGameMode_ReturnValue) == 0x000028, "Member 'EscapePodSCT_C_AddScore::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, CallFunc_GetGameMode_ReturnValue_1) == 0x000030, "Member 'EscapePodSCT_C_AddScore::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, K2Node_DynamicCast_AsSCTGame_Mode_Match_BP) == 0x000038, "Member 'EscapePodSCT_C_AddScore::K2Node_DynamicCast_AsSCTGame_Mode_Match_BP' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'EscapePodSCT_C_AddScore::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, K2Node_DynamicCast_AsSCTGame_Mode_Match_BP_1) == 0x000048, "Member 'EscapePodSCT_C_AddScore::K2Node_DynamicCast_AsSCTGame_Mode_Match_BP_1' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'EscapePodSCT_C_AddScore::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, CallFunc_GetAllAlivePersonoids_ReturnValue) == 0x000058, "Member 'EscapePodSCT_C_AddScore::CallFunc_GetAllAlivePersonoids_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, CallFunc_GetAllAliveResidents_ReturnValue) == 0x000068, "Member 'EscapePodSCT_C_AddScore::CallFunc_GetAllAliveResidents_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'EscapePodSCT_C_AddScore::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, CallFunc_Array_Length_ReturnValue_1) == 0x00007C, "Member 'EscapePodSCT_C_AddScore::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, CallFunc_Array_Length_ReturnValue_2) == 0x000080, "Member 'EscapePodSCT_C_AddScore::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, Temp_byte_Variable) == 0x000084, "Member 'EscapePodSCT_C_AddScore::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, CallFunc_Greater_IntInt_ReturnValue) == 0x000085, "Member 'EscapePodSCT_C_AddScore::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, K2Node_SwitchEnum_CmpSuccess) == 0x000086, "Member 'EscapePodSCT_C_AddScore::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, Temp_int_Array_Index_Variable) == 0x000088, "Member 'EscapePodSCT_C_AddScore::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'EscapePodSCT_C_AddScore::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'EscapePodSCT_C_AddScore::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'EscapePodSCT_C_AddScore::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, Temp_int_Array_Index_Variable_1) == 0x000098, "Member 'EscapePodSCT_C_AddScore::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'EscapePodSCT_C_AddScore::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000A8, "Member 'EscapePodSCT_C_AddScore::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, K2Node_DynamicCast_AsFaction_Info_Interface) == 0x0000B0, "Member 'EscapePodSCT_C_AddScore::K2Node_DynamicCast_AsFaction_Info_Interface' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, K2Node_DynamicCast_bSuccess_3) == 0x0000C0, "Member 'EscapePodSCT_C_AddScore::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, Temp_int_Loop_Counter_Variable_1) == 0x0000C4, "Member 'EscapePodSCT_C_AddScore::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, CallFunc_GetFaction_ReturnValue) == 0x0000C8, "Member 'EscapePodSCT_C_AddScore::CallFunc_GetFaction_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C9, "Member 'EscapePodSCT_C_AddScore::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddScore, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000CC, "Member 'EscapePodSCT_C_AddScore::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function EscapePodSCT.EscapePodSCT_C.DropKeycards
// 0x0010 (0x0010 - 0x0000)
struct EscapePodSCT_C_DropKeycards final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DropPowerType_ReturnValue;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EscapePodSCT_C_DropKeycards) == 0x000004, "Wrong alignment on EscapePodSCT_C_DropKeycards");
static_assert(sizeof(EscapePodSCT_C_DropKeycards) == 0x000010, "Wrong size on EscapePodSCT_C_DropKeycards");
static_assert(offsetof(EscapePodSCT_C_DropKeycards, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'EscapePodSCT_C_DropKeycards::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_DropKeycards, CallFunc_DropPowerType_ReturnValue) == 0x00000C, "Member 'EscapePodSCT_C_DropKeycards::CallFunc_DropPowerType_ReturnValue' has a wrong offset!");

// Function EscapePodSCT.EscapePodSCT_C.HandleTakeMyChancesInSpaceAchievement
// 0x0028 (0x0028 - 0x0000)
struct EscapePodSCT_C_HandleTakeMyChancesInSpaceAchievement final
{
public:
	class ASCTPlayerController*                   CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IICharacterSCT_C>      CallFunc_IsPersonoidBPI_self_CastInput;            // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPersonoidBPI_IsPersonoid;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumAliveResidents_ReturnValue;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EscapePodSCT_C_HandleTakeMyChancesInSpaceAchievement) == 0x000008, "Wrong alignment on EscapePodSCT_C_HandleTakeMyChancesInSpaceAchievement");
static_assert(sizeof(EscapePodSCT_C_HandleTakeMyChancesInSpaceAchievement) == 0x000028, "Wrong size on EscapePodSCT_C_HandleTakeMyChancesInSpaceAchievement");
static_assert(offsetof(EscapePodSCT_C_HandleTakeMyChancesInSpaceAchievement, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'EscapePodSCT_C_HandleTakeMyChancesInSpaceAchievement::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_HandleTakeMyChancesInSpaceAchievement, CallFunc_IsPersonoidBPI_self_CastInput) == 0x000008, "Member 'EscapePodSCT_C_HandleTakeMyChancesInSpaceAchievement::CallFunc_IsPersonoidBPI_self_CastInput' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_HandleTakeMyChancesInSpaceAchievement, CallFunc_IsPersonoidBPI_IsPersonoid) == 0x000018, "Member 'EscapePodSCT_C_HandleTakeMyChancesInSpaceAchievement::CallFunc_IsPersonoidBPI_IsPersonoid' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_HandleTakeMyChancesInSpaceAchievement, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'EscapePodSCT_C_HandleTakeMyChancesInSpaceAchievement::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_HandleTakeMyChancesInSpaceAchievement, CallFunc_GetNumAliveResidents_ReturnValue) == 0x00001C, "Member 'EscapePodSCT_C_HandleTakeMyChancesInSpaceAchievement::CallFunc_GetNumAliveResidents_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_HandleTakeMyChancesInSpaceAchievement, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'EscapePodSCT_C_HandleTakeMyChancesInSpaceAchievement::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_HandleTakeMyChancesInSpaceAchievement, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'EscapePodSCT_C_HandleTakeMyChancesInSpaceAchievement::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function EscapePodSCT.EscapePodSCT_C.AddKarmaForEscaping
// 0x0038 (0x0038 - 0x0000)
struct EscapePodSCT_C_AddKarmaForEscaping final
{
public:
	int32                                         CallFunc_GetNumAlivePlayers_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState_MatchBP_C*              K2Node_DynamicCast_AsSCTPlayer_State_Match_BP;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState_MatchBP_C*              K2Node_DynamicCast_AsSCTPlayer_State_Match_BP_1;   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState_MatchBP_C*              K2Node_DynamicCast_AsSCTPlayer_State_Match_BP_2;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EscapePodSCT_C_AddKarmaForEscaping) == 0x000008, "Wrong alignment on EscapePodSCT_C_AddKarmaForEscaping");
static_assert(sizeof(EscapePodSCT_C_AddKarmaForEscaping) == 0x000038, "Wrong size on EscapePodSCT_C_AddKarmaForEscaping");
static_assert(offsetof(EscapePodSCT_C_AddKarmaForEscaping, CallFunc_GetNumAlivePlayers_ReturnValue) == 0x000000, "Member 'EscapePodSCT_C_AddKarmaForEscaping::CallFunc_GetNumAlivePlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddKarmaForEscaping, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'EscapePodSCT_C_AddKarmaForEscaping::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddKarmaForEscaping, K2Node_DynamicCast_AsSCTPlayer_State_Match_BP) == 0x000008, "Member 'EscapePodSCT_C_AddKarmaForEscaping::K2Node_DynamicCast_AsSCTPlayer_State_Match_BP' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddKarmaForEscaping, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'EscapePodSCT_C_AddKarmaForEscaping::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddKarmaForEscaping, K2Node_DynamicCast_AsSCTPlayer_State_Match_BP_1) == 0x000018, "Member 'EscapePodSCT_C_AddKarmaForEscaping::K2Node_DynamicCast_AsSCTPlayer_State_Match_BP_1' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddKarmaForEscaping, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'EscapePodSCT_C_AddKarmaForEscaping::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddKarmaForEscaping, K2Node_DynamicCast_AsSCTPlayer_State_Match_BP_2) == 0x000028, "Member 'EscapePodSCT_C_AddKarmaForEscaping::K2Node_DynamicCast_AsSCTPlayer_State_Match_BP_2' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddKarmaForEscaping, K2Node_DynamicCast_bSuccess_2) == 0x000030, "Member 'EscapePodSCT_C_AddKarmaForEscaping::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddKarmaForEscaping, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000031, "Member 'EscapePodSCT_C_AddKarmaForEscaping::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_AddKarmaForEscaping, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000032, "Member 'EscapePodSCT_C_AddKarmaForEscaping::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function EscapePodSCT.EscapePodSCT_C.Server_LatentInteractionSuccess
// 0x0020 (0x0020 - 0x0000)
struct EscapePodSCT_C_Server_LatentInteractionSuccess final
{
public:
	bool                                          InteractingActorIsCharacter;                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 InteractingInstigator;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InteractionFacilitator;                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Void;                                              // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EscapePodSCT_C_Server_LatentInteractionSuccess) == 0x000008, "Wrong alignment on EscapePodSCT_C_Server_LatentInteractionSuccess");
static_assert(sizeof(EscapePodSCT_C_Server_LatentInteractionSuccess) == 0x000020, "Wrong size on EscapePodSCT_C_Server_LatentInteractionSuccess");
static_assert(offsetof(EscapePodSCT_C_Server_LatentInteractionSuccess, InteractingActorIsCharacter) == 0x000000, "Member 'EscapePodSCT_C_Server_LatentInteractionSuccess::InteractingActorIsCharacter' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_Server_LatentInteractionSuccess, InteractingInstigator) == 0x000008, "Member 'EscapePodSCT_C_Server_LatentInteractionSuccess::InteractingInstigator' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_Server_LatentInteractionSuccess, InteractionFacilitator) == 0x000010, "Member 'EscapePodSCT_C_Server_LatentInteractionSuccess::InteractionFacilitator' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_Server_LatentInteractionSuccess, Void) == 0x000018, "Member 'EscapePodSCT_C_Server_LatentInteractionSuccess::Void' has a wrong offset!");

// Function EscapePodSCT.EscapePodSCT_C.InteractReleased
// 0x0018 (0x0018 - 0x0000)
struct EscapePodSCT_C_InteractReleased final
{
public:
	bool                                          InteractingActorIsCharacter;                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 InteractingActor;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Void;                                              // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EscapePodSCT_C_InteractReleased) == 0x000008, "Wrong alignment on EscapePodSCT_C_InteractReleased");
static_assert(sizeof(EscapePodSCT_C_InteractReleased) == 0x000018, "Wrong size on EscapePodSCT_C_InteractReleased");
static_assert(offsetof(EscapePodSCT_C_InteractReleased, InteractingActorIsCharacter) == 0x000000, "Member 'EscapePodSCT_C_InteractReleased::InteractingActorIsCharacter' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_InteractReleased, InteractingActor) == 0x000008, "Member 'EscapePodSCT_C_InteractReleased::InteractingActor' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_InteractReleased, Void) == 0x000010, "Member 'EscapePodSCT_C_InteractReleased::Void' has a wrong offset!");

// Function EscapePodSCT.EscapePodSCT_C.GetCanInteract
// 0x0018 (0x0018 - 0x0000)
struct EscapePodSCT_C_GetCanInteract final
{
public:
	bool                                          IsSimulated;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InteractingActorIsCharacter;                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 InteractingActor;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanInteract;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EscapePodSCT_C_GetCanInteract) == 0x000008, "Wrong alignment on EscapePodSCT_C_GetCanInteract");
static_assert(sizeof(EscapePodSCT_C_GetCanInteract) == 0x000018, "Wrong size on EscapePodSCT_C_GetCanInteract");
static_assert(offsetof(EscapePodSCT_C_GetCanInteract, IsSimulated) == 0x000000, "Member 'EscapePodSCT_C_GetCanInteract::IsSimulated' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_GetCanInteract, InteractingActorIsCharacter) == 0x000001, "Member 'EscapePodSCT_C_GetCanInteract::InteractingActorIsCharacter' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_GetCanInteract, InteractingActor) == 0x000008, "Member 'EscapePodSCT_C_GetCanInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_GetCanInteract, CanInteract) == 0x000010, "Member 'EscapePodSCT_C_GetCanInteract::CanInteract' has a wrong offset!");

// Function EscapePodSCT.EscapePodSCT_C.InteractPressed
// 0x00A0 (0x00A0 - 0x0000)
struct EscapePodSCT_C_InteractPressed final
{
public:
	bool                                          InteractingActorIsCharacter;                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 InteractingActor;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             InteractedHitResult;                               // 0x0010(0x008C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Success;                                           // 0x009C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EscapePodSCT_C_InteractPressed) == 0x000008, "Wrong alignment on EscapePodSCT_C_InteractPressed");
static_assert(sizeof(EscapePodSCT_C_InteractPressed) == 0x0000A0, "Wrong size on EscapePodSCT_C_InteractPressed");
static_assert(offsetof(EscapePodSCT_C_InteractPressed, InteractingActorIsCharacter) == 0x000000, "Member 'EscapePodSCT_C_InteractPressed::InteractingActorIsCharacter' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_InteractPressed, InteractingActor) == 0x000008, "Member 'EscapePodSCT_C_InteractPressed::InteractingActor' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_InteractPressed, InteractedHitResult) == 0x000010, "Member 'EscapePodSCT_C_InteractPressed::InteractedHitResult' has a wrong offset!");
static_assert(offsetof(EscapePodSCT_C_InteractPressed, Success) == 0x00009C, "Member 'EscapePodSCT_C_InteractPressed::Success' has a wrong offset!");

}

