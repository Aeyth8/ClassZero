#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GrabCharacterGA

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "SCT_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GrabCharacterGA.GrabCharacterGA_C
// 0x0070 (0x04B0 - 0x0440)
class UGrabCharacterGA_C final : public UContextSkill
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0440(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class ACharacterSCTBP_C*                      GrabbedCharacter;                                  // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             LocalGrabbed;                                      // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             LocalGrabbing;                                     // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0460(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TargetRotation;                                    // 0x046C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         TimeUntilAutoRelease;                              // 0x0478(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharacterOffset;                                   // 0x047C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasAutoReleaseExpired;                             // 0x0480(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_481[0x3];                                      // 0x0481(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            GrabbingGEHandle;                                  // 0x0484(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  BlockedGrabbingTargetTags;                         // 0x0490(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GrabCharacterGA(int32 EntryPoint);
	void UnbindEventsOnTarget();
	void Bind_Events_On_Target();
	void K2_OnEndAbility(bool bWasCancelled);
	void MulticastStopGrab();
	void InterpolatePosition();
	void MulticastStartGrab(const class ACharacter* Grabbed, class ACharacter* Grabbing, const struct FTransform& TargetLocation_0);
	void K2_ActivateAbility();
	void OnFinish_CED27E3B4E331A1551D2779FB0172727();
	void OnCompleted_04010586471C6448BB3E02BBDD6C1A77();
	void OnBlendOut_04010586471C6448BB3E02BBDD6C1A77();
	void OnInterrupted_04010586471C6448BB3E02BBDD6C1A77();
	void OnCancelled_04010586471C6448BB3E02BBDD6C1A77();
	void DisableCollisionBetween(class AActor* ActorToIgnore);
	void EnableCollisionBetween(class AActor* ActorToEnable);
	void CalculatePositionTarget(class AActor* SelfCharacter, class AActor* OtherCharacter, struct FVector* TargetLocation_0, struct FRotator* TargetRotation_0);
	class FText GetContextDescription();
	void SetGrabbedCharacter();
	void RemoveGrabbedCharacter();
	void BindToOnKillingActorChanged();
	void ClearOnKillingActorChangedBinding();
	void OnKillingActorChanged(class ACharacterSCT* NewKillingActor);
	void AttemptToAutoRelease();
	void StartGrabLogic();
	void StopGrabLogic();
	void OnTargetDestroyed(class AActor* DestroyedActor);

	bool ShouldShowContextUI() const;
	bool CanEndAbilityOnInputReleased() const;
	bool K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, struct FGameplayTagContainer* RelevantTags) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GrabCharacterGA_C">();
	}
	static class UGrabCharacterGA_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGrabCharacterGA_C>();
	}
};
static_assert(alignof(UGrabCharacterGA_C) == 0x000008, "Wrong alignment on UGrabCharacterGA_C");
static_assert(sizeof(UGrabCharacterGA_C) == 0x0004B0, "Wrong size on UGrabCharacterGA_C");
static_assert(offsetof(UGrabCharacterGA_C, UberGraphFrame) == 0x000440, "Member 'UGrabCharacterGA_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGrabCharacterGA_C, GrabbedCharacter) == 0x000448, "Member 'UGrabCharacterGA_C::GrabbedCharacter' has a wrong offset!");
static_assert(offsetof(UGrabCharacterGA_C, LocalGrabbed) == 0x000450, "Member 'UGrabCharacterGA_C::LocalGrabbed' has a wrong offset!");
static_assert(offsetof(UGrabCharacterGA_C, LocalGrabbing) == 0x000458, "Member 'UGrabCharacterGA_C::LocalGrabbing' has a wrong offset!");
static_assert(offsetof(UGrabCharacterGA_C, TargetLocation) == 0x000460, "Member 'UGrabCharacterGA_C::TargetLocation' has a wrong offset!");
static_assert(offsetof(UGrabCharacterGA_C, TargetRotation) == 0x00046C, "Member 'UGrabCharacterGA_C::TargetRotation' has a wrong offset!");
static_assert(offsetof(UGrabCharacterGA_C, TimeUntilAutoRelease) == 0x000478, "Member 'UGrabCharacterGA_C::TimeUntilAutoRelease' has a wrong offset!");
static_assert(offsetof(UGrabCharacterGA_C, CharacterOffset) == 0x00047C, "Member 'UGrabCharacterGA_C::CharacterOffset' has a wrong offset!");
static_assert(offsetof(UGrabCharacterGA_C, HasAutoReleaseExpired) == 0x000480, "Member 'UGrabCharacterGA_C::HasAutoReleaseExpired' has a wrong offset!");
static_assert(offsetof(UGrabCharacterGA_C, GrabbingGEHandle) == 0x000484, "Member 'UGrabCharacterGA_C::GrabbingGEHandle' has a wrong offset!");
static_assert(offsetof(UGrabCharacterGA_C, BlockedGrabbingTargetTags) == 0x000490, "Member 'UGrabCharacterGA_C::BlockedGrabbingTargetTags' has a wrong offset!");

}

