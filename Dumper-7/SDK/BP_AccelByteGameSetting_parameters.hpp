#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AccelByteGameSetting

#include "Basic.hpp"

#include "AccelByteUe4Sdk_structs.hpp"


namespace SDK::Params
{

// Function BP_AccelByteGameSetting.BP_AccelByteGameSetting_C.ExecuteUbergraph_BP_AccelByteGameSetting
// 0x05F0 (0x05F0 - 0x0000)
struct BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Message_3;                      // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code_3;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAccountUserData                       K2Node_CustomEvent_Result_1;                       // 0x0030(0x0120)(ConstParm)
	class FString                                 K2Node_CustomEvent_Message_2;                      // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code_2;                         // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FAccountUserData& Result, const class FString& Message, int32 Code)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0164(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAccountUserData                       Temp_struct_Variable;                              // 0x0188(0x0120)()
	class UUserDataCallbackProxy*                 CallFunc_GetUserData_ReturnValue;                  // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0x3];                                      // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& Message, int32 Code)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x02B4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Message_1;                      // 0x02C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code_1;                         // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAccountUserData                       K2Node_CustomEvent_Result;                         // 0x02E0(0x0120)(ConstParm)
	class FString                                 K2Node_CustomEvent_Message;                        // 0x0400(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code;                           // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FAccountUserData& Result, const class FString& Message, int32 Code)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0414(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable_1;                               // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0428(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAccountUserData                       Temp_struct_Variable_1;                            // 0x0438(0x0120)()
	class UUserDataCallbackProxy*                 CallFunc_GetUserData_ReturnValue_1;                // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_561[0x7];                                      // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAccelByteGIS*                          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Message, int32 Code)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0570(0x0010)(ZeroConstructor, NoDestructor)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0580(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0598(0x0018)()
	class UAccelByteGIS*                          CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x05B8(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x05D0(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting) == 0x000008, "Wrong alignment on BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting");
static_assert(sizeof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting) == 0x0005F0, "Wrong size on BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, EntryPoint) == 0x000000, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, K2Node_CustomEvent_Message_3) == 0x000008, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::K2Node_CustomEvent_Message_3' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, K2Node_CustomEvent_Code_3) == 0x000018, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::K2Node_CustomEvent_Code_3' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, K2Node_CustomEvent_Result_1) == 0x000030, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::K2Node_CustomEvent_Result_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, K2Node_CustomEvent_Message_2) == 0x000150, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::K2Node_CustomEvent_Message_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, K2Node_CustomEvent_Code_2) == 0x000160, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::K2Node_CustomEvent_Code_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, K2Node_CreateDelegate_OutputDelegate_1) == 0x000164, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, Temp_int_Variable) == 0x000174, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, Temp_string_Variable) == 0x000178, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, Temp_struct_Variable) == 0x000188, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, CallFunc_GetUserData_ReturnValue) == 0x0002A8, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::CallFunc_GetUserData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, CallFunc_IsValid_ReturnValue) == 0x0002B0, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, K2Node_CreateDelegate_OutputDelegate_2) == 0x0002B4, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, K2Node_CustomEvent_Message_1) == 0x0002C8, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::K2Node_CustomEvent_Message_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, K2Node_CustomEvent_Code_1) == 0x0002D8, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::K2Node_CustomEvent_Code_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, K2Node_CustomEvent_Result) == 0x0002E0, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, K2Node_CustomEvent_Message) == 0x000400, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::K2Node_CustomEvent_Message' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, K2Node_CustomEvent_Code) == 0x000410, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::K2Node_CustomEvent_Code' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, K2Node_CreateDelegate_OutputDelegate_3) == 0x000414, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, Temp_int_Variable_1) == 0x000424, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, Temp_string_Variable_1) == 0x000428, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, Temp_struct_Variable_1) == 0x000438, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, CallFunc_GetUserData_ReturnValue_1) == 0x000558, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::CallFunc_GetUserData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, CallFunc_IsValid_ReturnValue_1) == 0x000560, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000568, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, K2Node_CreateDelegate_OutputDelegate_4) == 0x000570, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, CallFunc_Conv_StringToText_ReturnValue) == 0x000580, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000598, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x0005B0, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0005B8, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, CallFunc_Conv_StringToText_ReturnValue_3) == 0x0005D0, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting, CallFunc_Not_PreBool_ReturnValue) == 0x0005E8, "Member 'BP_AccelByteGameSetting_C_ExecuteUbergraph_BP_AccelByteGameSetting::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_AccelByteGameSetting.BP_AccelByteGameSetting_C.OnSuccess_4A2869D14A8007B7DFFF148B70E95FE3
// 0x0138 (0x0138 - 0x0000)
struct BP_AccelByteGameSetting_C_OnSuccess_4A2869D14A8007B7DFFF148B70E95FE3 final
{
public:
	struct FAccountUserData                       Result;                                            // 0x0000(0x0120)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 Message;                                           // 0x0120(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Code;                                              // 0x0130(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteGameSetting_C_OnSuccess_4A2869D14A8007B7DFFF148B70E95FE3) == 0x000008, "Wrong alignment on BP_AccelByteGameSetting_C_OnSuccess_4A2869D14A8007B7DFFF148B70E95FE3");
static_assert(sizeof(BP_AccelByteGameSetting_C_OnSuccess_4A2869D14A8007B7DFFF148B70E95FE3) == 0x000138, "Wrong size on BP_AccelByteGameSetting_C_OnSuccess_4A2869D14A8007B7DFFF148B70E95FE3");
static_assert(offsetof(BP_AccelByteGameSetting_C_OnSuccess_4A2869D14A8007B7DFFF148B70E95FE3, Result) == 0x000000, "Member 'BP_AccelByteGameSetting_C_OnSuccess_4A2869D14A8007B7DFFF148B70E95FE3::Result' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_OnSuccess_4A2869D14A8007B7DFFF148B70E95FE3, Message) == 0x000120, "Member 'BP_AccelByteGameSetting_C_OnSuccess_4A2869D14A8007B7DFFF148B70E95FE3::Message' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_OnSuccess_4A2869D14A8007B7DFFF148B70E95FE3, Code) == 0x000130, "Member 'BP_AccelByteGameSetting_C_OnSuccess_4A2869D14A8007B7DFFF148B70E95FE3::Code' has a wrong offset!");

// Function BP_AccelByteGameSetting.BP_AccelByteGameSetting_C.OnError_4A2869D14A8007B7DFFF148B70E95FE3
// 0x0018 (0x0018 - 0x0000)
struct BP_AccelByteGameSetting_C_OnError_4A2869D14A8007B7DFFF148B70E95FE3 final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Code;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteGameSetting_C_OnError_4A2869D14A8007B7DFFF148B70E95FE3) == 0x000008, "Wrong alignment on BP_AccelByteGameSetting_C_OnError_4A2869D14A8007B7DFFF148B70E95FE3");
static_assert(sizeof(BP_AccelByteGameSetting_C_OnError_4A2869D14A8007B7DFFF148B70E95FE3) == 0x000018, "Wrong size on BP_AccelByteGameSetting_C_OnError_4A2869D14A8007B7DFFF148B70E95FE3");
static_assert(offsetof(BP_AccelByteGameSetting_C_OnError_4A2869D14A8007B7DFFF148B70E95FE3, Message) == 0x000000, "Member 'BP_AccelByteGameSetting_C_OnError_4A2869D14A8007B7DFFF148B70E95FE3::Message' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_OnError_4A2869D14A8007B7DFFF148B70E95FE3, Code) == 0x000010, "Member 'BP_AccelByteGameSetting_C_OnError_4A2869D14A8007B7DFFF148B70E95FE3::Code' has a wrong offset!");

// Function BP_AccelByteGameSetting.BP_AccelByteGameSetting_C.OnSuccess_F1016D56483EAC7C94175FBC2290B815
// 0x0138 (0x0138 - 0x0000)
struct BP_AccelByteGameSetting_C_OnSuccess_F1016D56483EAC7C94175FBC2290B815 final
{
public:
	struct FAccountUserData                       Result;                                            // 0x0000(0x0120)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 Message;                                           // 0x0120(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Code;                                              // 0x0130(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteGameSetting_C_OnSuccess_F1016D56483EAC7C94175FBC2290B815) == 0x000008, "Wrong alignment on BP_AccelByteGameSetting_C_OnSuccess_F1016D56483EAC7C94175FBC2290B815");
static_assert(sizeof(BP_AccelByteGameSetting_C_OnSuccess_F1016D56483EAC7C94175FBC2290B815) == 0x000138, "Wrong size on BP_AccelByteGameSetting_C_OnSuccess_F1016D56483EAC7C94175FBC2290B815");
static_assert(offsetof(BP_AccelByteGameSetting_C_OnSuccess_F1016D56483EAC7C94175FBC2290B815, Result) == 0x000000, "Member 'BP_AccelByteGameSetting_C_OnSuccess_F1016D56483EAC7C94175FBC2290B815::Result' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_OnSuccess_F1016D56483EAC7C94175FBC2290B815, Message) == 0x000120, "Member 'BP_AccelByteGameSetting_C_OnSuccess_F1016D56483EAC7C94175FBC2290B815::Message' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_OnSuccess_F1016D56483EAC7C94175FBC2290B815, Code) == 0x000130, "Member 'BP_AccelByteGameSetting_C_OnSuccess_F1016D56483EAC7C94175FBC2290B815::Code' has a wrong offset!");

// Function BP_AccelByteGameSetting.BP_AccelByteGameSetting_C.OnError_F1016D56483EAC7C94175FBC2290B815
// 0x0018 (0x0018 - 0x0000)
struct BP_AccelByteGameSetting_C_OnError_F1016D56483EAC7C94175FBC2290B815 final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Code;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteGameSetting_C_OnError_F1016D56483EAC7C94175FBC2290B815) == 0x000008, "Wrong alignment on BP_AccelByteGameSetting_C_OnError_F1016D56483EAC7C94175FBC2290B815");
static_assert(sizeof(BP_AccelByteGameSetting_C_OnError_F1016D56483EAC7C94175FBC2290B815) == 0x000018, "Wrong size on BP_AccelByteGameSetting_C_OnError_F1016D56483EAC7C94175FBC2290B815");
static_assert(offsetof(BP_AccelByteGameSetting_C_OnError_F1016D56483EAC7C94175FBC2290B815, Message) == 0x000000, "Member 'BP_AccelByteGameSetting_C_OnError_F1016D56483EAC7C94175FBC2290B815::Message' has a wrong offset!");
static_assert(offsetof(BP_AccelByteGameSetting_C_OnError_F1016D56483EAC7C94175FBC2290B815, Code) == 0x000010, "Member 'BP_AccelByteGameSetting_C_OnError_F1016D56483EAC7C94175FBC2290B815::Code' has a wrong offset!");

}

