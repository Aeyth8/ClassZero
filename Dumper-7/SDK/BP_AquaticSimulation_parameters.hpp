#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AquaticSimulation

#include "Basic.hpp"

#include "BS_AquaticInteraction_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "BS_AquaticInteractionData_structs.hpp"


namespace SDK::Params
{

// Function BP_AquaticSimulation.BP_AquaticSimulation_C.ExecuteUbergraph_BP_AquaticSimulation
// 0x0090 (0x0090 - 0x0000)
struct BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class ABP_AquaticSurface_C*             Temp_object_Variable;                              // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocal_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_NewRenderTarget_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_NewRenderTarget_ReturnValue_1;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_NewRenderTarget_ReturnValue_2;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UTextureRenderTarget2D*>         K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsLocal_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntVector                             CallFunc_GetWorldOriginLocation_ReturnValue;       // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnWorldOriginChanged_Update;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_GetRenderTarget_HeightRT;                 // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0088(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation) == 0x000008, "Wrong alignment on BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation");
static_assert(sizeof(BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation) == 0x000090, "Wrong size on BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation");
static_assert(offsetof(BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation, EntryPoint) == 0x000000, "Member 'BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation, Temp_object_Variable) == 0x000008, "Member 'BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation, CallFunc_Array_RemoveItem_ReturnValue) == 0x000014, "Member 'BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000024, "Member 'BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation, CallFunc_IsLocal_ReturnValue) == 0x00002C, "Member 'BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation::CallFunc_IsLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation, CallFunc_NewRenderTarget_ReturnValue) == 0x000030, "Member 'BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation::CallFunc_NewRenderTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation, CallFunc_NewRenderTarget_ReturnValue_1) == 0x000038, "Member 'BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation::CallFunc_NewRenderTarget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation, CallFunc_NewRenderTarget_ReturnValue_2) == 0x000040, "Member 'BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation::CallFunc_NewRenderTarget_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation, CallFunc_IsLocal_ReturnValue_1) == 0x000058, "Member 'BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation::CallFunc_IsLocal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation, CallFunc_GetWorldOriginLocation_ReturnValue) == 0x00005C, "Member 'BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation::CallFunc_GetWorldOriginLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation, CallFunc_OnWorldOriginChanged_Update) == 0x000068, "Member 'BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation::CallFunc_OnWorldOriginChanged_Update' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation, K2Node_CreateDelegate_OutputDelegate) == 0x00006C, "Member 'BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation, CallFunc_GetRenderTarget_HeightRT) == 0x000080, "Member 'BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation::CallFunc_GetRenderTarget_HeightRT' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000088, "Member 'BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_AquaticSimulation.BP_AquaticSimulation_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AquaticSimulation_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AquaticSimulation_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AquaticSimulation_C_ReceiveTick");
static_assert(sizeof(BP_AquaticSimulation_C_ReceiveTick) == 0x000004, "Wrong size on BP_AquaticSimulation_C_ReceiveTick");
static_assert(offsetof(BP_AquaticSimulation_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AquaticSimulation_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AquaticSimulation.BP_AquaticSimulation_C.UserConstructionScript
// 0x0210 (0x0210 - 0x0000)
struct BP_AquaticSimulation_C_UserConstructionScript final
{
public:
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0024(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_5;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x010C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_AquaticSurface_C*                   CallFunc_Array_Get_Item;                           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_6;            // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_7;            // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_8;            // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_9;            // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_10;           // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_2;          // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x01DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_11;           // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_12;           // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AquaticSimulation_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_AquaticSimulation_C_UserConstructionScript");
static_assert(sizeof(BP_AquaticSimulation_C_UserConstructionScript) == 0x000210, "Wrong size on BP_AquaticSimulation_C_UserConstructionScript");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000000, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_AquaticSimulation_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00000C, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000014, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000020, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000024, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Round_ReturnValue) == 0x0000B0, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x0000B4, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x0000B8, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Round_ReturnValue_1) == 0x0000BC, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000C0, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x0000C4, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_FTrunc_ReturnValue) == 0x0000C8, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000CC, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000D0, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x0000DC, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x0000E0, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Conv_IntToFloat_ReturnValue_5) == 0x0000E4, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Conv_IntToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_FTrunc_ReturnValue_1) == 0x0000E8, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000EC, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_1) == 0x0000F0, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000FC, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_2) == 0x000100, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x00010C, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000198, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x0001A0, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Conv_IntToFloat_ReturnValue_6) == 0x0001A4, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Conv_IntToFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Conv_IntToFloat_ReturnValue_7) == 0x0001A8, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Conv_IntToFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_3) == 0x0001AC, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_FMin_ReturnValue) == 0x0001B8, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0001BC, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Conv_IntToFloat_ReturnValue_8) == 0x0001C0, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Conv_IntToFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0001C4, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Conv_IntToFloat_ReturnValue_9) == 0x0001C8, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Conv_IntToFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0001CC, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Conv_IntToFloat_ReturnValue_10) == 0x0001D0, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Conv_IntToFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x0001D4, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Multiply_IntFloat_ReturnValue_2) == 0x0001D8, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Multiply_IntFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_MakeVector2D_ReturnValue) == 0x0001DC, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Conv_IntToFloat_ReturnValue_11) == 0x0001E4, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Conv_IntToFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x0001E8, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Conv_IntToFloat_ReturnValue_12) == 0x0001F0, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Conv_IntToFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x0001F4, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x0001F8, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000200, "Member 'BP_AquaticSimulation_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000204, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue_1) == 0x000208, "Member 'BP_AquaticSimulation_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_AquaticSimulation.BP_AquaticSimulation_C.GetRenderTarget
// 0x0030 (0x0030 - 0x0000)
struct BP_AquaticSimulation_C_GetRenderTarget final
{
public:
	int32                                         NumFramesOld;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 HeightRT;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 NewLocalVar_0;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AquaticSimulation_C_GetRenderTarget) == 0x000008, "Wrong alignment on BP_AquaticSimulation_C_GetRenderTarget");
static_assert(sizeof(BP_AquaticSimulation_C_GetRenderTarget) == 0x000030, "Wrong size on BP_AquaticSimulation_C_GetRenderTarget");
static_assert(offsetof(BP_AquaticSimulation_C_GetRenderTarget, NumFramesOld) == 0x000000, "Member 'BP_AquaticSimulation_C_GetRenderTarget::NumFramesOld' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_GetRenderTarget, HeightRT) == 0x000008, "Member 'BP_AquaticSimulation_C_GetRenderTarget::HeightRT' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_GetRenderTarget, NewLocalVar_0) == 0x000010, "Member 'BP_AquaticSimulation_C_GetRenderTarget::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_GetRenderTarget, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BP_AquaticSimulation_C_GetRenderTarget::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_GetRenderTarget, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_AquaticSimulation_C_GetRenderTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_GetRenderTarget, CallFunc_Percent_IntInt_ReturnValue) == 0x000020, "Member 'BP_AquaticSimulation_C_GetRenderTarget::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_GetRenderTarget, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AquaticSimulation_C_GetRenderTarget::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_AquaticSimulation.BP_AquaticSimulation_C.UpdateInteraction
// 0x00E8 (0x00E8 - 0x0000)
struct BP_AquaticSimulation_C_UpdateInteraction final
{
public:
	class UCanvas*                                Canvas;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ScreenSize;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Interaction;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NewInterationRotation;                             // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         ForceFade;                                         // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewInteractionLocation;                            // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateInteractionTime_Draw;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2DSquared_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_2;                        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTransform_Location;                    // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetTransform_Rotation;                    // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetTransform_Fade;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AquaticSimulation_C_UpdateInteraction) == 0x000008, "Wrong alignment on BP_AquaticSimulation_C_UpdateInteraction");
static_assert(sizeof(BP_AquaticSimulation_C_UpdateInteraction) == 0x0000E8, "Wrong size on BP_AquaticSimulation_C_UpdateInteraction");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, Canvas) == 0x000000, "Member 'BP_AquaticSimulation_C_UpdateInteraction::Canvas' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, ScreenSize) == 0x000008, "Member 'BP_AquaticSimulation_C_UpdateInteraction::ScreenSize' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, Interaction) == 0x000010, "Member 'BP_AquaticSimulation_C_UpdateInteraction::Interaction' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, DeltaTime) == 0x000014, "Member 'BP_AquaticSimulation_C_UpdateInteraction::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, NewInterationRotation) == 0x000018, "Member 'BP_AquaticSimulation_C_UpdateInteraction::NewInterationRotation' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, ForceFade) == 0x000024, "Member 'BP_AquaticSimulation_C_UpdateInteraction::ForceFade' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, NewInteractionLocation) == 0x000028, "Member 'BP_AquaticSimulation_C_UpdateInteraction::NewInteractionLocation' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_UpdateInteractionTime_Draw) == 0x000034, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_UpdateInteractionTime_Draw' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000035, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_RandomUnitVector_ReturnValue) == 0x000038, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000044, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000050, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_VSize2DSquared_ReturnValue) == 0x000058, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_VSize2DSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_Less_FloatFloat_ReturnValue) == 0x00005C, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000060, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x00006C, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_BreakRotator_Roll) == 0x000084, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_BreakRotator_Pitch) == 0x000088, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_BreakRotator_Yaw) == 0x00008C, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000090, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_Abs_ReturnValue) == 0x00009C, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_VSize_ReturnValue) == 0x0000A0, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_Abs_ReturnValue_1) == 0x0000A4, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_Abs_ReturnValue_2) == 0x0000AC, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000B0, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000B4, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000B8, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0000BC, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_GetTransform_Location) == 0x0000C0, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_GetTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_GetTransform_Rotation) == 0x0000CC, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_GetTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_GetTransform_Fade) == 0x0000D8, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_GetTransform_Fade' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_FClamp_ReturnValue) == 0x0000DC, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000E0, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteraction, CallFunc_IsValid_ReturnValue) == 0x0000E4, "Member 'BP_AquaticSimulation_C_UpdateInteraction::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AquaticSimulation.BP_AquaticSimulation_C.AddInteractionActor
// 0x00C0 (0x00C0 - 0x0000)
struct BP_AquaticSimulation_C_AddInteractionActor final
{
public:
	class ABP_AquaticSurface_C*                   InteractionSurface;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_AquaticInteraction_C*>       CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AquaticInteraction_C*               CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocal_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTransform_Location;                    // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetTransform_Rotation;                    // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetTransform_Fade;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBS_AquaticInteraction                 K2Node_MakeStruct_BS_AquaticInteraction;           // 0x0060(0x0058)(IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AquaticSimulation_C_AddInteractionActor) == 0x000008, "Wrong alignment on BP_AquaticSimulation_C_AddInteractionActor");
static_assert(sizeof(BP_AquaticSimulation_C_AddInteractionActor) == 0x0000C0, "Wrong size on BP_AquaticSimulation_C_AddInteractionActor");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteractionActor, InteractionSurface) == 0x000000, "Member 'BP_AquaticSimulation_C_AddInteractionActor::InteractionSurface' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteractionActor, Target) == 0x000008, "Member 'BP_AquaticSimulation_C_AddInteractionActor::Target' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteractionActor, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'BP_AquaticSimulation_C_AddInteractionActor::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteractionActor, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_AquaticSimulation_C_AddInteractionActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteractionActor, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_AquaticSimulation_C_AddInteractionActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteractionActor, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AquaticSimulation_C_AddInteractionActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteractionActor, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_AquaticSimulation_C_AddInteractionActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteractionActor, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_AquaticSimulation_C_AddInteractionActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteractionActor, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_AquaticSimulation_C_AddInteractionActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteractionActor, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_AquaticSimulation_C_AddInteractionActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteractionActor, CallFunc_IsLocal_ReturnValue) == 0x000040, "Member 'BP_AquaticSimulation_C_AddInteractionActor::CallFunc_IsLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteractionActor, CallFunc_GetTransform_Location) == 0x000044, "Member 'BP_AquaticSimulation_C_AddInteractionActor::CallFunc_GetTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteractionActor, CallFunc_GetTransform_Rotation) == 0x000050, "Member 'BP_AquaticSimulation_C_AddInteractionActor::CallFunc_GetTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteractionActor, CallFunc_GetTransform_Fade) == 0x00005C, "Member 'BP_AquaticSimulation_C_AddInteractionActor::CallFunc_GetTransform_Fade' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteractionActor, K2Node_MakeStruct_BS_AquaticInteraction) == 0x000060, "Member 'BP_AquaticSimulation_C_AddInteractionActor::K2Node_MakeStruct_BS_AquaticInteraction' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteractionActor, CallFunc_Array_Add_ReturnValue) == 0x0000B8, "Member 'BP_AquaticSimulation_C_AddInteractionActor::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_AquaticSimulation.BP_AquaticSimulation_C.RemoveInteractionActor
// 0x0050 (0x0050 - 0x0000)
struct BP_AquaticSimulation_C_RemoveInteractionActor final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RemoveIndex;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_AquaticInteraction_C*>       CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_AquaticInteraction_C*               CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocal_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AquaticSimulation_C_RemoveInteractionActor) == 0x000008, "Wrong alignment on BP_AquaticSimulation_C_RemoveInteractionActor");
static_assert(sizeof(BP_AquaticSimulation_C_RemoveInteractionActor) == 0x000050, "Wrong size on BP_AquaticSimulation_C_RemoveInteractionActor");
static_assert(offsetof(BP_AquaticSimulation_C_RemoveInteractionActor, Target) == 0x000000, "Member 'BP_AquaticSimulation_C_RemoveInteractionActor::Target' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_RemoveInteractionActor, RemoveIndex) == 0x000008, "Member 'BP_AquaticSimulation_C_RemoveInteractionActor::RemoveIndex' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_RemoveInteractionActor, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_AquaticSimulation_C_RemoveInteractionActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_RemoveInteractionActor, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'BP_AquaticSimulation_C_RemoveInteractionActor::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_RemoveInteractionActor, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AquaticSimulation_C_RemoveInteractionActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_RemoveInteractionActor, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_AquaticSimulation_C_RemoveInteractionActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_RemoveInteractionActor, Temp_int_Variable) == 0x00002C, "Member 'BP_AquaticSimulation_C_RemoveInteractionActor::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_RemoveInteractionActor, CallFunc_IsLocal_ReturnValue) == 0x000030, "Member 'BP_AquaticSimulation_C_RemoveInteractionActor::CallFunc_IsLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_RemoveInteractionActor, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_AquaticSimulation_C_RemoveInteractionActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_RemoveInteractionActor, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_AquaticSimulation_C_RemoveInteractionActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_RemoveInteractionActor, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_AquaticSimulation_C_RemoveInteractionActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_RemoveInteractionActor, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'BP_AquaticSimulation_C_RemoveInteractionActor::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_RemoveInteractionActor, CallFunc_Greater_IntInt_ReturnValue) == 0x000044, "Member 'BP_AquaticSimulation_C_RemoveInteractionActor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_RemoveInteractionActor, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000045, "Member 'BP_AquaticSimulation_C_RemoveInteractionActor::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_RemoveInteractionActor, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BP_AquaticSimulation_C_RemoveInteractionActor::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_AquaticSimulation.BP_AquaticSimulation_C.UpdateInteractionTime
// 0x0010 (0x0010 - 0x0000)
struct BP_AquaticSimulation_C_UpdateInteractionTime final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Draw;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AquaticSimulation_C_UpdateInteractionTime) == 0x000004, "Wrong alignment on BP_AquaticSimulation_C_UpdateInteractionTime");
static_assert(sizeof(BP_AquaticSimulation_C_UpdateInteractionTime) == 0x000010, "Wrong size on BP_AquaticSimulation_C_UpdateInteractionTime");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteractionTime, Index_0) == 0x000000, "Member 'BP_AquaticSimulation_C_UpdateInteractionTime::Index_0' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteractionTime, DeltaTime) == 0x000004, "Member 'BP_AquaticSimulation_C_UpdateInteractionTime::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteractionTime, Draw) == 0x000008, "Member 'BP_AquaticSimulation_C_UpdateInteractionTime::Draw' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteractionTime, CallFunc_Less_FloatFloat_ReturnValue) == 0x000009, "Member 'BP_AquaticSimulation_C_UpdateInteractionTime::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteractionTime, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00000A, "Member 'BP_AquaticSimulation_C_UpdateInteractionTime::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateInteractionTime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_AquaticSimulation_C_UpdateInteractionTime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AquaticSimulation.BP_AquaticSimulation_C.UpdateRenderPosition
// 0x017C (0x017C - 0x0000)
struct BP_AquaticSimulation_C_UpdateRenderPosition final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x00EC(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AquaticSimulation_C_UpdateRenderPosition) == 0x000004, "Wrong alignment on BP_AquaticSimulation_C_UpdateRenderPosition");
static_assert(sizeof(BP_AquaticSimulation_C_UpdateRenderPosition) == 0x00017C, "Wrong size on BP_AquaticSimulation_C_UpdateRenderPosition");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x00000C, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000014, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000018, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00001C, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000020, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x000028, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000030, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_VSize2D_ReturnValue) == 0x000038, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000040, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000050, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_FClamp_ReturnValue) == 0x00005C, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_BreakVector_X) == 0x000060, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_BreakVector_Y) == 0x000064, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_BreakVector_Z) == 0x000068, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_FMax_ReturnValue) == 0x00006C, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, K2Node_MakeStruct_LinearColor) == 0x000070, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000080, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000084, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000088, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_BreakVector2D_X) == 0x000090, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_BreakVector2D_Y) == 0x000094, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_FTrunc_ReturnValue) == 0x000098, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_FTrunc_ReturnValue_1) == 0x00009C, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x0000A4, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x0000A8, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x0000AC, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_MakeVector_ReturnValue) == 0x0000B0, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_MakeVector2D_ReturnValue) == 0x0000BC, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000C4, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x0000D0, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D8, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x0000E4, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0000EC, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateRenderPosition, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000178, "Member 'BP_AquaticSimulation_C_UpdateRenderPosition::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_AquaticSimulation.BP_AquaticSimulation_C.RemoveInteractionFinished
// 0x0001 (0x0001 - 0x0000)
struct BP_AquaticSimulation_C_RemoveInteractionFinished final
{
public:
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AquaticSimulation_C_RemoveInteractionFinished) == 0x000001, "Wrong alignment on BP_AquaticSimulation_C_RemoveInteractionFinished");
static_assert(sizeof(BP_AquaticSimulation_C_RemoveInteractionFinished) == 0x000001, "Wrong size on BP_AquaticSimulation_C_RemoveInteractionFinished");
static_assert(offsetof(BP_AquaticSimulation_C_RemoveInteractionFinished, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000000, "Member 'BP_AquaticSimulation_C_RemoveInteractionFinished::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AquaticSimulation.BP_AquaticSimulation_C.SetTargetPoint
// 0x0060 (0x0060 - 0x0000)
struct BP_AquaticSimulation_C_SetTargetPoint final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InterpSpeed;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxDistance;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AquaticSimulation_C_SetTargetPoint) == 0x000004, "Wrong alignment on BP_AquaticSimulation_C_SetTargetPoint");
static_assert(sizeof(BP_AquaticSimulation_C_SetTargetPoint) == 0x000060, "Wrong size on BP_AquaticSimulation_C_SetTargetPoint");
static_assert(offsetof(BP_AquaticSimulation_C_SetTargetPoint, TargetLocation) == 0x000000, "Member 'BP_AquaticSimulation_C_SetTargetPoint::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SetTargetPoint, InterpSpeed) == 0x00000C, "Member 'BP_AquaticSimulation_C_SetTargetPoint::InterpSpeed' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SetTargetPoint, MaxDistance) == 0x000010, "Member 'BP_AquaticSimulation_C_SetTargetPoint::MaxDistance' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SetTargetPoint, CallFunc_FClamp_ReturnValue) == 0x000014, "Member 'BP_AquaticSimulation_C_SetTargetPoint::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SetTargetPoint, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000018, "Member 'BP_AquaticSimulation_C_SetTargetPoint::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SetTargetPoint, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000020, "Member 'BP_AquaticSimulation_C_SetTargetPoint::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SetTargetPoint, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000028, "Member 'BP_AquaticSimulation_C_SetTargetPoint::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SetTargetPoint, CallFunc_ClampVectorSize_ReturnValue) == 0x000034, "Member 'BP_AquaticSimulation_C_SetTargetPoint::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SetTargetPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x000040, "Member 'BP_AquaticSimulation_C_SetTargetPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SetTargetPoint, CallFunc_VLerp_ReturnValue) == 0x00004C, "Member 'BP_AquaticSimulation_C_SetTargetPoint::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SetTargetPoint, CallFunc_Conv_VectorToVector2D_ReturnValue_1) == 0x000058, "Member 'BP_AquaticSimulation_C_SetTargetPoint::CallFunc_Conv_VectorToVector2D_ReturnValue_1' has a wrong offset!");

// Function BP_AquaticSimulation.BP_AquaticSimulation_C.AddInteraction
// 0x00B8 (0x00B8 - 0x0000)
struct BP_AquaticSimulation_C_AddInteraction final
{
public:
	struct FBS_AquaticInteractionData             Interaction;                                       // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VisibilityTest;                                    // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBS_AquaticInteraction                 K2Node_MakeStruct_BS_AquaticInteraction;           // 0x0040(0x0058)(IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2DSquared_ReturnValue;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AquaticSimulation_C_AddInteraction) == 0x000008, "Wrong alignment on BP_AquaticSimulation_C_AddInteraction");
static_assert(sizeof(BP_AquaticSimulation_C_AddInteraction) == 0x0000B8, "Wrong size on BP_AquaticSimulation_C_AddInteraction");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteraction, Interaction) == 0x000000, "Member 'BP_AquaticSimulation_C_AddInteraction::Interaction' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteraction, Location) == 0x000028, "Member 'BP_AquaticSimulation_C_AddInteraction::Location' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteraction, Duration) == 0x000034, "Member 'BP_AquaticSimulation_C_AddInteraction::Duration' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteraction, VisibilityTest) == 0x000038, "Member 'BP_AquaticSimulation_C_AddInteraction::VisibilityTest' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteraction, K2Node_MakeStruct_BS_AquaticInteraction) == 0x000040, "Member 'BP_AquaticSimulation_C_AddInteraction::K2Node_MakeStruct_BS_AquaticInteraction' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteraction, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000098, "Member 'BP_AquaticSimulation_C_AddInteraction::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteraction, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000A0, "Member 'BP_AquaticSimulation_C_AddInteraction::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteraction, CallFunc_VSize2DSquared_ReturnValue) == 0x0000A8, "Member 'BP_AquaticSimulation_C_AddInteraction::CallFunc_VSize2DSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteraction, CallFunc_Array_Add_ReturnValue) == 0x0000AC, "Member 'BP_AquaticSimulation_C_AddInteraction::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_AddInteraction, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000B0, "Member 'BP_AquaticSimulation_C_AddInteraction::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AquaticSimulation.BP_AquaticSimulation_C.DebugDraw
// 0x0210 (0x0210 - 0x0000)
struct BP_AquaticSimulation_C_DebugDraw final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AquaticSurface_C*                   CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sqrt_ReturnValue;                         // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBS_AquaticInteraction                 CallFunc_Array_Get_Item_1;                         // 0x0130(0x0058)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTransform_Location;                    // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetTransform_Rotation;                    // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetTransform_Fade;                        // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_FloatToLinearColor_ReturnValue;      // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AquaticSimulation_C_DebugDraw) == 0x000008, "Wrong alignment on BP_AquaticSimulation_C_DebugDraw");
static_assert(sizeof(BP_AquaticSimulation_C_DebugDraw) == 0x000210, "Wrong size on BP_AquaticSimulation_C_DebugDraw");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_AquaticSimulation_C_DebugDraw::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_AquaticSimulation_C_DebugDraw::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_AquaticSimulation_C_DebugDraw::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_BreakVector_X) == 0x00001C, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_BreakVector_Y) == 0x000020, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_BreakVector_Z) == 0x000024, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000028, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_BreakVector_X_1) == 0x000034, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_BreakVector_Y_1) == 0x000038, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_BreakVector_Z_1) == 0x00003C, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_BreakVector2D_X) == 0x000040, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_BreakVector2D_Y) == 0x000044, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000048, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_MakeVector_ReturnValue) == 0x000054, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_BreakVector_X_2) == 0x000060, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_BreakVector_Y_2) == 0x000064, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_BreakVector_Z_2) == 0x000068, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x00006C, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_BreakVector_X_3) == 0x000078, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_BreakVector_Y_3) == 0x00007C, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_BreakVector_Z_3) == 0x000080, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_IsValid_ReturnValue) == 0x000094, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000098, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000A4, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_Array_Length_ReturnValue_1) == 0x0000B0, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, Temp_int_Loop_Counter_Variable_1) == 0x0000B4, "Member 'BP_AquaticSimulation_C_DebugDraw::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_Less_IntInt_ReturnValue) == 0x0000B9, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_Array_Length_ReturnValue_2) == 0x0000C0, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_BreakVector2D_X_1) == 0x0000C4, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_BreakVector2D_Y_1) == 0x0000C8, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_Conv_IntToString_ReturnValue) == 0x0000D0, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_MakeVector_ReturnValue_1) == 0x0000E0, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_Concat_StrStr_ReturnValue) == 0x0000F0, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_BreakVector2D_X_2) == 0x000100, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_BreakVector2D_Y_2) == 0x000104, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_MakeVector_ReturnValue_2) == 0x000108, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_Sqrt_ReturnValue) == 0x000114, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x000118, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000124, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_Array_Get_Item_1) == 0x000130, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_Array_Length_ReturnValue_3) == 0x000188, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_Less_IntInt_ReturnValue_1) == 0x00018C, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_GetTransform_Location) == 0x000190, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_GetTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_GetTransform_Rotation) == 0x00019C, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_GetTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_GetTransform_Fade) == 0x0001A8, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_GetTransform_Fade' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_IsValid_ReturnValue_1) == 0x0001AC, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_Conv_FloatToLinearColor_ReturnValue) == 0x0001B0, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_Conv_FloatToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_MakeVector_ReturnValue_3) == 0x0001C0, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_MakeVector_ReturnValue_4) == 0x0001CC, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_Add_VectorVector_ReturnValue) == 0x0001D8, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001E4, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0001F0, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_MakeVector_ReturnValue_5) == 0x0001F4, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DebugDraw, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000200, "Member 'BP_AquaticSimulation_C_DebugDraw::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BP_AquaticSimulation.BP_AquaticSimulation_C.NewRenderTarget
// 0x0018 (0x0018 - 0x0000)
struct BP_AquaticSimulation_C_NewRenderTarget final
{
public:
	class UTextureRenderTarget2D*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureRenderTargetFormat                    Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureRenderTargetFormat                    Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETextureRenderTargetFormat                    K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AquaticSimulation_C_NewRenderTarget) == 0x000008, "Wrong alignment on BP_AquaticSimulation_C_NewRenderTarget");
static_assert(sizeof(BP_AquaticSimulation_C_NewRenderTarget) == 0x000018, "Wrong size on BP_AquaticSimulation_C_NewRenderTarget");
static_assert(offsetof(BP_AquaticSimulation_C_NewRenderTarget, ReturnValue) == 0x000000, "Member 'BP_AquaticSimulation_C_NewRenderTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_NewRenderTarget, Temp_byte_Variable) == 0x000008, "Member 'BP_AquaticSimulation_C_NewRenderTarget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_NewRenderTarget, Temp_byte_Variable_1) == 0x000009, "Member 'BP_AquaticSimulation_C_NewRenderTarget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_NewRenderTarget, Temp_bool_Variable) == 0x00000A, "Member 'BP_AquaticSimulation_C_NewRenderTarget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_NewRenderTarget, K2Node_Select_Default) == 0x00000B, "Member 'BP_AquaticSimulation_C_NewRenderTarget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_NewRenderTarget, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000010, "Member 'BP_AquaticSimulation_C_NewRenderTarget::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");

// Function BP_AquaticSimulation.BP_AquaticSimulation_C.DrawSplat
// 0x00D0 (0x00D0 - 0x0000)
struct BP_AquaticSimulation_C_DrawSplat final
{
public:
	struct FVector2D                              ScreenSize;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                Canvas;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ForceSize;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AquaticSimulation_C_DrawSplat) == 0x000010, "Wrong alignment on BP_AquaticSimulation_C_DrawSplat");
static_assert(sizeof(BP_AquaticSimulation_C_DrawSplat) == 0x0000D0, "Wrong size on BP_AquaticSimulation_C_DrawSplat");
static_assert(offsetof(BP_AquaticSimulation_C_DrawSplat, ScreenSize) == 0x000000, "Member 'BP_AquaticSimulation_C_DrawSplat::ScreenSize' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DrawSplat, Canvas) == 0x000008, "Member 'BP_AquaticSimulation_C_DrawSplat::Canvas' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DrawSplat, ForceSize) == 0x000010, "Member 'BP_AquaticSimulation_C_DrawSplat::ForceSize' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DrawSplat, Location) == 0x000014, "Member 'BP_AquaticSimulation_C_DrawSplat::Location' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DrawSplat, Radius) == 0x000020, "Member 'BP_AquaticSimulation_C_DrawSplat::Radius' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DrawSplat, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'BP_AquaticSimulation_C_DrawSplat::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DrawSplat, CallFunc_InvertTransform_ReturnValue) == 0x000060, "Member 'BP_AquaticSimulation_C_DrawSplat::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DrawSplat, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_AquaticSimulation_C_DrawSplat::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DrawSplat, CallFunc_TransformLocation_ReturnValue) == 0x000094, "Member 'BP_AquaticSimulation_C_DrawSplat::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DrawSplat, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000A0, "Member 'BP_AquaticSimulation_C_DrawSplat::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DrawSplat, CallFunc_BreakVector_X) == 0x0000AC, "Member 'BP_AquaticSimulation_C_DrawSplat::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DrawSplat, CallFunc_BreakVector_Y) == 0x0000B0, "Member 'BP_AquaticSimulation_C_DrawSplat::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DrawSplat, CallFunc_BreakVector_Z) == 0x0000B4, "Member 'BP_AquaticSimulation_C_DrawSplat::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DrawSplat, K2Node_MakeStruct_LinearColor) == 0x0000B8, "Member 'BP_AquaticSimulation_C_DrawSplat::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function BP_AquaticSimulation.BP_AquaticSimulation_C.UpdateSimulationFocus
// 0x0088 (0x0088 - 0x0000)
struct BP_AquaticSimulation_C_UpdateSimulationFocus final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AquaticSurface_C*                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AquaticSimulation_C_UpdateSimulationFocus) == 0x000008, "Wrong alignment on BP_AquaticSimulation_C_UpdateSimulationFocus");
static_assert(sizeof(BP_AquaticSimulation_C_UpdateSimulationFocus) == 0x000088, "Wrong size on BP_AquaticSimulation_C_UpdateSimulationFocus");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulationFocus, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_AquaticSimulation_C_UpdateSimulationFocus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulationFocus, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_AquaticSimulation_C_UpdateSimulationFocus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulationFocus, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_AquaticSimulation_C_UpdateSimulationFocus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulationFocus, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_AquaticSimulation_C_UpdateSimulationFocus::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulationFocus, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_AquaticSimulation_C_UpdateSimulationFocus::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulationFocus, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_AquaticSimulation_C_UpdateSimulationFocus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulationFocus, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_AquaticSimulation_C_UpdateSimulationFocus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulationFocus, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000024, "Member 'BP_AquaticSimulation_C_UpdateSimulationFocus::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulationFocus, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000028, "Member 'BP_AquaticSimulation_C_UpdateSimulationFocus::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulationFocus, CallFunc_GetCameraRotation_ReturnValue) == 0x000030, "Member 'BP_AquaticSimulation_C_UpdateSimulationFocus::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulationFocus, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BP_AquaticSimulation_C_UpdateSimulationFocus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulationFocus, CallFunc_GetForwardVector_ReturnValue) == 0x000040, "Member 'BP_AquaticSimulation_C_UpdateSimulationFocus::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulationFocus, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00004C, "Member 'BP_AquaticSimulation_C_UpdateSimulationFocus::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulationFocus, CallFunc_GetCameraLocation_ReturnValue) == 0x000058, "Member 'BP_AquaticSimulation_C_UpdateSimulationFocus::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulationFocus, CallFunc_Add_VectorVector_ReturnValue) == 0x000064, "Member 'BP_AquaticSimulation_C_UpdateSimulationFocus::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulationFocus, CallFunc_BreakVector_X) == 0x000070, "Member 'BP_AquaticSimulation_C_UpdateSimulationFocus::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulationFocus, CallFunc_BreakVector_Y) == 0x000074, "Member 'BP_AquaticSimulation_C_UpdateSimulationFocus::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulationFocus, CallFunc_BreakVector_Z) == 0x000078, "Member 'BP_AquaticSimulation_C_UpdateSimulationFocus::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulationFocus, CallFunc_MakeVector2D_ReturnValue) == 0x00007C, "Member 'BP_AquaticSimulation_C_UpdateSimulationFocus::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function BP_AquaticSimulation.BP_AquaticSimulation_C.SpawnSplash
// 0x00C0 (0x00C0 - 0x0000)
struct BP_AquaticSimulation_C_SpawnSplash final
{
public:
	struct FBS_AquaticInteraction                 Interaction;                                       // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AquaticSurface_C*                   Surface;                                           // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewLocation;                                       // 0x0060(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AquaticSimulation_C_SpawnSplash) == 0x000008, "Wrong alignment on BP_AquaticSimulation_C_SpawnSplash");
static_assert(sizeof(BP_AquaticSimulation_C_SpawnSplash) == 0x0000C0, "Wrong size on BP_AquaticSimulation_C_SpawnSplash");
static_assert(offsetof(BP_AquaticSimulation_C_SpawnSplash, Interaction) == 0x000000, "Member 'BP_AquaticSimulation_C_SpawnSplash::Interaction' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SpawnSplash, Surface) == 0x000058, "Member 'BP_AquaticSimulation_C_SpawnSplash::Surface' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SpawnSplash, NewLocation) == 0x000060, "Member 'BP_AquaticSimulation_C_SpawnSplash::NewLocation' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SpawnSplash, CallFunc_BreakVector_X) == 0x00006C, "Member 'BP_AquaticSimulation_C_SpawnSplash::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SpawnSplash, CallFunc_BreakVector_Y) == 0x000070, "Member 'BP_AquaticSimulation_C_SpawnSplash::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SpawnSplash, CallFunc_BreakVector_Z) == 0x000074, "Member 'BP_AquaticSimulation_C_SpawnSplash::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SpawnSplash, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000078, "Member 'BP_AquaticSimulation_C_SpawnSplash::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SpawnSplash, CallFunc_BreakVector_X_1) == 0x000084, "Member 'BP_AquaticSimulation_C_SpawnSplash::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SpawnSplash, CallFunc_BreakVector_Y_1) == 0x000088, "Member 'BP_AquaticSimulation_C_SpawnSplash::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SpawnSplash, CallFunc_BreakVector_Z_1) == 0x00008C, "Member 'BP_AquaticSimulation_C_SpawnSplash::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SpawnSplash, CallFunc_VSize_ReturnValue) == 0x000090, "Member 'BP_AquaticSimulation_C_SpawnSplash::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SpawnSplash, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000094, "Member 'BP_AquaticSimulation_C_SpawnSplash::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SpawnSplash, CallFunc_BreakVector_X_2) == 0x0000A0, "Member 'BP_AquaticSimulation_C_SpawnSplash::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SpawnSplash, CallFunc_BreakVector_Y_2) == 0x0000A4, "Member 'BP_AquaticSimulation_C_SpawnSplash::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SpawnSplash, CallFunc_BreakVector_Z_2) == 0x0000A8, "Member 'BP_AquaticSimulation_C_SpawnSplash::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SpawnSplash, CallFunc_MakeVector_ReturnValue) == 0x0000AC, "Member 'BP_AquaticSimulation_C_SpawnSplash::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SpawnSplash, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000B8, "Member 'BP_AquaticSimulation_C_SpawnSplash::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SpawnSplash, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000BC, "Member 'BP_AquaticSimulation_C_SpawnSplash::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SpawnSplash, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0000BD, "Member 'BP_AquaticSimulation_C_SpawnSplash::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SpawnSplash, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0000BE, "Member 'BP_AquaticSimulation_C_SpawnSplash::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_SpawnSplash, CallFunc_BooleanAND_ReturnValue) == 0x0000BF, "Member 'BP_AquaticSimulation_C_SpawnSplash::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AquaticSimulation.BP_AquaticSimulation_C.OnWorldOriginChanged
// 0x0148 (0x0148 - 0x0000)
struct BP_AquaticSimulation_C_OnWorldOriginChanged final
{
public:
	struct FIntVector                             OldLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             NewLocation;                                       // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Update;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBS_AquaticInteraction                 CallFunc_Array_Get_Item;                           // 0x0070(0x0058)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBS_AquaticInteraction                 K2Node_SetFieldsInStruct_StructOut;                // 0x00E0(0x0058)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AquaticSimulation_C_OnWorldOriginChanged) == 0x000008, "Wrong alignment on BP_AquaticSimulation_C_OnWorldOriginChanged");
static_assert(sizeof(BP_AquaticSimulation_C_OnWorldOriginChanged) == 0x000148, "Wrong size on BP_AquaticSimulation_C_OnWorldOriginChanged");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, OldLocation) == 0x000000, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::OldLocation' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, NewLocation) == 0x00000C, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::NewLocation' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, Update) == 0x000018, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::Update' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00001C, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000021, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000024, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000028, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x00002C, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, CallFunc_MakeVector2D_ReturnValue) == 0x000034, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, CallFunc_BooleanAND_ReturnValue_1) == 0x00003C, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000040, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, CallFunc_MakeVector2D_ReturnValue_1) == 0x000044, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000050, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000058, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, CallFunc_Less_IntInt_ReturnValue) == 0x0000CC, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D0, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, K2Node_SetFieldsInStruct_StructOut) == 0x0000E0, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000138, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_OnWorldOriginChanged, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x000140, "Member 'BP_AquaticSimulation_C_OnWorldOriginChanged::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");

// Function BP_AquaticSimulation.BP_AquaticSimulation_C.DoSimulationStep
// 0x0080 (0x0080 - 0x0000)
struct BP_AquaticSimulation_C_DoSimulationStep final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_GetRenderTarget_HeightRT;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0048(0x0010)(NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_GetRenderTarget_HeightRT_1;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_GetRenderTarget_HeightRT_2;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AquaticSimulation_C_DoSimulationStep) == 0x000008, "Wrong alignment on BP_AquaticSimulation_C_DoSimulationStep");
static_assert(sizeof(BP_AquaticSimulation_C_DoSimulationStep) == 0x000080, "Wrong size on BP_AquaticSimulation_C_DoSimulationStep");
static_assert(offsetof(BP_AquaticSimulation_C_DoSimulationStep, DeltaTime) == 0x000000, "Member 'BP_AquaticSimulation_C_DoSimulationStep::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DoSimulationStep, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AquaticSimulation_C_DoSimulationStep::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DoSimulationStep, CallFunc_BreakVector2D_X) == 0x000008, "Member 'BP_AquaticSimulation_C_DoSimulationStep::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DoSimulationStep, CallFunc_BreakVector2D_Y) == 0x00000C, "Member 'BP_AquaticSimulation_C_DoSimulationStep::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DoSimulationStep, CallFunc_BreakVector2D_X_1) == 0x000010, "Member 'BP_AquaticSimulation_C_DoSimulationStep::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DoSimulationStep, CallFunc_BreakVector2D_Y_1) == 0x000014, "Member 'BP_AquaticSimulation_C_DoSimulationStep::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DoSimulationStep, CallFunc_MakeColor_ReturnValue) == 0x000018, "Member 'BP_AquaticSimulation_C_DoSimulationStep::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DoSimulationStep, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_AquaticSimulation_C_DoSimulationStep::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DoSimulationStep, CallFunc_GetRenderTarget_HeightRT) == 0x000030, "Member 'BP_AquaticSimulation_C_DoSimulationStep::CallFunc_GetRenderTarget_HeightRT' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DoSimulationStep, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000038, "Member 'BP_AquaticSimulation_C_DoSimulationStep::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DoSimulationStep, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000040, "Member 'BP_AquaticSimulation_C_DoSimulationStep::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DoSimulationStep, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000048, "Member 'BP_AquaticSimulation_C_DoSimulationStep::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DoSimulationStep, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_AquaticSimulation_C_DoSimulationStep::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DoSimulationStep, CallFunc_GetRenderTarget_HeightRT_1) == 0x000060, "Member 'BP_AquaticSimulation_C_DoSimulationStep::CallFunc_GetRenderTarget_HeightRT_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DoSimulationStep, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_AquaticSimulation_C_DoSimulationStep::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DoSimulationStep, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_AquaticSimulation_C_DoSimulationStep::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DoSimulationStep, CallFunc_GetRenderTarget_HeightRT_2) == 0x000070, "Member 'BP_AquaticSimulation_C_DoSimulationStep::CallFunc_GetRenderTarget_HeightRT_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DoSimulationStep, CallFunc_Add_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_AquaticSimulation_C_DoSimulationStep::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_DoSimulationStep, CallFunc_Percent_IntInt_ReturnValue) == 0x00007C, "Member 'BP_AquaticSimulation_C_DoSimulationStep::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AquaticSimulation.BP_AquaticSimulation_C.UpdateSimulation
// 0x0058 (0x0058 - 0x0000)
struct BP_AquaticSimulation_C_UpdateSimulation final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AquaticCaustic_C*                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_GetRenderTarget_HeightRT;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AquaticSurface_C*                   CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AquaticSimulation_C_UpdateSimulation) == 0x000008, "Wrong alignment on BP_AquaticSimulation_C_UpdateSimulation");
static_assert(sizeof(BP_AquaticSimulation_C_UpdateSimulation) == 0x000058, "Wrong size on BP_AquaticSimulation_C_UpdateSimulation");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulation, DeltaTime) == 0x000000, "Member 'BP_AquaticSimulation_C_UpdateSimulation::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulation, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AquaticSimulation_C_UpdateSimulation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulation, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AquaticSimulation_C_UpdateSimulation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulation, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AquaticSimulation_C_UpdateSimulation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulation, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BP_AquaticSimulation_C_UpdateSimulation::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulation, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'BP_AquaticSimulation_C_UpdateSimulation::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulation, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_AquaticSimulation_C_UpdateSimulation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulation, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_AquaticSimulation_C_UpdateSimulation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulation, CallFunc_FMin_ReturnValue) == 0x000020, "Member 'BP_AquaticSimulation_C_UpdateSimulation::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_AquaticSimulation_C_UpdateSimulation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulation, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_AquaticSimulation_C_UpdateSimulation::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulation, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_AquaticSimulation_C_UpdateSimulation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulation, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_AquaticSimulation_C_UpdateSimulation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulation, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_AquaticSimulation_C_UpdateSimulation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulation, CallFunc_GetRenderTarget_HeightRT) == 0x000040, "Member 'BP_AquaticSimulation_C_UpdateSimulation::CallFunc_GetRenderTarget_HeightRT' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulation, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'BP_AquaticSimulation_C_UpdateSimulation::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulation, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'BP_AquaticSimulation_C_UpdateSimulation::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_UpdateSimulation, CallFunc_Less_IntInt_ReturnValue_1) == 0x000054, "Member 'BP_AquaticSimulation_C_UpdateSimulation::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_AquaticSimulation.BP_AquaticSimulation_C.IsLocal
// 0x0003 (0x0003 - 0x0000)
struct BP_AquaticSimulation_C_IsLocal final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AquaticSimulation_C_IsLocal) == 0x000001, "Wrong alignment on BP_AquaticSimulation_C_IsLocal");
static_assert(sizeof(BP_AquaticSimulation_C_IsLocal) == 0x000003, "Wrong size on BP_AquaticSimulation_C_IsLocal");
static_assert(offsetof(BP_AquaticSimulation_C_IsLocal, ReturnValue) == 0x000000, "Member 'BP_AquaticSimulation_C_IsLocal::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_IsLocal, CallFunc_IsDedicatedServer_ReturnValue) == 0x000001, "Member 'BP_AquaticSimulation_C_IsLocal::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticSimulation_C_IsLocal, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_AquaticSimulation_C_IsLocal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

