#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ForceOpenIntaractionComponent

#include "Basic.hpp"

#include "SCT_structs.hpp"


namespace SDK::Params
{

// Function ForceOpenIntaractionComponent.ForceOpenIntaractionComponent_C.CanActivate
// 0x0038 (0x0038 - 0x0000)
struct ForceOpenIntaractionComponent_C_CanActivate final
{
public:
	struct FInteractionPayload                    Payload;                                           // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDoorOpen_IsOpenedState;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanActivate_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOwnerDoor_bSuccess;                     // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ForceOpenIntaractionComponent_C_CanActivate) == 0x000008, "Wrong alignment on ForceOpenIntaractionComponent_C_CanActivate");
static_assert(sizeof(ForceOpenIntaractionComponent_C_CanActivate) == 0x000038, "Wrong size on ForceOpenIntaractionComponent_C_CanActivate");
static_assert(offsetof(ForceOpenIntaractionComponent_C_CanActivate, Payload) == 0x000000, "Member 'ForceOpenIntaractionComponent_C_CanActivate::Payload' has a wrong offset!");
static_assert(offsetof(ForceOpenIntaractionComponent_C_CanActivate, ReturnValue) == 0x000030, "Member 'ForceOpenIntaractionComponent_C_CanActivate::ReturnValue' has a wrong offset!");
static_assert(offsetof(ForceOpenIntaractionComponent_C_CanActivate, CallFunc_IsDoorOpen_IsOpenedState) == 0x000031, "Member 'ForceOpenIntaractionComponent_C_CanActivate::CallFunc_IsDoorOpen_IsOpenedState' has a wrong offset!");
static_assert(offsetof(ForceOpenIntaractionComponent_C_CanActivate, CallFunc_CanActivate_ReturnValue) == 0x000032, "Member 'ForceOpenIntaractionComponent_C_CanActivate::CallFunc_CanActivate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ForceOpenIntaractionComponent_C_CanActivate, CallFunc_Not_PreBool_ReturnValue) == 0x000033, "Member 'ForceOpenIntaractionComponent_C_CanActivate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ForceOpenIntaractionComponent_C_CanActivate, CallFunc_BooleanAND_ReturnValue) == 0x000034, "Member 'ForceOpenIntaractionComponent_C_CanActivate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ForceOpenIntaractionComponent_C_CanActivate, CallFunc_IsOwnerDoor_bSuccess) == 0x000035, "Member 'ForceOpenIntaractionComponent_C_CanActivate::CallFunc_IsOwnerDoor_bSuccess' has a wrong offset!");

// Function ForceOpenIntaractionComponent.ForceOpenIntaractionComponent_C.IsDoorOpen
// 0x0020 (0x0020 - 0x0000)
struct ForceOpenIntaractionComponent_C_IsDoorOpen final
{
public:
	bool                                          IsOpenedState;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Abp_ac_BaseDoor_C*                      K2Node_DynamicCast_AsBp_Ac_Base_Door;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ForceOpenIntaractionComponent_C_IsDoorOpen) == 0x000008, "Wrong alignment on ForceOpenIntaractionComponent_C_IsDoorOpen");
static_assert(sizeof(ForceOpenIntaractionComponent_C_IsDoorOpen) == 0x000020, "Wrong size on ForceOpenIntaractionComponent_C_IsDoorOpen");
static_assert(offsetof(ForceOpenIntaractionComponent_C_IsDoorOpen, IsOpenedState) == 0x000000, "Member 'ForceOpenIntaractionComponent_C_IsDoorOpen::IsOpenedState' has a wrong offset!");
static_assert(offsetof(ForceOpenIntaractionComponent_C_IsDoorOpen, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'ForceOpenIntaractionComponent_C_IsDoorOpen::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ForceOpenIntaractionComponent_C_IsDoorOpen, K2Node_DynamicCast_AsBp_Ac_Base_Door) == 0x000010, "Member 'ForceOpenIntaractionComponent_C_IsDoorOpen::K2Node_DynamicCast_AsBp_Ac_Base_Door' has a wrong offset!");
static_assert(offsetof(ForceOpenIntaractionComponent_C_IsDoorOpen, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ForceOpenIntaractionComponent_C_IsDoorOpen::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ForceOpenIntaractionComponent.ForceOpenIntaractionComponent_C.IsOwnerDoor
// 0x0020 (0x0020 - 0x0000)
struct ForceOpenIntaractionComponent_C_IsOwnerDoor final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Abp_ac_BaseDoor_C*                      K2Node_DynamicCast_AsBp_Ac_Base_Door;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ForceOpenIntaractionComponent_C_IsOwnerDoor) == 0x000008, "Wrong alignment on ForceOpenIntaractionComponent_C_IsOwnerDoor");
static_assert(sizeof(ForceOpenIntaractionComponent_C_IsOwnerDoor) == 0x000020, "Wrong size on ForceOpenIntaractionComponent_C_IsOwnerDoor");
static_assert(offsetof(ForceOpenIntaractionComponent_C_IsOwnerDoor, bSuccess) == 0x000000, "Member 'ForceOpenIntaractionComponent_C_IsOwnerDoor::bSuccess' has a wrong offset!");
static_assert(offsetof(ForceOpenIntaractionComponent_C_IsOwnerDoor, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'ForceOpenIntaractionComponent_C_IsOwnerDoor::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ForceOpenIntaractionComponent_C_IsOwnerDoor, K2Node_DynamicCast_AsBp_Ac_Base_Door) == 0x000010, "Member 'ForceOpenIntaractionComponent_C_IsOwnerDoor::K2Node_DynamicCast_AsBp_Ac_Base_Door' has a wrong offset!");
static_assert(offsetof(ForceOpenIntaractionComponent_C_IsOwnerDoor, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ForceOpenIntaractionComponent_C_IsOwnerDoor::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

