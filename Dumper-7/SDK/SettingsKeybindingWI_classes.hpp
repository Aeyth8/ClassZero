#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SettingsKeybindingWI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass SettingsKeybindingWI.SettingsKeybindingWI_C
// 0x0070 (0x02D0 - 0x0260)
class USettingsKeybindingWI_C : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UTextBlock*                             DisplayName;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GamepadIcon;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GamepadIcon_1;                                     // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindingSelectorWI_C*                GamepadKeyRemapper;                                // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               GamepadRemap;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindingSelectorWI_C*                KeyboardKeyRemapper;                               // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               KeyboardRemap;                                     // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UClass*                                 InputClass;                                        // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SettingsName;                                      // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             SetKeyboardKey;                                    // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnChanged;                                         // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void SetKeyboardKey__DelegateSignature(const struct FInputChord& Chord);
	void OnChanged__DelegateSignature();
	void ExecuteUbergraph_SettingsKeybindingWI(int32 EntryPoint);
	void Construct();
	void BndEvt__SettingsKeybindingWI_GamepadKeyRemapper_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature(const struct FInputChord& SelectedKey);
	void BndEvt__SettingsKeybindingWI_KeyboardKeyRemapper_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature(const struct FInputChord& SelectedKey);
	void GetSettings(class UUserInputSettingsBP_C** AsUser_Input_Settings_BP);
	void SetDisplayName(const class FText& DisplayName_0);
	void SetKeyboardData();
	void Set_Action_Button_Key(class USCTKeySelector* UIElement, const struct FInputActionKeyMapping& Key);
	void SetGamepadData();
	void OnSetGamepadKey(const struct FInputChord& Chord);
	void OnSetKeyboardKey(const struct FInputChord& Chord);
	void Set_Axis_Button_Key(class USCTKeySelector* UIElement, const struct FInputAxisKeyMapping& Key);
	void DisableGamepadSelector();
	void ResetKeyboard();
	void ResetGamepad();

	void CanBind(const struct FInputChord& Chord, bool* Value) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SettingsKeybindingWI_C">();
	}
	static class USettingsKeybindingWI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USettingsKeybindingWI_C>();
	}
};
static_assert(alignof(USettingsKeybindingWI_C) == 0x000008, "Wrong alignment on USettingsKeybindingWI_C");
static_assert(sizeof(USettingsKeybindingWI_C) == 0x0002D0, "Wrong size on USettingsKeybindingWI_C");
static_assert(offsetof(USettingsKeybindingWI_C, UberGraphFrame) == 0x000260, "Member 'USettingsKeybindingWI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USettingsKeybindingWI_C, DisplayName) == 0x000268, "Member 'USettingsKeybindingWI_C::DisplayName' has a wrong offset!");
static_assert(offsetof(USettingsKeybindingWI_C, GamepadIcon) == 0x000270, "Member 'USettingsKeybindingWI_C::GamepadIcon' has a wrong offset!");
static_assert(offsetof(USettingsKeybindingWI_C, GamepadIcon_1) == 0x000278, "Member 'USettingsKeybindingWI_C::GamepadIcon_1' has a wrong offset!");
static_assert(offsetof(USettingsKeybindingWI_C, GamepadKeyRemapper) == 0x000280, "Member 'USettingsKeybindingWI_C::GamepadKeyRemapper' has a wrong offset!");
static_assert(offsetof(USettingsKeybindingWI_C, GamepadRemap) == 0x000288, "Member 'USettingsKeybindingWI_C::GamepadRemap' has a wrong offset!");
static_assert(offsetof(USettingsKeybindingWI_C, KeyboardKeyRemapper) == 0x000290, "Member 'USettingsKeybindingWI_C::KeyboardKeyRemapper' has a wrong offset!");
static_assert(offsetof(USettingsKeybindingWI_C, KeyboardRemap) == 0x000298, "Member 'USettingsKeybindingWI_C::KeyboardRemap' has a wrong offset!");
static_assert(offsetof(USettingsKeybindingWI_C, InputClass) == 0x0002A0, "Member 'USettingsKeybindingWI_C::InputClass' has a wrong offset!");
static_assert(offsetof(USettingsKeybindingWI_C, SettingsName) == 0x0002A8, "Member 'USettingsKeybindingWI_C::SettingsName' has a wrong offset!");
static_assert(offsetof(USettingsKeybindingWI_C, SetKeyboardKey) == 0x0002B0, "Member 'USettingsKeybindingWI_C::SetKeyboardKey' has a wrong offset!");
static_assert(offsetof(USettingsKeybindingWI_C, OnChanged) == 0x0002C0, "Member 'USettingsKeybindingWI_C::OnChanged' has a wrong offset!");

}

