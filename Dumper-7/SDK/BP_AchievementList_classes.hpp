#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AchievementList

#include "Basic.hpp"

#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_AchievementList.BP_AchievementList_C
// 0x0050 (0x02B0 - 0x0260)
class UBP_AchievementList_C final : public UUserWidget
{
public:
	class UScrollBox*                             AchievementList;                                   // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AchievementPanel_C*                 BP_AchievementPanel;                               // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AchievementPanel_C*                 BP_AchievementPanel_1;                             // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AchievementPanel_C*                 BP_AchievementPanel_2;                             // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AchievementPanel_C*                 BP_AchievementPanel_3;                             // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AchievementPanel_C*                 BP_AchievementPanel_4;                             // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AchievementPanel_C*                 BP_AchievementPanel_5;                             // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGamepadScrollUtilityWI_C*              GamepadScrollUtilityWI;                            // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_41;                                          // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Initialize_Achievements(TArray<class UFCTAchievement*>& AchievementInfos);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AchievementList_C">();
	}
	static class UBP_AchievementList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AchievementList_C>();
	}
};
static_assert(alignof(UBP_AchievementList_C) == 0x000008, "Wrong alignment on UBP_AchievementList_C");
static_assert(sizeof(UBP_AchievementList_C) == 0x0002B0, "Wrong size on UBP_AchievementList_C");
static_assert(offsetof(UBP_AchievementList_C, AchievementList) == 0x000260, "Member 'UBP_AchievementList_C::AchievementList' has a wrong offset!");
static_assert(offsetof(UBP_AchievementList_C, BP_AchievementPanel) == 0x000268, "Member 'UBP_AchievementList_C::BP_AchievementPanel' has a wrong offset!");
static_assert(offsetof(UBP_AchievementList_C, BP_AchievementPanel_1) == 0x000270, "Member 'UBP_AchievementList_C::BP_AchievementPanel_1' has a wrong offset!");
static_assert(offsetof(UBP_AchievementList_C, BP_AchievementPanel_2) == 0x000278, "Member 'UBP_AchievementList_C::BP_AchievementPanel_2' has a wrong offset!");
static_assert(offsetof(UBP_AchievementList_C, BP_AchievementPanel_3) == 0x000280, "Member 'UBP_AchievementList_C::BP_AchievementPanel_3' has a wrong offset!");
static_assert(offsetof(UBP_AchievementList_C, BP_AchievementPanel_4) == 0x000288, "Member 'UBP_AchievementList_C::BP_AchievementPanel_4' has a wrong offset!");
static_assert(offsetof(UBP_AchievementList_C, BP_AchievementPanel_5) == 0x000290, "Member 'UBP_AchievementList_C::BP_AchievementPanel_5' has a wrong offset!");
static_assert(offsetof(UBP_AchievementList_C, GamepadScrollUtilityWI) == 0x000298, "Member 'UBP_AchievementList_C::GamepadScrollUtilityWI' has a wrong offset!");
static_assert(offsetof(UBP_AchievementList_C, Image) == 0x0002A0, "Member 'UBP_AchievementList_C::Image' has a wrong offset!");
static_assert(offsetof(UBP_AchievementList_C, Image_41) == 0x0002A8, "Member 'UBP_AchievementList_C::Image_41' has a wrong offset!");

}

