#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CM_MainMenuWI

#include "Basic.hpp"

#include "AccelByteUe4Sdk_structs.hpp"
#include "Engine_structs.hpp"
#include "CM_E_MenuAreas_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass CM_MainMenuWI.CM_MainMenuWI_C
// 0x01D0 (0x0430 - 0x0260)
class UCM_MainMenuWI_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UImage*                                 bottomgradient;                                    // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AccelBytePartyMemberList_C*         BP_AccelBytePartyMemberList;                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CustomizationMenu_C*                BP_CustomizationMenu;                              // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCM_HorizontalSelectionWI_C*            CM_HorizontalSelectionWI;                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCM_HostCrossplayMessage_C*             CM_HostCrossplayMessage;                           // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCM_MainMenuFocusWidget_C*              CM_MainMenuFocusWidget;                            // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCM_MainMenuSelectionButtonWI_C*        CM_MainMenuSelectionButtonWI;                      // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCM_Mall_C*                             CM_Mall;                                           // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCM_PlayNow_C*                          CM_PlayNow;                                        // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCM_SettingsWI_C*                       CM_Settings;                                       // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCM_TheBar_C*                           CM_TheBar;                                         // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCM_Tutorials_C*                        CM_Tutorials;                                      // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCM_UtilityMenuWI_C*                    CM_UtilityMenuWI_1;                                // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UConsoleIconMainMenuWI_C*               ConsoleIconMainMenuWI;                             // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCM_MatchmakerCountdownWI_C*            CountdownTimerWidget;                              // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               FriendsOverlay;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BG;                                          // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                LeaveFriendsButton;                                // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPlayerProfileMainMenu_BP_C*            PlayerProfileMainMenu_BP;                          // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                QuitButtonPC;                                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URegionSelectedNotificationWI_C*        RegionSelectedNotificationWI;                      // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_132;                                      // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_220;                                      // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_243;                                      // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_448;                                      // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_ReadVersionID;                                // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Topgradient;                                       // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Vignette;                                          // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCM_ContentDialogWrapper_C*             VivoxUnavailableDialog;                            // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_MenuAreas;                          // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ECM_E_MenuAreas                               MenuArea;                                          // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           FriendsFadeTimerHandle;                            // 0x0360(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnCancelCountdown;                                 // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FTimerHandle                           CountdownTimerHandle;                              // 0x0378(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBP_AccelBytePreloaderWidget_C*         Preloader;                                         // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MainMenuActive;                                    // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULoadingSpinnerWI_C*                    ConsoleLoadingSpinner;                             // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ConsoleOnlinePrivilegeBlocked;                     // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ConsoleLoggingIn;                                  // 0x0399(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ConsoleConnectingToLobby;                          // 0x039A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39B[0x5];                                      // 0x039B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AccelByteFriends_C*                 FriendsList;                                       // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PoliciesQueried;                                   // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterPreviewerSCTBP_C*             AltCharacterPreviewer;                             // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterPreviewerSCTBP_C*             MainCharacterPreviewer;                            // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CustomizationSettings_C*            MainCustomizationConfig;                           // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CustomizationSettings_C*            AltCustomizationConfig;                            // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARoombaRoamingSCTBP_C*                  VruumbaPreviewer;                                  // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SettingsVisible;                                   // 0x03D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCM_SettingsWI_C*                       Settings;                                          // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UserNameRetries;                                   // 0x03E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UserNameRetriesMax;                                // 0x03EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          AK_FindGameStart;                                  // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          AK_FindGameFail;                                   // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          AK_FindGameSuccess;                                // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVivoxUnavailable;                                 // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           VivoxMessage;                                      // 0x0410(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          ConsoleCheckingBans;                               // 0x0418(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ConsoleBanned;                                     // 0x0419(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41A[0x6];                                      // 0x041A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NetworkErrorCode;                                  // 0x0420(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void OnCancelCountdown__DelegateSignature();
	void ExecuteUbergraph_CM_MainMenuWI(int32 EntryPoint);
	void OnUpdateXboxCrossPlaySetting();
	void BndEvt__CM_MainMenuWI_BP_AccelBytePartyMemberList_K2Node_ComponentBoundEvent_20_OnPartyCrossplayRestrictedMessage__DelegateSignature();
	void OnCheckLeavePartyCrossPlayRestricted();
	void OnConsoleBanFailed();
	void OnConsoleBanned();
	void BndEvt__CM_MainMenuWI_CM_UtilityMenuWI_1_K2Node_ComponentBoundEvent_10_OnShowSystemInvite__DelegateSignature();
	void ActivateWidget();
	void MatchmakingResponseReceived(EAccelByteMatchmakingStatus Response);
	void SetFocusToMenu();
	void BndEvt__CM_MainMenuWI_BP_AccelBytePartyMemberList_K2Node_ComponentBoundEvent_19_OnPartyJoinFailedMessage__DelegateSignature();
	void OnUpdatedCloudLanguage(const class FString& CultureCode);
	void BndEvt__CM_MainMenuWI_BP_AccelBytePartyMemberList_K2Node_ComponentBoundEvent_18_OnPartyFullMessage__DelegateSignature();
	void OnLaunchPS5MainActivity();
	void OnLeftParty();
	void BndEvt__CM_MainMenuWI_BP_AccelBytePartyMemberList_K2Node_ComponentBoundEvent_13_OnSetMemberUI__DelegateSignature(bool IsHost, int32 Count);
	void OnHostCrossplayDisabled();
	void OnHostCrossplayEnabled();
	void CustomEvent_1(int32 StatusCode, const class FString& Reason, bool WasClean);
	void BndEvt__CM_MainMenuWI_SettingsButtonPC_K2Node_ComponentBoundEvent_17_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__CM_MainMenuWI_FriendsList_K2Node_ComponentBoundEvent_16_OnPartyButtonStopListeningForGamepadInput__DelegateSignature();
	void BndEvt__CM_MainMenuWI_BP_AccelBytePartyMemberList_K2Node_ComponentBoundEvent_15_OnPartyListButtonInvoked__DelegateSignature();
	void OnPartyMenuOpened();
	void OnOpenParty();
	void BndEvt__CM_MainMenuWI_CM_PlayNow_K2Node_ComponentBoundEvent_3_OnAddBanMessage__DelegateSignature(const TMap<class FString, class FString>& Params_0);
	void Destruct();
	void OnClientLoginFailed();
	void BndEvt__CM_MainMenuWI_BP_CustomizationMenu_K2Node_ComponentBoundEvent_0_OnCharactersUpdated__DelegateSignature(const struct FFCTCloudCustomizationPayload& CustomizationPayload);
	void BndEvt__CM_MainMenuWI_BP_AccelBytePartyMemberList_K2Node_ComponentBoundEvent_14_OnPartyAvailable__DelegateSignature();
	void OnShowConsoleInviteDialog();
	void OnConsoleOnlinePrivilegeBlocked();
	void OnConnectedToLobby();
	void BndEvt__CM_MainMenuWI_CM_PlayNow_K2Node_ComponentBoundEvent_11_OnConsoleReconnect__DelegateSignature();
	void OnStartupCheckConsolePrivileges();
	void ToggleFriendsMenu();
	void BndEvt__CM_MainMenuWI_CM_MainMenuSelectionButtonWI_K2Node_ComponentBoundEvent_12_OnPressed_0__DelegateSignature(ECM_E_MenuAreas MenuArea_0);
	void Toggle_Option_Menu();
	void On_Back_Button_Pressed();
	void OnInitialLoadComplete();
	void BndEvt__CM_MainMenuWI_CM_UtilityMenuWI_1_K2Node_ComponentBoundEvent_9_OnOpenSettings__DelegateSignature();
	void BndEvt__CM_MainMenuWI_CM_PlayNow_K2Node_ComponentBoundEvent_8_OnCancelHostCountdown__DelegateSignature();
	void BndEvt__CM_MainMenuWI_CM_PlayNow_K2Node_ComponentBoundEvent_7_OnStartHostCountdown__DelegateSignature();
	void BndEvt__CM_MainMenuWI_CountdownTimerWidget_K2Node_ComponentBoundEvent_6_OnCountdownReset__DelegateSignature();
	void BndEvt__CM_MainMenuWI_CountdownTimerWidget_K2Node_ComponentBoundEvent_5_OnCountdownExpired__DelegateSignature();
	void OnPartyChatRecieved(const struct FAccelByteModelsPartyMessageNotice& Notification);
	void CancelCountdown(EAccelByteMatchmakingStatus Reason);
	void BndEvt__CM_MainMenuWI_CM_PlayNow_K2Node_ComponentBoundEvent_4_OnRecievedMatchmakingResponse__DelegateSignature(EAccelByteMatchmakingStatus Response);
	void PreConstruct(bool IsDesignTime);
	void OnClientLoggedIn();
	void FadeOutFriends();
	void BndEvt__CM_MainMenuWI_LeaveFriendsButton_K2Node_ComponentBoundEvent_2_OnButtonPressedEvent__DelegateSignature();
	void FadeInFriends();
	void BndEvt__CM_MainMenuWI_CM_UtilityMenuWI_1_K2Node_ComponentBoundEvent_1_OnOpenFriends__DelegateSignature();
	void SetActiveMenuArea(ECM_E_MenuAreas InMenuArea);
	void Navigate_Left();
	void Navigate_Right();
	void Construct();
	void DeactivateWidget();
	void OnSuccess_6FD1D9E74944F4D252FEC497B3EE59E7();
	void OnFail_6FD1D9E74944F4D252FEC497B3EE59E7();
	void OnAllowed_EBE3830A40048716047A189BE3A125D5();
	void OnBlocked_EBE3830A40048716047A189BE3A125D5();
	void OnError_EBE3830A40048716047A189BE3A125D5();
	void OnComplete_E87E71034DBE831558AE588C6C1A598B();
	void OnComplete_CD6EA0EF45C91021620A7290ADCC1B41(bool bSuccess, class APlayerController* PlayerController, bool bIsFriend, bool bCommunicationPrivilegeAllowed);
	void OnSuccess_B8C20E65466317BC62DDCC9EB333DC8F(const struct FFCTAchievementList& AchievementList, const class FString& Message);
	void OnError_B8C20E65466317BC62DDCC9EB333DC8F(const class FString& Message);
	void OnSuccess_AB4D3A81480AAA6DF4818894167B6751(const struct FAccountUserData& Result, const class FString& Message, int32 Code);
	void OnError_AB4D3A81480AAA6DF4818894167B6751(const class FString& Message, int32 Code);
	void OnSuccess_397D4AD74F6AEC28349F1697E6BBC776(const struct FFCTCloudCustomizationPayload& Payload, int32 Code, const class FString& Message);
	void OnError_397D4AD74F6AEC28349F1697E6BBC776(int32 Code, const class FString& Message);
	void OnSuccess_F1CF38314F34C2F44389F3846D8D1B99(const struct FAccountUserData& Result, const class FString& Message, int32 Code);
	void OnError_F1CF38314F34C2F44389F3846D8D1B99(const class FString& Message, int32 Code);
	void OnSuccess_A87C00234A1ECE4068CFC38D0BBDACD6(class APlayerController* PlayerController);
	void OnFailure_A87C00234A1ECE4068CFC38D0BBDACD6(class APlayerController* PlayerController);
	void OnSuccess_35B5A6D94A85BAA59BED7ABCD056A674(class APlayerController* PlayerController);
	void OnFailure_35B5A6D94A85BAA59BED7ABCD056A674(class APlayerController* PlayerController);
	void OnComplete_4D812F2D4655051F02EF8BB53CA03888(class APlayerController* PlayerController);
	void OnSuccess_8E8285D34D7738F7EA1748BF5D7F0B90(int32 Code, const class FString& Message);
	void OnFail_8E8285D34D7738F7EA1748BF5D7F0B90(int32 Code, const class FString& Message);
	void OnSuccess_EBB976B244915404507DF2B79934D274(class APlayerController* PlayerController);
	void OnFailure_EBB976B244915404507DF2B79934D274(class APlayerController* PlayerController);
	void OnSuccess_76B87C39421145B840CCA4B21FB34D81();
	void OnFail_76B87C39421145B840CCA4B21FB34D81();
	void OnComplete_4794D6204E7783B824F9A8A76B06784E(bool bSuccess, class APlayerController* PlayerController, bool bIsFriend, bool bCommunicationPrivilegeAllowed);
	void OnSuccess_B17569F649126BECA037FA8EC282C34E(const struct FAccelByteModelsInfoPartyResponse& PartyInfo);
	void OnFail_B17569F649126BECA037FA8EC282C34E();
	void OnSuccess_5CC638E344C47398D446E38DAFD4AC23(const struct FVersusEvilDocumentsPayload& Payload, const class FString& Result, int32 Code);
	void OnError_5CC638E344C47398D446E38DAFD4AC23(const class FString& Result, int32 Code);
	void OnSuccess_EBB976B244915404507DF2B721255040(class APlayerController* PlayerController);
	void OnFailure_EBB976B244915404507DF2B721255040(class APlayerController* PlayerController);
	void OnComplete_CD6EA0EF45C91021620A729015DD9975(bool bSuccess, class APlayerController* PlayerController, bool bIsFriend, bool bCommunicationPrivilegeAllowed);
	void OnComplete_4794D6204E7783B824F9A8A7D317FA7A(bool bSuccess, class APlayerController* PlayerController, bool bIsFriend, bool bCommunicationPrivilegeAllowed);
	void OnComplete_4D812F2D4655051F02EF8BB584B1BABC(class APlayerController* PlayerController);
	void OnSuccess_35B5A6D94A85BAA59BED7ABC68472440(class APlayerController* PlayerController);
	void OnFailure_35B5A6D94A85BAA59BED7ABC68472440(class APlayerController* PlayerController);
	void OnSuccess_A87C00234A1ECE4068CFC38DB3AC2EE2(class APlayerController* PlayerController);
	void OnFailure_A87C00234A1ECE4068CFC38DB3AC2EE2(class APlayerController* PlayerController);
	void OnSuccess_EBB976B244915404507DF2B75933BED0(class APlayerController* PlayerController);
	void OnFailure_EBB976B244915404507DF2B75933BED0(class APlayerController* PlayerController);
	void OnComplete_CD6EA0EF45C91021620A72906DCB77E5(bool bSuccess, class APlayerController* PlayerController, bool bIsFriend, bool bCommunicationPrivilegeAllowed);
	void OnComplete_4794D6204E7783B824F9A8A7AB0114EA(bool bSuccess, class APlayerController* PlayerController, bool bIsFriend, bool bCommunicationPrivilegeAllowed);
	void OnComplete_4D812F2D4655051F02EF8BB5FCA7542C(class APlayerController* PlayerController);
	void OnSuccess_35B5A6D94A85BAA59BED7ABC1051CAD0(class APlayerController* PlayerController);
	void OnFailure_35B5A6D94A85BAA59BED7ABC1051CAD0(class APlayerController* PlayerController);
	void OnSuccess_A87C00234A1ECE4068CFC38DCBBAC072(class APlayerController* PlayerController);
	void OnFailure_A87C00234A1ECE4068CFC38DCBBAC072(class APlayerController* PlayerController);
	void SetActiveMenu(ECM_E_MenuAreas InMenuArea);
	void NavigateMenuWithController(bool Right);
	void ToggleMenuAreaWidgetActive(class UObject* Object, bool Active);
	void SetActiveWidgetSelectionButtonAsSelected();
	void SetupVersusEvilLogin(const struct FAccountUserData& UserData);
	void ProgressFade(float Target, float Speed, bool* bIsComplete);
	void StartCountdown();
	void ToggleEnterSettingsVisibility(bool Enter);
	void Set_Version_Text();
	void RemoveLoadingSpinners();
	void SetMainMenuActive();
	void IsMainMenuActive(bool* Active);
	void DisplayNameIsIDFormatted(bool* HasIDFormat);
	void GenerateDisplayName(bool bIDFormatted, class FString* NewDisplayName, bool* bPlatformNameIsEmpty);
	void IsInputBlocked(bool* InputBlocked);
	void GetEnumFromActiveIndex(ECM_E_MenuAreas* ActiveMenu);
	void IsCharacterMenu(bool* bIsCharacterMenu);
	void GetMainMenuPreviewers();
	void Update_Main_Menu_Customization_Settings(const struct FFCTCloudCustomizationPayload& Payload);
	void SetConfigForPreviewer(class UClass* Class_0, class USkeletalMesh* GenderMesh, class ACharacterPreviewerSCTBP_C* Previewer, const struct FFCTCloudCustomizationGender& CustomizationPayload, class ABP_CustomizationSettings_C** OutGenderConfig);
	void Apply_Customization(class ABP_CustomizationSettings_C* Config, class ACharacterPreviewerSCTBP_C* Previewer, const struct FFCTCloudCustomizationGender& Gender);
	void Open_Social_Menu(bool bOpenPartyMenu, bool* bIsConnected);
	bool HasDisplayNameChanged();
	void FixSettingsVisibility();
	void Show_Quit_Game_Dialog();
	class AAKEventHolder_C* GetAKEventHolder();
	void UpdateGuestMatchmakerLanguageData(const class FString& Language);
	void Party_Message_Recieved_From_Party_Leader(const class FString& Message);
	void PartyMessageRecievedFromGuestMember(const class FString& Message);
	void GetSpecialOptions(class Ubp_SpecialOptionsSave_C** SpecialOptions);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CM_MainMenuWI_C">();
	}
	static class UCM_MainMenuWI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCM_MainMenuWI_C>();
	}
};
static_assert(alignof(UCM_MainMenuWI_C) == 0x000008, "Wrong alignment on UCM_MainMenuWI_C");
static_assert(sizeof(UCM_MainMenuWI_C) == 0x000430, "Wrong size on UCM_MainMenuWI_C");
static_assert(offsetof(UCM_MainMenuWI_C, UberGraphFrame) == 0x000260, "Member 'UCM_MainMenuWI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, bottomgradient) == 0x000268, "Member 'UCM_MainMenuWI_C::bottomgradient' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, BP_AccelBytePartyMemberList) == 0x000270, "Member 'UCM_MainMenuWI_C::BP_AccelBytePartyMemberList' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, BP_CustomizationMenu) == 0x000278, "Member 'UCM_MainMenuWI_C::BP_CustomizationMenu' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, CM_HorizontalSelectionWI) == 0x000280, "Member 'UCM_MainMenuWI_C::CM_HorizontalSelectionWI' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, CM_HostCrossplayMessage) == 0x000288, "Member 'UCM_MainMenuWI_C::CM_HostCrossplayMessage' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, CM_MainMenuFocusWidget) == 0x000290, "Member 'UCM_MainMenuWI_C::CM_MainMenuFocusWidget' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, CM_MainMenuSelectionButtonWI) == 0x000298, "Member 'UCM_MainMenuWI_C::CM_MainMenuSelectionButtonWI' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, CM_Mall) == 0x0002A0, "Member 'UCM_MainMenuWI_C::CM_Mall' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, CM_PlayNow) == 0x0002A8, "Member 'UCM_MainMenuWI_C::CM_PlayNow' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, CM_Settings) == 0x0002B0, "Member 'UCM_MainMenuWI_C::CM_Settings' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, CM_TheBar) == 0x0002B8, "Member 'UCM_MainMenuWI_C::CM_TheBar' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, CM_Tutorials) == 0x0002C0, "Member 'UCM_MainMenuWI_C::CM_Tutorials' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, CM_UtilityMenuWI_1) == 0x0002C8, "Member 'UCM_MainMenuWI_C::CM_UtilityMenuWI_1' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, ConsoleIconMainMenuWI) == 0x0002D0, "Member 'UCM_MainMenuWI_C::ConsoleIconMainMenuWI' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, CountdownTimerWidget) == 0x0002D8, "Member 'UCM_MainMenuWI_C::CountdownTimerWidget' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, FriendsOverlay) == 0x0002E0, "Member 'UCM_MainMenuWI_C::FriendsOverlay' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, Image_BG) == 0x0002E8, "Member 'UCM_MainMenuWI_C::Image_BG' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, LeaveFriendsButton) == 0x0002F0, "Member 'UCM_MainMenuWI_C::LeaveFriendsButton' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, PlayerProfileMainMenu_BP) == 0x0002F8, "Member 'UCM_MainMenuWI_C::PlayerProfileMainMenu_BP' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, QuitButtonPC) == 0x000300, "Member 'UCM_MainMenuWI_C::QuitButtonPC' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, RegionSelectedNotificationWI) == 0x000308, "Member 'UCM_MainMenuWI_C::RegionSelectedNotificationWI' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, SafeZone_132) == 0x000310, "Member 'UCM_MainMenuWI_C::SafeZone_132' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, SafeZone_220) == 0x000318, "Member 'UCM_MainMenuWI_C::SafeZone_220' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, SafeZone_243) == 0x000320, "Member 'UCM_MainMenuWI_C::SafeZone_243' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, SafeZone_448) == 0x000328, "Member 'UCM_MainMenuWI_C::SafeZone_448' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, Text_ReadVersionID) == 0x000330, "Member 'UCM_MainMenuWI_C::Text_ReadVersionID' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, Topgradient) == 0x000338, "Member 'UCM_MainMenuWI_C::Topgradient' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, Vignette) == 0x000340, "Member 'UCM_MainMenuWI_C::Vignette' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, VivoxUnavailableDialog) == 0x000348, "Member 'UCM_MainMenuWI_C::VivoxUnavailableDialog' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, WidgetSwitcher_MenuAreas) == 0x000350, "Member 'UCM_MainMenuWI_C::WidgetSwitcher_MenuAreas' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, MenuArea) == 0x000358, "Member 'UCM_MainMenuWI_C::MenuArea' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, FriendsFadeTimerHandle) == 0x000360, "Member 'UCM_MainMenuWI_C::FriendsFadeTimerHandle' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, OnCancelCountdown) == 0x000368, "Member 'UCM_MainMenuWI_C::OnCancelCountdown' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, CountdownTimerHandle) == 0x000378, "Member 'UCM_MainMenuWI_C::CountdownTimerHandle' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, Preloader) == 0x000380, "Member 'UCM_MainMenuWI_C::Preloader' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, MainMenuActive) == 0x000388, "Member 'UCM_MainMenuWI_C::MainMenuActive' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, ConsoleLoadingSpinner) == 0x000390, "Member 'UCM_MainMenuWI_C::ConsoleLoadingSpinner' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, ConsoleOnlinePrivilegeBlocked) == 0x000398, "Member 'UCM_MainMenuWI_C::ConsoleOnlinePrivilegeBlocked' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, ConsoleLoggingIn) == 0x000399, "Member 'UCM_MainMenuWI_C::ConsoleLoggingIn' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, ConsoleConnectingToLobby) == 0x00039A, "Member 'UCM_MainMenuWI_C::ConsoleConnectingToLobby' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, FriendsList) == 0x0003A0, "Member 'UCM_MainMenuWI_C::FriendsList' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, PoliciesQueried) == 0x0003A8, "Member 'UCM_MainMenuWI_C::PoliciesQueried' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, AltCharacterPreviewer) == 0x0003B0, "Member 'UCM_MainMenuWI_C::AltCharacterPreviewer' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, MainCharacterPreviewer) == 0x0003B8, "Member 'UCM_MainMenuWI_C::MainCharacterPreviewer' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, MainCustomizationConfig) == 0x0003C0, "Member 'UCM_MainMenuWI_C::MainCustomizationConfig' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, AltCustomizationConfig) == 0x0003C8, "Member 'UCM_MainMenuWI_C::AltCustomizationConfig' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, VruumbaPreviewer) == 0x0003D0, "Member 'UCM_MainMenuWI_C::VruumbaPreviewer' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, SettingsVisible) == 0x0003D8, "Member 'UCM_MainMenuWI_C::SettingsVisible' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, Settings) == 0x0003E0, "Member 'UCM_MainMenuWI_C::Settings' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, UserNameRetries) == 0x0003E8, "Member 'UCM_MainMenuWI_C::UserNameRetries' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, UserNameRetriesMax) == 0x0003EC, "Member 'UCM_MainMenuWI_C::UserNameRetriesMax' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, AK_FindGameStart) == 0x0003F0, "Member 'UCM_MainMenuWI_C::AK_FindGameStart' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, AK_FindGameFail) == 0x0003F8, "Member 'UCM_MainMenuWI_C::AK_FindGameFail' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, AK_FindGameSuccess) == 0x000400, "Member 'UCM_MainMenuWI_C::AK_FindGameSuccess' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, bVivoxUnavailable) == 0x000408, "Member 'UCM_MainMenuWI_C::bVivoxUnavailable' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, VivoxMessage) == 0x000410, "Member 'UCM_MainMenuWI_C::VivoxMessage' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, ConsoleCheckingBans) == 0x000418, "Member 'UCM_MainMenuWI_C::ConsoleCheckingBans' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, ConsoleBanned) == 0x000419, "Member 'UCM_MainMenuWI_C::ConsoleBanned' has a wrong offset!");
static_assert(offsetof(UCM_MainMenuWI_C, NetworkErrorCode) == 0x000420, "Member 'UCM_MainMenuWI_C::NetworkErrorCode' has a wrong offset!");

}

