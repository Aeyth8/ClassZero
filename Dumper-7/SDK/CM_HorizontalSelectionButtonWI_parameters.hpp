#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CM_HorizontalSelectionButtonWI

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "CM_E_MenuAreas_structs.hpp"


namespace SDK::Params
{

// Function CM_HorizontalSelectionButtonWI.CM_HorizontalSelectionButtonWI_C.OnPressed_0__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct CM_HorizontalSelectionButtonWI_C_OnPressed_0__DelegateSignature final
{
public:
	ECM_E_MenuAreas                               MenuArea;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CM_HorizontalSelectionButtonWI_C_OnPressed_0__DelegateSignature) == 0x000001, "Wrong alignment on CM_HorizontalSelectionButtonWI_C_OnPressed_0__DelegateSignature");
static_assert(sizeof(CM_HorizontalSelectionButtonWI_C_OnPressed_0__DelegateSignature) == 0x000001, "Wrong size on CM_HorizontalSelectionButtonWI_C_OnPressed_0__DelegateSignature");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_OnPressed_0__DelegateSignature, MenuArea) == 0x000000, "Member 'CM_HorizontalSelectionButtonWI_C_OnPressed_0__DelegateSignature::MenuArea' has a wrong offset!");

// Function CM_HorizontalSelectionButtonWI.CM_HorizontalSelectionButtonWI_C.OnReleased__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct CM_HorizontalSelectionButtonWI_C_OnReleased__DelegateSignature final
{
public:
	ECM_E_MenuAreas                               MenuArea;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CM_HorizontalSelectionButtonWI_C_OnReleased__DelegateSignature) == 0x000001, "Wrong alignment on CM_HorizontalSelectionButtonWI_C_OnReleased__DelegateSignature");
static_assert(sizeof(CM_HorizontalSelectionButtonWI_C_OnReleased__DelegateSignature) == 0x000001, "Wrong size on CM_HorizontalSelectionButtonWI_C_OnReleased__DelegateSignature");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_OnReleased__DelegateSignature, MenuArea) == 0x000000, "Member 'CM_HorizontalSelectionButtonWI_C_OnReleased__DelegateSignature::MenuArea' has a wrong offset!");

// Function CM_HorizontalSelectionButtonWI.CM_HorizontalSelectionButtonWI_C.OnHovered__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct CM_HorizontalSelectionButtonWI_C_OnHovered__DelegateSignature final
{
public:
	ECM_E_MenuAreas                               MenuArea;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CM_HorizontalSelectionButtonWI_C_OnHovered__DelegateSignature) == 0x000001, "Wrong alignment on CM_HorizontalSelectionButtonWI_C_OnHovered__DelegateSignature");
static_assert(sizeof(CM_HorizontalSelectionButtonWI_C_OnHovered__DelegateSignature) == 0x000001, "Wrong size on CM_HorizontalSelectionButtonWI_C_OnHovered__DelegateSignature");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_OnHovered__DelegateSignature, MenuArea) == 0x000000, "Member 'CM_HorizontalSelectionButtonWI_C_OnHovered__DelegateSignature::MenuArea' has a wrong offset!");

// Function CM_HorizontalSelectionButtonWI.CM_HorizontalSelectionButtonWI_C.ExecuteUbergraph_CM_HorizontalSelectionButtonWI
// 0x00A8 (0x00A8 - 0x0000)
struct CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x0010(0x0008)(NoDestructor)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0018(0x0008)(NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0020(0x0070)(ConstParm)
	bool                                          CallFunc_IsUsingGamepad_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          K2Node_CustomEvent_PlayMode;                       // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93[0x5];                                       // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI) == 0x000008, "Wrong alignment on CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI");
static_assert(sizeof(CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI) == 0x0000A8, "Wrong size on CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI, EntryPoint) == 0x000000, "Member 'CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI::EntryPoint' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI, CallFunc_MakeVector2D_ReturnValue) == 0x000004, "Member 'CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI, K2Node_Event_IsDesignTime) == 0x00000C, "Member 'CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI, K2Node_Event_InFocusEvent_1) == 0x000010, "Member 'CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI, K2Node_Event_InFocusEvent) == 0x000018, "Member 'CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI, K2Node_Event_MouseEvent) == 0x000020, "Member 'CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI, CallFunc_IsUsingGamepad_ReturnValue) == 0x000090, "Member 'CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI::CallFunc_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI, CallFunc_BooleanAND_ReturnValue) == 0x000091, "Member 'CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI, K2Node_CustomEvent_PlayMode) == 0x000092, "Member 'CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI::K2Node_CustomEvent_PlayMode' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI, CallFunc_PlayAnimation_ReturnValue) == 0x000098, "Member 'CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0000A0, "Member 'CM_HorizontalSelectionButtonWI_C_ExecuteUbergraph_CM_HorizontalSelectionButtonWI::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

// Function CM_HorizontalSelectionButtonWI.CM_HorizontalSelectionButtonWI_C.Animate
// 0x0001 (0x0001 - 0x0000)
struct CM_HorizontalSelectionButtonWI_C_Animate final
{
public:
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CM_HorizontalSelectionButtonWI_C_Animate) == 0x000001, "Wrong alignment on CM_HorizontalSelectionButtonWI_C_Animate");
static_assert(sizeof(CM_HorizontalSelectionButtonWI_C_Animate) == 0x000001, "Wrong size on CM_HorizontalSelectionButtonWI_C_Animate");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_Animate, PlayMode) == 0x000000, "Member 'CM_HorizontalSelectionButtonWI_C_Animate::PlayMode' has a wrong offset!");

// Function CM_HorizontalSelectionButtonWI.CM_HorizontalSelectionButtonWI_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct CM_HorizontalSelectionButtonWI_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(CM_HorizontalSelectionButtonWI_C_OnMouseLeave) == 0x000008, "Wrong alignment on CM_HorizontalSelectionButtonWI_C_OnMouseLeave");
static_assert(sizeof(CM_HorizontalSelectionButtonWI_C_OnMouseLeave) == 0x000070, "Wrong size on CM_HorizontalSelectionButtonWI_C_OnMouseLeave");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'CM_HorizontalSelectionButtonWI_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function CM_HorizontalSelectionButtonWI.CM_HorizontalSelectionButtonWI_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct CM_HorizontalSelectionButtonWI_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(CM_HorizontalSelectionButtonWI_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on CM_HorizontalSelectionButtonWI_C_OnAddedToFocusPath");
static_assert(sizeof(CM_HorizontalSelectionButtonWI_C_OnAddedToFocusPath) == 0x000008, "Wrong size on CM_HorizontalSelectionButtonWI_C_OnAddedToFocusPath");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'CM_HorizontalSelectionButtonWI_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function CM_HorizontalSelectionButtonWI.CM_HorizontalSelectionButtonWI_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct CM_HorizontalSelectionButtonWI_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(CM_HorizontalSelectionButtonWI_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on CM_HorizontalSelectionButtonWI_C_OnRemovedFromFocusPath");
static_assert(sizeof(CM_HorizontalSelectionButtonWI_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on CM_HorizontalSelectionButtonWI_C_OnRemovedFromFocusPath");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'CM_HorizontalSelectionButtonWI_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function CM_HorizontalSelectionButtonWI.CM_HorizontalSelectionButtonWI_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct CM_HorizontalSelectionButtonWI_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CM_HorizontalSelectionButtonWI_C_PreConstruct) == 0x000001, "Wrong alignment on CM_HorizontalSelectionButtonWI_C_PreConstruct");
static_assert(sizeof(CM_HorizontalSelectionButtonWI_C_PreConstruct) == 0x000001, "Wrong size on CM_HorizontalSelectionButtonWI_C_PreConstruct");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'CM_HorizontalSelectionButtonWI_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function CM_HorizontalSelectionButtonWI.CM_HorizontalSelectionButtonWI_C.SetMouseToFocus
// 0x0078 (0x0078 - 0x0000)
struct CM_HorizontalSelectionButtonWI_C_SetMouseToFocus final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0008(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetAbsoluteSize_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_PixelPosition;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_ViewportPosition;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CM_HorizontalSelectionButtonWI_C_SetMouseToFocus) == 0x000008, "Wrong alignment on CM_HorizontalSelectionButtonWI_C_SetMouseToFocus");
static_assert(sizeof(CM_HorizontalSelectionButtonWI_C_SetMouseToFocus) == 0x000078, "Wrong size on CM_HorizontalSelectionButtonWI_C_SetMouseToFocus");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_SetMouseToFocus, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'CM_HorizontalSelectionButtonWI_C_SetMouseToFocus::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_SetMouseToFocus, CallFunc_GetCachedGeometry_ReturnValue) == 0x000008, "Member 'CM_HorizontalSelectionButtonWI_C_SetMouseToFocus::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_SetMouseToFocus, CallFunc_GetAbsoluteSize_ReturnValue) == 0x000040, "Member 'CM_HorizontalSelectionButtonWI_C_SetMouseToFocus::CallFunc_GetAbsoluteSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_SetMouseToFocus, CallFunc_LocalToViewport_PixelPosition) == 0x000048, "Member 'CM_HorizontalSelectionButtonWI_C_SetMouseToFocus::CallFunc_LocalToViewport_PixelPosition' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_SetMouseToFocus, CallFunc_LocalToViewport_ViewportPosition) == 0x000050, "Member 'CM_HorizontalSelectionButtonWI_C_SetMouseToFocus::CallFunc_LocalToViewport_ViewportPosition' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_SetMouseToFocus, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000058, "Member 'CM_HorizontalSelectionButtonWI_C_SetMouseToFocus::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_SetMouseToFocus, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000060, "Member 'CM_HorizontalSelectionButtonWI_C_SetMouseToFocus::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_SetMouseToFocus, CallFunc_BreakVector2D_X) == 0x000068, "Member 'CM_HorizontalSelectionButtonWI_C_SetMouseToFocus::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_SetMouseToFocus, CallFunc_BreakVector2D_Y) == 0x00006C, "Member 'CM_HorizontalSelectionButtonWI_C_SetMouseToFocus::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_SetMouseToFocus, CallFunc_FTrunc_ReturnValue) == 0x000070, "Member 'CM_HorizontalSelectionButtonWI_C_SetMouseToFocus::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_SetMouseToFocus, CallFunc_FTrunc_ReturnValue_1) == 0x000074, "Member 'CM_HorizontalSelectionButtonWI_C_SetMouseToFocus::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");

// Function CM_HorizontalSelectionButtonWI.CM_HorizontalSelectionButtonWI_C.UpdateFocusHandler
// 0x0038 (0x0038 - 0x0000)
struct CM_HorizontalSelectionButtonWI_C_UpdateFocusHandler final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFocusHandlerWI_C*>              CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFocusHandlerWI_C*                      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CM_HorizontalSelectionButtonWI_C_UpdateFocusHandler) == 0x000008, "Wrong alignment on CM_HorizontalSelectionButtonWI_C_UpdateFocusHandler");
static_assert(sizeof(CM_HorizontalSelectionButtonWI_C_UpdateFocusHandler) == 0x000038, "Wrong size on CM_HorizontalSelectionButtonWI_C_UpdateFocusHandler");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_UpdateFocusHandler, Temp_int_Array_Index_Variable) == 0x000000, "Member 'CM_HorizontalSelectionButtonWI_C_UpdateFocusHandler::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_UpdateFocusHandler, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'CM_HorizontalSelectionButtonWI_C_UpdateFocusHandler::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_UpdateFocusHandler, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'CM_HorizontalSelectionButtonWI_C_UpdateFocusHandler::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_UpdateFocusHandler, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000010, "Member 'CM_HorizontalSelectionButtonWI_C_UpdateFocusHandler::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_UpdateFocusHandler, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'CM_HorizontalSelectionButtonWI_C_UpdateFocusHandler::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_UpdateFocusHandler, CallFunc_Array_Get_Item) == 0x000028, "Member 'CM_HorizontalSelectionButtonWI_C_UpdateFocusHandler::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_UpdateFocusHandler, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'CM_HorizontalSelectionButtonWI_C_UpdateFocusHandler::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function CM_HorizontalSelectionButtonWI.CM_HorizontalSelectionButtonWI_C.Update State Cosmetics
// 0x00C0 (0x00C0 - 0x0000)
struct CM_HorizontalSelectionButtonWI_C_Update_State_Cosmetics final
{
public:
	struct FSlateBrush                            ImageBrush;                                        // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FLinearColor                           TextColor;                                         // 0x0088(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0098(0x0028)()
};
static_assert(alignof(CM_HorizontalSelectionButtonWI_C_Update_State_Cosmetics) == 0x000008, "Wrong alignment on CM_HorizontalSelectionButtonWI_C_Update_State_Cosmetics");
static_assert(sizeof(CM_HorizontalSelectionButtonWI_C_Update_State_Cosmetics) == 0x0000C0, "Wrong size on CM_HorizontalSelectionButtonWI_C_Update_State_Cosmetics");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_Update_State_Cosmetics, ImageBrush) == 0x000000, "Member 'CM_HorizontalSelectionButtonWI_C_Update_State_Cosmetics::ImageBrush' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_Update_State_Cosmetics, TextColor) == 0x000088, "Member 'CM_HorizontalSelectionButtonWI_C_Update_State_Cosmetics::TextColor' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_Update_State_Cosmetics, K2Node_MakeStruct_SlateColor) == 0x000098, "Member 'CM_HorizontalSelectionButtonWI_C_Update_State_Cosmetics::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function CM_HorizontalSelectionButtonWI.CM_HorizontalSelectionButtonWI_C.SetDefaultImageSettings
// 0x0028 (0x0028 - 0x0000)
struct CM_HorizontalSelectionButtonWI_C_SetDefaultImageSettings final
{
public:
	struct FMargin                                Padding_0;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              ImageSize;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CM_HorizontalSelectionButtonWI_C_SetDefaultImageSettings) == 0x000008, "Wrong alignment on CM_HorizontalSelectionButtonWI_C_SetDefaultImageSettings");
static_assert(sizeof(CM_HorizontalSelectionButtonWI_C_SetDefaultImageSettings) == 0x000028, "Wrong size on CM_HorizontalSelectionButtonWI_C_SetDefaultImageSettings");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_SetDefaultImageSettings, Padding_0) == 0x000000, "Member 'CM_HorizontalSelectionButtonWI_C_SetDefaultImageSettings::Padding_0' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_SetDefaultImageSettings, ImageSize) == 0x000010, "Member 'CM_HorizontalSelectionButtonWI_C_SetDefaultImageSettings::ImageSize' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_SetDefaultImageSettings, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000018, "Member 'CM_HorizontalSelectionButtonWI_C_SetDefaultImageSettings::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_HorizontalSelectionButtonWI_C_SetDefaultImageSettings, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000020, "Member 'CM_HorizontalSelectionButtonWI_C_SetDefaultImageSettings::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");

}

