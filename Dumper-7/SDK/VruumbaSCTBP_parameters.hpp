#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VruumbaSCTBP

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "PassengerLogFactType_structs.hpp"
#include "SCT_structs.hpp"
#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function VruumbaSCTBP.VruumbaSCTBP_C.ExecuteUbergraph_VruumbaSCTBP
// 0x0FA0 (0x0FA0 - 0x0000)
struct VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0018(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0044(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_2;                            // 0x0058(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x0068(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_3;                            // 0x0078(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3;                          // 0x0088(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_4;                            // 0x0098(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_4;                          // 0x00A8(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x00B8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x00D0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_5;                            // 0x00F0(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_5;                          // 0x0100(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_6;                            // 0x0110(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_6;                          // 0x0120(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_7;                            // 0x0130(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_7;                          // 0x0140(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable_1;                               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_2;                     // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_3;                     // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_8;                            // 0x0258(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_8;                          // 0x0268(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable_9;                               // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_9;                            // 0x0280(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_9;                          // 0x0294(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_10;                           // 0x02A8(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_10;                         // 0x02B8(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	struct FFCTCloudCustomizationVruumba          K2Node_CustomEvent_Payload_1;                      // 0x02C8(0x0030)()
	int32                                         K2Node_CustomEvent_Code_1;                         // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Message_1;                      // 0x0300(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const struct FFCTCloudCustomizationVruumba& Payload, int32 Code, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate;              // 0x0310(0x0010)(ZeroConstructor, NoDestructor)
	struct FFCTCloudCustomizationVruumba          K2Node_CustomEvent_Payload;                        // 0x0320(0x0030)()
	int32                                         K2Node_CustomEvent_Code;                           // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Message;                        // 0x0358(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const struct FFCTCloudCustomizationVruumba& Payload, int32 Code, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0368(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 Temp_string_Variable;                              // 0x0378(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFCTCloudCustomizationVruumba          Temp_struct_Variable_11;                           // 0x0390(0x0030)()
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x03C0(0x0018)(HasGetValueTypeHash)
	class USkeletalMesh*                          CallFunc_CustomizationPayloadToVariables_OutBodyMesh; // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_CustomizationPayloadToVariables_OutBodyMaterials; // 0x03E0(0x0010)(ReferenceParm)
	class USkeletalMesh*                          CallFunc_CustomizationPayloadToVariables_OutAntennaMesh; // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_CustomizationPayloadToVariables_OutAntennaAnimBP; // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        CallFunc_CustomizationPayloadToVariables_OutExhaustParticle; // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0408(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0420(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_12;                           // 0x0438(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0450(0x0018)(HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_13;                           // 0x0468(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_11;                         // 0x0478(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_14;                           // 0x0488(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_12;                         // 0x0498(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_15;                           // 0x04A8(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_13;                         // 0x04B8(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C9[0x3];                                      // 0x04C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x04D8(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x04E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x04EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Engine::EMovementMode                         Temp_byte_Variable;                                // 0x04EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_14;                         // 0x04EC(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_16;                           // 0x0500(0x0010)(ConstParm, ReferenceParm)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0511(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Engine::EMovementMode                         Temp_byte_Variable_1;                              // 0x0512(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0513(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0514(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0515(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0516(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x0517(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_4;               // 0x0519(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51A[0x2];                                      // 0x051A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_11;                              // 0x051C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_4;                     // 0x0524(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_525[0x3];                                      // 0x0525(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0534(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_535[0x3];                                      // 0x0535(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_15;                         // 0x0538(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_ToRagdoll;                            // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_549[0x3];                                      // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Duration;                             // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_OptionalImpulse;                      // 0x0550(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Force;                                // 0x055C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Aiming;                               // 0x055D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         K2Node_Event_AimType;                              // 0x055E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55F[0x1];                                      // 0x055F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_AirlockTarget_1;                      // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_Event_VotedCharacter;                       // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_Event_VotingCharacter_2;                    // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_TargetAirlock;                        // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Yes;                                  // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_581[0x7];                                      // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_Event_VotingCharacter_1;                    // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_AirlockTarget;                        // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_Event_TargetCharacter;                      // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_Event_VotingCharacter;                      // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFate                                         K2Node_Event_Fate;                                 // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A9[0x3];                                      // 0x05A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Impulse;                              // 0x05AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_TargetLocation;                       // 0x05B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Event_TargetRotation;                       // 0x05C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InputValue;                           // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Delay;                                // 0x05D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x05D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D6[0x2];                                      // 0x05D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_GravityScale;                   // 0x05DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_5;               // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x05E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E2[0x6];                                      // 0x05E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F9[0x7];                                      // 0x05F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameState*                             K2Node_DynamicCast_AsGame_State;                   // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0609(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60A[0x6];                                      // 0x060A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0610(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_17;                           // 0x0620(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0630(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Spawn_Transform_Location;       // 0x063C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_VacuumOn;                       // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0649(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64A[0x2];                                      // 0x064A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x064C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_2;        // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_651[0x3];                                      // 0x0651(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0654(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLastUpdateVelocity_ReturnValue;        // 0x0658(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0664(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_665[0x3];                                      // 0x0665(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x066C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66D[0x3];                                      // 0x066D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0674(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_5;                     // 0x0675(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_676[0x2];                                      // 0x0676(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class Abp_TrashDebris_C*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0678(0x0010)(ReferenceParm)
	class Abp_TrashDebris_C*                      CallFunc_Array_Get_Item;                           // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0694(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Flying_1;                       // 0x0695(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Flying;                         // 0x0696(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Engine::EMovementMode                         K2Node_Select_Default;                             // 0x0697(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0698(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A4[0xC];                                      // 0x06A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_SpawnTransform;                 // 0x06B0(0x0030)(IsPlainOldData, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_16;                         // 0x06E0(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_18;                           // 0x06F0(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70C[0x4];                                      // 0x070C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVruumbaProjectile_C*                   CallFunc_FinishSpawningActor_ReturnValue;          // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0718(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0731(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_732[0x2];                                      // 0x0732(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_17;                         // 0x0734(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_744[0x4];                                      // 0x0744(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_19;                           // 0x0748(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_6;               // 0x075C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75D[0x3];                                      // 0x075D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0760(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x076C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0778(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0784(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Engine::EMovementMode                         K2Node_Event_PrevMovementMode;                     // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Engine::EMovementMode                         K2Node_Event_NewMovementMode;                      // 0x0791(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_PrevCustomMode;                       // 0x0792(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_NewCustomMode;                        // 0x0793(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0794(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0795(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_3;        // 0x0796(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_797[0x1];                                      // 0x0797(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_RTPC_Roomba_Volume;             // 0x0798(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_18;                         // 0x079C(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_7AC[0x4];                                      // 0x07AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_20;                           // 0x07B0(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_19;                         // 0x07C0(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostAkEvent_ReturnValue_2;                // 0x07D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D4[0x4];                                      // 0x07D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     CallFunc_GetAlivePlayers_Players;                  // 0x07D8(0x0010)(ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_20;                         // 0x07E8(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x07F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7FC[0x4];                                      // 0x07FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     CallFunc_GetAlivePlayers_Players_1;                // 0x0800(0x0010)(ReferenceParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0810(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0814(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x081C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81D[0x3];                                      // 0x081D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_Array_Get_Item_1;                         // 0x0820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0828(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x082C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0838(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0844(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x0848(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x084C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x08D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D9[0x7];                                      // 0x08D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_Array_Get_Item_2;                         // 0x08E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x08E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E9[0x3];                                      // 0x08E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x08EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_21;                           // 0x08F8(0x0010)(ConstParm, ReferenceParm)
	class AController*                            K2Node_Event_NewController;                        // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_3;                // 0x0910(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x0914(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0920(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_Event_LaunchVelocity;                       // 0x092C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bXYOverride;                          // 0x0938(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bZOverride;                           // 0x0939(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93A[0x2];                                      // 0x093A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x093C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_948[0x8];                                      // 0x0948(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0950(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Show;                                 // 0x0981(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_982[0x6];                                      // 0x0982(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     CallFunc_GetAlivePlayers_Players_2;                // 0x0988(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0998(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_7;               // 0x099C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x099D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99E[0x2];                                      // 0x099E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x09A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_6;                     // 0x09A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A9[0x7];                                      // 0x09A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_22;                           // 0x09B0(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_21;                         // 0x09C0(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostAkEvent_ReturnValue_4;                // 0x09D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue;            // 0x09D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_5;                // 0x09D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x09DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9DD[0x3];                                      // 0x09DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x09E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E4[0x4];                                      // 0x09E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_23;                           // 0x09E8(0x0010)(ConstParm, ReferenceParm)
	bool                                          Temp_bool_IsClosed_Variable_7;                     // 0x09F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9F9[0x3];                                      // 0x09F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue_6;                // 0x09FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TrashScore;                     // 0x0A00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x0A04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A05[0x3];                                      // 0x0A05(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue_7;                // 0x0A08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0A0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_8;                // 0x0A10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_22;                         // 0x0A14(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_A24[0x4];                                      // 0x0A24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_24;                           // 0x0A28(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_PostAkEvent_ReturnValue_9;                // 0x0A38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3C[0x4];                                      // 0x0A3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UVruumbaWI_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0A40(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UVruumbaWI_C*                           CallFunc_Array_Get_Item_3;                         // 0x0A50(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0A58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0A5C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5D[0x3];                                      // 0x0A5D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_4;                     // 0x0A60(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0A78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_10;               // 0x0A7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_11;               // 0x0A80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0A84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_12;               // 0x0A88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x0A8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UVruumbaWI_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets_1;      // 0x0A90(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UVruumbaWI_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets_2;      // 0x0AA0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UVruumbaWI_C*                           CallFunc_Array_Get_Item_4;                         // 0x0AB0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVruumbaWI_C*                           CallFunc_Array_Get_Item_5;                         // 0x0AB8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0AC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0AC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0AC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0AC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ACA[0x2];                                      // 0x0ACA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0ACC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_ADC[0x4];                                      // 0x0ADC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0AE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0AE8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP;              // 0x0AF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0AF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AF9[0x7];                                      // 0x0AF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHatPickup_C*                           CallFunc_GetActorOfClass_ReturnValue;              // 0x0B00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHatPickup_C*                           CallFunc_GetActorOfClass_ReturnValue_1;            // 0x0B08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_4;          // 0x0B10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B11[0x3];                                      // 0x0B11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue_13;               // 0x0B14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0B18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP_1;            // 0x0B20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B29[0x3];                                      // 0x0B29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0B2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcCameraDistance_Distance;              // 0x0B30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0B34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0B38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0B39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B3A[0x2];                                      // 0x0B3A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0B3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0B40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B41[0x3];                                      // 0x0B41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0B44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x0B48(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_14;               // 0x0B58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_15;               // 0x0B5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Actual_Race_Time;               // 0x0B60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_16;               // 0x0B64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_17;               // 0x0B68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B6C[0x4];                                      // 0x0B6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UVruumbaRaceWI_C*>               CallFunc_GetAllWidgetsOfClass_FoundWidgets_3;      // 0x0B70(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UVruumbaRaceWI_C*                       CallFunc_Array_Get_Item_6;                         // 0x0B80(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0B88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0B8C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_8;                     // 0x0B8D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B8E[0x2];                                      // 0x0B8E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Time;                           // 0x0B90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B94[0x4];                                      // 0x0B94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVruumbaRace_C*                         K2Node_CustomEvent_InVruumbaRace;                  // 0x0B98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UVruumbaWI_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets_4;      // 0x0BA0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UVruumbaWI_C*                           CallFunc_Array_Get_Item_7;                         // 0x0BB0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0BB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0BBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0BBD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_MultiGate_FirstRun;                         // 0x0BBE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_MultiGate_ScratchBool;                      // 0x0BBF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_MultiGate_ScratchIndex;                     // 0x0BC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC4[0x4];                                      // 0x0BC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_2;                           // 0x0BC8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UVruumbaWI_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets_5;      // 0x0BD8(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UVruumbaWI_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets_6;      // 0x0BE8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UVruumbaWI_C*                           CallFunc_Array_Get_Item_8;                         // 0x0BF8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVruumbaWI_C*                           CallFunc_Array_Get_Item_9;                         // 0x0C00(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x0C08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x0C0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0C10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x0C11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C12[0x6];                                      // 0x0C12(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UVruumbaWI_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets_7;      // 0x0C18(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UVruumbaWI_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets_8;      // 0x0C28(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UVruumbaWI_C*                           CallFunc_Array_Get_Item_10;                        // 0x0C38(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVruumbaWI_C*                           CallFunc_Array_Get_Item_11;                        // 0x0C40(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x0C48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x0C4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x0C50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x0C51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_5;          // 0x0C52(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C53[0x5];                                      // 0x0C53(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_25;                           // 0x0C58(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_18;               // 0x0C70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C74[0x4];                                      // 0x0C74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_2;         // 0x0C78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP_2;            // 0x0C80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0C88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C89[0x7];                                      // 0x0C89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_5;                     // 0x0C90(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_19;               // 0x0CA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0CAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CAD[0x3];                                      // 0x0CAD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_3;                           // 0x0CB0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0CC0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0CD0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0CE0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AVruumbaRace_C*                         K2Node_CustomEvent_In_Vruumba_Race;                // 0x0CF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0CF8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0D08(0x0018)()
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_6;          // 0x0D20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_7;          // 0x0D21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_8;               // 0x0D22(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_8;          // 0x0D23(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_9;               // 0x0D24(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0D25(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_9;                     // 0x0D26(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D27[0x1];                                      // 0x0D27(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0D28(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0DB4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0DC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DCC[0x4];                                      // 0x0DCC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiForObjects_OutHits;       // 0x0DD0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiForObjects_ReturnValue;   // 0x0DE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE1[0x3];                                      // 0x0DE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item_12;                        // 0x0DE4(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x0E70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0E74(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0E75(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E76[0x2];                                      // 0x0E76(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0E78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0E7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0E80(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0E8C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0E98(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0EA4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0EB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0EB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0EC0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0EC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0ED0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0ED4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0ED8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0EE4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x0EF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x0EF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EF2[0x2];                                      // 0x0EF2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0EF4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0F00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F01[0x3];                                      // 0x0F01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0F04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0F08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F09[0x3];                                      // 0x0F09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0F0C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0F18(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_4;        // 0x0F24(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F25[0x3];                                      // 0x0F25(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AVruumbaSCTBP_C*>                CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0F28(0x0010)(ReferenceParm)
	class AVruumbaSCTBP_C*                        CallFunc_Array_Get_Item_13;                        // 0x0F38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_14;              // 0x0F40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x0F44(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F45[0x3];                                      // 0x0F45(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_PlayerAccelByteID;                    // 0x0F48(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0F58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5C[0x4];                                      // 0x0F5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFCTAccelByteVruumbaCustomizationSettingsCallbackProxy* CallFunc_GetVruumbaCustomizationSettingsByUserId_ReturnValue; // 0x0F60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0F68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F69[0x7];                                      // 0x0F69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_6;                     // 0x0F70(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_20;               // 0x0F88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_21;               // 0x0F8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_22;               // 0x0F90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP) == 0x000010, "Wrong alignment on VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP");
static_assert(sizeof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP) == 0x000FA0, "Wrong size on VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, EntryPoint) == 0x000000, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable) == 0x000008, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_delegate_Variable) == 0x000018, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_int_Variable) == 0x000028, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_1) == 0x000030, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_delegate_Variable_1) == 0x000044, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_2) == 0x000058, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_delegate_Variable_2) == 0x000068, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_3) == 0x000078, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_delegate_Variable_3) == 0x000088, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_4) == 0x000098, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_delegate_Variable_4) == 0x0000A8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_delegate_Variable_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_InputKeyEvent_Key_1) == 0x0000B8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_InputKeyEvent_Key) == 0x0000D0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000E8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000E9, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_5) == 0x0000F0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_delegate_Variable_5) == 0x000100, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_delegate_Variable_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_6) == 0x000110, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_delegate_Variable_6) == 0x000120, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_delegate_Variable_6' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_7) == 0x000130, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_delegate_Variable_7) == 0x000140, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_delegate_Variable_7' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_int_Variable_1) == 0x000150, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_FFloor_ReturnValue) == 0x000154, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Add_IntInt_ReturnValue_1) == 0x000158, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00015C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000160, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000164, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000168, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_FFloor_ReturnValue_1) == 0x00016C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_FFloor_ReturnValue_2) == 0x000170, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_FFloor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Greater_IntInt_ReturnValue) == 0x000174, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Conv_IntToString_ReturnValue) == 0x000178, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000188, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Concat_StrStr_ReturnValue) == 0x000198, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0001A8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0001B0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Conv_IntToString_ReturnValue_3) == 0x0001C0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001D0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001D8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_FFloor_ReturnValue_3) == 0x0001E8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_FFloor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_int_Variable_2) == 0x0001EC, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Conv_IntToString_ReturnValue_4) == 0x0001F0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000200, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Conv_IntToString_ReturnValue_5) == 0x000210, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000220, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_int_Variable_3) == 0x000224, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_int_Variable_4) == 0x000228, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Add_IntInt_ReturnValue_2) == 0x00022C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Add_IntInt_ReturnValue_3) == 0x000230, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_int_Variable_5) == 0x000234, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_int_Variable_6) == 0x000238, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Add_IntInt_ReturnValue_4) == 0x00023C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Add_IntInt_ReturnValue_5) == 0x000240, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_int_Variable_7) == 0x000244, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_int_Variable_8) == 0x000248, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Add_IntInt_ReturnValue_6) == 0x00024C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Add_IntInt_ReturnValue_7) == 0x000250, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_8) == 0x000258, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_delegate_Variable_8) == 0x000268, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_delegate_Variable_8' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_int_Variable_9) == 0x000278, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_9) == 0x000280, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Add_IntInt_ReturnValue_8) == 0x000290, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_delegate_Variable_9) == 0x000294, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_delegate_Variable_9' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_10) == 0x0002A8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_delegate_Variable_10) == 0x0002B8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_delegate_Variable_10' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_CustomEvent_Payload_1) == 0x0002C8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_CustomEvent_Payload_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_CustomEvent_Code_1) == 0x0002F8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_CustomEvent_Code_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_CustomEvent_Message_1) == 0x000300, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_CustomEvent_Message_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_CreateDelegate_OutputDelegate) == 0x000310, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_CustomEvent_Payload) == 0x000320, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_CustomEvent_Code) == 0x000350, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_CustomEvent_Code' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_CustomEvent_Message) == 0x000358, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_CustomEvent_Message' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_CreateDelegate_OutputDelegate_1) == 0x000368, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_string_Variable) == 0x000378, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_int_Variable_10) == 0x000388, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_11) == 0x000390, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_InputActionEvent_Key_3) == 0x0003C0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_CustomizationPayloadToVariables_OutBodyMesh) == 0x0003D8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_CustomizationPayloadToVariables_OutBodyMesh' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_CustomizationPayloadToVariables_OutBodyMaterials) == 0x0003E0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_CustomizationPayloadToVariables_OutBodyMaterials' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_CustomizationPayloadToVariables_OutAntennaMesh) == 0x0003F0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_CustomizationPayloadToVariables_OutAntennaMesh' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_CustomizationPayloadToVariables_OutAntennaAnimBP) == 0x0003F8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_CustomizationPayloadToVariables_OutAntennaAnimBP' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_CustomizationPayloadToVariables_OutExhaustParticle) == 0x000400, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_CustomizationPayloadToVariables_OutExhaustParticle' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_InputActionEvent_Key_2) == 0x000408, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_InputActionEvent_Key_1) == 0x000420, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_12) == 0x000438, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_InputActionEvent_Key) == 0x000450, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_13) == 0x000468, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_delegate_Variable_11) == 0x000478, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_delegate_Variable_11' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_14) == 0x000488, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_delegate_Variable_12) == 0x000498, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_delegate_Variable_12' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_15) == 0x0004A8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_delegate_Variable_13) == 0x0004B8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_delegate_Variable_13' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_IsDedicatedServer_ReturnValue) == 0x0004C8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Lerp_ReturnValue) == 0x0004CC, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_HasAuthority_ReturnValue) == 0x0004D0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_object_Variable) == 0x0004D8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_HasAuthority_ReturnValue_1) == 0x0004E8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_Has_Been_Initd_Variable) == 0x0004E9, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x0004EA, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_byte_Variable) == 0x0004EB, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_delegate_Variable_14) == 0x0004EC, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_delegate_Variable_14' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_16) == 0x000500, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_16' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_IsClosed_Variable) == 0x000510, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_Has_Been_Initd_Variable_1) == 0x000511, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_byte_Variable_1) == 0x000512, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_IsClosed_Variable_1) == 0x000513, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_Has_Been_Initd_Variable_2) == 0x000514, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_IsClosed_Variable_2) == 0x000515, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_IsClosed_Variable_3) == 0x000516, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_Has_Been_Initd_Variable_3) == 0x000517, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_Variable) == 0x000518, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_Has_Been_Initd_Variable_4) == 0x000519, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_Has_Been_Initd_Variable_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_int_Variable_11) == 0x00051C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Add_IntInt_ReturnValue_9) == 0x000520, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_IsClosed_Variable_4) == 0x000524, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_IsClosed_Variable_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_int_Loop_Counter_Variable) == 0x000528, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Add_IntInt_ReturnValue_10) == 0x00052C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_int_Array_Index_Variable) == 0x000530, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000534, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_delegate_Variable_15) == 0x000538, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_delegate_Variable_15' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_ToRagdoll) == 0x000548, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_ToRagdoll' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_Duration) == 0x00054C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_Duration' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_OptionalImpulse) == 0x000550, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_OptionalImpulse' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_Force) == 0x00055C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_Force' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_Aiming) == 0x00055D, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_Aiming' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_AimType) == 0x00055E, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_AimType' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_AirlockTarget_1) == 0x000560, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_AirlockTarget_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_VotedCharacter) == 0x000568, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_VotedCharacter' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_VotingCharacter_2) == 0x000570, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_VotingCharacter_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_TargetAirlock) == 0x000578, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_TargetAirlock' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_Yes) == 0x000580, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_Yes' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_VotingCharacter_1) == 0x000588, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_VotingCharacter_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_AirlockTarget) == 0x000590, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_AirlockTarget' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_TargetCharacter) == 0x000598, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_TargetCharacter' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_VotingCharacter) == 0x0005A0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_VotingCharacter' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_Fate) == 0x0005A8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_Fate' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_Impulse) == 0x0005AC, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_Impulse' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_TargetLocation) == 0x0005B8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_TargetLocation' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_TargetRotation) == 0x0005C4, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_TargetRotation' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_InputValue) == 0x0005D0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_InputValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_Delay) == 0x0005D4, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_IsLocallyControlled_ReturnValue) == 0x0005D5, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_DeltaSeconds) == 0x0005D8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_CustomEvent_GravityScale) == 0x0005DC, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_CustomEvent_GravityScale' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_Has_Been_Initd_Variable_5) == 0x0005E0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_Has_Been_Initd_Variable_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x0005E1, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetPlayerController_ReturnValue) == 0x0005E8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetGameState_ReturnValue) == 0x0005F0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x0005F8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_DynamicCast_AsGame_State) == 0x000600, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_DynamicCast_AsGame_State' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_DynamicCast_bSuccess) == 0x000608, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000609, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_MakeArray_Array) == 0x000610, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_17) == 0x000620, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_17' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000630, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_CustomEvent_Spawn_Transform_Location) == 0x00063C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_CustomEvent_Spawn_Transform_Location' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_CustomEvent_VacuumOn) == 0x000648, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_CustomEvent_VacuumOn' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_HasAuthority_ReturnValue_2) == 0x000649, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_RandomFloatInRange_ReturnValue) == 0x00064C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_IsLocallyControlled_ReturnValue_2) == 0x000650, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_IsLocallyControlled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000654, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetLastUpdateVelocity_ReturnValue) == 0x000658, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetLastUpdateVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_IsServer_ReturnValue) == 0x000664, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_VSize_ReturnValue) == 0x000668, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Not_PreBool_ReturnValue) == 0x00066C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_MapRangeClamped_ReturnValue) == 0x000670, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_BooleanAND_ReturnValue) == 0x000674, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_IsClosed_Variable_5) == 0x000675, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_IsClosed_Variable_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetAllActorsOfClass_OutActors) == 0x000678, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Get_Item) == 0x000688, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Length_ReturnValue) == 0x000690, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Less_IntInt_ReturnValue) == 0x000694, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_CustomEvent_Flying_1) == 0x000695, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_CustomEvent_Flying_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_CustomEvent_Flying) == 0x000696, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_CustomEvent_Flying' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Select_Default) == 0x000697, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_RLerp_ReturnValue) == 0x000698, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_CustomEvent_SpawnTransform) == 0x0006B0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_CustomEvent_SpawnTransform' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_delegate_Variable_16) == 0x0006E0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_delegate_Variable_16' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_18) == 0x0006F0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_18' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000700, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_PostAkEvent_ReturnValue) == 0x000708, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_FinishSpawningActor_ReturnValue) == 0x000710, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_InputKeyEvent_Key_2) == 0x000718, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_SwitchEnum_CmpSuccess) == 0x000730, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_SwitchEnum_CmpSuccess_1) == 0x000731, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_delegate_Variable_17) == 0x000734, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_delegate_Variable_17' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_19) == 0x000748, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_19' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_PostAkEvent_ReturnValue_1) == 0x000758, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_Has_Been_Initd_Variable_6) == 0x00075C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_Has_Been_Initd_Variable_6' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000760, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00076C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000778, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000784, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_PrevMovementMode) == 0x000790, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_PrevMovementMode' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_NewMovementMode) == 0x000791, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_NewMovementMode' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_PrevCustomMode) == 0x000792, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_PrevCustomMode' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_NewCustomMode) == 0x000793, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_NewCustomMode' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000794, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_SwitchEnum_CmpSuccess_2) == 0x000795, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_IsLocallyControlled_ReturnValue_3) == 0x000796, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_IsLocallyControlled_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_CustomEvent_RTPC_Roomba_Volume) == 0x000798, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_CustomEvent_RTPC_Roomba_Volume' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_delegate_Variable_18) == 0x00079C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_delegate_Variable_18' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_20) == 0x0007B0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_20' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_delegate_Variable_19) == 0x0007C0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_delegate_Variable_19' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_PostAkEvent_ReturnValue_2) == 0x0007D0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_PostAkEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetAlivePlayers_Players) == 0x0007D8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetAlivePlayers_Players' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_delegate_Variable_20) == 0x0007E8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_delegate_Variable_20' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Length_ReturnValue_1) == 0x0007F8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetAlivePlayers_Players_1) == 0x000800, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetAlivePlayers_Players_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Subtract_IntInt_ReturnValue) == 0x000810, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Length_ReturnValue_2) == 0x000814, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000818, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00081C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Get_Item_1) == 0x000820, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000828, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetComponentBounds_Origin) == 0x00082C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetComponentBounds_BoxExtent) == 0x000838, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetComponentBounds_SphereRadius) == 0x000844, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x000848, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x00084C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0008D8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Get_Item_2) == 0x0008E0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Greater_IntInt_ReturnValue_3) == 0x0008E8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x0008EC, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_21) == 0x0008F8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_21' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_NewController) == 0x000908, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_PostAkEvent_ReturnValue_3) == 0x000910, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_PostAkEvent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x000914, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000920, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_LaunchVelocity) == 0x00092C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_LaunchVelocity' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_bXYOverride) == 0x000938, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_bXYOverride' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_bZOverride) == 0x000939, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_bZOverride' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x00093C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_MakeTransform_ReturnValue) == 0x000950, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Not_PreBool_ReturnValue_1) == 0x000980, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_Show) == 0x000981, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_Show' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetAlivePlayers_Players_2) == 0x000988, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetAlivePlayers_Players_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Length_ReturnValue_3) == 0x000998, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_Has_Been_Initd_Variable_7) == 0x00099C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_Has_Been_Initd_Variable_7' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00099D, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0009A0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_IsClosed_Variable_6) == 0x0009A8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_IsClosed_Variable_6' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_22) == 0x0009B0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_22' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_delegate_Variable_21) == 0x0009C0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_delegate_Variable_21' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_PostAkEvent_ReturnValue_4) == 0x0009D0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_PostAkEvent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetInputAxisValue_ReturnValue) == 0x0009D4, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetInputAxisValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_PostAkEvent_ReturnValue_5) == 0x0009D8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_PostAkEvent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0009DC, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0009E0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_23) == 0x0009E8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_23' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_IsClosed_Variable_7) == 0x0009F8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_IsClosed_Variable_7' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_PostAkEvent_ReturnValue_6) == 0x0009FC, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_PostAkEvent_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_CustomEvent_TrashScore) == 0x000A00, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_CustomEvent_TrashScore' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x000A04, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_PostAkEvent_ReturnValue_7) == 0x000A08, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_PostAkEvent_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_int_Array_Index_Variable_1) == 0x000A0C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_PostAkEvent_ReturnValue_8) == 0x000A10, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_PostAkEvent_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_delegate_Variable_22) == 0x000A14, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_delegate_Variable_22' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_24) == 0x000A28, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_24' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_PostAkEvent_ReturnValue_9) == 0x000A38, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_PostAkEvent_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000A40, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Get_Item_3) == 0x000A50, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Length_ReturnValue_4) == 0x000A58, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Less_IntInt_ReturnValue_1) == 0x000A5C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_InputActionEvent_Key_4) == 0x000A60, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_InputActionEvent_Key_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Add_FloatFloat_ReturnValue) == 0x000A78, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_PostAkEvent_ReturnValue_10) == 0x000A7C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_PostAkEvent_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_PostAkEvent_ReturnValue_11) == 0x000A80, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_PostAkEvent_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_int_Loop_Counter_Variable_1) == 0x000A84, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_PostAkEvent_ReturnValue_12) == 0x000A88, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_PostAkEvent_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Add_IntInt_ReturnValue_11) == 0x000A8C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetAllWidgetsOfClass_FoundWidgets_1) == 0x000A90, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetAllWidgetsOfClass_FoundWidgets_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetAllWidgetsOfClass_FoundWidgets_2) == 0x000AA0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetAllWidgetsOfClass_FoundWidgets_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Get_Item_4) == 0x000AB0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Get_Item_5) == 0x000AB8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Length_ReturnValue_5) == 0x000AC0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Length_ReturnValue_6) == 0x000AC4, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Less_IntInt_ReturnValue_2) == 0x000AC8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Less_IntInt_ReturnValue_3) == 0x000AC9, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_CreateDelegate_OutputDelegate_2) == 0x000ACC, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000AE0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000AE8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_DynamicCast_AsCharacter_SCTBP) == 0x000AF0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_DynamicCast_AsCharacter_SCTBP' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_DynamicCast_bSuccess_1) == 0x000AF8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetActorOfClass_ReturnValue) == 0x000B00, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetActorOfClass_ReturnValue_1) == 0x000B08, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetActorOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_IsDedicatedServer_ReturnValue_4) == 0x000B10, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_IsDedicatedServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_PostAkEvent_ReturnValue_13) == 0x000B14, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_PostAkEvent_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000B18, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_DynamicCast_AsCharacter_SCTBP_1) == 0x000B20, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_DynamicCast_AsCharacter_SCTBP_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_DynamicCast_bSuccess_2) == 0x000B28, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000B2C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_CalcCameraDistance_Distance) == 0x000B30, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_CalcCameraDistance_Distance' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_FClamp_ReturnValue) == 0x000B34, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000B38, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Not_PreBool_ReturnValue_2) == 0x000B39, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000B3C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_Variable_1) == 0x000B40, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_FClamp_ReturnValue_1) == 0x000B44, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Select_Default_1) == 0x000B48, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_PostAkEvent_ReturnValue_14) == 0x000B58, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_PostAkEvent_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_PostAkEvent_ReturnValue_15) == 0x000B5C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_PostAkEvent_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_CustomEvent_Actual_Race_Time) == 0x000B60, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_CustomEvent_Actual_Race_Time' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_PostAkEvent_ReturnValue_16) == 0x000B64, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_PostAkEvent_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_PostAkEvent_ReturnValue_17) == 0x000B68, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_PostAkEvent_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetAllWidgetsOfClass_FoundWidgets_3) == 0x000B70, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetAllWidgetsOfClass_FoundWidgets_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Get_Item_6) == 0x000B80, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Length_ReturnValue_7) == 0x000B88, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Less_IntInt_ReturnValue_4) == 0x000B8C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_IsClosed_Variable_8) == 0x000B8D, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_IsClosed_Variable_8' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_CustomEvent_Time) == 0x000B90, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_CustomEvent_Time' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_CustomEvent_InVruumbaRace) == 0x000B98, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_CustomEvent_InVruumbaRace' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetAllWidgetsOfClass_FoundWidgets_4) == 0x000BA0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetAllWidgetsOfClass_FoundWidgets_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Get_Item_7) == 0x000BB0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Length_ReturnValue_8) == 0x000BB8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Less_IntInt_ReturnValue_5) == 0x000BBC, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_Variable_2) == 0x000BBD, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_MultiGate_FirstRun) == 0x000BBE, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_MultiGate_FirstRun' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_MultiGate_ScratchBool) == 0x000BBF, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_MultiGate_ScratchBool' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_MultiGate_ScratchIndex) == 0x000BC0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_MultiGate_ScratchIndex' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Select_Default_2) == 0x000BC8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetAllWidgetsOfClass_FoundWidgets_5) == 0x000BD8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetAllWidgetsOfClass_FoundWidgets_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetAllWidgetsOfClass_FoundWidgets_6) == 0x000BE8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetAllWidgetsOfClass_FoundWidgets_6' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Get_Item_8) == 0x000BF8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Get_Item_9) == 0x000C00, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Length_ReturnValue_9) == 0x000C08, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Length_ReturnValue_10) == 0x000C0C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Less_IntInt_ReturnValue_6) == 0x000C10, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Less_IntInt_ReturnValue_7) == 0x000C11, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetAllWidgetsOfClass_FoundWidgets_7) == 0x000C18, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetAllWidgetsOfClass_FoundWidgets_7' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetAllWidgetsOfClass_FoundWidgets_8) == 0x000C28, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetAllWidgetsOfClass_FoundWidgets_8' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Get_Item_10) == 0x000C38, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Get_Item_11) == 0x000C40, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Length_ReturnValue_11) == 0x000C48, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Length_ReturnValue_12) == 0x000C4C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Less_IntInt_ReturnValue_8) == 0x000C50, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Less_IntInt_ReturnValue_9) == 0x000C51, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_IsDedicatedServer_ReturnValue_5) == 0x000C52, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_IsDedicatedServer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_struct_Variable_25) == 0x000C58, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_struct_Variable_25' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_PostAkEvent_ReturnValue_18) == 0x000C70, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_PostAkEvent_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetPlayerCharacter_ReturnValue_2) == 0x000C78, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetPlayerCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_DynamicCast_AsCharacter_SCTBP_2) == 0x000C80, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_DynamicCast_AsCharacter_SCTBP_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_DynamicCast_bSuccess_3) == 0x000C88, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_InputActionEvent_Key_5) == 0x000C90, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_InputActionEvent_Key_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_PostAkEvent_ReturnValue_19) == 0x000CA8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_PostAkEvent_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_Variable_3) == 0x000CAC, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Select_Default_3) == 0x000CB0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000CC0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000CD0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000CE0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_CustomEvent_In_Vruumba_Race) == 0x000CF0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_CustomEvent_In_Vruumba_Race' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000CF8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Conv_StringToText_ReturnValue) == 0x000D08, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_IsDedicatedServer_ReturnValue_6) == 0x000D20, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_IsDedicatedServer_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_IsDedicatedServer_ReturnValue_7) == 0x000D21, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_IsDedicatedServer_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_Has_Been_Initd_Variable_8) == 0x000D22, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_Has_Been_Initd_Variable_8' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_IsDedicatedServer_ReturnValue_8) == 0x000D23, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_IsDedicatedServer_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_Has_Been_Initd_Variable_9) == 0x000D24, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_Has_Been_Initd_Variable_9' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_HasAuthority_ReturnValue_3) == 0x000D25, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, Temp_bool_IsClosed_Variable_9) == 0x000D26, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::Temp_bool_IsClosed_Variable_9' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000D28, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000DB4, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Add_VectorVector_ReturnValue) == 0x000DC0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_SphereTraceMultiForObjects_OutHits) == 0x000DD0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_SphereTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_SphereTraceMultiForObjects_ReturnValue) == 0x000DE0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_SphereTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Get_Item_12) == 0x000DE4, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Length_ReturnValue_13) == 0x000E70, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_BreakHitResult_bBlockingHit) == 0x000E74, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_BreakHitResult_bInitialOverlap) == 0x000E75, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_BreakHitResult_Time) == 0x000E78, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_BreakHitResult_Distance) == 0x000E7C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_BreakHitResult_Location) == 0x000E80, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_BreakHitResult_ImpactPoint) == 0x000E8C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_BreakHitResult_Normal) == 0x000E98, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_BreakHitResult_ImpactNormal) == 0x000EA4, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_BreakHitResult_PhysMat) == 0x000EB0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_BreakHitResult_HitActor) == 0x000EB8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_BreakHitResult_HitComponent) == 0x000EC0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_BreakHitResult_HitBoneName) == 0x000EC8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_BreakHitResult_HitItem) == 0x000ED0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_BreakHitResult_FaceIndex) == 0x000ED4, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_BreakHitResult_TraceStart) == 0x000ED8, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_BreakHitResult_TraceEnd) == 0x000EE4, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Less_IntInt_ReturnValue_10) == 0x000EF0, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetCollisionObjectType_ReturnValue) == 0x000EF1, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000EF4, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000F00, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_VSizeSquared_ReturnValue) == 0x000F04, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000F08, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Normal_ReturnValue) == 0x000F0C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000F18, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_IsLocallyControlled_ReturnValue_4) == 0x000F24, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_IsLocallyControlled_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000F28, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Get_Item_13) == 0x000F38, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Get_Item_13' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Array_Length_ReturnValue_14) == 0x000F40, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Array_Length_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Less_IntInt_ReturnValue_11) == 0x000F44, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_Event_PlayerAccelByteID) == 0x000F48, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_Event_PlayerAccelByteID' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000F58, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_GetVruumbaCustomizationSettingsByUserId_ReturnValue) == 0x000F60, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_GetVruumbaCustomizationSettingsByUserId_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_IsValid_ReturnValue) == 0x000F68, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, K2Node_InputActionEvent_Key_6) == 0x000F70, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::K2Node_InputActionEvent_Key_6' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_PostAkEvent_ReturnValue_20) == 0x000F88, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_PostAkEvent_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_PostAkEvent_ReturnValue_21) == 0x000F8C, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_PostAkEvent_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP, CallFunc_PostAkEvent_ReturnValue_22) == 0x000F90, "Member 'VruumbaSCTBP_C_ExecuteUbergraph_VruumbaSCTBP::CallFunc_PostAkEvent_ReturnValue_22' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.K2_OnSetCustomization
// 0x0010 (0x0010 - 0x0000)
struct VruumbaSCTBP_C_K2_OnSetCustomization final
{
public:
	class FString                                 PlayerAccelByteID;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_K2_OnSetCustomization) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_K2_OnSetCustomization");
static_assert(sizeof(VruumbaSCTBP_C_K2_OnSetCustomization) == 0x000010, "Wrong size on VruumbaSCTBP_C_K2_OnSetCustomization");
static_assert(offsetof(VruumbaSCTBP_C_K2_OnSetCustomization, PlayerAccelByteID) == 0x000000, "Member 'VruumbaSCTBP_C_K2_OnSetCustomization::PlayerAccelByteID' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.VruumbaRaceScoreReroute
// 0x0008 (0x0008 - 0x0000)
struct VruumbaSCTBP_C_VruumbaRaceScoreReroute final
{
public:
	class AVruumbaRace_C*                         In_Vruumba_Race;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_VruumbaRaceScoreReroute) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_VruumbaRaceScoreReroute");
static_assert(sizeof(VruumbaSCTBP_C_VruumbaRaceScoreReroute) == 0x000008, "Wrong size on VruumbaSCTBP_C_VruumbaRaceScoreReroute");
static_assert(offsetof(VruumbaSCTBP_C_VruumbaRaceScoreReroute, In_Vruumba_Race) == 0x000000, "Member 'VruumbaSCTBP_C_VruumbaRaceScoreReroute::In_Vruumba_Race' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.VruumbaRaceReroute
// 0x0010 (0x0010 - 0x0000)
struct VruumbaSCTBP_C_VruumbaRaceReroute final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVruumbaRace_C*                         InVruumbaRace;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_VruumbaRaceReroute) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_VruumbaRaceReroute");
static_assert(sizeof(VruumbaSCTBP_C_VruumbaRaceReroute) == 0x000010, "Wrong size on VruumbaSCTBP_C_VruumbaRaceReroute");
static_assert(offsetof(VruumbaSCTBP_C_VruumbaRaceReroute, Time) == 0x000000, "Member 'VruumbaSCTBP_C_VruumbaRaceReroute::Time' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_VruumbaRaceReroute, InVruumbaRace) == 0x000008, "Member 'VruumbaSCTBP_C_VruumbaRaceReroute::InVruumbaRace' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.Update Race Time
// 0x0004 (0x0004 - 0x0000)
struct VruumbaSCTBP_C_Update_Race_Time final
{
public:
	float                                         Actual_Race_Time;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_Update_Race_Time) == 0x000004, "Wrong alignment on VruumbaSCTBP_C_Update_Race_Time");
static_assert(sizeof(VruumbaSCTBP_C_Update_Race_Time) == 0x000004, "Wrong size on VruumbaSCTBP_C_Update_Race_Time");
static_assert(offsetof(VruumbaSCTBP_C_Update_Race_Time, Actual_Race_Time) == 0x000000, "Member 'VruumbaSCTBP_C_Update_Race_Time::Actual_Race_Time' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.ServerTrashUpdate
// 0x0004 (0x0004 - 0x0000)
struct VruumbaSCTBP_C_ServerTrashUpdate final
{
public:
	float                                         TrashScore_0;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_ServerTrashUpdate) == 0x000004, "Wrong alignment on VruumbaSCTBP_C_ServerTrashUpdate");
static_assert(sizeof(VruumbaSCTBP_C_ServerTrashUpdate) == 0x000004, "Wrong size on VruumbaSCTBP_C_ServerTrashUpdate");
static_assert(offsetof(VruumbaSCTBP_C_ServerTrashUpdate, TrashScore_0) == 0x000000, "Member 'VruumbaSCTBP_C_ServerTrashUpdate::TrashScore_0' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.DisplayAirlockWidgetBPI
// 0x0001 (0x0001 - 0x0000)
struct VruumbaSCTBP_C_DisplayAirlockWidgetBPI final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_DisplayAirlockWidgetBPI) == 0x000001, "Wrong alignment on VruumbaSCTBP_C_DisplayAirlockWidgetBPI");
static_assert(sizeof(VruumbaSCTBP_C_DisplayAirlockWidgetBPI) == 0x000001, "Wrong size on VruumbaSCTBP_C_DisplayAirlockWidgetBPI");
static_assert(offsetof(VruumbaSCTBP_C_DisplayAirlockWidgetBPI, Show) == 0x000000, "Member 'VruumbaSCTBP_C_DisplayAirlockWidgetBPI::Show' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.OnLaunched
// 0x0010 (0x0010 - 0x0000)
struct VruumbaSCTBP_C_OnLaunched final
{
public:
	struct FVector                                LaunchVelocity;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bXYOverride;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bZOverride;                                        // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_OnLaunched) == 0x000004, "Wrong alignment on VruumbaSCTBP_C_OnLaunched");
static_assert(sizeof(VruumbaSCTBP_C_OnLaunched) == 0x000010, "Wrong size on VruumbaSCTBP_C_OnLaunched");
static_assert(offsetof(VruumbaSCTBP_C_OnLaunched, LaunchVelocity) == 0x000000, "Member 'VruumbaSCTBP_C_OnLaunched::LaunchVelocity' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OnLaunched, bXYOverride) == 0x00000C, "Member 'VruumbaSCTBP_C_OnLaunched::bXYOverride' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OnLaunched, bZOverride) == 0x00000D, "Member 'VruumbaSCTBP_C_OnLaunched::bZOverride' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct VruumbaSCTBP_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_ReceivePossessed) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_ReceivePossessed");
static_assert(sizeof(VruumbaSCTBP_C_ReceivePossessed) == 0x000008, "Wrong size on VruumbaSCTBP_C_ReceivePossessed");
static_assert(offsetof(VruumbaSCTBP_C_ReceivePossessed, NewController) == 0x000000, "Member 'VruumbaSCTBP_C_ReceivePossessed::NewController' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.YouHitTheFloor
// 0x0004 (0x0004 - 0x0000)
struct VruumbaSCTBP_C_YouHitTheFloor final
{
public:
	float                                         RTPC_Roomba_Volume_0;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_YouHitTheFloor) == 0x000004, "Wrong alignment on VruumbaSCTBP_C_YouHitTheFloor");
static_assert(sizeof(VruumbaSCTBP_C_YouHitTheFloor) == 0x000004, "Wrong size on VruumbaSCTBP_C_YouHitTheFloor");
static_assert(offsetof(VruumbaSCTBP_C_YouHitTheFloor, RTPC_Roomba_Volume_0) == 0x000000, "Member 'VruumbaSCTBP_C_YouHitTheFloor::RTPC_Roomba_Volume_0' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.K2_OnMovementModeChanged
// 0x0004 (0x0004 - 0x0000)
struct VruumbaSCTBP_C_K2_OnMovementModeChanged final
{
public:
	Engine::EMovementMode                         PrevMovementMode;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Engine::EMovementMode                         NewMovementMode;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PrevCustomMode;                                    // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         NewCustomMode;                                     // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_K2_OnMovementModeChanged) == 0x000001, "Wrong alignment on VruumbaSCTBP_C_K2_OnMovementModeChanged");
static_assert(sizeof(VruumbaSCTBP_C_K2_OnMovementModeChanged) == 0x000004, "Wrong size on VruumbaSCTBP_C_K2_OnMovementModeChanged");
static_assert(offsetof(VruumbaSCTBP_C_K2_OnMovementModeChanged, PrevMovementMode) == 0x000000, "Member 'VruumbaSCTBP_C_K2_OnMovementModeChanged::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_K2_OnMovementModeChanged, NewMovementMode) == 0x000001, "Member 'VruumbaSCTBP_C_K2_OnMovementModeChanged::NewMovementMode' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_K2_OnMovementModeChanged, PrevCustomMode) == 0x000002, "Member 'VruumbaSCTBP_C_K2_OnMovementModeChanged::PrevCustomMode' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_K2_OnMovementModeChanged, NewCustomMode) == 0x000003, "Member 'VruumbaSCTBP_C_K2_OnMovementModeChanged::NewCustomMode' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.SpawnProjectileServer
// 0x0030 (0x0030 - 0x0000)
struct VruumbaSCTBP_C_SpawnProjectileServer final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_SpawnProjectileServer) == 0x000010, "Wrong alignment on VruumbaSCTBP_C_SpawnProjectileServer");
static_assert(sizeof(VruumbaSCTBP_C_SpawnProjectileServer) == 0x000030, "Wrong size on VruumbaSCTBP_C_SpawnProjectileServer");
static_assert(offsetof(VruumbaSCTBP_C_SpawnProjectileServer, SpawnTransform) == 0x000000, "Member 'VruumbaSCTBP_C_SpawnProjectileServer::SpawnTransform' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.SetFlyingModeMulticast
// 0x0001 (0x0001 - 0x0000)
struct VruumbaSCTBP_C_SetFlyingModeMulticast final
{
public:
	bool                                          Flying;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_SetFlyingModeMulticast) == 0x000001, "Wrong alignment on VruumbaSCTBP_C_SetFlyingModeMulticast");
static_assert(sizeof(VruumbaSCTBP_C_SetFlyingModeMulticast) == 0x000001, "Wrong size on VruumbaSCTBP_C_SetFlyingModeMulticast");
static_assert(offsetof(VruumbaSCTBP_C_SetFlyingModeMulticast, Flying) == 0x000000, "Member 'VruumbaSCTBP_C_SetFlyingModeMulticast::Flying' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.SetFlyingModeServer
// 0x0001 (0x0001 - 0x0000)
struct VruumbaSCTBP_C_SetFlyingModeServer final
{
public:
	bool                                          Flying;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_SetFlyingModeServer) == 0x000001, "Wrong alignment on VruumbaSCTBP_C_SetFlyingModeServer");
static_assert(sizeof(VruumbaSCTBP_C_SetFlyingModeServer) == 0x000001, "Wrong size on VruumbaSCTBP_C_SetFlyingModeServer");
static_assert(offsetof(VruumbaSCTBP_C_SetFlyingModeServer, Flying) == 0x000000, "Member 'VruumbaSCTBP_C_SetFlyingModeServer::Flying' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.VacuumServer
// 0x0001 (0x0001 - 0x0000)
struct VruumbaSCTBP_C_VacuumServer final
{
public:
	bool                                          VacuumOn_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_VacuumServer) == 0x000001, "Wrong alignment on VruumbaSCTBP_C_VacuumServer");
static_assert(sizeof(VruumbaSCTBP_C_VacuumServer) == 0x000001, "Wrong size on VruumbaSCTBP_C_VacuumServer");
static_assert(offsetof(VruumbaSCTBP_C_VacuumServer, VacuumOn_0) == 0x000000, "Member 'VruumbaSCTBP_C_VacuumServer::VacuumOn_0' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.SpawnTrashClients
// 0x000C (0x000C - 0x0000)
struct VruumbaSCTBP_C_SpawnTrashClients final
{
public:
	struct FVector                                Spawn_Transform_Location;                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_SpawnTrashClients) == 0x000004, "Wrong alignment on VruumbaSCTBP_C_SpawnTrashClients");
static_assert(sizeof(VruumbaSCTBP_C_SpawnTrashClients) == 0x00000C, "Wrong size on VruumbaSCTBP_C_SpawnTrashClients");
static_assert(offsetof(VruumbaSCTBP_C_SpawnTrashClients, Spawn_Transform_Location) == 0x000000, "Member 'VruumbaSCTBP_C_SpawnTrashClients::Spawn_Transform_Location' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.ServerGravity
// 0x0004 (0x0004 - 0x0000)
struct VruumbaSCTBP_C_ServerGravity final
{
public:
	float                                         GravityScale;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_ServerGravity) == 0x000004, "Wrong alignment on VruumbaSCTBP_C_ServerGravity");
static_assert(sizeof(VruumbaSCTBP_C_ServerGravity) == 0x000004, "Wrong size on VruumbaSCTBP_C_ServerGravity");
static_assert(offsetof(VruumbaSCTBP_C_ServerGravity, GravityScale) == 0x000000, "Member 'VruumbaSCTBP_C_ServerGravity::GravityScale' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct VruumbaSCTBP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_ReceiveTick) == 0x000004, "Wrong alignment on VruumbaSCTBP_C_ReceiveTick");
static_assert(sizeof(VruumbaSCTBP_C_ReceiveTick) == 0x000004, "Wrong size on VruumbaSCTBP_C_ReceiveTick");
static_assert(offsetof(VruumbaSCTBP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'VruumbaSCTBP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.AddAlcoholBPI
// 0x0008 (0x0008 - 0x0000)
struct VruumbaSCTBP_C_AddAlcoholBPI final
{
public:
	float                                         InputValue;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Delay;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_AddAlcoholBPI) == 0x000004, "Wrong alignment on VruumbaSCTBP_C_AddAlcoholBPI");
static_assert(sizeof(VruumbaSCTBP_C_AddAlcoholBPI) == 0x000008, "Wrong size on VruumbaSCTBP_C_AddAlcoholBPI");
static_assert(offsetof(VruumbaSCTBP_C_AddAlcoholBPI, InputValue) == 0x000000, "Member 'VruumbaSCTBP_C_AddAlcoholBPI::InputValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_AddAlcoholBPI, Delay) == 0x000004, "Member 'VruumbaSCTBP_C_AddAlcoholBPI::Delay' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.TeleportLocationRotationBPI
// 0x0018 (0x0018 - 0x0000)
struct VruumbaSCTBP_C_TeleportLocationRotationBPI final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TargetRotation;                                    // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_TeleportLocationRotationBPI) == 0x000004, "Wrong alignment on VruumbaSCTBP_C_TeleportLocationRotationBPI");
static_assert(sizeof(VruumbaSCTBP_C_TeleportLocationRotationBPI) == 0x000018, "Wrong size on VruumbaSCTBP_C_TeleportLocationRotationBPI");
static_assert(offsetof(VruumbaSCTBP_C_TeleportLocationRotationBPI, TargetLocation) == 0x000000, "Member 'VruumbaSCTBP_C_TeleportLocationRotationBPI::TargetLocation' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_TeleportLocationRotationBPI, TargetRotation) == 0x00000C, "Member 'VruumbaSCTBP_C_TeleportLocationRotationBPI::TargetRotation' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.SetDestinyBPI
// 0x0010 (0x0010 - 0x0000)
struct VruumbaSCTBP_C_SetDestinyBPI final
{
public:
	EFate                                         Fate;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Impulse;                                           // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_SetDestinyBPI) == 0x000004, "Wrong alignment on VruumbaSCTBP_C_SetDestinyBPI");
static_assert(sizeof(VruumbaSCTBP_C_SetDestinyBPI) == 0x000010, "Wrong size on VruumbaSCTBP_C_SetDestinyBPI");
static_assert(offsetof(VruumbaSCTBP_C_SetDestinyBPI, Fate) == 0x000000, "Member 'VruumbaSCTBP_C_SetDestinyBPI::Fate' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_SetDestinyBPI, Impulse) == 0x000004, "Member 'VruumbaSCTBP_C_SetDestinyBPI::Impulse' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.PassengerLogVoteBPI
// 0x0018 (0x0018 - 0x0000)
struct VruumbaSCTBP_C_PassengerLogVoteBPI final
{
public:
	class AActor*                                 AirlockTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             TargetCharacter;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             VotingCharacter;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_PassengerLogVoteBPI) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_PassengerLogVoteBPI");
static_assert(sizeof(VruumbaSCTBP_C_PassengerLogVoteBPI) == 0x000018, "Wrong size on VruumbaSCTBP_C_PassengerLogVoteBPI");
static_assert(offsetof(VruumbaSCTBP_C_PassengerLogVoteBPI, AirlockTarget) == 0x000000, "Member 'VruumbaSCTBP_C_PassengerLogVoteBPI::AirlockTarget' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_PassengerLogVoteBPI, TargetCharacter) == 0x000008, "Member 'VruumbaSCTBP_C_PassengerLogVoteBPI::TargetCharacter' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_PassengerLogVoteBPI, VotingCharacter) == 0x000010, "Member 'VruumbaSCTBP_C_PassengerLogVoteBPI::VotingCharacter' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.TrustVoteBPI
// 0x0018 (0x0018 - 0x0000)
struct VruumbaSCTBP_C_TrustVoteBPI final
{
public:
	class AActor*                                 TargetAirlock;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Yes;                                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             VotingCharacter;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_TrustVoteBPI) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_TrustVoteBPI");
static_assert(sizeof(VruumbaSCTBP_C_TrustVoteBPI) == 0x000018, "Wrong size on VruumbaSCTBP_C_TrustVoteBPI");
static_assert(offsetof(VruumbaSCTBP_C_TrustVoteBPI, TargetAirlock) == 0x000000, "Member 'VruumbaSCTBP_C_TrustVoteBPI::TargetAirlock' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_TrustVoteBPI, Yes) == 0x000008, "Member 'VruumbaSCTBP_C_TrustVoteBPI::Yes' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_TrustVoteBPI, VotingCharacter) == 0x000010, "Member 'VruumbaSCTBP_C_TrustVoteBPI::VotingCharacter' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.EliminationVoteBPI
// 0x0018 (0x0018 - 0x0000)
struct VruumbaSCTBP_C_EliminationVoteBPI final
{
public:
	class AActor*                                 AirlockTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             VotedCharacter;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             VotingCharacter;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_EliminationVoteBPI) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_EliminationVoteBPI");
static_assert(sizeof(VruumbaSCTBP_C_EliminationVoteBPI) == 0x000018, "Wrong size on VruumbaSCTBP_C_EliminationVoteBPI");
static_assert(offsetof(VruumbaSCTBP_C_EliminationVoteBPI, AirlockTarget) == 0x000000, "Member 'VruumbaSCTBP_C_EliminationVoteBPI::AirlockTarget' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_EliminationVoteBPI, VotedCharacter) == 0x000008, "Member 'VruumbaSCTBP_C_EliminationVoteBPI::VotedCharacter' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_EliminationVoteBPI, VotingCharacter) == 0x000010, "Member 'VruumbaSCTBP_C_EliminationVoteBPI::VotingCharacter' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.SetAimingStateBPI
// 0x0002 (0x0002 - 0x0000)
struct VruumbaSCTBP_C_SetAimingStateBPI final
{
public:
	bool                                          Aiming;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         AimType;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_SetAimingStateBPI) == 0x000001, "Wrong alignment on VruumbaSCTBP_C_SetAimingStateBPI");
static_assert(sizeof(VruumbaSCTBP_C_SetAimingStateBPI) == 0x000002, "Wrong size on VruumbaSCTBP_C_SetAimingStateBPI");
static_assert(offsetof(VruumbaSCTBP_C_SetAimingStateBPI, Aiming) == 0x000000, "Member 'VruumbaSCTBP_C_SetAimingStateBPI::Aiming' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_SetAimingStateBPI, AimType) == 0x000001, "Member 'VruumbaSCTBP_C_SetAimingStateBPI::AimType' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.RagdollCharacterBPI
// 0x0018 (0x0018 - 0x0000)
struct VruumbaSCTBP_C_RagdollCharacterBPI final
{
public:
	bool                                          ToRagdoll;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Duration;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OptionalImpulse;                                   // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Force;                                             // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_RagdollCharacterBPI) == 0x000004, "Wrong alignment on VruumbaSCTBP_C_RagdollCharacterBPI");
static_assert(sizeof(VruumbaSCTBP_C_RagdollCharacterBPI) == 0x000018, "Wrong size on VruumbaSCTBP_C_RagdollCharacterBPI");
static_assert(offsetof(VruumbaSCTBP_C_RagdollCharacterBPI, ToRagdoll) == 0x000000, "Member 'VruumbaSCTBP_C_RagdollCharacterBPI::ToRagdoll' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_RagdollCharacterBPI, Duration) == 0x000004, "Member 'VruumbaSCTBP_C_RagdollCharacterBPI::Duration' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_RagdollCharacterBPI, OptionalImpulse) == 0x000008, "Member 'VruumbaSCTBP_C_RagdollCharacterBPI::OptionalImpulse' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_RagdollCharacterBPI, Force) == 0x000014, "Member 'VruumbaSCTBP_C_RagdollCharacterBPI::Force' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.InpActEvt_VruumbaFly_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct VruumbaSCTBP_C_InpActEvt_VruumbaFly_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_InpActEvt_VruumbaFly_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_InpActEvt_VruumbaFly_K2Node_InputActionEvent_0");
static_assert(sizeof(VruumbaSCTBP_C_InpActEvt_VruumbaFly_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on VruumbaSCTBP_C_InpActEvt_VruumbaFly_K2Node_InputActionEvent_0");
static_assert(offsetof(VruumbaSCTBP_C_InpActEvt_VruumbaFly_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'VruumbaSCTBP_C_InpActEvt_VruumbaFly_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.InpActEvt_VruumbaHoover_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct VruumbaSCTBP_C_InpActEvt_VruumbaHoover_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_InpActEvt_VruumbaHoover_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_InpActEvt_VruumbaHoover_K2Node_InputActionEvent_1");
static_assert(sizeof(VruumbaSCTBP_C_InpActEvt_VruumbaHoover_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on VruumbaSCTBP_C_InpActEvt_VruumbaHoover_K2Node_InputActionEvent_1");
static_assert(offsetof(VruumbaSCTBP_C_InpActEvt_VruumbaHoover_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'VruumbaSCTBP_C_InpActEvt_VruumbaHoover_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.InpActEvt_VruumbaHoover_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct VruumbaSCTBP_C_InpActEvt_VruumbaHoover_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_InpActEvt_VruumbaHoover_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_InpActEvt_VruumbaHoover_K2Node_InputActionEvent_2");
static_assert(sizeof(VruumbaSCTBP_C_InpActEvt_VruumbaHoover_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on VruumbaSCTBP_C_InpActEvt_VruumbaHoover_K2Node_InputActionEvent_2");
static_assert(offsetof(VruumbaSCTBP_C_InpActEvt_VruumbaHoover_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'VruumbaSCTBP_C_InpActEvt_VruumbaHoover_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.InpActEvt_PrimaryUseRoleItem_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct VruumbaSCTBP_C_InpActEvt_PrimaryUseRoleItem_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_InpActEvt_PrimaryUseRoleItem_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_InpActEvt_PrimaryUseRoleItem_K2Node_InputActionEvent_3");
static_assert(sizeof(VruumbaSCTBP_C_InpActEvt_PrimaryUseRoleItem_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on VruumbaSCTBP_C_InpActEvt_PrimaryUseRoleItem_K2Node_InputActionEvent_3");
static_assert(offsetof(VruumbaSCTBP_C_InpActEvt_PrimaryUseRoleItem_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'VruumbaSCTBP_C_InpActEvt_PrimaryUseRoleItem_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.OnSuccess_19CA9B374C71051C12033894EF38DCA4
// 0x0048 (0x0048 - 0x0000)
struct VruumbaSCTBP_C_OnSuccess_19CA9B374C71051C12033894EF38DCA4 final
{
public:
	struct FFCTCloudCustomizationVruumba          Payload;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Code;                                              // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_OnSuccess_19CA9B374C71051C12033894EF38DCA4) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_OnSuccess_19CA9B374C71051C12033894EF38DCA4");
static_assert(sizeof(VruumbaSCTBP_C_OnSuccess_19CA9B374C71051C12033894EF38DCA4) == 0x000048, "Wrong size on VruumbaSCTBP_C_OnSuccess_19CA9B374C71051C12033894EF38DCA4");
static_assert(offsetof(VruumbaSCTBP_C_OnSuccess_19CA9B374C71051C12033894EF38DCA4, Payload) == 0x000000, "Member 'VruumbaSCTBP_C_OnSuccess_19CA9B374C71051C12033894EF38DCA4::Payload' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OnSuccess_19CA9B374C71051C12033894EF38DCA4, Code) == 0x000030, "Member 'VruumbaSCTBP_C_OnSuccess_19CA9B374C71051C12033894EF38DCA4::Code' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OnSuccess_19CA9B374C71051C12033894EF38DCA4, Message) == 0x000038, "Member 'VruumbaSCTBP_C_OnSuccess_19CA9B374C71051C12033894EF38DCA4::Message' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.OnError_19CA9B374C71051C12033894EF38DCA4
// 0x0048 (0x0048 - 0x0000)
struct VruumbaSCTBP_C_OnError_19CA9B374C71051C12033894EF38DCA4 final
{
public:
	struct FFCTCloudCustomizationVruumba          Payload;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Code;                                              // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_OnError_19CA9B374C71051C12033894EF38DCA4) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_OnError_19CA9B374C71051C12033894EF38DCA4");
static_assert(sizeof(VruumbaSCTBP_C_OnError_19CA9B374C71051C12033894EF38DCA4) == 0x000048, "Wrong size on VruumbaSCTBP_C_OnError_19CA9B374C71051C12033894EF38DCA4");
static_assert(offsetof(VruumbaSCTBP_C_OnError_19CA9B374C71051C12033894EF38DCA4, Payload) == 0x000000, "Member 'VruumbaSCTBP_C_OnError_19CA9B374C71051C12033894EF38DCA4::Payload' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OnError_19CA9B374C71051C12033894EF38DCA4, Code) == 0x000030, "Member 'VruumbaSCTBP_C_OnError_19CA9B374C71051C12033894EF38DCA4::Code' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OnError_19CA9B374C71051C12033894EF38DCA4, Message) == 0x000038, "Member 'VruumbaSCTBP_C_OnError_19CA9B374C71051C12033894EF38DCA4::Message' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct VruumbaSCTBP_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0");
static_assert(sizeof(VruumbaSCTBP_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on VruumbaSCTBP_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0");
static_assert(offsetof(VruumbaSCTBP_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'VruumbaSCTBP_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct VruumbaSCTBP_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1");
static_assert(sizeof(VruumbaSCTBP_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on VruumbaSCTBP_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1");
static_assert(offsetof(VruumbaSCTBP_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'VruumbaSCTBP_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.InpActEvt_U_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct VruumbaSCTBP_C_InpActEvt_U_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_InpActEvt_U_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_InpActEvt_U_K2Node_InputKeyEvent_2");
static_assert(sizeof(VruumbaSCTBP_C_InpActEvt_U_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on VruumbaSCTBP_C_InpActEvt_U_K2Node_InputKeyEvent_2");
static_assert(offsetof(VruumbaSCTBP_C_InpActEvt_U_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'VruumbaSCTBP_C_InpActEvt_U_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.InpActEvt_Crouch_K2Node_InputActionEvent_4
// 0x0018 (0x0018 - 0x0000)
struct VruumbaSCTBP_C_InpActEvt_Crouch_K2Node_InputActionEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_InpActEvt_Crouch_K2Node_InputActionEvent_4) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_InpActEvt_Crouch_K2Node_InputActionEvent_4");
static_assert(sizeof(VruumbaSCTBP_C_InpActEvt_Crouch_K2Node_InputActionEvent_4) == 0x000018, "Wrong size on VruumbaSCTBP_C_InpActEvt_Crouch_K2Node_InputActionEvent_4");
static_assert(offsetof(VruumbaSCTBP_C_InpActEvt_Crouch_K2Node_InputActionEvent_4, Key) == 0x000000, "Member 'VruumbaSCTBP_C_InpActEvt_Crouch_K2Node_InputActionEvent_4::Key' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.InpActEvt_Jump_K2Node_InputActionEvent_5
// 0x0018 (0x0018 - 0x0000)
struct VruumbaSCTBP_C_InpActEvt_Jump_K2Node_InputActionEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_InpActEvt_Jump_K2Node_InputActionEvent_5) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_InpActEvt_Jump_K2Node_InputActionEvent_5");
static_assert(sizeof(VruumbaSCTBP_C_InpActEvt_Jump_K2Node_InputActionEvent_5) == 0x000018, "Wrong size on VruumbaSCTBP_C_InpActEvt_Jump_K2Node_InputActionEvent_5");
static_assert(offsetof(VruumbaSCTBP_C_InpActEvt_Jump_K2Node_InputActionEvent_5, Key) == 0x000000, "Member 'VruumbaSCTBP_C_InpActEvt_Jump_K2Node_InputActionEvent_5::Key' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.InpActEvt_Jump_K2Node_InputActionEvent_6
// 0x0018 (0x0018 - 0x0000)
struct VruumbaSCTBP_C_InpActEvt_Jump_K2Node_InputActionEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_InpActEvt_Jump_K2Node_InputActionEvent_6) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_InpActEvt_Jump_K2Node_InputActionEvent_6");
static_assert(sizeof(VruumbaSCTBP_C_InpActEvt_Jump_K2Node_InputActionEvent_6) == 0x000018, "Wrong size on VruumbaSCTBP_C_InpActEvt_Jump_K2Node_InputActionEvent_6");
static_assert(offsetof(VruumbaSCTBP_C_InpActEvt_Jump_K2Node_InputActionEvent_6, Key) == 0x000000, "Member 'VruumbaSCTBP_C_InpActEvt_Jump_K2Node_InputActionEvent_6::Key' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.SetIsVisibleAndPhysical
// 0x0030 (0x0030 - 0x0000)
struct VruumbaSCTBP_C_SetIsVisibleAndPhysical final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_Array_Get_Item_1;                         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_SetIsVisibleAndPhysical) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_SetIsVisibleAndPhysical");
static_assert(sizeof(VruumbaSCTBP_C_SetIsVisibleAndPhysical) == 0x000030, "Wrong size on VruumbaSCTBP_C_SetIsVisibleAndPhysical");
static_assert(offsetof(VruumbaSCTBP_C_SetIsVisibleAndPhysical, bNewVisibility) == 0x000000, "Member 'VruumbaSCTBP_C_SetIsVisibleAndPhysical::bNewVisibility' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_SetIsVisibleAndPhysical, Temp_int_Variable) == 0x000004, "Member 'VruumbaSCTBP_C_SetIsVisibleAndPhysical::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_SetIsVisibleAndPhysical, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'VruumbaSCTBP_C_SetIsVisibleAndPhysical::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_SetIsVisibleAndPhysical, CallFunc_HasAuthority_ReturnValue) == 0x00000C, "Member 'VruumbaSCTBP_C_SetIsVisibleAndPhysical::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_SetIsVisibleAndPhysical, CallFunc_Array_Get_Item) == 0x000010, "Member 'VruumbaSCTBP_C_SetIsVisibleAndPhysical::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_SetIsVisibleAndPhysical, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'VruumbaSCTBP_C_SetIsVisibleAndPhysical::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_SetIsVisibleAndPhysical, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'VruumbaSCTBP_C_SetIsVisibleAndPhysical::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_SetIsVisibleAndPhysical, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'VruumbaSCTBP_C_SetIsVisibleAndPhysical::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_SetIsVisibleAndPhysical, CallFunc_IsActive_ReturnValue) == 0x000028, "Member 'VruumbaSCTBP_C_SetIsVisibleAndPhysical::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_SetIsVisibleAndPhysical, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000029, "Member 'VruumbaSCTBP_C_SetIsVisibleAndPhysical::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.AddWidget
// 0x0018 (0x0018 - 0x0000)
struct VruumbaSCTBP_C_AddWidget final
{
public:
	class UClass*                                 Class_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_AddWidget) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_AddWidget");
static_assert(sizeof(VruumbaSCTBP_C_AddWidget) == 0x000018, "Wrong size on VruumbaSCTBP_C_AddWidget");
static_assert(offsetof(VruumbaSCTBP_C_AddWidget, Class_0) == 0x000000, "Member 'VruumbaSCTBP_C_AddWidget::Class_0' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_AddWidget, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'VruumbaSCTBP_C_AddWidget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_AddWidget, CallFunc_Create_ReturnValue) == 0x000010, "Member 'VruumbaSCTBP_C_AddWidget::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.OrientToMovement
// 0x0218 (0x0218 - 0x0000)
struct VruumbaSCTBP_C_OrientToMovement final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0044(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_Array_Get_Item_2;                         // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue_1;                // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_2;           // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x018C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(VruumbaSCTBP_C_OrientToMovement) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_OrientToMovement");
static_assert(sizeof(VruumbaSCTBP_C_OrientToMovement) == 0x000218, "Wrong size on VruumbaSCTBP_C_OrientToMovement");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, Temp_int_Variable) == 0x000000, "Member 'VruumbaSCTBP_C_OrientToMovement::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, Temp_int_Variable_1) == 0x000004, "Member 'VruumbaSCTBP_C_OrientToMovement::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Array_Get_Item) == 0x000010, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_GetForwardVector_ReturnValue) == 0x000018, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000024, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Dot_VectorVector_ReturnValue) == 0x000030, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000044, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000D0, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Array_Length_ReturnValue) == 0x0000D4, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Lerp_ReturnValue) == 0x0000D8, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Less_IntInt_ReturnValue) == 0x0000DC, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Conv_FloatToVector_ReturnValue) == 0x0000E0, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000EC, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000ED, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000F0, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_GetUpVector_ReturnValue) == 0x0000F4, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000100, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_GetActorRightVector_ReturnValue) == 0x000104, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_GetVelocity_ReturnValue) == 0x000110, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Normal_ReturnValue) == 0x00011C, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Array_Get_Item_2) == 0x000128, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000130, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000134, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Array_Length_ReturnValue_1) == 0x000138, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00013C, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Less_IntInt_ReturnValue_1) == 0x000140, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Lerp_ReturnValue_1) == 0x000144, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_GetVelocity_ReturnValue_1) == 0x000148, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_GetVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000154, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Normal_ReturnValue_1) == 0x000158, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_RInterpTo_ReturnValue) == 0x000164, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Dot_VectorVector_ReturnValue_2) == 0x000170, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Dot_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000174, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000178, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_Lerp_ReturnValue_2) == 0x00017C, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_MakeRotator_ReturnValue) == 0x000180, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OrientToMovement, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x00018C, "Member 'VruumbaSCTBP_C_OrientToMovement::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.CalculateFloorDistance
// 0x00D0 (0x00D0 - 0x0000)
struct VruumbaSCTBP_C_CalculateFloorDistance final
{
public:
	float                                         CallFunc_GetMaxJumpHeight_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0040(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_CalculateFloorDistance) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_CalculateFloorDistance");
static_assert(sizeof(VruumbaSCTBP_C_CalculateFloorDistance) == 0x0000D0, "Wrong size on VruumbaSCTBP_C_CalculateFloorDistance");
static_assert(offsetof(VruumbaSCTBP_C_CalculateFloorDistance, CallFunc_GetMaxJumpHeight_ReturnValue) == 0x000000, "Member 'VruumbaSCTBP_C_CalculateFloorDistance::CallFunc_GetMaxJumpHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CalculateFloorDistance, K2Node_MakeArray_Array) == 0x000008, "Member 'VruumbaSCTBP_C_CalculateFloorDistance::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CalculateFloorDistance, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'VruumbaSCTBP_C_CalculateFloorDistance::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CalculateFloorDistance, CallFunc_MakeVector_ReturnValue) == 0x00001C, "Member 'VruumbaSCTBP_C_CalculateFloorDistance::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CalculateFloorDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'VruumbaSCTBP_C_CalculateFloorDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CalculateFloorDistance, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000034, "Member 'VruumbaSCTBP_C_CalculateFloorDistance::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CalculateFloorDistance, CallFunc_LineTraceSingle_OutHit) == 0x000040, "Member 'VruumbaSCTBP_C_CalculateFloorDistance::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CalculateFloorDistance, CallFunc_LineTraceSingle_ReturnValue) == 0x0000CC, "Member 'VruumbaSCTBP_C_CalculateFloorDistance::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.CalcCameraDistance
// 0x0008 (0x0008 - 0x0000)
struct VruumbaSCTBP_C_CalcCameraDistance final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_CalcCameraDistance) == 0x000004, "Wrong alignment on VruumbaSCTBP_C_CalcCameraDistance");
static_assert(sizeof(VruumbaSCTBP_C_CalcCameraDistance) == 0x000008, "Wrong size on VruumbaSCTBP_C_CalcCameraDistance");
static_assert(offsetof(VruumbaSCTBP_C_CalcCameraDistance, Distance) == 0x000000, "Member 'VruumbaSCTBP_C_CalcCameraDistance::Distance' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CalcCameraDistance, CallFunc_FInterpTo_ReturnValue) == 0x000004, "Member 'VruumbaSCTBP_C_CalcCameraDistance::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.GetAlivePlayers
// 0x0070 (0x0070 - 0x0000)
struct VruumbaSCTBP_C_GetAlivePlayers final
{
public:
	TArray<class ACharacter*>                     Players;                                           // 0x0000(0x0010)(Parm, OutParm)
	TArray<class ACharacter*>                     Characters;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAliveBPI_Alive;                         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_GetAlivePlayers) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_GetAlivePlayers");
static_assert(sizeof(VruumbaSCTBP_C_GetAlivePlayers) == 0x000070, "Wrong size on VruumbaSCTBP_C_GetAlivePlayers");
static_assert(offsetof(VruumbaSCTBP_C_GetAlivePlayers, Players) == 0x000000, "Member 'VruumbaSCTBP_C_GetAlivePlayers::Players' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_GetAlivePlayers, Characters) == 0x000010, "Member 'VruumbaSCTBP_C_GetAlivePlayers::Characters' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_GetAlivePlayers, Temp_int_Array_Index_Variable) == 0x000020, "Member 'VruumbaSCTBP_C_GetAlivePlayers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_GetAlivePlayers, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'VruumbaSCTBP_C_GetAlivePlayers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_GetAlivePlayers, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'VruumbaSCTBP_C_GetAlivePlayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_GetAlivePlayers, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'VruumbaSCTBP_C_GetAlivePlayers::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_GetAlivePlayers, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'VruumbaSCTBP_C_GetAlivePlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_GetAlivePlayers, CallFunc_Array_Get_Item) == 0x000048, "Member 'VruumbaSCTBP_C_GetAlivePlayers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_GetAlivePlayers, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'VruumbaSCTBP_C_GetAlivePlayers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_GetAlivePlayers, K2Node_DynamicCast_AsICharacter_SCT) == 0x000058, "Member 'VruumbaSCTBP_C_GetAlivePlayers::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_GetAlivePlayers, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'VruumbaSCTBP_C_GetAlivePlayers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_GetAlivePlayers, CallFunc_IsAliveBPI_Alive) == 0x000069, "Member 'VruumbaSCTBP_C_GetAlivePlayers::CallFunc_IsAliveBPI_Alive' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_GetAlivePlayers, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'VruumbaSCTBP_C_GetAlivePlayers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.SetTrashVisible
// 0x0030 (0x0030 - 0x0000)
struct VruumbaSCTBP_C_SetTrashVisible final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class Abp_TrashDebris_C*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class Abp_TrashDebris_C*                      CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_SetTrashVisible) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_SetTrashVisible");
static_assert(sizeof(VruumbaSCTBP_C_SetTrashVisible) == 0x000030, "Wrong size on VruumbaSCTBP_C_SetTrashVisible");
static_assert(offsetof(VruumbaSCTBP_C_SetTrashVisible, Temp_int_Variable) == 0x000000, "Member 'VruumbaSCTBP_C_SetTrashVisible::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_SetTrashVisible, CallFunc_GetAllActorsOfClass_OutActors) == 0x000008, "Member 'VruumbaSCTBP_C_SetTrashVisible::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_SetTrashVisible, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'VruumbaSCTBP_C_SetTrashVisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_SetTrashVisible, CallFunc_Array_Get_Item) == 0x000020, "Member 'VruumbaSCTBP_C_SetTrashVisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_SetTrashVisible, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'VruumbaSCTBP_C_SetTrashVisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_SetTrashVisible, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'VruumbaSCTBP_C_SetTrashVisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.WidgetProjectileCooldown
// 0x0038 (0x0038 - 0x0000)
struct VruumbaSCTBP_C_WidgetProjectileCooldown final
{
public:
	bool                                          OnCooldown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UVruumbaWI_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVruumbaWI_C*                           CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_WidgetProjectileCooldown) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_WidgetProjectileCooldown");
static_assert(sizeof(VruumbaSCTBP_C_WidgetProjectileCooldown) == 0x000038, "Wrong size on VruumbaSCTBP_C_WidgetProjectileCooldown");
static_assert(offsetof(VruumbaSCTBP_C_WidgetProjectileCooldown, OnCooldown) == 0x000000, "Member 'VruumbaSCTBP_C_WidgetProjectileCooldown::OnCooldown' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_WidgetProjectileCooldown, Temp_int_Variable) == 0x000004, "Member 'VruumbaSCTBP_C_WidgetProjectileCooldown::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_WidgetProjectileCooldown, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'VruumbaSCTBP_C_WidgetProjectileCooldown::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_WidgetProjectileCooldown, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000010, "Member 'VruumbaSCTBP_C_WidgetProjectileCooldown::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_WidgetProjectileCooldown, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'VruumbaSCTBP_C_WidgetProjectileCooldown::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_WidgetProjectileCooldown, CallFunc_Array_Get_Item) == 0x000028, "Member 'VruumbaSCTBP_C_WidgetProjectileCooldown::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_WidgetProjectileCooldown, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'VruumbaSCTBP_C_WidgetProjectileCooldown::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_WidgetProjectileCooldown, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'VruumbaSCTBP_C_WidgetProjectileCooldown::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.WidgetTeleportCooldown
// 0x0038 (0x0038 - 0x0000)
struct VruumbaSCTBP_C_WidgetTeleportCooldown final
{
public:
	bool                                          OnCooldown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UVruumbaWI_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVruumbaWI_C*                           CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_WidgetTeleportCooldown) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_WidgetTeleportCooldown");
static_assert(sizeof(VruumbaSCTBP_C_WidgetTeleportCooldown) == 0x000038, "Wrong size on VruumbaSCTBP_C_WidgetTeleportCooldown");
static_assert(offsetof(VruumbaSCTBP_C_WidgetTeleportCooldown, OnCooldown) == 0x000000, "Member 'VruumbaSCTBP_C_WidgetTeleportCooldown::OnCooldown' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_WidgetTeleportCooldown, Temp_int_Variable) == 0x000004, "Member 'VruumbaSCTBP_C_WidgetTeleportCooldown::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_WidgetTeleportCooldown, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'VruumbaSCTBP_C_WidgetTeleportCooldown::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_WidgetTeleportCooldown, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000010, "Member 'VruumbaSCTBP_C_WidgetTeleportCooldown::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_WidgetTeleportCooldown, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'VruumbaSCTBP_C_WidgetTeleportCooldown::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_WidgetTeleportCooldown, CallFunc_Array_Get_Item) == 0x000028, "Member 'VruumbaSCTBP_C_WidgetTeleportCooldown::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_WidgetTeleportCooldown, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'VruumbaSCTBP_C_WidgetTeleportCooldown::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_WidgetTeleportCooldown, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'VruumbaSCTBP_C_WidgetTeleportCooldown::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.TryUpdateProjectilWidget
// 0x0003 (0x0003 - 0x0000)
struct VruumbaSCTBP_C_TryUpdateProjectilWidget final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_TryUpdateProjectilWidget) == 0x000001, "Wrong alignment on VruumbaSCTBP_C_TryUpdateProjectilWidget");
static_assert(sizeof(VruumbaSCTBP_C_TryUpdateProjectilWidget) == 0x000003, "Wrong size on VruumbaSCTBP_C_TryUpdateProjectilWidget");
static_assert(offsetof(VruumbaSCTBP_C_TryUpdateProjectilWidget, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'VruumbaSCTBP_C_TryUpdateProjectilWidget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_TryUpdateProjectilWidget, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'VruumbaSCTBP_C_TryUpdateProjectilWidget::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_TryUpdateProjectilWidget, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'VruumbaSCTBP_C_TryUpdateProjectilWidget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.Trash Display Update
// 0x0008 (0x0008 - 0x0000)
struct VruumbaSCTBP_C_Trash_Display_Update final
{
public:
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_Trash_Display_Update) == 0x000004, "Wrong alignment on VruumbaSCTBP_C_Trash_Display_Update");
static_assert(sizeof(VruumbaSCTBP_C_Trash_Display_Update) == 0x000008, "Wrong size on VruumbaSCTBP_C_Trash_Display_Update");
static_assert(offsetof(VruumbaSCTBP_C_Trash_Display_Update, CallFunc_Add_FloatFloat_ReturnValue) == 0x000000, "Member 'VruumbaSCTBP_C_Trash_Display_Update::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Trash_Display_Update, CallFunc_FMin_ReturnValue) == 0x000004, "Member 'VruumbaSCTBP_C_Trash_Display_Update::CallFunc_FMin_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.OnRep_TrashScore
// 0x0001 (0x0001 - 0x0000)
struct VruumbaSCTBP_C_OnRep_TrashScore final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_OnRep_TrashScore) == 0x000001, "Wrong alignment on VruumbaSCTBP_C_OnRep_TrashScore");
static_assert(sizeof(VruumbaSCTBP_C_OnRep_TrashScore) == 0x000001, "Wrong size on VruumbaSCTBP_C_OnRep_TrashScore");
static_assert(offsetof(VruumbaSCTBP_C_OnRep_TrashScore, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'VruumbaSCTBP_C_OnRep_TrashScore::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.Set Flag Visible
// 0x0018 (0x0018 - 0x0000)
struct VruumbaSCTBP_C_Set_Flag_Visible final
{
public:
	class AHatPickup_C*                           CallFunc_GetActorOfClass_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHatStand_C*                            CallFunc_GetActorOfClass_ReturnValue_1;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_Set_Flag_Visible) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_Set_Flag_Visible");
static_assert(sizeof(VruumbaSCTBP_C_Set_Flag_Visible) == 0x000018, "Wrong size on VruumbaSCTBP_C_Set_Flag_Visible");
static_assert(offsetof(VruumbaSCTBP_C_Set_Flag_Visible, CallFunc_GetActorOfClass_ReturnValue) == 0x000000, "Member 'VruumbaSCTBP_C_Set_Flag_Visible::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Set_Flag_Visible, CallFunc_GetActorOfClass_ReturnValue_1) == 0x000008, "Member 'VruumbaSCTBP_C_Set_Flag_Visible::CallFunc_GetActorOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Set_Flag_Visible, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'VruumbaSCTBP_C_Set_Flag_Visible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Set_Flag_Visible, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'VruumbaSCTBP_C_Set_Flag_Visible::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.Audio Set 3D RTPC
// 0x0008 (0x0008 - 0x0000)
struct VruumbaSCTBP_C_Audio_Set_3D_RTPC final
{
public:
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_Audio_Set_3D_RTPC) == 0x000004, "Wrong alignment on VruumbaSCTBP_C_Audio_Set_3D_RTPC");
static_assert(sizeof(VruumbaSCTBP_C_Audio_Set_3D_RTPC) == 0x000008, "Wrong size on VruumbaSCTBP_C_Audio_Set_3D_RTPC");
static_assert(offsetof(VruumbaSCTBP_C_Audio_Set_3D_RTPC, CallFunc_IsLocallyControlled_ReturnValue) == 0x000000, "Member 'VruumbaSCTBP_C_Audio_Set_3D_RTPC::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Audio_Set_3D_RTPC, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'VruumbaSCTBP_C_Audio_Set_3D_RTPC::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.Set Race Visible
// 0x0010 (0x0010 - 0x0000)
struct VruumbaSCTBP_C_Set_Race_Visible final
{
public:
	class AVruumbaRace_C*                         CallFunc_GetActorOfClass_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_Set_Race_Visible) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_Set_Race_Visible");
static_assert(sizeof(VruumbaSCTBP_C_Set_Race_Visible) == 0x000010, "Wrong size on VruumbaSCTBP_C_Set_Race_Visible");
static_assert(offsetof(VruumbaSCTBP_C_Set_Race_Visible, CallFunc_GetActorOfClass_ReturnValue) == 0x000000, "Member 'VruumbaSCTBP_C_Set_Race_Visible::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Set_Race_Visible, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'VruumbaSCTBP_C_Set_Race_Visible::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.Check Best Personal Race Time
// 0x0198 (0x0198 - 0x0000)
struct VruumbaSCTBP_C_Check_Best_Personal_Race_Time final
{
public:
	float                                         BestPersonalTime;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_2;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_1;                           // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_3;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_2;                           // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UVruumbaRaceWI_C*>               CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0160(0x0010)(ReferenceParm, ContainsInstancedReference)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0170(0x0018)()
	class UVruumbaRaceWI_C*                       CallFunc_Array_Get_Item;                           // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_Check_Best_Personal_Race_Time");
static_assert(sizeof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time) == 0x000198, "Wrong size on VruumbaSCTBP_C_Check_Best_Personal_Race_Time");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, BestPersonalTime) == 0x000000, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::BestPersonalTime' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, Temp_bool_Variable) == 0x000004, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, Temp_bool_Variable_1) == 0x000005, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, Temp_int_Variable) == 0x000008, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_FFloor_ReturnValue) == 0x000010, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000018, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_FFloor_ReturnValue_1) == 0x000020, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_FFloor_ReturnValue_2) == 0x000038, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_FFloor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000058, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000068, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000078, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000088, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000098, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, K2Node_Select_Default) == 0x0000A0, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000B0, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, K2Node_Select_Default_1) == 0x0000B8, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_FFloor_ReturnValue_3) == 0x0000C8, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_FFloor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Conv_IntToString_ReturnValue_4) == 0x0000D0, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Conv_IntToString_ReturnValue_5) == 0x0000E0, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000F0, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000100, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, Temp_bool_Variable_2) == 0x000101, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, K2Node_Select_Default_2) == 0x000108, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000118, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000128, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000130, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000140, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000150, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000160, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Conv_StringToText_ReturnValue) == 0x000170, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Array_Get_Item) == 0x000188, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Array_Length_ReturnValue) == 0x000190, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Less_IntInt_ReturnValue) == 0x000194, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Check_Best_Personal_Race_Time, CallFunc_Less_FloatFloat_ReturnValue) == 0x000195, "Member 'VruumbaSCTBP_C_Check_Best_Personal_Race_Time::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.Randomize Vroomba Mesh
// 0x0004 (0x0004 - 0x0000)
struct VruumbaSCTBP_C_Randomize_Vroomba_Mesh final
{
public:
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_Randomize_Vroomba_Mesh) == 0x000004, "Wrong alignment on VruumbaSCTBP_C_Randomize_Vroomba_Mesh");
static_assert(sizeof(VruumbaSCTBP_C_Randomize_Vroomba_Mesh) == 0x000004, "Wrong size on VruumbaSCTBP_C_Randomize_Vroomba_Mesh");
static_assert(offsetof(VruumbaSCTBP_C_Randomize_Vroomba_Mesh, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000000, "Member 'VruumbaSCTBP_C_Randomize_Vroomba_Mesh::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.FadeFromBlack
// 0x0028 (0x0028 - 0x0000)
struct VruumbaSCTBP_C_FadeFromBlack final
{
public:
	class UCharacterWI_C*                         CallFunc_GetSCT_CharacterWidget_CharacterWI;       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCTPlayerController_MatchBP_C*         K2Node_DynamicCast_AsSCTPlayer_Controller_Match_BP; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_FadeFromBlack) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_FadeFromBlack");
static_assert(sizeof(VruumbaSCTBP_C_FadeFromBlack) == 0x000028, "Wrong size on VruumbaSCTBP_C_FadeFromBlack");
static_assert(offsetof(VruumbaSCTBP_C_FadeFromBlack, CallFunc_GetSCT_CharacterWidget_CharacterWI) == 0x000000, "Member 'VruumbaSCTBP_C_FadeFromBlack::CallFunc_GetSCT_CharacterWidget_CharacterWI' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_FadeFromBlack, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'VruumbaSCTBP_C_FadeFromBlack::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_FadeFromBlack, K2Node_DynamicCast_AsSCTPlayer_Controller_Match_BP) == 0x000010, "Member 'VruumbaSCTBP_C_FadeFromBlack::K2Node_DynamicCast_AsSCTPlayer_Controller_Match_BP' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_FadeFromBlack, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'VruumbaSCTBP_C_FadeFromBlack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_FadeFromBlack, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'VruumbaSCTBP_C_FadeFromBlack::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.InitiateCharacterHider
// 0x0070 (0x0070 - 0x0000)
struct VruumbaSCTBP_C_InitiateCharacterHider final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACameraCharacterHiderSCTBP_C*>   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0038(0x0010)(ReferenceParm)
	class ACameraCharacterHiderSCTBP_C*           CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACameraCharacterHiderSCTBP_C*           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_InitiateCharacterHider) == 0x000010, "Wrong alignment on VruumbaSCTBP_C_InitiateCharacterHider");
static_assert(sizeof(VruumbaSCTBP_C_InitiateCharacterHider) == 0x000070, "Wrong size on VruumbaSCTBP_C_InitiateCharacterHider");
static_assert(offsetof(VruumbaSCTBP_C_InitiateCharacterHider, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'VruumbaSCTBP_C_InitiateCharacterHider::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_InitiateCharacterHider, CallFunc_IsDedicatedServer_ReturnValue) == 0x000030, "Member 'VruumbaSCTBP_C_InitiateCharacterHider::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_InitiateCharacterHider, CallFunc_IsLocallyControlled_ReturnValue) == 0x000031, "Member 'VruumbaSCTBP_C_InitiateCharacterHider::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_InitiateCharacterHider, CallFunc_GetAllActorsOfClass_OutActors) == 0x000038, "Member 'VruumbaSCTBP_C_InitiateCharacterHider::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_InitiateCharacterHider, CallFunc_Array_Get_Item) == 0x000048, "Member 'VruumbaSCTBP_C_InitiateCharacterHider::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_InitiateCharacterHider, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000050, "Member 'VruumbaSCTBP_C_InitiateCharacterHider::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_InitiateCharacterHider, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'VruumbaSCTBP_C_InitiateCharacterHider::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_InitiateCharacterHider, CallFunc_FinishSpawningActor_ReturnValue) == 0x000060, "Member 'VruumbaSCTBP_C_InitiateCharacterHider::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.Double Jump Launch
// 0x0068 (0x0068 - 0x0000)
struct VruumbaSCTBP_C_Double_Jump_Launch final
{
public:
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_Double_Jump_Launch) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_Double_Jump_Launch");
static_assert(sizeof(VruumbaSCTBP_C_Double_Jump_Launch) == 0x000068, "Wrong size on VruumbaSCTBP_C_Double_Jump_Launch");
static_assert(offsetof(VruumbaSCTBP_C_Double_Jump_Launch, CallFunc_GetController_ReturnValue) == 0x000000, "Member 'VruumbaSCTBP_C_Double_Jump_Launch::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Double_Jump_Launch, CallFunc_GetActorForwardVector_ReturnValue) == 0x000008, "Member 'VruumbaSCTBP_C_Double_Jump_Launch::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Double_Jump_Launch, CallFunc_GetControlRotation_ReturnValue) == 0x000014, "Member 'VruumbaSCTBP_C_Double_Jump_Launch::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Double_Jump_Launch, CallFunc_BreakVector_X) == 0x000020, "Member 'VruumbaSCTBP_C_Double_Jump_Launch::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Double_Jump_Launch, CallFunc_BreakVector_Y) == 0x000024, "Member 'VruumbaSCTBP_C_Double_Jump_Launch::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Double_Jump_Launch, CallFunc_BreakVector_Z) == 0x000028, "Member 'VruumbaSCTBP_C_Double_Jump_Launch::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Double_Jump_Launch, CallFunc_BreakRotator_Roll) == 0x00002C, "Member 'VruumbaSCTBP_C_Double_Jump_Launch::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Double_Jump_Launch, CallFunc_BreakRotator_Pitch) == 0x000030, "Member 'VruumbaSCTBP_C_Double_Jump_Launch::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Double_Jump_Launch, CallFunc_BreakRotator_Yaw) == 0x000034, "Member 'VruumbaSCTBP_C_Double_Jump_Launch::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Double_Jump_Launch, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000038, "Member 'VruumbaSCTBP_C_Double_Jump_Launch::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Double_Jump_Launch, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'VruumbaSCTBP_C_Double_Jump_Launch::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Double_Jump_Launch, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'VruumbaSCTBP_C_Double_Jump_Launch::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Double_Jump_Launch, CallFunc_Normal_ReturnValue) == 0x00004C, "Member 'VruumbaSCTBP_C_Double_Jump_Launch::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Double_Jump_Launch, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000058, "Member 'VruumbaSCTBP_C_Double_Jump_Launch::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.Double Jump Boosts
// 0x0030 (0x0030 - 0x0000)
struct VruumbaSCTBP_C_Double_Jump_Boosts final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UVruumbaWI_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UVruumbaWI_C*                           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_Double_Jump_Boosts) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_Double_Jump_Boosts");
static_assert(sizeof(VruumbaSCTBP_C_Double_Jump_Boosts) == 0x000030, "Wrong size on VruumbaSCTBP_C_Double_Jump_Boosts");
static_assert(offsetof(VruumbaSCTBP_C_Double_Jump_Boosts, Temp_int_Variable) == 0x000000, "Member 'VruumbaSCTBP_C_Double_Jump_Boosts::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Double_Jump_Boosts, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'VruumbaSCTBP_C_Double_Jump_Boosts::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Double_Jump_Boosts, CallFunc_IsLocallyControlled_ReturnValue) == 0x000008, "Member 'VruumbaSCTBP_C_Double_Jump_Boosts::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Double_Jump_Boosts, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000010, "Member 'VruumbaSCTBP_C_Double_Jump_Boosts::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Double_Jump_Boosts, CallFunc_Array_Get_Item) == 0x000020, "Member 'VruumbaSCTBP_C_Double_Jump_Boosts::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Double_Jump_Boosts, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'VruumbaSCTBP_C_Double_Jump_Boosts::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Double_Jump_Boosts, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'VruumbaSCTBP_C_Double_Jump_Boosts::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.Jump WI
// 0x0030 (0x0030 - 0x0000)
struct VruumbaSCTBP_C_Jump_WI final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UVruumbaWI_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVruumbaWI_C*                           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_Jump_WI) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_Jump_WI");
static_assert(sizeof(VruumbaSCTBP_C_Jump_WI) == 0x000030, "Wrong size on VruumbaSCTBP_C_Jump_WI");
static_assert(offsetof(VruumbaSCTBP_C_Jump_WI, Temp_int_Variable) == 0x000000, "Member 'VruumbaSCTBP_C_Jump_WI::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Jump_WI, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000008, "Member 'VruumbaSCTBP_C_Jump_WI::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Jump_WI, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'VruumbaSCTBP_C_Jump_WI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Jump_WI, CallFunc_Array_Get_Item) == 0x000020, "Member 'VruumbaSCTBP_C_Jump_WI::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Jump_WI, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'VruumbaSCTBP_C_Jump_WI::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Jump_WI, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'VruumbaSCTBP_C_Jump_WI::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.Set Boosters Visible
// 0x0038 (0x0038 - 0x0000)
struct VruumbaSCTBP_C_Set_Boosters_Visible final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AVruumbaSpeedBooster_C*>         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVruumbaSpeedBooster_C*                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_Set_Boosters_Visible) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_Set_Boosters_Visible");
static_assert(sizeof(VruumbaSCTBP_C_Set_Boosters_Visible) == 0x000038, "Wrong size on VruumbaSCTBP_C_Set_Boosters_Visible");
static_assert(offsetof(VruumbaSCTBP_C_Set_Boosters_Visible, Temp_int_Array_Index_Variable) == 0x000000, "Member 'VruumbaSCTBP_C_Set_Boosters_Visible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Set_Boosters_Visible, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'VruumbaSCTBP_C_Set_Boosters_Visible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Set_Boosters_Visible, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'VruumbaSCTBP_C_Set_Boosters_Visible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Set_Boosters_Visible, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'VruumbaSCTBP_C_Set_Boosters_Visible::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Set_Boosters_Visible, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'VruumbaSCTBP_C_Set_Boosters_Visible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Set_Boosters_Visible, CallFunc_Array_Get_Item) == 0x000028, "Member 'VruumbaSCTBP_C_Set_Boosters_Visible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Set_Boosters_Visible, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'VruumbaSCTBP_C_Set_Boosters_Visible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Set_Boosters_Visible, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'VruumbaSCTBP_C_Set_Boosters_Visible::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.QueryShouldHide
// 0x0010 (0x0010 - 0x0000)
struct VruumbaSCTBP_C_QueryShouldHide final
{
public:
	class ASCTPlayerState*                        CallFunc_GetLocalPlayerState_AsSCTPlayer_State;    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_QueryShouldHide) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_QueryShouldHide");
static_assert(sizeof(VruumbaSCTBP_C_QueryShouldHide) == 0x000010, "Wrong size on VruumbaSCTBP_C_QueryShouldHide");
static_assert(offsetof(VruumbaSCTBP_C_QueryShouldHide, CallFunc_GetLocalPlayerState_AsSCTPlayer_State) == 0x000000, "Member 'VruumbaSCTBP_C_QueryShouldHide::CallFunc_GetLocalPlayerState_AsSCTPlayer_State' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_QueryShouldHide, CallFunc_IsAlive_ReturnValue) == 0x000008, "Member 'VruumbaSCTBP_C_QueryShouldHide::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_QueryShouldHide, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'VruumbaSCTBP_C_QueryShouldHide::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.UpdateLocalTrashWidget
// 0x0030 (0x0030 - 0x0000)
struct VruumbaSCTBP_C_UpdateLocalTrashWidget final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UVruumbaWI_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVruumbaWI_C*                           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_UpdateLocalTrashWidget) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_UpdateLocalTrashWidget");
static_assert(sizeof(VruumbaSCTBP_C_UpdateLocalTrashWidget) == 0x000030, "Wrong size on VruumbaSCTBP_C_UpdateLocalTrashWidget");
static_assert(offsetof(VruumbaSCTBP_C_UpdateLocalTrashWidget, Temp_int_Variable) == 0x000000, "Member 'VruumbaSCTBP_C_UpdateLocalTrashWidget::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_UpdateLocalTrashWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'VruumbaSCTBP_C_UpdateLocalTrashWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_UpdateLocalTrashWidget, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000008, "Member 'VruumbaSCTBP_C_UpdateLocalTrashWidget::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_UpdateLocalTrashWidget, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'VruumbaSCTBP_C_UpdateLocalTrashWidget::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_UpdateLocalTrashWidget, CallFunc_Array_Get_Item) == 0x000020, "Member 'VruumbaSCTBP_C_UpdateLocalTrashWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_UpdateLocalTrashWidget, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'VruumbaSCTBP_C_UpdateLocalTrashWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_UpdateLocalTrashWidget, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'VruumbaSCTBP_C_UpdateLocalTrashWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_UpdateLocalTrashWidget, CallFunc_IsLocallyControlled_ReturnValue) == 0x00002D, "Member 'VruumbaSCTBP_C_UpdateLocalTrashWidget::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.CreateBodyCustomization
// 0x0048 (0x0048 - 0x0000)
struct VruumbaSCTBP_C_CreateBodyCustomization final
{
public:
	class USkeletalMesh*                          NewBodyMesh;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 NewAnimBP;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             NewBodyMaterials;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_CreateBodyCustomization) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_CreateBodyCustomization");
static_assert(sizeof(VruumbaSCTBP_C_CreateBodyCustomization) == 0x000048, "Wrong size on VruumbaSCTBP_C_CreateBodyCustomization");
static_assert(offsetof(VruumbaSCTBP_C_CreateBodyCustomization, NewBodyMesh) == 0x000000, "Member 'VruumbaSCTBP_C_CreateBodyCustomization::NewBodyMesh' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CreateBodyCustomization, NewAnimBP) == 0x000008, "Member 'VruumbaSCTBP_C_CreateBodyCustomization::NewAnimBP' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CreateBodyCustomization, NewBodyMaterials) == 0x000010, "Member 'VruumbaSCTBP_C_CreateBodyCustomization::NewBodyMaterials' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CreateBodyCustomization, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'VruumbaSCTBP_C_CreateBodyCustomization::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CreateBodyCustomization, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000024, "Member 'VruumbaSCTBP_C_CreateBodyCustomization::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CreateBodyCustomization, CallFunc_IsValid_ReturnValue) == 0x000025, "Member 'VruumbaSCTBP_C_CreateBodyCustomization::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CreateBodyCustomization, Temp_int_Array_Index_Variable) == 0x000028, "Member 'VruumbaSCTBP_C_CreateBodyCustomization::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CreateBodyCustomization, CallFunc_Array_Get_Item) == 0x000030, "Member 'VruumbaSCTBP_C_CreateBodyCustomization::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CreateBodyCustomization, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'VruumbaSCTBP_C_CreateBodyCustomization::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CreateBodyCustomization, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'VruumbaSCTBP_C_CreateBodyCustomization::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CreateBodyCustomization, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'VruumbaSCTBP_C_CreateBodyCustomization::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.Create Exhaust Particle Systems
// 0x0050 (0x0050 - 0x0000)
struct VruumbaSCTBP_C_Create_Exhaust_Particle_Systems final
{
public:
	class UParticleSystem*                        NewParticleSystem;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetAllSocketNames_ReturnValue;            // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_Create_Exhaust_Particle_Systems) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_Create_Exhaust_Particle_Systems");
static_assert(sizeof(VruumbaSCTBP_C_Create_Exhaust_Particle_Systems) == 0x000050, "Wrong size on VruumbaSCTBP_C_Create_Exhaust_Particle_Systems");
static_assert(offsetof(VruumbaSCTBP_C_Create_Exhaust_Particle_Systems, NewParticleSystem) == 0x000000, "Member 'VruumbaSCTBP_C_Create_Exhaust_Particle_Systems::NewParticleSystem' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Create_Exhaust_Particle_Systems, Temp_int_Variable) == 0x000008, "Member 'VruumbaSCTBP_C_Create_Exhaust_Particle_Systems::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Create_Exhaust_Particle_Systems, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'VruumbaSCTBP_C_Create_Exhaust_Particle_Systems::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Create_Exhaust_Particle_Systems, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'VruumbaSCTBP_C_Create_Exhaust_Particle_Systems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Create_Exhaust_Particle_Systems, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'VruumbaSCTBP_C_Create_Exhaust_Particle_Systems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Create_Exhaust_Particle_Systems, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'VruumbaSCTBP_C_Create_Exhaust_Particle_Systems::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Create_Exhaust_Particle_Systems, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'VruumbaSCTBP_C_Create_Exhaust_Particle_Systems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Create_Exhaust_Particle_Systems, CallFunc_Array_Get_Item) == 0x000020, "Member 'VruumbaSCTBP_C_Create_Exhaust_Particle_Systems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Create_Exhaust_Particle_Systems, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'VruumbaSCTBP_C_Create_Exhaust_Particle_Systems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Create_Exhaust_Particle_Systems, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'VruumbaSCTBP_C_Create_Exhaust_Particle_Systems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Create_Exhaust_Particle_Systems, CallFunc_GetAllSocketNames_ReturnValue) == 0x000030, "Member 'VruumbaSCTBP_C_Create_Exhaust_Particle_Systems::CallFunc_GetAllSocketNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Create_Exhaust_Particle_Systems, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'VruumbaSCTBP_C_Create_Exhaust_Particle_Systems::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Create_Exhaust_Particle_Systems, CallFunc_Array_Get_Item_1) == 0x000044, "Member 'VruumbaSCTBP_C_Create_Exhaust_Particle_Systems::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Create_Exhaust_Particle_Systems, CallFunc_Less_IntInt_ReturnValue_1) == 0x00004C, "Member 'VruumbaSCTBP_C_Create_Exhaust_Particle_Systems::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.TryAddSocketParticle
// 0x0070 (0x0070 - 0x0000)
struct VruumbaSCTBP_C_TryAddSocketParticle final
{
public:
	class FName                                   InSocketName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        InParticleSystem;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_AddComponent_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_TryAddSocketParticle) == 0x000010, "Wrong alignment on VruumbaSCTBP_C_TryAddSocketParticle");
static_assert(sizeof(VruumbaSCTBP_C_TryAddSocketParticle) == 0x000070, "Wrong size on VruumbaSCTBP_C_TryAddSocketParticle");
static_assert(offsetof(VruumbaSCTBP_C_TryAddSocketParticle, InSocketName) == 0x000000, "Member 'VruumbaSCTBP_C_TryAddSocketParticle::InSocketName' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_TryAddSocketParticle, InParticleSystem) == 0x000008, "Member 'VruumbaSCTBP_C_TryAddSocketParticle::InParticleSystem' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_TryAddSocketParticle, CallFunc_IsDedicatedServer_ReturnValue) == 0x000010, "Member 'VruumbaSCTBP_C_TryAddSocketParticle::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_TryAddSocketParticle, CallFunc_Conv_NameToString_ReturnValue) == 0x000018, "Member 'VruumbaSCTBP_C_TryAddSocketParticle::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_TryAddSocketParticle, CallFunc_Contains_ReturnValue) == 0x000028, "Member 'VruumbaSCTBP_C_TryAddSocketParticle::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_TryAddSocketParticle, Temp_struct_Variable) == 0x000030, "Member 'VruumbaSCTBP_C_TryAddSocketParticle::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_TryAddSocketParticle, CallFunc_AddComponent_ReturnValue) == 0x000060, "Member 'VruumbaSCTBP_C_TryAddSocketParticle::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_TryAddSocketParticle, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'VruumbaSCTBP_C_TryAddSocketParticle::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_TryAddSocketParticle, CallFunc_K2_AttachToComponent_ReturnValue) == 0x00006C, "Member 'VruumbaSCTBP_C_TryAddSocketParticle::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.OLDAntenna
// 0x0048 (0x0048 - 0x0000)
struct VruumbaSCTBP_C_OLDAntenna final
{
public:
	class USkeletalMesh*                          NewAntennaMesh;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 InAntennaAnimBP;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetAllSocketNames_ReturnValue;            // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_OLDAntenna) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_OLDAntenna");
static_assert(sizeof(VruumbaSCTBP_C_OLDAntenna) == 0x000048, "Wrong size on VruumbaSCTBP_C_OLDAntenna");
static_assert(offsetof(VruumbaSCTBP_C_OLDAntenna, NewAntennaMesh) == 0x000000, "Member 'VruumbaSCTBP_C_OLDAntenna::NewAntennaMesh' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OLDAntenna, InAntennaAnimBP) == 0x000008, "Member 'VruumbaSCTBP_C_OLDAntenna::InAntennaAnimBP' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OLDAntenna, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'VruumbaSCTBP_C_OLDAntenna::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OLDAntenna, Temp_int_Array_Index_Variable) == 0x000014, "Member 'VruumbaSCTBP_C_OLDAntenna::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OLDAntenna, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'VruumbaSCTBP_C_OLDAntenna::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OLDAntenna, CallFunc_GetAllSocketNames_ReturnValue) == 0x000020, "Member 'VruumbaSCTBP_C_OLDAntenna::CallFunc_GetAllSocketNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OLDAntenna, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'VruumbaSCTBP_C_OLDAntenna::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OLDAntenna, CallFunc_Array_Get_Item) == 0x000034, "Member 'VruumbaSCTBP_C_OLDAntenna::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OLDAntenna, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'VruumbaSCTBP_C_OLDAntenna::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_OLDAntenna, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'VruumbaSCTBP_C_OLDAntenna::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.TryAddSocketAntenna
// 0x00F0 (0x00F0 - 0x0000)
struct VruumbaSCTBP_C_TryAddSocketAntenna final
{
public:
	class FName                                   InSocketName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          InAntennaMesh;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 InAntennaAnimBP;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0060(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(VruumbaSCTBP_C_TryAddSocketAntenna) == 0x000010, "Wrong alignment on VruumbaSCTBP_C_TryAddSocketAntenna");
static_assert(sizeof(VruumbaSCTBP_C_TryAddSocketAntenna) == 0x0000F0, "Wrong size on VruumbaSCTBP_C_TryAddSocketAntenna");
static_assert(offsetof(VruumbaSCTBP_C_TryAddSocketAntenna, InSocketName) == 0x000000, "Member 'VruumbaSCTBP_C_TryAddSocketAntenna::InSocketName' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_TryAddSocketAntenna, InAntennaMesh) == 0x000008, "Member 'VruumbaSCTBP_C_TryAddSocketAntenna::InAntennaMesh' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_TryAddSocketAntenna, InAntennaAnimBP) == 0x000010, "Member 'VruumbaSCTBP_C_TryAddSocketAntenna::InAntennaAnimBP' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_TryAddSocketAntenna, CallFunc_Conv_NameToString_ReturnValue) == 0x000018, "Member 'VruumbaSCTBP_C_TryAddSocketAntenna::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_TryAddSocketAntenna, CallFunc_Contains_ReturnValue) == 0x000028, "Member 'VruumbaSCTBP_C_TryAddSocketAntenna::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_TryAddSocketAntenna, CallFunc_GetSocketTransform_ReturnValue) == 0x000030, "Member 'VruumbaSCTBP_C_TryAddSocketAntenna::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_TryAddSocketAntenna, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000060, "Member 'VruumbaSCTBP_C_TryAddSocketAntenna::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.Update Flag Holder
// 0x00F0 (0x00F0 - 0x0000)
struct VruumbaSCTBP_C_Update_Flag_Holder final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState*                        CallFunc_GetLocalPlayerState_AsSCTPlayer_State;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0xD];                                       // 0x0013(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0054(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_Select_Default;                             // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_Update_Flag_Holder) == 0x000010, "Wrong alignment on VruumbaSCTBP_C_Update_Flag_Holder");
static_assert(sizeof(VruumbaSCTBP_C_Update_Flag_Holder) == 0x0000F0, "Wrong size on VruumbaSCTBP_C_Update_Flag_Holder");
static_assert(offsetof(VruumbaSCTBP_C_Update_Flag_Holder, Temp_bool_Variable) == 0x000000, "Member 'VruumbaSCTBP_C_Update_Flag_Holder::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Update_Flag_Holder, Temp_bool_Variable_1) == 0x000001, "Member 'VruumbaSCTBP_C_Update_Flag_Holder::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Update_Flag_Holder, CallFunc_GetLocalPlayerState_AsSCTPlayer_State) == 0x000008, "Member 'VruumbaSCTBP_C_Update_Flag_Holder::CallFunc_GetLocalPlayerState_AsSCTPlayer_State' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Update_Flag_Holder, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'VruumbaSCTBP_C_Update_Flag_Holder::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Update_Flag_Holder, CallFunc_IsAlive_ReturnValue) == 0x000011, "Member 'VruumbaSCTBP_C_Update_Flag_Holder::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Update_Flag_Holder, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'VruumbaSCTBP_C_Update_Flag_Holder::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Update_Flag_Holder, CallFunc_GetSocketTransform_ReturnValue) == 0x000020, "Member 'VruumbaSCTBP_C_Update_Flag_Holder::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Update_Flag_Holder, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000050, "Member 'VruumbaSCTBP_C_Update_Flag_Holder::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Update_Flag_Holder, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000054, "Member 'VruumbaSCTBP_C_Update_Flag_Holder::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Update_Flag_Holder, K2Node_Select_Default) == 0x0000E0, "Member 'VruumbaSCTBP_C_Update_Flag_Holder::K2Node_Select_Default' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.CreateAllCustomization
// 0x0038 (0x0038 - 0x0000)
struct VruumbaSCTBP_C_CreateAllCustomization final
{
public:
	class USkeletalMesh*                          InBodyMesh;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 InBodyAnimBP;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             InBodyMaterials;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class USkeletalMesh*                          InAntennaMesh;                                     // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 InAntennaAnimBP;                                   // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        InExhaustParticle;                                 // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_CreateAllCustomization) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_CreateAllCustomization");
static_assert(sizeof(VruumbaSCTBP_C_CreateAllCustomization) == 0x000038, "Wrong size on VruumbaSCTBP_C_CreateAllCustomization");
static_assert(offsetof(VruumbaSCTBP_C_CreateAllCustomization, InBodyMesh) == 0x000000, "Member 'VruumbaSCTBP_C_CreateAllCustomization::InBodyMesh' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CreateAllCustomization, InBodyAnimBP) == 0x000008, "Member 'VruumbaSCTBP_C_CreateAllCustomization::InBodyAnimBP' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CreateAllCustomization, InBodyMaterials) == 0x000010, "Member 'VruumbaSCTBP_C_CreateAllCustomization::InBodyMaterials' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CreateAllCustomization, InAntennaMesh) == 0x000020, "Member 'VruumbaSCTBP_C_CreateAllCustomization::InAntennaMesh' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CreateAllCustomization, InAntennaAnimBP) == 0x000028, "Member 'VruumbaSCTBP_C_CreateAllCustomization::InAntennaAnimBP' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CreateAllCustomization, InExhaustParticle) == 0x000030, "Member 'VruumbaSCTBP_C_CreateAllCustomization::InExhaustParticle' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.CustomizationPayloadToVariables
// 0x0238 (0x0238 - 0x0000)
struct VruumbaSCTBP_C_CustomizationPayloadToVariables final
{
public:
	struct FFCTCloudCustomizationVruumba          FCTCloudCustomizationVruumba;                      // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper)
	class USkeletalMesh*                          OutBodyMesh;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             OutBodyMaterials;                                  // 0x0038(0x0010)(Parm, OutParm)
	class USkeletalMesh*                          OutAntennaMesh;                                    // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 OutAntennaAnimBP;                                  // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        OutExhaustParticle;                                // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          LocalBodyMesh;                                     // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             LocalBodyMaterials;                                // 0x0068(0x0010)(Edit, BlueprintVisible)
	class UClass*                                 LocalAntennaAnimBP;                                // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          LocalAntennaMesh;                                  // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        LocalExhaustParticle;                              // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVruumbaParticlesCustomizationItemTableRow CallFunc_GetDataTableRowFromName_OutRow;           // 0x00A0(0x0070)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVruumbaAnimatedMeshCustomizationItemTableRow CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0118(0x0088)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x01A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVruumbaSkeletalMeshCustomizationItemTableRow CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x01B0(0x0080)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_CustomizationPayloadToVariables) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_CustomizationPayloadToVariables");
static_assert(sizeof(VruumbaSCTBP_C_CustomizationPayloadToVariables) == 0x000238, "Wrong size on VruumbaSCTBP_C_CustomizationPayloadToVariables");
static_assert(offsetof(VruumbaSCTBP_C_CustomizationPayloadToVariables, FCTCloudCustomizationVruumba) == 0x000000, "Member 'VruumbaSCTBP_C_CustomizationPayloadToVariables::FCTCloudCustomizationVruumba' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CustomizationPayloadToVariables, OutBodyMesh) == 0x000030, "Member 'VruumbaSCTBP_C_CustomizationPayloadToVariables::OutBodyMesh' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CustomizationPayloadToVariables, OutBodyMaterials) == 0x000038, "Member 'VruumbaSCTBP_C_CustomizationPayloadToVariables::OutBodyMaterials' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CustomizationPayloadToVariables, OutAntennaMesh) == 0x000048, "Member 'VruumbaSCTBP_C_CustomizationPayloadToVariables::OutAntennaMesh' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CustomizationPayloadToVariables, OutAntennaAnimBP) == 0x000050, "Member 'VruumbaSCTBP_C_CustomizationPayloadToVariables::OutAntennaAnimBP' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CustomizationPayloadToVariables, OutExhaustParticle) == 0x000058, "Member 'VruumbaSCTBP_C_CustomizationPayloadToVariables::OutExhaustParticle' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CustomizationPayloadToVariables, LocalBodyMesh) == 0x000060, "Member 'VruumbaSCTBP_C_CustomizationPayloadToVariables::LocalBodyMesh' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CustomizationPayloadToVariables, LocalBodyMaterials) == 0x000068, "Member 'VruumbaSCTBP_C_CustomizationPayloadToVariables::LocalBodyMaterials' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CustomizationPayloadToVariables, LocalAntennaAnimBP) == 0x000078, "Member 'VruumbaSCTBP_C_CustomizationPayloadToVariables::LocalAntennaAnimBP' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CustomizationPayloadToVariables, LocalAntennaMesh) == 0x000080, "Member 'VruumbaSCTBP_C_CustomizationPayloadToVariables::LocalAntennaMesh' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CustomizationPayloadToVariables, LocalExhaustParticle) == 0x000088, "Member 'VruumbaSCTBP_C_CustomizationPayloadToVariables::LocalExhaustParticle' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CustomizationPayloadToVariables, CallFunc_Conv_StringToName_ReturnValue) == 0x000090, "Member 'VruumbaSCTBP_C_CustomizationPayloadToVariables::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CustomizationPayloadToVariables, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000098, "Member 'VruumbaSCTBP_C_CustomizationPayloadToVariables::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CustomizationPayloadToVariables, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000A0, "Member 'VruumbaSCTBP_C_CustomizationPayloadToVariables::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CustomizationPayloadToVariables, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000110, "Member 'VruumbaSCTBP_C_CustomizationPayloadToVariables::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CustomizationPayloadToVariables, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000118, "Member 'VruumbaSCTBP_C_CustomizationPayloadToVariables::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CustomizationPayloadToVariables, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0001A0, "Member 'VruumbaSCTBP_C_CustomizationPayloadToVariables::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CustomizationPayloadToVariables, CallFunc_Conv_StringToName_ReturnValue_2) == 0x0001A4, "Member 'VruumbaSCTBP_C_CustomizationPayloadToVariables::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CustomizationPayloadToVariables, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x0001B0, "Member 'VruumbaSCTBP_C_CustomizationPayloadToVariables::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CustomizationPayloadToVariables, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x000230, "Member 'VruumbaSCTBP_C_CustomizationPayloadToVariables::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.StartExhaustParticles
// 0x0020 (0x0020 - 0x0000)
struct VruumbaSCTBP_C_StartExhaustParticles final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_StartExhaustParticles) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_StartExhaustParticles");
static_assert(sizeof(VruumbaSCTBP_C_StartExhaustParticles) == 0x000020, "Wrong size on VruumbaSCTBP_C_StartExhaustParticles");
static_assert(offsetof(VruumbaSCTBP_C_StartExhaustParticles, Temp_int_Variable) == 0x000000, "Member 'VruumbaSCTBP_C_StartExhaustParticles::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_StartExhaustParticles, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'VruumbaSCTBP_C_StartExhaustParticles::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_StartExhaustParticles, CallFunc_IsVisible_ReturnValue) == 0x000008, "Member 'VruumbaSCTBP_C_StartExhaustParticles::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_StartExhaustParticles, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'VruumbaSCTBP_C_StartExhaustParticles::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_StartExhaustParticles, CallFunc_Array_Get_Item) == 0x000010, "Member 'VruumbaSCTBP_C_StartExhaustParticles::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_StartExhaustParticles, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'VruumbaSCTBP_C_StartExhaustParticles::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.StopExhaustParticles
// 0x0018 (0x0018 - 0x0000)
struct VruumbaSCTBP_C_StopExhaustParticles final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_StopExhaustParticles) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_StopExhaustParticles");
static_assert(sizeof(VruumbaSCTBP_C_StopExhaustParticles) == 0x000018, "Wrong size on VruumbaSCTBP_C_StopExhaustParticles");
static_assert(offsetof(VruumbaSCTBP_C_StopExhaustParticles, Temp_int_Variable) == 0x000000, "Member 'VruumbaSCTBP_C_StopExhaustParticles::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_StopExhaustParticles, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'VruumbaSCTBP_C_StopExhaustParticles::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_StopExhaustParticles, CallFunc_Array_Get_Item) == 0x000008, "Member 'VruumbaSCTBP_C_StopExhaustParticles::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_StopExhaustParticles, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'VruumbaSCTBP_C_StopExhaustParticles::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_StopExhaustParticles, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'VruumbaSCTBP_C_StopExhaustParticles::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.CreateAntennaSocket
// 0x0018 (0x0018 - 0x0000)
struct VruumbaSCTBP_C_CreateAntennaSocket final
{
public:
	class USkeletalMesh*                          NewAntennaMesh;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 NewAntennaAnimBP;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_CreateAntennaSocket) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_CreateAntennaSocket");
static_assert(sizeof(VruumbaSCTBP_C_CreateAntennaSocket) == 0x000018, "Wrong size on VruumbaSCTBP_C_CreateAntennaSocket");
static_assert(offsetof(VruumbaSCTBP_C_CreateAntennaSocket, NewAntennaMesh) == 0x000000, "Member 'VruumbaSCTBP_C_CreateAntennaSocket::NewAntennaMesh' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CreateAntennaSocket, NewAntennaAnimBP) == 0x000008, "Member 'VruumbaSCTBP_C_CreateAntennaSocket::NewAntennaAnimBP' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_CreateAntennaSocket, CallFunc_IsValidClass_ReturnValue) == 0x000010, "Member 'VruumbaSCTBP_C_CreateAntennaSocket::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.UpdateAntenna
// 0x00C0 (0x00C0 - 0x0000)
struct VruumbaSCTBP_C_UpdateAntenna final
{
public:
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0030(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(VruumbaSCTBP_C_UpdateAntenna) == 0x000010, "Wrong alignment on VruumbaSCTBP_C_UpdateAntenna");
static_assert(sizeof(VruumbaSCTBP_C_UpdateAntenna) == 0x0000C0, "Wrong size on VruumbaSCTBP_C_UpdateAntenna");
static_assert(offsetof(VruumbaSCTBP_C_UpdateAntenna, CallFunc_GetSocketTransform_ReturnValue) == 0x000000, "Member 'VruumbaSCTBP_C_UpdateAntenna::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_UpdateAntenna, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000030, "Member 'VruumbaSCTBP_C_UpdateAntenna::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.Recreate Exhaust Particle Systems
// 0x0010 (0x0010 - 0x0000)
struct VruumbaSCTBP_C_Recreate_Exhaust_Particle_Systems final
{
public:
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_Recreate_Exhaust_Particle_Systems) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_Recreate_Exhaust_Particle_Systems");
static_assert(sizeof(VruumbaSCTBP_C_Recreate_Exhaust_Particle_Systems) == 0x000010, "Wrong size on VruumbaSCTBP_C_Recreate_Exhaust_Particle_Systems");
static_assert(offsetof(VruumbaSCTBP_C_Recreate_Exhaust_Particle_Systems, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000000, "Member 'VruumbaSCTBP_C_Recreate_Exhaust_Particle_Systems::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_Recreate_Exhaust_Particle_Systems, CallFunc_Array_Get_Item) == 0x000008, "Member 'VruumbaSCTBP_C_Recreate_Exhaust_Particle_Systems::CallFunc_Array_Get_Item' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.UpdateExhaustParticleSystems
// 0x0028 (0x0028 - 0x0000)
struct VruumbaSCTBP_C_UpdateExhaustParticleSystems final
{
public:
	class UParticleSystem*                        NewParticleSystem;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_UpdateExhaustParticleSystems) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_UpdateExhaustParticleSystems");
static_assert(sizeof(VruumbaSCTBP_C_UpdateExhaustParticleSystems) == 0x000028, "Wrong size on VruumbaSCTBP_C_UpdateExhaustParticleSystems");
static_assert(offsetof(VruumbaSCTBP_C_UpdateExhaustParticleSystems, NewParticleSystem) == 0x000000, "Member 'VruumbaSCTBP_C_UpdateExhaustParticleSystems::NewParticleSystem' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_UpdateExhaustParticleSystems, CurrentIndex) == 0x000008, "Member 'VruumbaSCTBP_C_UpdateExhaustParticleSystems::CurrentIndex' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_UpdateExhaustParticleSystems, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'VruumbaSCTBP_C_UpdateExhaustParticleSystems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_UpdateExhaustParticleSystems, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'VruumbaSCTBP_C_UpdateExhaustParticleSystems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_UpdateExhaustParticleSystems, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'VruumbaSCTBP_C_UpdateExhaustParticleSystems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_UpdateExhaustParticleSystems, CallFunc_Array_Get_Item) == 0x000018, "Member 'VruumbaSCTBP_C_UpdateExhaustParticleSystems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_UpdateExhaustParticleSystems, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'VruumbaSCTBP_C_UpdateExhaustParticleSystems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_UpdateExhaustParticleSystems, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'VruumbaSCTBP_C_UpdateExhaustParticleSystems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_UpdateExhaustParticleSystems, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000025, "Member 'VruumbaSCTBP_C_UpdateExhaustParticleSystems::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.ParticleBurst
// 0x0020 (0x0020 - 0x0000)
struct VruumbaSCTBP_C_ParticleBurst final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_ParticleBurst) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_ParticleBurst");
static_assert(sizeof(VruumbaSCTBP_C_ParticleBurst) == 0x000020, "Wrong size on VruumbaSCTBP_C_ParticleBurst");
static_assert(offsetof(VruumbaSCTBP_C_ParticleBurst, Temp_int_Variable) == 0x000000, "Member 'VruumbaSCTBP_C_ParticleBurst::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ParticleBurst, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'VruumbaSCTBP_C_ParticleBurst::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ParticleBurst, CallFunc_IsVisible_ReturnValue) == 0x000008, "Member 'VruumbaSCTBP_C_ParticleBurst::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ParticleBurst, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'VruumbaSCTBP_C_ParticleBurst::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ParticleBurst, CallFunc_Array_Get_Item) == 0x000010, "Member 'VruumbaSCTBP_C_ParticleBurst::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_ParticleBurst, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'VruumbaSCTBP_C_ParticleBurst::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.IsAliveBPI
// 0x0001 (0x0001 - 0x0000)
struct VruumbaSCTBP_C_IsAliveBPI final
{
public:
	bool                                          Alive;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_IsAliveBPI) == 0x000001, "Wrong alignment on VruumbaSCTBP_C_IsAliveBPI");
static_assert(sizeof(VruumbaSCTBP_C_IsAliveBPI) == 0x000001, "Wrong size on VruumbaSCTBP_C_IsAliveBPI");
static_assert(offsetof(VruumbaSCTBP_C_IsAliveBPI, Alive) == 0x000000, "Member 'VruumbaSCTBP_C_IsAliveBPI::Alive' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.GetHeldLogInfoBPI
// 0x0020 (0x0020 - 0x0000)
struct VruumbaSCTBP_C_GetHeldLogInfoBPI final
{
public:
	EPassengerLogFactType                         FactType;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPlayerData>                    Players;                                           // 0x0008(0x0010)(Parm, OutParm)
	bool                                          HasLog;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_GetHeldLogInfoBPI) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_GetHeldLogInfoBPI");
static_assert(sizeof(VruumbaSCTBP_C_GetHeldLogInfoBPI) == 0x000020, "Wrong size on VruumbaSCTBP_C_GetHeldLogInfoBPI");
static_assert(offsetof(VruumbaSCTBP_C_GetHeldLogInfoBPI, FactType) == 0x000000, "Member 'VruumbaSCTBP_C_GetHeldLogInfoBPI::FactType' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_GetHeldLogInfoBPI, Players) == 0x000008, "Member 'VruumbaSCTBP_C_GetHeldLogInfoBPI::Players' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_GetHeldLogInfoBPI, HasLog) == 0x000018, "Member 'VruumbaSCTBP_C_GetHeldLogInfoBPI::HasLog' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.IsPersonoidBPI
// 0x0001 (0x0001 - 0x0000)
struct VruumbaSCTBP_C_IsPersonoidBPI final
{
public:
	bool                                          IsPersonoid;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_IsPersonoidBPI) == 0x000001, "Wrong alignment on VruumbaSCTBP_C_IsPersonoidBPI");
static_assert(sizeof(VruumbaSCTBP_C_IsPersonoidBPI) == 0x000001, "Wrong size on VruumbaSCTBP_C_IsPersonoidBPI");
static_assert(offsetof(VruumbaSCTBP_C_IsPersonoidBPI, IsPersonoid) == 0x000000, "Member 'VruumbaSCTBP_C_IsPersonoidBPI::IsPersonoid' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.GetPlayerNameBPI
// 0x0010 (0x0010 - 0x0000)
struct VruumbaSCTBP_C_GetPlayerNameBPI final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_GetPlayerNameBPI) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_GetPlayerNameBPI");
static_assert(sizeof(VruumbaSCTBP_C_GetPlayerNameBPI) == 0x000010, "Wrong size on VruumbaSCTBP_C_GetPlayerNameBPI");
static_assert(offsetof(VruumbaSCTBP_C_GetPlayerNameBPI, Name_0) == 0x000000, "Member 'VruumbaSCTBP_C_GetPlayerNameBPI::Name_0' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.IsFemaleBPI
// 0x0001 (0x0001 - 0x0000)
struct VruumbaSCTBP_C_IsFemaleBPI final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_IsFemaleBPI) == 0x000001, "Wrong alignment on VruumbaSCTBP_C_IsFemaleBPI");
static_assert(sizeof(VruumbaSCTBP_C_IsFemaleBPI) == 0x000001, "Wrong size on VruumbaSCTBP_C_IsFemaleBPI");
static_assert(offsetof(VruumbaSCTBP_C_IsFemaleBPI, ReturnValue) == 0x000000, "Member 'VruumbaSCTBP_C_IsFemaleBPI::ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.GetAbilitySystemComponentBPI
// 0x0008 (0x0008 - 0x0000)
struct VruumbaSCTBP_C_GetAbilitySystemComponentBPI final
{
public:
	class UAbilitySystemComponent*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_GetAbilitySystemComponentBPI) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_GetAbilitySystemComponentBPI");
static_assert(sizeof(VruumbaSCTBP_C_GetAbilitySystemComponentBPI) == 0x000008, "Wrong size on VruumbaSCTBP_C_GetAbilitySystemComponentBPI");
static_assert(offsetof(VruumbaSCTBP_C_GetAbilitySystemComponentBPI, ReturnValue) == 0x000000, "Member 'VruumbaSCTBP_C_GetAbilitySystemComponentBPI::ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.GetPortrait
// 0x0008 (0x0008 - 0x0000)
struct VruumbaSCTBP_C_GetPortrait final
{
public:
	class UTexture2D*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_GetPortrait) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_GetPortrait");
static_assert(sizeof(VruumbaSCTBP_C_GetPortrait) == 0x000008, "Wrong size on VruumbaSCTBP_C_GetPortrait");
static_assert(offsetof(VruumbaSCTBP_C_GetPortrait, ReturnValue) == 0x000000, "Member 'VruumbaSCTBP_C_GetPortrait::ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.GetHomingTargetBPI
// 0x0008 (0x0008 - 0x0000)
struct VruumbaSCTBP_C_GetHomingTargetBPI final
{
public:
	class USceneComponent*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VruumbaSCTBP_C_GetHomingTargetBPI) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_GetHomingTargetBPI");
static_assert(sizeof(VruumbaSCTBP_C_GetHomingTargetBPI) == 0x000008, "Wrong size on VruumbaSCTBP_C_GetHomingTargetBPI");
static_assert(offsetof(VruumbaSCTBP_C_GetHomingTargetBPI, ReturnValue) == 0x000000, "Member 'VruumbaSCTBP_C_GetHomingTargetBPI::ReturnValue' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.IsPlayerBlocked
// 0x0150 (0x0150 - 0x0000)
struct VruumbaSCTBP_C_IsPlayerBlocked final
{
public:
	class APlayerState*                           Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLocked;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState*                        OtherSCTPlayerState;                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCTPlayerState*                        SCTPlayerState;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCTPlayerState*                        K2Node_DynamicCast_AsSCTPlayer_State;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue_2;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue_3;                    // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue_4;                    // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue_5;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB[0x1];                                       // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_2;                         // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue_6;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB[0x1];                                       // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_3;                         // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue_7;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_3;          // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FB[0x1];                                       // 0x00FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue_8;                    // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_103[0x5];                                      // 0x0103(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_4;                         // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_4;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_5;                         // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_5;          // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13E[0x2];                                      // 0x013E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState*                        K2Node_DynamicCast_AsSCTPlayer_State_1;            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_IsPlayerBlocked) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_IsPlayerBlocked");
static_assert(sizeof(VruumbaSCTBP_C_IsPlayerBlocked) == 0x000150, "Wrong size on VruumbaSCTBP_C_IsPlayerBlocked");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, Player) == 0x000000, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::Player' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, bLocked) == 0x000008, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::bLocked' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, OtherSCTPlayerState) == 0x000010, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::OtherSCTPlayerState' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, SCTPlayerState) == 0x000018, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::SCTPlayerState' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, K2Node_DynamicCast_AsSCTPlayer_State) == 0x000020, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::K2Node_DynamicCast_AsSCTPlayer_State' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, Temp_int_Array_Index_Variable_1) == 0x000040, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, Temp_int_Array_Index_Variable_2) == 0x000044, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, Temp_int_Loop_Counter_Variable_2) == 0x000048, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Add_IntInt_ReturnValue_2) == 0x00004C, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, Temp_int_Array_Index_Variable_3) == 0x000050, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, Temp_int_Loop_Counter_Variable_3) == 0x000054, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Add_IntInt_ReturnValue_3) == 0x000058, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, Temp_int_Loop_Counter_Variable_4) == 0x00005C, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_IsEmpty_ReturnValue) == 0x000060, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_IsEmpty_ReturnValue_1) == 0x000061, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Not_PreBool_ReturnValue) == 0x000062, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Not_PreBool_ReturnValue_1) == 0x000063, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Add_IntInt_ReturnValue_4) == 0x000064, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_IsEmpty_ReturnValue_2) == 0x000068, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_IsEmpty_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Not_PreBool_ReturnValue_2) == 0x000069, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_BooleanOR_ReturnValue) == 0x00006A, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, Temp_int_Loop_Counter_Variable_5) == 0x00006C, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_BooleanOR_ReturnValue_1) == 0x000070, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Add_IntInt_ReturnValue_5) == 0x000074, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, Temp_int_Array_Index_Variable_4) == 0x000078, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_IsEmpty_ReturnValue_3) == 0x00007C, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_IsEmpty_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Not_PreBool_ReturnValue_3) == 0x00007D, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_IsEmpty_ReturnValue_4) == 0x00007E, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_IsEmpty_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Not_PreBool_ReturnValue_4) == 0x00007F, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, Temp_int_Array_Index_Variable_5) == 0x000088, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Array_Get_Item) == 0x000090, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000A0, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_IsEmpty_ReturnValue_5) == 0x0000B8, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_IsEmpty_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x0000B9, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Not_PreBool_ReturnValue_5) == 0x0000BA, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Array_Length_ReturnValue_1) == 0x0000BC, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C0, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Array_Get_Item_2) == 0x0000C8, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_IsEmpty_ReturnValue_6) == 0x0000D8, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_IsEmpty_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x0000D9, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Not_PreBool_ReturnValue_6) == 0x0000DA, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Array_Length_ReturnValue_2) == 0x0000DC, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000E0, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Array_Get_Item_3) == 0x0000E8, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_IsEmpty_ReturnValue_7) == 0x0000F8, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_IsEmpty_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_EqualEqual_StrStr_ReturnValue_3) == 0x0000F9, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_EqualEqual_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Not_PreBool_ReturnValue_7) == 0x0000FA, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Array_Length_ReturnValue_3) == 0x0000FC, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Less_IntInt_ReturnValue_3) == 0x000100, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_IsEmpty_ReturnValue_8) == 0x000101, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_IsEmpty_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Not_PreBool_ReturnValue_8) == 0x000102, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Array_Get_Item_4) == 0x000108, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_EqualEqual_StrStr_ReturnValue_4) == 0x000118, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_EqualEqual_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Array_Length_ReturnValue_4) == 0x00011C, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Less_IntInt_ReturnValue_4) == 0x000120, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Array_Get_Item_5) == 0x000128, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Array_Length_ReturnValue_5) == 0x000138, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_EqualEqual_StrStr_ReturnValue_5) == 0x00013C, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_EqualEqual_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, CallFunc_Less_IntInt_ReturnValue_5) == 0x00013D, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, K2Node_DynamicCast_AsSCTPlayer_State_1) == 0x000140, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::K2Node_DynamicCast_AsSCTPlayer_State_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerBlocked, K2Node_DynamicCast_bSuccess_1) == 0x000148, "Member 'VruumbaSCTBP_C_IsPlayerBlocked::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function VruumbaSCTBP.VruumbaSCTBP_C.IsPlayerConsoleCommunicationBlocked
// 0x00F0 (0x00F0 - 0x0000)
struct VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked final
{
public:
	class APlayerState*                           Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLocked;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState*                        OtherSCTPlayerState;                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCTPlayerState*                        SCTPlayerState;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState*                        K2Node_DynamicCast_AsSCTPlayer_State;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue_1;                    // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue_2;                    // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue_3;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83[0x1];                                       // 0x0083(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue_4;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3[0x1];                                       // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue_5;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AB[0x5];                                       // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_2;                         // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue_6;                    // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Array_Get_Item_3;                         // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_3;          // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState*                        K2Node_DynamicCast_AsSCTPlayer_State_1;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked) == 0x000008, "Wrong alignment on VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked");
static_assert(sizeof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked) == 0x0000F0, "Wrong size on VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, Player) == 0x000000, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::Player' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, bLocked) == 0x000008, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::bLocked' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, OtherSCTPlayerState) == 0x000010, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::OtherSCTPlayerState' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, SCTPlayerState) == 0x000018, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::SCTPlayerState' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, Temp_int_Array_Index_Variable) == 0x000020, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, K2Node_DynamicCast_AsSCTPlayer_State) == 0x000028, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::K2Node_DynamicCast_AsSCTPlayer_State' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, Temp_int_Loop_Counter_Variable_2) == 0x000044, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_Add_IntInt_ReturnValue_2) == 0x000048, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, Temp_int_Array_Index_Variable_1) == 0x00004C, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, Temp_int_Array_Index_Variable_2) == 0x000050, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_IsEmpty_ReturnValue) == 0x000054, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_Not_PreBool_ReturnValue) == 0x000055, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_IsEmpty_ReturnValue_1) == 0x000056, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_IsEmpty_ReturnValue_2) == 0x000057, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_IsEmpty_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_Not_PreBool_ReturnValue_1) == 0x000058, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_Not_PreBool_ReturnValue_2) == 0x000059, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_BooleanOR_ReturnValue) == 0x00005A, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, Temp_int_Loop_Counter_Variable_3) == 0x00005C, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_BooleanOR_ReturnValue_1) == 0x000060, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_Add_IntInt_ReturnValue_3) == 0x000064, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, Temp_int_Array_Index_Variable_3) == 0x000068, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_Array_Get_Item) == 0x000070, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_IsEmpty_ReturnValue_3) == 0x000080, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_IsEmpty_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000081, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_Not_PreBool_ReturnValue_3) == 0x000082, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_IsEmpty_ReturnValue_4) == 0x0000A0, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_IsEmpty_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x0000A1, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_Not_PreBool_ReturnValue_4) == 0x0000A2, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_Array_Length_ReturnValue_1) == 0x0000A4, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A8, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_IsEmpty_ReturnValue_5) == 0x0000A9, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_IsEmpty_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_Not_PreBool_ReturnValue_5) == 0x0000AA, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_Array_Get_Item_2) == 0x0000B0, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_Array_Length_ReturnValue_2) == 0x0000C0, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x0000C4, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000C5, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_IsEmpty_ReturnValue_6) == 0x0000C6, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_IsEmpty_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_Not_PreBool_ReturnValue_6) == 0x0000C7, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_Array_Get_Item_3) == 0x0000C8, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_Array_Length_ReturnValue_3) == 0x0000D8, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_EqualEqual_StrStr_ReturnValue_3) == 0x0000DC, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_EqualEqual_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000DD, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, K2Node_DynamicCast_AsSCTPlayer_State_1) == 0x0000E0, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::K2Node_DynamicCast_AsSCTPlayer_State_1' has a wrong offset!");
static_assert(offsetof(VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked, K2Node_DynamicCast_bSuccess_1) == 0x0000E8, "Member 'VruumbaSCTBP_C_IsPlayerConsoleCommunicationBlocked::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

