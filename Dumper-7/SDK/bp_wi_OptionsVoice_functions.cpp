#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: bp_wi_OptionsVoice

#include "Basic.hpp"

#include "bp_wi_OptionsVoice_classes.hpp"
#include "bp_wi_OptionsVoice_parameters.hpp"


namespace SDK
{

// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.ExecuteUbergraph_bp_wi_OptionsVoice
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Ubp_wi_OptionsVoice_C::ExecuteUbergraph_bp_wi_OptionsVoice(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "ExecuteUbergraph_bp_wi_OptionsVoice");

	Params::bp_wi_OptionsVoice_C_ExecuteUbergraph_bp_wi_OptionsVoice Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void Ubp_wi_OptionsVoice_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "PreConstruct");

	Params::bp_wi_OptionsVoice_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.BndEvt__bp_wi_OptionsVoice_Microphone_1_K2Node_ComponentBoundEvent_7_OnSelectionChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class FString                           SelectedItem                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ESelectInfo                             SelectionType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Ubp_wi_OptionsVoice_C::BndEvt__bp_wi_OptionsVoice_Microphone_1_K2Node_ComponentBoundEvent_7_OnSelectionChanged__DelegateSignature(const class FString& SelectedItem, ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "BndEvt__bp_wi_OptionsVoice_Microphone_1_K2Node_ComponentBoundEvent_7_OnSelectionChanged__DelegateSignature");

	Params::bp_wi_OptionsVoice_C_BndEvt__bp_wi_OptionsVoice_Microphone_1_K2Node_ComponentBoundEvent_7_OnSelectionChanged__DelegateSignature Parms{};

	Parms.SelectedItem = std::move(SelectedItem);
	Parms.SelectionType = SelectionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.BndEvt__bp_wi_OptionsVoice_Microphone_1_K2Node_ComponentBoundEvent_6_OnOpening__DelegateSignature
// (BlueprintEvent)

void Ubp_wi_OptionsVoice_C::BndEvt__bp_wi_OptionsVoice_Microphone_1_K2Node_ComponentBoundEvent_6_OnOpening__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "BndEvt__bp_wi_OptionsVoice_Microphone_1_K2Node_ComponentBoundEvent_6_OnOpening__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.BndEvt__bp_wi_OptionsVoice_Speaker_K2Node_ComponentBoundEvent_5_OnSelectionChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class FString                           SelectedItem                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ESelectInfo                             SelectionType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Ubp_wi_OptionsVoice_C::BndEvt__bp_wi_OptionsVoice_Speaker_K2Node_ComponentBoundEvent_5_OnSelectionChanged__DelegateSignature(const class FString& SelectedItem, ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "BndEvt__bp_wi_OptionsVoice_Speaker_K2Node_ComponentBoundEvent_5_OnSelectionChanged__DelegateSignature");

	Params::bp_wi_OptionsVoice_C_BndEvt__bp_wi_OptionsVoice_Speaker_K2Node_ComponentBoundEvent_5_OnSelectionChanged__DelegateSignature Parms{};

	Parms.SelectedItem = std::move(SelectedItem);
	Parms.SelectionType = SelectionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.BndEvt__bp_wi_OptionsVoice_Speaker_K2Node_ComponentBoundEvent_4_OnOpening__DelegateSignature
// (BlueprintEvent)

void Ubp_wi_OptionsVoice_C::BndEvt__bp_wi_OptionsVoice_Speaker_K2Node_ComponentBoundEvent_4_OnOpening__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "BndEvt__bp_wi_OptionsVoice_Speaker_K2Node_ComponentBoundEvent_4_OnOpening__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.Update Voice Boost Sliders And Values
// (BlueprintCallable, BlueprintEvent)

void Ubp_wi_OptionsVoice_C::Update_Voice_Boost_Sliders_And_Values()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "Update Voice Boost Sliders And Values");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.BndEvt__bp_wi_OptionsVoice_OptionsSliderWI_MicVol_K2Node_ComponentBoundEvent_18_OnMouseCaptureEnd__DelegateSignature
// (BlueprintEvent)

void Ubp_wi_OptionsVoice_C::BndEvt__bp_wi_OptionsVoice_OptionsSliderWI_MicVol_K2Node_ComponentBoundEvent_18_OnMouseCaptureEnd__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "BndEvt__bp_wi_OptionsVoice_OptionsSliderWI_MicVol_K2Node_ComponentBoundEvent_18_OnMouseCaptureEnd__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.BndEvt__bp_wi_OptionsVoice_OptionsSliderWI_PlayerVol_K2Node_ComponentBoundEvent_17_OnControllerCaptureEnd__DelegateSignature
// (BlueprintEvent)

void Ubp_wi_OptionsVoice_C::BndEvt__bp_wi_OptionsVoice_OptionsSliderWI_PlayerVol_K2Node_ComponentBoundEvent_17_OnControllerCaptureEnd__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "BndEvt__bp_wi_OptionsVoice_OptionsSliderWI_PlayerVol_K2Node_ComponentBoundEvent_17_OnControllerCaptureEnd__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.BndEvt__bp_wi_OptionsVoice_OptionsSliderWI_PlayerVol_K2Node_ComponentBoundEvent_16_OnMouseCaptureEnd__DelegateSignature
// (BlueprintEvent)

void Ubp_wi_OptionsVoice_C::BndEvt__bp_wi_OptionsVoice_OptionsSliderWI_PlayerVol_K2Node_ComponentBoundEvent_16_OnMouseCaptureEnd__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "BndEvt__bp_wi_OptionsVoice_OptionsSliderWI_PlayerVol_K2Node_ComponentBoundEvent_16_OnMouseCaptureEnd__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.BndEvt__bp_wi_OptionsVoice_OptionsSliderWI_K2Node_ComponentBoundEvent_10_OnControllerCaptureEnd__DelegateSignature
// (BlueprintEvent)

void Ubp_wi_OptionsVoice_C::BndEvt__bp_wi_OptionsVoice_OptionsSliderWI_K2Node_ComponentBoundEvent_10_OnControllerCaptureEnd__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "BndEvt__bp_wi_OptionsVoice_OptionsSliderWI_K2Node_ComponentBoundEvent_10_OnControllerCaptureEnd__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.Update
// (BlueprintCallable, BlueprintEvent)

void Ubp_wi_OptionsVoice_C::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "Update");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.BndEvt__SetUsePushToTalk_K2Node_ComponentBoundEvent_2_OnCheckStateChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    IsChecked                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void Ubp_wi_OptionsVoice_C::BndEvt__SetUsePushToTalk_K2Node_ComponentBoundEvent_2_OnCheckStateChanged__DelegateSignature(bool IsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "BndEvt__SetUsePushToTalk_K2Node_ComponentBoundEvent_2_OnCheckStateChanged__DelegateSignature");

	Params::bp_wi_OptionsVoice_C_BndEvt__SetUsePushToTalk_K2Node_ComponentBoundEvent_2_OnCheckStateChanged__DelegateSignature Parms{};

	Parms.IsChecked = IsChecked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.HandleOutputDeviceChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           OutputDeviceId                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void Ubp_wi_OptionsVoice_C::HandleOutputDeviceChanged(const class FString& OutputDeviceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "HandleOutputDeviceChanged");

	Params::bp_wi_OptionsVoice_C_HandleOutputDeviceChanged Parms{};

	Parms.OutputDeviceId = std::move(OutputDeviceId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.HandleOutputDeviceRemoved
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           OutputDeviceId                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void Ubp_wi_OptionsVoice_C::HandleOutputDeviceRemoved(const class FString& OutputDeviceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "HandleOutputDeviceRemoved");

	Params::bp_wi_OptionsVoice_C_HandleOutputDeviceRemoved Parms{};

	Parms.OutputDeviceId = std::move(OutputDeviceId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.HandleOutputDeviceAdded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           OutputDeviceId                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void Ubp_wi_OptionsVoice_C::HandleOutputDeviceAdded(const class FString& OutputDeviceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "HandleOutputDeviceAdded");

	Params::bp_wi_OptionsVoice_C_HandleOutputDeviceAdded Parms{};

	Parms.OutputDeviceId = std::move(OutputDeviceId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.HandleInputDeviceChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InputDeviceId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void Ubp_wi_OptionsVoice_C::HandleInputDeviceChanged(const class FString& InputDeviceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "HandleInputDeviceChanged");

	Params::bp_wi_OptionsVoice_C_HandleInputDeviceChanged Parms{};

	Parms.InputDeviceId = std::move(InputDeviceId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.HandleInputDeviceRemoved
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InputDeviceId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void Ubp_wi_OptionsVoice_C::HandleInputDeviceRemoved(const class FString& InputDeviceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "HandleInputDeviceRemoved");

	Params::bp_wi_OptionsVoice_C_HandleInputDeviceRemoved Parms{};

	Parms.InputDeviceId = std::move(InputDeviceId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.HandleInputDeviceAdded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InputDeviceId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void Ubp_wi_OptionsVoice_C::HandleInputDeviceAdded(const class FString& InputDeviceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "HandleInputDeviceAdded");

	Params::bp_wi_OptionsVoice_C_HandleInputDeviceAdded Parms{};

	Parms.InputDeviceId = std::move(InputDeviceId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void Ubp_wi_OptionsVoice_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void Ubp_wi_OptionsVoice_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.SetVivoxSelectedInputDevice
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Option                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void Ubp_wi_OptionsVoice_C::SetVivoxSelectedInputDevice(const class FString& Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "SetVivoxSelectedInputDevice");

	Params::bp_wi_OptionsVoice_C_SetVivoxSelectedInputDevice Parms{};

	Parms.Option = std::move(Option);

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.SetVivoxSelectedOutputDevice
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Active_Output_Id                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void Ubp_wi_OptionsVoice_C::SetVivoxSelectedOutputDevice(const class FString& Active_Output_Id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "SetVivoxSelectedOutputDevice");

	Params::bp_wi_OptionsVoice_C_SetVivoxSelectedOutputDevice Parms{};

	Parms.Active_Output_Id = std::move(Active_Output_Id);

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.Set Combo Box Device Options
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UComboBoxString*                  ComboBox                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Effective_Device_Id                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TMap<class FString, class FString>      AvailableDevicesIdToName                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TMap<int32, class FString>              Out_AvailableDeviceIndexToDeviceId                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void Ubp_wi_OptionsVoice_C::Set_Combo_Box_Device_Options(class UComboBoxString* ComboBox, const class FString& Effective_Device_Id, const TMap<class FString, class FString>& AvailableDevicesIdToName, const TMap<int32, class FString>& Out_AvailableDeviceIndexToDeviceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "Set Combo Box Device Options");

	Params::bp_wi_OptionsVoice_C_Set_Combo_Box_Device_Options Parms{};

	Parms.ComboBox = ComboBox;
	Parms.Effective_Device_Id = std::move(Effective_Device_Id);
	Parms.AvailableDevicesIdToName = std::move(AvailableDevicesIdToName);
	Parms.Out_AvailableDeviceIndexToDeviceId = std::move(Out_AvailableDeviceIndexToDeviceId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.Apply Selection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsInputDevice                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ESelectInfo                             Selection_Type                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<int32, class FString>              Available_Device_IndexToId                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UComboBoxString*                  ComboBox                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Ubp_wi_OptionsVoice_C::Apply_Selection(bool IsInputDevice, ESelectInfo Selection_Type, const TMap<int32, class FString>& Available_Device_IndexToId, class UComboBoxString* ComboBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "Apply Selection");

	Params::bp_wi_OptionsVoice_C_Apply_Selection Parms{};

	Parms.IsInputDevice = IsInputDevice;
	Parms.Selection_Type = Selection_Type;
	Parms.Available_Device_IndexToId = std::move(Available_Device_IndexToId);
	Parms.ComboBox = ComboBox;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.HideTestButtonIfMatch
// (Public, BlueprintCallable, BlueprintEvent)

void Ubp_wi_OptionsVoice_C::HideTestButtonIfMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "HideTestButtonIfMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.UpdateAndSaveInputBoost
// (Public, BlueprintCallable, BlueprintEvent)

void Ubp_wi_OptionsVoice_C::UpdateAndSaveInputBoost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "UpdateAndSaveInputBoost");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.GetSpecialOptions
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class Ubp_SpecialOptionsSave_C*         SpecialOptions                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Ubp_wi_OptionsVoice_C::GetSpecialOptions(class Ubp_SpecialOptionsSave_C** SpecialOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "GetSpecialOptions");

	Params::bp_wi_OptionsVoice_C_GetSpecialOptions Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SpecialOptions != nullptr)
		*SpecialOptions = Parms.SpecialOptions;
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.GetVivoxSettings
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ULocalSettings*                   LocalSettings                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Ubp_wi_OptionsVoice_C::GetVivoxSettings(class ULocalSettings** LocalSettings) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "GetVivoxSettings");

	Params::bp_wi_OptionsVoice_C_GetVivoxSettings Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LocalSettings != nullptr)
		*LocalSettings = Parms.LocalSettings;
}


// Function bp_wi_OptionsVoice.bp_wi_OptionsVoice_C.Get ActiveVivoxPlaybackDeviceOption
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           Output_Id                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Found_Existing                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Active_Output_Option_Index                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Ubp_wi_OptionsVoice_C::Get_ActiveVivoxPlaybackDeviceOption(const class FString& Output_Id, bool* Found_Existing, int32* Active_Output_Option_Index) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_OptionsVoice_C", "Get ActiveVivoxPlaybackDeviceOption");

	Params::bp_wi_OptionsVoice_C_Get_ActiveVivoxPlaybackDeviceOption Parms{};

	Parms.Output_Id = std::move(Output_Id);

	UObject::ProcessEvent(Func, &Parms);

	if (Found_Existing != nullptr)
		*Found_Existing = Parms.Found_Existing;

	if (Active_Output_Option_Index != nullptr)
		*Active_Output_Option_Index = Parms.Active_Output_Option_Index;
}

}

