#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AquaticSimulation

#include "Basic.hpp"

#include "BP_AquaticSimulation_classes.hpp"
#include "BP_AquaticSimulation_parameters.hpp"


namespace SDK
{

// Function BP_AquaticSimulation.BP_AquaticSimulation_C.ExecuteUbergraph_BP_AquaticSimulation
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AquaticSimulation_C::ExecuteUbergraph_BP_AquaticSimulation(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AquaticSimulation_C", "ExecuteUbergraph_BP_AquaticSimulation");

	Params::BP_AquaticSimulation_C_ExecuteUbergraph_BP_AquaticSimulation Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AquaticSimulation.BP_AquaticSimulation_C.UpdateTransform
// (BlueprintCallable, BlueprintEvent)

void ABP_AquaticSimulation_C::UpdateTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AquaticSimulation_C", "UpdateTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AquaticSimulation.BP_AquaticSimulation_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_AquaticSimulation_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AquaticSimulation_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AquaticSimulation.BP_AquaticSimulation_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AquaticSimulation_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AquaticSimulation_C", "ReceiveTick");

	Params::BP_AquaticSimulation_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AquaticSimulation.BP_AquaticSimulation_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AquaticSimulation_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AquaticSimulation_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AquaticSimulation.BP_AquaticSimulation_C.GetRenderTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NumFramesOld                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTextureRenderTarget2D*           HeightRT                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AquaticSimulation_C::GetRenderTarget(int32 NumFramesOld, class UTextureRenderTarget2D** HeightRT)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AquaticSimulation_C", "GetRenderTarget");

	Params::BP_AquaticSimulation_C_GetRenderTarget Parms{};

	Parms.NumFramesOld = NumFramesOld;

	UObject::ProcessEvent(Func, &Parms);

	if (HeightRT != nullptr)
		*HeightRT = Parms.HeightRT;
}


// Function BP_AquaticSimulation.BP_AquaticSimulation_C.UpdateInteraction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCanvas*                          Canvas                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        ScreenSize                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Interaction                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AquaticSimulation_C::UpdateInteraction(class UCanvas* Canvas, const struct FVector2D& ScreenSize, int32 Interaction, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AquaticSimulation_C", "UpdateInteraction");

	Params::BP_AquaticSimulation_C_UpdateInteraction Parms{};

	Parms.Canvas = Canvas;
	Parms.ScreenSize = std::move(ScreenSize);
	Parms.Interaction = Interaction;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AquaticSimulation.BP_AquaticSimulation_C.AddInteractionActor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AquaticSurface_C*             InteractionSurface                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AquaticSimulation_C::AddInteractionActor(class ABP_AquaticSurface_C* InteractionSurface, class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AquaticSimulation_C", "AddInteractionActor");

	Params::BP_AquaticSimulation_C_AddInteractionActor Parms{};

	Parms.InteractionSurface = InteractionSurface;
	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AquaticSimulation.BP_AquaticSimulation_C.RemoveInteractionActor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AquaticSimulation_C::RemoveInteractionActor(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AquaticSimulation_C", "RemoveInteractionActor");

	Params::BP_AquaticSimulation_C_RemoveInteractionActor Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AquaticSimulation.BP_AquaticSimulation_C.UpdateInteractionTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Draw                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AquaticSimulation_C::UpdateInteractionTime(int32 Index_0, float DeltaTime, bool* Draw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AquaticSimulation_C", "UpdateInteractionTime");

	Params::BP_AquaticSimulation_C_UpdateInteractionTime Parms{};

	Parms.Index_0 = Index_0;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	if (Draw != nullptr)
		*Draw = Parms.Draw;
}


// Function BP_AquaticSimulation.BP_AquaticSimulation_C.UpdateRenderPosition
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AquaticSimulation_C::UpdateRenderPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AquaticSimulation_C", "UpdateRenderPosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AquaticSimulation.BP_AquaticSimulation_C.RemoveInteractionFinished
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AquaticSimulation_C::RemoveInteractionFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AquaticSimulation_C", "RemoveInteractionFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AquaticSimulation.BP_AquaticSimulation_C.SetTargetPoint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InterpSpeed                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxDistance                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AquaticSimulation_C::SetTargetPoint(const struct FVector& TargetLocation, float InterpSpeed, float MaxDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AquaticSimulation_C", "SetTargetPoint");

	Params::BP_AquaticSimulation_C_SetTargetPoint Parms{};

	Parms.TargetLocation = std::move(TargetLocation);
	Parms.InterpSpeed = InterpSpeed;
	Parms.MaxDistance = MaxDistance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AquaticSimulation.BP_AquaticSimulation_C.AddInteraction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBS_AquaticInteractionData       Interaction                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    VisibilityTest                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AquaticSimulation_C::AddInteraction(const struct FBS_AquaticInteractionData& Interaction, const struct FVector& Location, float Duration, bool VisibilityTest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AquaticSimulation_C", "AddInteraction");

	Params::BP_AquaticSimulation_C_AddInteraction Parms{};

	Parms.Interaction = std::move(Interaction);
	Parms.Location = std::move(Location);
	Parms.Duration = Duration;
	Parms.VisibilityTest = VisibilityTest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AquaticSimulation.BP_AquaticSimulation_C.DebugDraw
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AquaticSimulation_C::DebugDraw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AquaticSimulation_C", "DebugDraw");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AquaticSimulation.BP_AquaticSimulation_C.NewRenderTarget
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextureRenderTarget2D*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UTextureRenderTarget2D* ABP_AquaticSimulation_C::NewRenderTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AquaticSimulation_C", "NewRenderTarget");

	Params::BP_AquaticSimulation_C_NewRenderTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AquaticSimulation.BP_AquaticSimulation_C.DrawSplat
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        ScreenSize                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCanvas*                          Canvas                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ForceSize                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AquaticSimulation_C::DrawSplat(const struct FVector2D& ScreenSize, class UCanvas* Canvas, float ForceSize, const struct FVector& Location, float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AquaticSimulation_C", "DrawSplat");

	Params::BP_AquaticSimulation_C_DrawSplat Parms{};

	Parms.ScreenSize = std::move(ScreenSize);
	Parms.Canvas = Canvas;
	Parms.ForceSize = ForceSize;
	Parms.Location = std::move(Location);
	Parms.Radius = Radius;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AquaticSimulation.BP_AquaticSimulation_C.UpdateSimulationFocus
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AquaticSimulation_C::UpdateSimulationFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AquaticSimulation_C", "UpdateSimulationFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AquaticSimulation.BP_AquaticSimulation_C.SpawnSplash
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBS_AquaticInteraction           Interaction                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_AquaticSurface_C*             Surface                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NewLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AquaticSimulation_C::SpawnSplash(struct FBS_AquaticInteraction& Interaction, class ABP_AquaticSurface_C* Surface, const struct FVector& NewLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AquaticSimulation_C", "SpawnSplash");

	Params::BP_AquaticSimulation_C_SpawnSplash Parms{};

	Parms.Interaction = std::move(Interaction);
	Parms.Surface = Surface;
	Parms.NewLocation = std::move(NewLocation);

	UObject::ProcessEvent(Func, &Parms);

	Interaction = std::move(Parms.Interaction);
}


// Function BP_AquaticSimulation.BP_AquaticSimulation_C.OnWorldOriginChanged
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FIntVector                       OldLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FIntVector                       NewLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Update                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AquaticSimulation_C::OnWorldOriginChanged(const struct FIntVector& OldLocation, const struct FIntVector& NewLocation, bool* Update)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AquaticSimulation_C", "OnWorldOriginChanged");

	Params::BP_AquaticSimulation_C_OnWorldOriginChanged Parms{};

	Parms.OldLocation = std::move(OldLocation);
	Parms.NewLocation = std::move(NewLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (Update != nullptr)
		*Update = Parms.Update;
}


// Function BP_AquaticSimulation.BP_AquaticSimulation_C.DoSimulationStep
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AquaticSimulation_C::DoSimulationStep(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AquaticSimulation_C", "DoSimulationStep");

	Params::BP_AquaticSimulation_C_DoSimulationStep Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AquaticSimulation.BP_AquaticSimulation_C.UpdateSimulation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AquaticSimulation_C::UpdateSimulation(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AquaticSimulation_C", "UpdateSimulation");

	Params::BP_AquaticSimulation_C_UpdateSimulation Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AquaticSimulation.BP_AquaticSimulation_C.IsLocal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_AquaticSimulation_C::IsLocal() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AquaticSimulation_C", "IsLocal");

	Params::BP_AquaticSimulation_C_IsLocal Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

