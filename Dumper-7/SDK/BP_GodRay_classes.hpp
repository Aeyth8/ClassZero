#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GodRay

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GodRay.BP_GodRay_C
// 0x0058 (0x0278 - 0x0220)
class ABP_GodRay_C final : public AActor
{
public:
	class UStaticMeshComponent*                   StaticMesh1;                                       // 0x0220(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UBillboardComponent*                    UISprite;                                          // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GodRayMesh;                                        // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Sun;                                               // 0x0238(0x0008)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Width;                                             // 0x0240(0x0004)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Length;                                            // 0x0244(0x0004)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Dynamic_material;                                  // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0250(0x0010)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Brightness;                                        // 0x0260(0x0004)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeDistance;                                      // 0x0264(0x0004)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Animated;                                          // 0x0268(0x0001)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomStream                          RandomTime;                                        // 0x026C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor)
	bool                                          SpotLight;                                         // 0x0274(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseSun;                                            // 0x0275(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GodRay_C">();
	}
	static class ABP_GodRay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GodRay_C>();
	}
};
static_assert(alignof(ABP_GodRay_C) == 0x000008, "Wrong alignment on ABP_GodRay_C");
static_assert(sizeof(ABP_GodRay_C) == 0x000278, "Wrong size on ABP_GodRay_C");
static_assert(offsetof(ABP_GodRay_C, StaticMesh1) == 0x000220, "Member 'ABP_GodRay_C::StaticMesh1' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, UISprite) == 0x000228, "Member 'ABP_GodRay_C::UISprite' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, GodRayMesh) == 0x000230, "Member 'ABP_GodRay_C::GodRayMesh' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, Sun) == 0x000238, "Member 'ABP_GodRay_C::Sun' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, Width) == 0x000240, "Member 'ABP_GodRay_C::Width' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, Length) == 0x000244, "Member 'ABP_GodRay_C::Length' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, Dynamic_material) == 0x000248, "Member 'ABP_GodRay_C::Dynamic_material' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, Color) == 0x000250, "Member 'ABP_GodRay_C::Color' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, Brightness) == 0x000260, "Member 'ABP_GodRay_C::Brightness' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, FadeDistance) == 0x000264, "Member 'ABP_GodRay_C::FadeDistance' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, Animated) == 0x000268, "Member 'ABP_GodRay_C::Animated' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, RandomTime) == 0x00026C, "Member 'ABP_GodRay_C::RandomTime' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, SpotLight) == 0x000274, "Member 'ABP_GodRay_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, UseSun) == 0x000275, "Member 'ABP_GodRay_C::UseSun' has a wrong offset!");

}

