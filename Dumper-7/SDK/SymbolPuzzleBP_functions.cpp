#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SymbolPuzzleBP

#include "Basic.hpp"

#include "SymbolPuzzleBP_classes.hpp"
#include "SymbolPuzzleBP_parameters.hpp"


namespace SDK
{

// Function SymbolPuzzleBP.SymbolPuzzleBP_C.ExecuteUbergraph_SymbolPuzzleBP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASymbolPuzzleBP_C::ExecuteUbergraph_SymbolPuzzleBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "ExecuteUbergraph_SymbolPuzzleBP");

	Params::SymbolPuzzleBP_C_ExecuteUbergraph_SymbolPuzzleBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.BndEvt__SymbolPuzzleBP_Interaction2_K2Node_ComponentBoundEvent_3_InteractionEndedDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// bool                                    WasCancelled                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ASymbolPuzzleBP_C::BndEvt__SymbolPuzzleBP_Interaction2_K2Node_ComponentBoundEvent_3_InteractionEndedDelegate__DelegateSignature(const struct FInteractionPayload& Payload, bool WasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "BndEvt__SymbolPuzzleBP_Interaction2_K2Node_ComponentBoundEvent_3_InteractionEndedDelegate__DelegateSignature");

	Params::SymbolPuzzleBP_C_BndEvt__SymbolPuzzleBP_Interaction2_K2Node_ComponentBoundEvent_3_InteractionEndedDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);
	Parms.WasCancelled = WasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.BndEvt__SymbolPuzzleBP_Interaction1_K2Node_ComponentBoundEvent_1_InteractionEndedDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// bool                                    WasCancelled                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ASymbolPuzzleBP_C::BndEvt__SymbolPuzzleBP_Interaction1_K2Node_ComponentBoundEvent_1_InteractionEndedDelegate__DelegateSignature(const struct FInteractionPayload& Payload, bool WasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "BndEvt__SymbolPuzzleBP_Interaction1_K2Node_ComponentBoundEvent_1_InteractionEndedDelegate__DelegateSignature");

	Params::SymbolPuzzleBP_C_BndEvt__SymbolPuzzleBP_Interaction1_K2Node_ComponentBoundEvent_1_InteractionEndedDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);
	Parms.WasCancelled = WasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.Check If Character In Front
// (BlueprintCallable, BlueprintEvent)

void ASymbolPuzzleBP_C::Check_If_Character_In_Front()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "Check If Character In Front");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.Create Widgets
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASymbolPuzzleBP_C::Create_Widgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "Create Widgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.Server_Complete
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ASymbolPuzzleBP_C::Server_Complete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "Server_Complete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.OnSolved2
// (BlueprintCallable, BlueprintEvent)

void ASymbolPuzzleBP_C::OnSolved2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "OnSolved2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.BndEvt__Interaction2_K2Node_ComponentBoundEvent_2_InteractionDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void ASymbolPuzzleBP_C::BndEvt__Interaction2_K2Node_ComponentBoundEvent_2_InteractionDelegate__DelegateSignature(const struct FInteractionPayload& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "BndEvt__Interaction2_K2Node_ComponentBoundEvent_2_InteractionDelegate__DelegateSignature");

	Params::SymbolPuzzleBP_C_BndEvt__Interaction2_K2Node_ComponentBoundEvent_2_InteractionDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.Server_RedirectedSolved
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Number1                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ASymbolPuzzleBP_C::Server_RedirectedSolved(bool Number1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "Server_RedirectedSolved");

	Params::SymbolPuzzleBP_C_Server_RedirectedSolved Parms{};

	Parms.Number1 = Number1;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.OnSolved1
// (BlueprintCallable, BlueprintEvent)

void ASymbolPuzzleBP_C::OnSolved1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "OnSolved1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.BndEvt__Interaction_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void ASymbolPuzzleBP_C::BndEvt__Interaction_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature(const struct FInteractionPayload& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "BndEvt__Interaction_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature");

	Params::SymbolPuzzleBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.Audio Reset 2
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASymbolPuzzleBP_C::Audio_Reset_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "Audio Reset 2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.Audio Fail 2
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASymbolPuzzleBP_C::Audio_Fail_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "Audio Fail 2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.Audio First Complete 2
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASymbolPuzzleBP_C::Audio_First_Complete_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "Audio First Complete 2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ASymbolPuzzleBP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.Audio First Complete 1
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASymbolPuzzleBP_C::Audio_First_Complete_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "Audio First Complete 1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.Audio Reset 1
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASymbolPuzzleBP_C::Audio_Reset_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "Audio Reset 1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.Audio Fail 1
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASymbolPuzzleBP_C::Audio_Fail_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "Audio Fail 1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.Server Audio All Completed
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASymbolPuzzleBP_C::Server_Audio_All_Completed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "Server Audio All Completed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.Audio Idle
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASymbolPuzzleBP_C::Audio_Idle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "Audio Idle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.Cosmetic Complete Both
// (BlueprintCallable, BlueprintEvent)

void ASymbolPuzzleBP_C::Cosmetic_Complete_Both()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "Cosmetic Complete Both");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.Cosmetic Complete 2
// (BlueprintCallable, BlueprintEvent)

void ASymbolPuzzleBP_C::Cosmetic_Complete_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "Cosmetic Complete 2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.Cosmetic Complete 1
// (BlueprintCallable, BlueprintEvent)

void ASymbolPuzzleBP_C::Cosmetic_Complete_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "Cosmetic Complete 1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASymbolPuzzleBP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.CreateWidgetAndSetFocus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacterSCTBP_C*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Number1                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class Ubp_wi_Puzzle_C*                  Widget                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASymbolPuzzleBP_C::CreateWidgetAndSetFocus(class ACharacterSCTBP_C* Character, bool Number1, class Ubp_wi_Puzzle_C** Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "CreateWidgetAndSetFocus");

	Params::SymbolPuzzleBP_C_CreateWidgetAndSetFocus Parms{};

	Parms.Character = Character;
	Parms.Number1 = Number1;

	UObject::ProcessEvent(Func, &Parms);

	if (Widget != nullptr)
		*Widget = Parms.Widget;
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.ActivateActors
// (Public, BlueprintCallable, BlueprintEvent)

void ASymbolPuzzleBP_C::ActivateActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "ActivateActors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.OnRep_Completed
// (BlueprintCallable, BlueprintEvent)

void ASymbolPuzzleBP_C::OnRep_Completed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "OnRep_Completed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.GetAreBothCharacterReferencesSet
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ASymbolPuzzleBP_C::GetAreBothCharacterReferencesSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "GetAreBothCharacterReferencesSet");

	Params::SymbolPuzzleBP_C_GetAreBothCharacterReferencesSet Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.IsPawnClose
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ASymbolPuzzleBP_C::IsPawnClose(class USceneComponent* Component, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "IsPawnClose");

	Params::SymbolPuzzleBP_C_IsPawnClose Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.PlayLocalAudioOnCharacters
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAkAudioEvent*                    AkEvent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASymbolPuzzleBP_C::PlayLocalAudioOnCharacters(class UAkAudioEvent* AkEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "PlayLocalAudioOnCharacters");

	Params::SymbolPuzzleBP_C_PlayLocalAudioOnCharacters Parms{};

	Parms.AkEvent = AkEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.UpdateRandom
// (Public, BlueprintCallable, BlueprintEvent)

void ASymbolPuzzleBP_C::UpdateRandom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "UpdateRandom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.Add GameplayEffect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSubclassOf<class UGameplayEffect>      GameplayEffectClass                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ASymbolPuzzleBP_C::Add_GameplayEffect(class AActor* Target, TSubclassOf<class UGameplayEffect> GameplayEffectClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "Add GameplayEffect");

	Params::SymbolPuzzleBP_C_Add_GameplayEffect Parms{};

	Parms.Target = Target;
	Parms.GameplayEffectClass = GameplayEffectClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.Remove GameplayEffects
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            Tags_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void ASymbolPuzzleBP_C::Remove_GameplayEffects(class AActor* Target, const struct FGameplayTagContainer& Tags_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "Remove GameplayEffects");

	Params::SymbolPuzzleBP_C_Remove_GameplayEffects Parms{};

	Parms.Target = Target;
	Parms.Tags_0 = std::move(Tags_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SymbolPuzzleBP.SymbolPuzzleBP_C.Interaction Ended for Character
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASymbolPuzzleBP_C::Interaction_Ended_for_Character(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SymbolPuzzleBP_C", "Interaction Ended for Character");

	Params::SymbolPuzzleBP_C_Interaction_Ended_for_Character Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}

}

