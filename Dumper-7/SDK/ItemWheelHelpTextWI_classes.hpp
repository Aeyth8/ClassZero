#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemWheelHelpTextWI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SCT_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ItemWheelHelpTextWI.ItemWheelHelpTextWI_C
// 0x0030 (0x02E0 - 0x02B0)
class UItemWheelHelpTextWI_C final : public UControllerIconWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UImage*                                 ButtonImage;                                       // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         GamepadText;                                       // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 InfoBoxBG;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 InfoBoxLineop;                                     // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             KeyboardText;                                      // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ItemWheelHelpTextWI(int32 EntryPoint);
	void ShowKeyboardDisplay(const class FText& KeyDisplayText);
	void ShowMouseDisplay(class UTexture2D* MouseIcon);
	void ShowGamepadDisplay(class UTexture2D* ButtonIcon);
	void ResetDisplay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ItemWheelHelpTextWI_C">();
	}
	static class UItemWheelHelpTextWI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemWheelHelpTextWI_C>();
	}
};
static_assert(alignof(UItemWheelHelpTextWI_C) == 0x000008, "Wrong alignment on UItemWheelHelpTextWI_C");
static_assert(sizeof(UItemWheelHelpTextWI_C) == 0x0002E0, "Wrong size on UItemWheelHelpTextWI_C");
static_assert(offsetof(UItemWheelHelpTextWI_C, UberGraphFrame) == 0x0002B0, "Member 'UItemWheelHelpTextWI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UItemWheelHelpTextWI_C, ButtonImage) == 0x0002B8, "Member 'UItemWheelHelpTextWI_C::ButtonImage' has a wrong offset!");
static_assert(offsetof(UItemWheelHelpTextWI_C, GamepadText) == 0x0002C0, "Member 'UItemWheelHelpTextWI_C::GamepadText' has a wrong offset!");
static_assert(offsetof(UItemWheelHelpTextWI_C, InfoBoxBG) == 0x0002C8, "Member 'UItemWheelHelpTextWI_C::InfoBoxBG' has a wrong offset!");
static_assert(offsetof(UItemWheelHelpTextWI_C, InfoBoxLineop) == 0x0002D0, "Member 'UItemWheelHelpTextWI_C::InfoBoxLineop' has a wrong offset!");
static_assert(offsetof(UItemWheelHelpTextWI_C, KeyboardText) == 0x0002D8, "Member 'UItemWheelHelpTextWI_C::KeyboardText' has a wrong offset!");

}

