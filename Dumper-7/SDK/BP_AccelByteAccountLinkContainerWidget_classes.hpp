#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AccelByteAccountLinkContainerWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SCT_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_AccelByteAccountLinkContainerWidget.BP_AccelByteAccountLinkContainerWidget_C
// 0x0030 (0x0290 - 0x0260)
class UBP_AccelByteAccountLinkContainerWidget_C final : public UFCTAccelByteAuthenticationWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UBP_AccelByteLoginWidget_C*             BP_AccelByteLoginWidget;                           // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AccelByteRegisterWidget_C*          BP_AccelByteRegisterWidget;                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_AccelByteVerifyEmailWidget_C*       BP_AccelByteVerifyEmailWidget;                     // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_112;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WindowSwitcher;                                    // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AccelByteAccountLinkContainerWidget(int32 EntryPoint);
	void BndEvt__BP_AccelByteAccountLinkContainerWidget_BP_AccelByteLoginWidget_K2Node_ComponentBoundEvent_2_OnNeedsVerification__DelegateSignature();
	void OnExistingAccountVerification();
	void BndEvt__BP_AccelByteVerifyEmailWidget_K2Node_ComponentBoundEvent_5_OnGoBackToRegister__DelegateSignature();
	void BndEvt__BP_AccelByteRegisterWidget_K2Node_ComponentBoundEvent_3_OnBackToLogin__DelegateSignature();
	void BndEvt__BP_AccelByteLoginWidget_K2Node_ComponentBoundEvent_1_OnRegisterNewUser__DelegateSignature();
	void BndEvt__BP_AccelByteRegisterWidget_K2Node_ComponentBoundEvent_10_OnClose__DelegateSignature();
	void BndEvt__BP_AccelByteRegisterWidget_K2Node_ComponentBoundEvent_9_OnSendVerificationCode__DelegateSignature(const class FString& DisplayName, const class FString& Email, const class FString& Password);
	void BndEvt__BP_AccelByteLoginWidget_K2Node_ComponentBoundEvent_6_OnClose__DelegateSignature();
	void BndEvt__BP_AccelByteVerifyEmailWidget_K2Node_ComponentBoundEvent_0_OnClose__DelegateSignature();
	void BndEvt__BP_AccelByteVerifyEmailWidget_K2Node_ComponentBoundEvent_8_OnSubmittedRegistrationVerifyCode__DelegateSignature(const class FString& VerificationCode);
	void OnSuccess_68D8C88A410D512614BF33A75F0EDAC3(const class FString& Result, int32 Code);
	void OnError_68D8C88A410D512614BF33A75F0EDAC3(const class FString& Result, int32 Code);
	void OnSuccess_94DE3D8C41A56F46E025768955B1A825(const class FString& Result, int32 Code);
	void OnError_94DE3D8C41A56F46E025768955B1A825(const class FString& Result, int32 Code);
	void GetRegisterEmailInputString(class FString* OutEmail);
	void GetRegisterPasswordInputString(class FString* OutPassword);
	void GetRegisterDisplayNameInputString(class FString* OutDisplayName);
	void Init(const struct FAccountUserData& UserData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AccelByteAccountLinkContainerWidget_C">();
	}
	static class UBP_AccelByteAccountLinkContainerWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AccelByteAccountLinkContainerWidget_C>();
	}
};
static_assert(alignof(UBP_AccelByteAccountLinkContainerWidget_C) == 0x000008, "Wrong alignment on UBP_AccelByteAccountLinkContainerWidget_C");
static_assert(sizeof(UBP_AccelByteAccountLinkContainerWidget_C) == 0x000290, "Wrong size on UBP_AccelByteAccountLinkContainerWidget_C");
static_assert(offsetof(UBP_AccelByteAccountLinkContainerWidget_C, UberGraphFrame) == 0x000260, "Member 'UBP_AccelByteAccountLinkContainerWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AccelByteAccountLinkContainerWidget_C, BP_AccelByteLoginWidget) == 0x000268, "Member 'UBP_AccelByteAccountLinkContainerWidget_C::BP_AccelByteLoginWidget' has a wrong offset!");
static_assert(offsetof(UBP_AccelByteAccountLinkContainerWidget_C, BP_AccelByteRegisterWidget) == 0x000270, "Member 'UBP_AccelByteAccountLinkContainerWidget_C::BP_AccelByteRegisterWidget' has a wrong offset!");
static_assert(offsetof(UBP_AccelByteAccountLinkContainerWidget_C, BP_AccelByteVerifyEmailWidget) == 0x000278, "Member 'UBP_AccelByteAccountLinkContainerWidget_C::BP_AccelByteVerifyEmailWidget' has a wrong offset!");
static_assert(offsetof(UBP_AccelByteAccountLinkContainerWidget_C, Image_112) == 0x000280, "Member 'UBP_AccelByteAccountLinkContainerWidget_C::Image_112' has a wrong offset!");
static_assert(offsetof(UBP_AccelByteAccountLinkContainerWidget_C, WindowSwitcher) == 0x000288, "Member 'UBP_AccelByteAccountLinkContainerWidget_C::WindowSwitcher' has a wrong offset!");

}

