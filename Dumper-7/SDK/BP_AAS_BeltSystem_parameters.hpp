#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AAS_BeltSystem

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Struct_AAS_AsteroidDefaults_structs.hpp"
#include "Struct_AAS_AsteroidOption_structs.hpp"
#include "Engine_structs.hpp"
#include "Struct_AAS_AsteroidInstanceData_structs.hpp"


namespace SDK::Params
{

// Function BP_AAS_BeltSystem.BP_AAS_BeltSystem_C.ExecuteUbergraph_BP_AAS_BeltSystem
// 0x0004 (0x0004 - 0x0000)
struct BP_AAS_BeltSystem_C_ExecuteUbergraph_BP_AAS_BeltSystem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AAS_BeltSystem_C_ExecuteUbergraph_BP_AAS_BeltSystem) == 0x000004, "Wrong alignment on BP_AAS_BeltSystem_C_ExecuteUbergraph_BP_AAS_BeltSystem");
static_assert(sizeof(BP_AAS_BeltSystem_C_ExecuteUbergraph_BP_AAS_BeltSystem) == 0x000004, "Wrong size on BP_AAS_BeltSystem_C_ExecuteUbergraph_BP_AAS_BeltSystem");
static_assert(offsetof(BP_AAS_BeltSystem_C_ExecuteUbergraph_BP_AAS_BeltSystem, EntryPoint) == 0x000000, "Member 'BP_AAS_BeltSystem_C_ExecuteUbergraph_BP_AAS_BeltSystem::EntryPoint' has a wrong offset!");

// Function BP_AAS_BeltSystem.BP_AAS_BeltSystem_C.Get Indicator Scale
// 0x0050 (0x0050 - 0x0000)
struct BP_AAS_BeltSystem_C_Get_Indicator_Scale final
{
public:
	struct FVector2D                              Radius_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Return;                                            // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AAS_BeltSystem_C_Get_Indicator_Scale) == 0x000004, "Wrong alignment on BP_AAS_BeltSystem_C_Get_Indicator_Scale");
static_assert(sizeof(BP_AAS_BeltSystem_C_Get_Indicator_Scale) == 0x000050, "Wrong size on BP_AAS_BeltSystem_C_Get_Indicator_Scale");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Indicator_Scale, Radius_0) == 0x000000, "Member 'BP_AAS_BeltSystem_C_Get_Indicator_Scale::Radius_0' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Indicator_Scale, Return) == 0x000008, "Member 'BP_AAS_BeltSystem_C_Get_Indicator_Scale::Return' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Indicator_Scale, CallFunc_MakeVector_ReturnValue) == 0x000014, "Member 'BP_AAS_BeltSystem_C_Get_Indicator_Scale::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Indicator_Scale, CallFunc_BreakVector2D_X) == 0x000020, "Member 'BP_AAS_BeltSystem_C_Get_Indicator_Scale::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Indicator_Scale, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'BP_AAS_BeltSystem_C_Get_Indicator_Scale::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Indicator_Scale, CallFunc_BreakVector_X) == 0x000028, "Member 'BP_AAS_BeltSystem_C_Get_Indicator_Scale::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Indicator_Scale, CallFunc_BreakVector_Y) == 0x00002C, "Member 'BP_AAS_BeltSystem_C_Get_Indicator_Scale::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Indicator_Scale, CallFunc_BreakVector_Z) == 0x000030, "Member 'BP_AAS_BeltSystem_C_Get_Indicator_Scale::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Indicator_Scale, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_AAS_BeltSystem_C_Get_Indicator_Scale::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Indicator_Scale, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000038, "Member 'BP_AAS_BeltSystem_C_Get_Indicator_Scale::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Indicator_Scale, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_AAS_BeltSystem_C_Get_Indicator_Scale::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Indicator_Scale, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000040, "Member 'BP_AAS_BeltSystem_C_Get_Indicator_Scale::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Indicator_Scale, CallFunc_MakeVector_ReturnValue_1) == 0x000044, "Member 'BP_AAS_BeltSystem_C_Get_Indicator_Scale::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");

// Function BP_AAS_BeltSystem.BP_AAS_BeltSystem_C.Get Belt Range Inner
// 0x002C (0x002C - 0x0000)
struct BP_AAS_BeltSystem_C_Get_Belt_Range_Inner final
{
public:
	struct FVector2D                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AAS_BeltSystem_C_Get_Belt_Range_Inner) == 0x000004, "Wrong alignment on BP_AAS_BeltSystem_C_Get_Belt_Range_Inner");
static_assert(sizeof(BP_AAS_BeltSystem_C_Get_Belt_Range_Inner) == 0x00002C, "Wrong size on BP_AAS_BeltSystem_C_Get_Belt_Range_Inner");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Belt_Range_Inner, ReturnValue) == 0x000000, "Member 'BP_AAS_BeltSystem_C_Get_Belt_Range_Inner::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Belt_Range_Inner, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AAS_BeltSystem_C_Get_Belt_Range_Inner::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Belt_Range_Inner, CallFunc_BreakVector2D_X) == 0x00000C, "Member 'BP_AAS_BeltSystem_C_Get_Belt_Range_Inner::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Belt_Range_Inner, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'BP_AAS_BeltSystem_C_Get_Belt_Range_Inner::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Belt_Range_Inner, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_AAS_BeltSystem_C_Get_Belt_Range_Inner::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Belt_Range_Inner, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000018, "Member 'BP_AAS_BeltSystem_C_Get_Belt_Range_Inner::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Belt_Range_Inner, CallFunc_FMax_ReturnValue) == 0x00001C, "Member 'BP_AAS_BeltSystem_C_Get_Belt_Range_Inner::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Belt_Range_Inner, CallFunc_FMax_ReturnValue_1) == 0x000020, "Member 'BP_AAS_BeltSystem_C_Get_Belt_Range_Inner::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Belt_Range_Inner, CallFunc_MakeVector2D_ReturnValue) == 0x000024, "Member 'BP_AAS_BeltSystem_C_Get_Belt_Range_Inner::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function BP_AAS_BeltSystem.BP_AAS_BeltSystem_C.Get Belt Range Outer
// 0x0024 (0x0024 - 0x0000)
struct BP_AAS_BeltSystem_C_Get_Belt_Range_Outer final
{
public:
	struct FVector2D                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AAS_BeltSystem_C_Get_Belt_Range_Outer) == 0x000004, "Wrong alignment on BP_AAS_BeltSystem_C_Get_Belt_Range_Outer");
static_assert(sizeof(BP_AAS_BeltSystem_C_Get_Belt_Range_Outer) == 0x000024, "Wrong size on BP_AAS_BeltSystem_C_Get_Belt_Range_Outer");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Belt_Range_Outer, ReturnValue) == 0x000000, "Member 'BP_AAS_BeltSystem_C_Get_Belt_Range_Outer::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Belt_Range_Outer, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AAS_BeltSystem_C_Get_Belt_Range_Outer::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Belt_Range_Outer, CallFunc_BreakVector2D_X) == 0x00000C, "Member 'BP_AAS_BeltSystem_C_Get_Belt_Range_Outer::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Belt_Range_Outer, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'BP_AAS_BeltSystem_C_Get_Belt_Range_Outer::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Belt_Range_Outer, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_AAS_BeltSystem_C_Get_Belt_Range_Outer::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Belt_Range_Outer, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000018, "Member 'BP_AAS_BeltSystem_C_Get_Belt_Range_Outer::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Belt_Range_Outer, CallFunc_MakeVector2D_ReturnValue) == 0x00001C, "Member 'BP_AAS_BeltSystem_C_Get_Belt_Range_Outer::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function BP_AAS_BeltSystem.BP_AAS_BeltSystem_C.Get New Orbit Position
// 0x00E0 (0x00E0 - 0x0000)
struct BP_AAS_BeltSystem_C_Get_New_Orbit_Position final
{
public:
	struct FVector                                New_Location;                                      // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BeltStrength;                                      // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OrbitStrength;                                     // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OrbitAngle;                                        // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BeltAngle;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BeltPos;                                           // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OrbitPos;                                          // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Get_In_Orbit_Rotation_of_Location_Rotator; // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Calculate_Orbit_Position_New_Location;    // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Get_Orbit_Range_Range;                    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Get_Orbit_Range_Range_1;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_1; // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_2; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_3; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Calculate_Orbit_Position_New_Location_1;  // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Calculate_Orbit_Position_New_Location_2;  // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position) == 0x000004, "Wrong alignment on BP_AAS_BeltSystem_C_Get_New_Orbit_Position");
static_assert(sizeof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position) == 0x0000E0, "Wrong size on BP_AAS_BeltSystem_C_Get_New_Orbit_Position");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, New_Location) == 0x000000, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::New_Location' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, BeltStrength) == 0x00000C, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::BeltStrength' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, OrbitStrength) == 0x000010, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::OrbitStrength' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, OrbitAngle) == 0x000014, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::OrbitAngle' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, BeltAngle) == 0x000018, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::BeltAngle' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, BeltPos) == 0x00001C, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::BeltPos' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, OrbitPos) == 0x000028, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::OrbitPos' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_Get_In_Orbit_Rotation_of_Location_Rotator) == 0x000034, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_Get_In_Orbit_Rotation_of_Location_Rotator' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000044, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_Calculate_Orbit_Position_New_Location) == 0x000048, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_Calculate_Orbit_Position_New_Location' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000054, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000060, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_VSize_ReturnValue) == 0x00006C, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_VSize_ReturnValue_1) == 0x000070, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_Abs_ReturnValue) == 0x000074, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_Abs_ReturnValue_1) == 0x000078, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x00007C, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000080, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x000084, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_Get_Orbit_Range_Range) == 0x000088, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_Get_Orbit_Range_Range' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_BreakVector2D_X) == 0x000090, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_BreakVector2D_Y) == 0x000094, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_Get_Orbit_Range_Range_1) == 0x000098, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_Get_Orbit_Range_Range_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_MapRangeClamped_ReturnValue) == 0x0000A0, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_BreakVector2D_X_1) == 0x0000A4, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_BreakVector2D_Y_1) == 0x0000A8, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_RandomFloatInRangeFromStream_ReturnValue_1) == 0x0000AC, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_RandomFloatInRangeFromStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0000B0, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x0000B4, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_RandomFloatInRangeFromStream_ReturnValue_2) == 0x0000B8, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_RandomFloatInRangeFromStream_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_RandomFloatInRangeFromStream_ReturnValue_3) == 0x0000BC, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_RandomFloatInRangeFromStream_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_Calculate_Orbit_Position_New_Location_1) == 0x0000C0, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_Calculate_Orbit_Position_New_Location_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_BreakVector2D_X_2) == 0x0000CC, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_BreakVector2D_Y_2) == 0x0000D0, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_New_Orbit_Position, CallFunc_Calculate_Orbit_Position_New_Location_2) == 0x0000D4, "Member 'BP_AAS_BeltSystem_C_Get_New_Orbit_Position::CallFunc_Calculate_Orbit_Position_New_Location_2' has a wrong offset!");

// Function BP_AAS_BeltSystem.BP_AAS_BeltSystem_C.Get Orbit Range
// 0x001C (0x001C - 0x0000)
struct BP_AAS_BeltSystem_C_Get_Orbit_Range final
{
public:
	struct FVector2D                              Range;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AAS_BeltSystem_C_Get_Orbit_Range) == 0x000004, "Wrong alignment on BP_AAS_BeltSystem_C_Get_Orbit_Range");
static_assert(sizeof(BP_AAS_BeltSystem_C_Get_Orbit_Range) == 0x00001C, "Wrong size on BP_AAS_BeltSystem_C_Get_Orbit_Range");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Orbit_Range, Range) == 0x000000, "Member 'BP_AAS_BeltSystem_C_Get_Orbit_Range::Range' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Orbit_Range, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AAS_BeltSystem_C_Get_Orbit_Range::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Orbit_Range, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_AAS_BeltSystem_C_Get_Orbit_Range::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Orbit_Range, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_AAS_BeltSystem_C_Get_Orbit_Range::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Get_Orbit_Range, CallFunc_MakeVector2D_ReturnValue) == 0x000014, "Member 'BP_AAS_BeltSystem_C_Get_Orbit_Range::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function BP_AAS_BeltSystem.BP_AAS_BeltSystem_C.UpdateIndicators
// 0x03B4 (0x03B4 - 0x0000)
struct BP_AAS_BeltSystem_C_UpdateIndicators final
{
public:
	bool                                          Completed;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Get_Orbit_Range_Range;                    // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Calculate_Orbit_Position_New_Location;    // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Get_In_Orbit_Rotation_of_Location_Rotator; // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_Get_Orbit_Range_Range_1;                  // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_4;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_4;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Calculate_Orbit_Position_New_Location_1;  // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult; // 0x0060(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_Get_In_Orbit_Rotation_of_Location_Rotator_1; // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1; // 0x00F8(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x01C0(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x024C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector2D                              CallFunc_Get_Belt_Range_Outer_ReturnValue;         // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Indicator_Scale_Return;               // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Indicator_Scale_Return_1;             // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Get_Belt_Range_Inner_ReturnValue;         // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Indicator_Scale_Return_2;             // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Calculate_Orbit_Position_New_Location_2;  // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Get_In_Orbit_Rotation_of_Location_Rotator_2; // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_2; // 0x0324(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_UpdateIndicators_Completed;               // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AAS_BeltSystem_C_UpdateIndicators) == 0x000004, "Wrong alignment on BP_AAS_BeltSystem_C_UpdateIndicators");
static_assert(sizeof(BP_AAS_BeltSystem_C_UpdateIndicators) == 0x0003B4, "Wrong size on BP_AAS_BeltSystem_C_UpdateIndicators");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, Completed) == 0x000000, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::Completed' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_Get_Orbit_Range_Range) == 0x000004, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_Get_Orbit_Range_Range' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_BreakVector2D_X) == 0x00000C, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_BreakVector2D_X_1) == 0x000014, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_BreakVector2D_Y_1) == 0x000018, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_Calculate_Orbit_Position_New_Location) == 0x00001C, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_Calculate_Orbit_Position_New_Location' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_BreakVector2D_X_2) == 0x000028, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_BreakVector2D_Y_2) == 0x00002C, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_Get_In_Orbit_Rotation_of_Location_Rotator) == 0x000030, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_Get_In_Orbit_Rotation_of_Location_Rotator' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_Get_Orbit_Range_Range_1) == 0x00003C, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_Get_Orbit_Range_Range_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_BreakVector2D_X_3) == 0x000044, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_BreakVector2D_Y_3) == 0x000048, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_BreakVector2D_X_4) == 0x00004C, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_BreakVector2D_Y_4) == 0x000050, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_Calculate_Orbit_Position_New_Location_1) == 0x000054, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_Calculate_Orbit_Position_New_Location_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult) == 0x000060, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_Get_In_Orbit_Rotation_of_Location_Rotator_1) == 0x0000EC, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_Get_In_Orbit_Rotation_of_Location_Rotator_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1) == 0x0000F8, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000184, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000188, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_FMax_ReturnValue) == 0x00018C, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_FMax_ReturnValue_1) == 0x000190, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_MakeVector_ReturnValue) == 0x000194, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0001A0, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0001A4, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_MakeVector_ReturnValue_1) == 0x0001A8, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_MakeVector_ReturnValue_2) == 0x0001B4, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0001C0, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x00024C, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_Get_Belt_Range_Outer_ReturnValue) == 0x0002D8, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_Get_Belt_Range_Outer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_Get_Indicator_Scale_Return) == 0x0002E0, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_Get_Indicator_Scale_Return' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_Get_Indicator_Scale_Return_1) == 0x0002EC, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_Get_Indicator_Scale_Return_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_Get_Belt_Range_Inner_ReturnValue) == 0x0002F8, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_Get_Belt_Range_Inner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_Get_Indicator_Scale_Return_2) == 0x000300, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_Get_Indicator_Scale_Return_2' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_Calculate_Orbit_Position_New_Location_2) == 0x00030C, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_Calculate_Orbit_Position_New_Location_2' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_Get_In_Orbit_Rotation_of_Location_Rotator_2) == 0x000318, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_Get_In_Orbit_Rotation_of_Location_Rotator_2' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_2) == 0x000324, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_UpdateIndicators, CallFunc_UpdateIndicators_Completed) == 0x0003B0, "Member 'BP_AAS_BeltSystem_C_UpdateIndicators::CallFunc_UpdateIndicators_Completed' has a wrong offset!");

// Function BP_AAS_BeltSystem.BP_AAS_BeltSystem_C.Generate Asteroid Data
// 0x0380 (0x0380 - 0x0000)
struct BP_AAS_BeltSystem_C_Generate_Asteroid_Data final
{
public:
	int32                                         Option_Index;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Asteroid_Index;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_AAS_AsteroidDefaults           Defaults;                                          // 0x0010(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_AAS_AsteroidOption             Options;                                           // 0x0060(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          GenerationValid;                                   // 0x00C8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_AAS_AsteroidInstanceData       New_Asteroid_Instance_Data;                        // 0x00D0(0x0040)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanSpawn;                                          // 0x0110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OrbitStr;                                          // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BeltStr;                                           // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TempTransform;                                     // 0x0120(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetModifierData_Valid;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetModifierData_Bool_Value;               // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17A[0x2];                                      // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetModifierData_Float_Value;              // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0190(0x0030)(IsPlainOldData, NoDestructor)
	struct FStruct_AAS_AsteroidInstanceData       K2Node_MakeStruct_Struct_AAS_AsteroidInstanceData; // 0x01C0(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetModifierData_Valid_1;                  // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetModifierData_Bool_Value_1;             // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_206[0x2];                                      // 0x0206(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetModifierData_Float_Value_1;            // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_1; // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_AsteroidScaleShrinking_Shrinked_Scale;    // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_AsteroidScaleShrinking_Shrinked_Scale_1;  // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x02C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FStruct_AAS_AsteroidInstanceData       K2Node_MakeStruct_Struct_AAS_AsteroidInstanceData_1; // 0x02F0(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_New_Orbit_Position_New_Location;      // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_New_Orbit_Position_BeltStrength;      // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_New_Orbit_Position_OrbitStrength;     // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0xC];                                      // 0x0344(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Make_Randomized_Asteroid_Transform_Transform; // 0x0350(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data) == 0x000010, "Wrong alignment on BP_AAS_BeltSystem_C_Generate_Asteroid_Data");
static_assert(sizeof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data) == 0x000380, "Wrong size on BP_AAS_BeltSystem_C_Generate_Asteroid_Data");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, Option_Index) == 0x000000, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::Option_Index' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, Asteroid_Index) == 0x000004, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::Asteroid_Index' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, Defaults) == 0x000010, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::Defaults' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, Options) == 0x000060, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::Options' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, GenerationValid) == 0x0000C8, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::GenerationValid' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, New_Asteroid_Instance_Data) == 0x0000D0, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::New_Asteroid_Instance_Data' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CanSpawn) == 0x000110, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CanSpawn' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, OrbitStr) == 0x000114, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::OrbitStr' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, BeltStr) == 0x000118, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::BeltStr' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, TempTransform) == 0x000120, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::TempTransform' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000150, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_BreakTransform_Location) == 0x000154, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_BreakTransform_Rotation) == 0x000160, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_BreakTransform_Scale) == 0x00016C, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_GetModifierData_Valid) == 0x000178, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_GetModifierData_Valid' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_GetModifierData_Bool_Value) == 0x000179, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_GetModifierData_Bool_Value' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_GetModifierData_Float_Value) == 0x00017C, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_GetModifierData_Float_Value' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000180, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_MakeTransform_ReturnValue) == 0x000190, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, K2Node_MakeStruct_Struct_AAS_AsteroidInstanceData) == 0x0001C0, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::K2Node_MakeStruct_Struct_AAS_AsteroidInstanceData' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000200, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_GetModifierData_Valid_1) == 0x000204, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_GetModifierData_Valid_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_GetModifierData_Bool_Value_1) == 0x000205, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_GetModifierData_Bool_Value_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_GetModifierData_Float_Value_1) == 0x000208, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_GetModifierData_Float_Value_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_BreakTransform_Location_1) == 0x00020C, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_BreakTransform_Rotation_1) == 0x000218, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_BreakTransform_Scale_1) == 0x000224, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_BreakTransform_Location_2) == 0x000230, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_BreakTransform_Rotation_2) == 0x00023C, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_BreakTransform_Scale_2) == 0x000248, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_MapRangeClamped_ReturnValue) == 0x000254, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_Abs_ReturnValue) == 0x000258, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00025C, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000260, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000264, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000268, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x00026C, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x000270, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_RandomFloatInRangeFromStream_ReturnValue_1) == 0x000274, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_RandomFloatInRangeFromStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000278, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00027C, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_SelectFloat_ReturnValue) == 0x000280, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_SelectFloat_ReturnValue_1) == 0x000284, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_AsteroidScaleShrinking_Shrinked_Scale) == 0x000288, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_AsteroidScaleShrinking_Shrinked_Scale' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_SelectVector_ReturnValue) == 0x000294, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_AsteroidScaleShrinking_Shrinked_Scale_1) == 0x0002A0, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_AsteroidScaleShrinking_Shrinked_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_SelectVector_ReturnValue_1) == 0x0002AC, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_MakeTransform_ReturnValue_1) == 0x0002C0, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, K2Node_MakeStruct_Struct_AAS_AsteroidInstanceData_1) == 0x0002F0, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::K2Node_MakeStruct_Struct_AAS_AsteroidInstanceData_1' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_Get_New_Orbit_Position_New_Location) == 0x000330, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_Get_New_Orbit_Position_New_Location' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_Get_New_Orbit_Position_BeltStrength) == 0x00033C, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_Get_New_Orbit_Position_BeltStrength' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_Get_New_Orbit_Position_OrbitStrength) == 0x000340, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_Get_New_Orbit_Position_OrbitStrength' has a wrong offset!");
static_assert(offsetof(BP_AAS_BeltSystem_C_Generate_Asteroid_Data, CallFunc_Make_Randomized_Asteroid_Transform_Transform) == 0x000350, "Member 'BP_AAS_BeltSystem_C_Generate_Asteroid_Data::CallFunc_Make_Randomized_Asteroid_Transform_Transform' has a wrong offset!");

}

