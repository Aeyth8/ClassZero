#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KeySocket3in1BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "E_KeyCardColors_structs.hpp"
#include "AkAudio_structs.hpp"
#include "E_Level_structs.hpp"
#include "E_PickupType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass KeySocket3in1BP.KeySocket3in1BP_C
// 0x0170 (0x03A0 - 0x0230)
class AKeySocket3in1BP_C final : public AStaticMeshActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UStaticMeshComponent*                   OutlineArea;                                       // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GlowPlaneGreen;                                    // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPOI_WidgetComponent_C*                 POI_WidgetComponent;                               // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractionProgressBarCreator*         InteractionProgressBarCreator;                     // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GlowPlaneBlue;                                     // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GlowPlaneRed;                                      // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        OffScreenIddicatorScene;                           // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UKeycardInteractionComponent_C*         KeycardInteractionComponent;                       // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UContextStaticMeshComponent*            ContextStaticMesh;                                 // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class Ubpc_sc_PointOfInterest_C*              bpc_sc_PointOfInterest;                            // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ColorBlue1;                                        // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ColorGreen1;                                       // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ColorRed1;                                         // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FalseKeyCardBlue;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FalseKeyCardGreen;                                 // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FalseKeyCardRed;                                   // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LockBlue;                                          // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LockGreen;                                         // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LockRed;                                           // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ColorBlue;                                         // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ColorGreen;                                        // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sm_ElevatorPanelSlide;                             // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Lock;                                              // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ColorRed;                                          // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak;                                                // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   DebugText;                                         // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FalseKeyCard;                                      // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         EmissiveBootstGlow_Amount_F87E498D45AB47241D0981BCEE3AE0E9; // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            EmissiveBootstGlow__Direction_F87E498D45AB47241D0981BCEE3AE0E9; // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_315[0x3];                                      // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     EmissiveBootstGlow;                                // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PickupType                                  PickUpRequired_KeyCard_;                           // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SocketHasKey;                                      // 0x0321(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_322[0x2];                                      // 0x0322(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         KeyID;                                             // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     DynamicBlueMat;                                    // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     DynamicGreenMat;                                   // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     DynamicRedMat;                                     // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             On_Recieve_Key;                                    // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          ShowFalseKeyCard;                                  // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 UnlockedColor;                                     // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 LockedColor;                                       // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasRedCard;                                        // 0x035C(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          HasGreenCard;                                      // 0x035D(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          HasBlueCard;                                       // 0x035E(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	E_Level                                       Level;                                             // 0x035F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnlyReceive2Cards;                                 // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TeleportToCAIN;                                    // 0x0361(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HasKeycard;                                        // 0x0362(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	E_KeyCardColors                               KeyCardColors;                                     // 0x0363(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Complete;                                          // 0x0364(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetElevator;                                    // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                POILocation;                                       // 0x0370(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          DeliverKeycardHold;                                // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          DeliverKeycardRelease;                             // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          KeycardDeliverSuccess;                             // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Held;                                              // 0x0398(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)

public:
	void On_Recieve_Key__DelegateSignature(E_PickupType PickUpType);
	void ExecuteUbergraph_KeySocket3in1BP(int32 EntryPoint);
	void BndEvt__ContextStaticMesh_K2Node_ComponentBoundEvent_2_PriorityDelegate__DelegateSignature();
	void BndEvt__ContextStaticMesh_K2Node_ComponentBoundEvent_1_PriorityDelegate__DelegateSignature();
	void Server_All_Keycards_Inserted();
	void OnRep_All_Keycards_Inserted();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void Set_Key_As_Placed(E_KeyCardColors Colors);
	void ReceiveKey(E_PickupType Card);
	void BndEvt__KeycardInteractionComponent_K2Node_ComponentBoundEvent_0_InteractionSuccessfulDelegate__DelegateSignature();
	void Audio_Countdown_Begin();
	void Audio_Keycard_Deliver_Success();
	void Audio_Deliver_Keycard_Release();
	void Audio_Deliver_Keycard_Hold();
	void BndEvt__KeycardInteractionComponent_K2Node_ComponentBoundEvent_3_InteractionEndedDelegate__DelegateSignature(const struct FInteractionPayload& Payload, bool WasCancelled);
	void BndEvt__KeycardInteractionComponent_K2Node_ComponentBoundEvent_2_InteractionDelegate__DelegateSignature(const struct FInteractionPayload& Payload);
	void EmissiveBootstGlow__UpdateFunc();
	void EmissiveBootstGlow__FinishedFunc();
	void UserConstructionScript();
	void SetColorOfFalseKeyCard(E_PickupType PickUpType);
	void SetNoKeyColorOfSocket(E_PickupType PickUpType);
	void SetHasKeyColorOfSocket(E_PickupType PickUpType);
	void OnRep_SocketHasKey();
	void OnRep_HasRedCard();
	void OnRep_HasGreenCard();
	void OnRep_HasBlueCard();
	void OnRep_Complete();
	void UpdatePlayerStateForHandin(class APlayerState* Player_State, E_KeyCardColors Keycard_Color);
	void OnRep_Held();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"KeySocket3in1BP_C">();
	}
	static class AKeySocket3in1BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AKeySocket3in1BP_C>();
	}
};
static_assert(alignof(AKeySocket3in1BP_C) == 0x000008, "Wrong alignment on AKeySocket3in1BP_C");
static_assert(sizeof(AKeySocket3in1BP_C) == 0x0003A0, "Wrong size on AKeySocket3in1BP_C");
static_assert(offsetof(AKeySocket3in1BP_C, UberGraphFrame) == 0x000230, "Member 'AKeySocket3in1BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, OutlineArea) == 0x000238, "Member 'AKeySocket3in1BP_C::OutlineArea' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, GlowPlaneGreen) == 0x000240, "Member 'AKeySocket3in1BP_C::GlowPlaneGreen' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, POI_WidgetComponent) == 0x000248, "Member 'AKeySocket3in1BP_C::POI_WidgetComponent' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, InteractionProgressBarCreator) == 0x000250, "Member 'AKeySocket3in1BP_C::InteractionProgressBarCreator' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, GlowPlaneBlue) == 0x000258, "Member 'AKeySocket3in1BP_C::GlowPlaneBlue' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, GlowPlaneRed) == 0x000260, "Member 'AKeySocket3in1BP_C::GlowPlaneRed' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, OffScreenIddicatorScene) == 0x000268, "Member 'AKeySocket3in1BP_C::OffScreenIddicatorScene' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, KeycardInteractionComponent) == 0x000270, "Member 'AKeySocket3in1BP_C::KeycardInteractionComponent' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, ContextStaticMesh) == 0x000278, "Member 'AKeySocket3in1BP_C::ContextStaticMesh' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, bpc_sc_PointOfInterest) == 0x000280, "Member 'AKeySocket3in1BP_C::bpc_sc_PointOfInterest' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, ColorBlue1) == 0x000288, "Member 'AKeySocket3in1BP_C::ColorBlue1' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, ColorGreen1) == 0x000290, "Member 'AKeySocket3in1BP_C::ColorGreen1' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, ColorRed1) == 0x000298, "Member 'AKeySocket3in1BP_C::ColorRed1' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, FalseKeyCardBlue) == 0x0002A0, "Member 'AKeySocket3in1BP_C::FalseKeyCardBlue' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, FalseKeyCardGreen) == 0x0002A8, "Member 'AKeySocket3in1BP_C::FalseKeyCardGreen' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, FalseKeyCardRed) == 0x0002B0, "Member 'AKeySocket3in1BP_C::FalseKeyCardRed' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, LockBlue) == 0x0002B8, "Member 'AKeySocket3in1BP_C::LockBlue' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, LockGreen) == 0x0002C0, "Member 'AKeySocket3in1BP_C::LockGreen' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, LockRed) == 0x0002C8, "Member 'AKeySocket3in1BP_C::LockRed' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, ColorBlue) == 0x0002D0, "Member 'AKeySocket3in1BP_C::ColorBlue' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, ColorGreen) == 0x0002D8, "Member 'AKeySocket3in1BP_C::ColorGreen' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, Sm_ElevatorPanelSlide) == 0x0002E0, "Member 'AKeySocket3in1BP_C::Sm_ElevatorPanelSlide' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, Lock) == 0x0002E8, "Member 'AKeySocket3in1BP_C::Lock' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, ColorRed) == 0x0002F0, "Member 'AKeySocket3in1BP_C::ColorRed' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, Ak) == 0x0002F8, "Member 'AKeySocket3in1BP_C::Ak' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, DebugText) == 0x000300, "Member 'AKeySocket3in1BP_C::DebugText' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, FalseKeyCard) == 0x000308, "Member 'AKeySocket3in1BP_C::FalseKeyCard' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, EmissiveBootstGlow_Amount_F87E498D45AB47241D0981BCEE3AE0E9) == 0x000310, "Member 'AKeySocket3in1BP_C::EmissiveBootstGlow_Amount_F87E498D45AB47241D0981BCEE3AE0E9' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, EmissiveBootstGlow__Direction_F87E498D45AB47241D0981BCEE3AE0E9) == 0x000314, "Member 'AKeySocket3in1BP_C::EmissiveBootstGlow__Direction_F87E498D45AB47241D0981BCEE3AE0E9' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, EmissiveBootstGlow) == 0x000318, "Member 'AKeySocket3in1BP_C::EmissiveBootstGlow' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, PickUpRequired_KeyCard_) == 0x000320, "Member 'AKeySocket3in1BP_C::PickUpRequired_KeyCard_' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, SocketHasKey) == 0x000321, "Member 'AKeySocket3in1BP_C::SocketHasKey' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, KeyID) == 0x000324, "Member 'AKeySocket3in1BP_C::KeyID' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, DynamicBlueMat) == 0x000328, "Member 'AKeySocket3in1BP_C::DynamicBlueMat' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, DynamicGreenMat) == 0x000330, "Member 'AKeySocket3in1BP_C::DynamicGreenMat' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, DynamicRedMat) == 0x000338, "Member 'AKeySocket3in1BP_C::DynamicRedMat' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, On_Recieve_Key) == 0x000340, "Member 'AKeySocket3in1BP_C::On_Recieve_Key' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, ShowFalseKeyCard) == 0x000350, "Member 'AKeySocket3in1BP_C::ShowFalseKeyCard' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, UnlockedColor) == 0x000354, "Member 'AKeySocket3in1BP_C::UnlockedColor' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, LockedColor) == 0x000358, "Member 'AKeySocket3in1BP_C::LockedColor' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, HasRedCard) == 0x00035C, "Member 'AKeySocket3in1BP_C::HasRedCard' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, HasGreenCard) == 0x00035D, "Member 'AKeySocket3in1BP_C::HasGreenCard' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, HasBlueCard) == 0x00035E, "Member 'AKeySocket3in1BP_C::HasBlueCard' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, Level) == 0x00035F, "Member 'AKeySocket3in1BP_C::Level' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, OnlyReceive2Cards) == 0x000360, "Member 'AKeySocket3in1BP_C::OnlyReceive2Cards' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, TeleportToCAIN) == 0x000361, "Member 'AKeySocket3in1BP_C::TeleportToCAIN' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, HasKeycard) == 0x000362, "Member 'AKeySocket3in1BP_C::HasKeycard' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, KeyCardColors) == 0x000363, "Member 'AKeySocket3in1BP_C::KeyCardColors' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, Complete) == 0x000364, "Member 'AKeySocket3in1BP_C::Complete' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, TargetElevator) == 0x000368, "Member 'AKeySocket3in1BP_C::TargetElevator' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, POILocation) == 0x000370, "Member 'AKeySocket3in1BP_C::POILocation' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, DeliverKeycardHold) == 0x000380, "Member 'AKeySocket3in1BP_C::DeliverKeycardHold' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, DeliverKeycardRelease) == 0x000388, "Member 'AKeySocket3in1BP_C::DeliverKeycardRelease' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, KeycardDeliverSuccess) == 0x000390, "Member 'AKeySocket3in1BP_C::KeycardDeliverSuccess' has a wrong offset!");
static_assert(offsetof(AKeySocket3in1BP_C, Held) == 0x000398, "Member 'AKeySocket3in1BP_C::Held' has a wrong offset!");

}

