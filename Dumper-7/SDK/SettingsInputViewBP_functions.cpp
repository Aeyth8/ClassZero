#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SettingsInputViewBP

#include "Basic.hpp"

#include "SettingsInputViewBP_classes.hpp"
#include "SettingsInputViewBP_parameters.hpp"


namespace SDK
{

// Function SettingsInputViewBP.SettingsInputViewBP_C.OnSettingChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void USettingsInputViewBP_C::OnSettingChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "OnSettingChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.ExecuteUbergraph_SettingsInputViewBP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USettingsInputViewBP_C::ExecuteUbergraph_SettingsInputViewBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "ExecuteUbergraph_SettingsInputViewBP");

	Params::SettingsInputViewBP_C_ExecuteUbergraph_SettingsInputViewBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USettingsInputViewBP_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "PreConstruct");

	Params::SettingsInputViewBP_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void USettingsInputViewBP_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.OnInitialLoadComplete
// (BlueprintCallable, BlueprintEvent)

void USettingsInputViewBP_C::OnInitialLoadComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "OnInitialLoadComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void USettingsInputViewBP_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.Add Action Entry
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FInputInformation                ActionEntry                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void USettingsInputViewBP_C::Add_Action_Entry(const struct FInputInformation& ActionEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "Add Action Entry");

	Params::SettingsInputViewBP_C_Add_Action_Entry Parms{};

	Parms.ActionEntry = std::move(ActionEntry);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.GetSettings
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserInputSettingsBP_C*           AsUser_Input_Settings_BP                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void USettingsInputViewBP_C::GetSettings(class UUserInputSettingsBP_C** AsUser_Input_Settings_BP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "GetSettings");

	Params::SettingsInputViewBP_C_GetSettings Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AsUser_Input_Settings_BP != nullptr)
		*AsUser_Input_Settings_BP = Parms.AsUser_Input_Settings_BP;
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.OnStateChanged
// (Public, BlueprintCallable, BlueprintEvent)

void USettingsInputViewBP_C::OnStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "OnStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.Populate Action View
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void USettingsInputViewBP_C::Populate_Action_View()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "Populate Action View");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.ClearView
// (Public, BlueprintCallable, BlueprintEvent)

void USettingsInputViewBP_C::ClearView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "ClearView");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.InitializeUI
// (Public, BlueprintCallable, BlueprintEvent)

void USettingsInputViewBP_C::InitializeUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "InitializeUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.CacheActionComponent
// (Public, BlueprintCallable, BlueprintEvent)

void USettingsInputViewBP_C::CacheActionComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "CacheActionComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.Populate Axis View
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void USettingsInputViewBP_C::Populate_Axis_View()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "Populate Axis View");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.CacheAxisComponent
// (Public, BlueprintCallable, BlueprintEvent)

void USettingsInputViewBP_C::CacheAxisComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "CacheAxisComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.CacheSubcomponents
// (Public, BlueprintCallable, BlueprintEvent)

void USettingsInputViewBP_C::CacheSubcomponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "CacheSubcomponents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.Add Axis Entry
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FInputInformationAxis            AxisEntry                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// class FName                             SettingsName_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USettingsInputViewBP_C::Add_Axis_Entry(const struct FInputInformationAxis& AxisEntry, class FName SettingsName_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "Add Axis Entry");

	Params::SettingsInputViewBP_C_Add_Axis_Entry Parms{};

	Parms.AxisEntry = std::move(AxisEntry);
	Parms.SettingsName_0 = SettingsName_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.Add Toggle Entry
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FInputInformationToggle          ToggleEntry                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// class FName                             SettingsName_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USettingsInputViewBP_C::Add_Toggle_Entry(const struct FInputInformationToggle& ToggleEntry, class FName SettingsName_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "Add Toggle Entry");

	Params::SettingsInputViewBP_C_Add_Toggle_Entry Parms{};

	Parms.ToggleEntry = std::move(ToggleEntry);
	Parms.SettingsName_0 = SettingsName_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.Populate Toggle View
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void USettingsInputViewBP_C::Populate_Toggle_View()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "Populate Toggle View");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.CacheToggleComponent
// (Public, BlueprintCallable, BlueprintEvent)

void USettingsInputViewBP_C::CacheToggleComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "CacheToggleComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.OnChildChanged
// (Public, BlueprintCallable, BlueprintEvent)

void USettingsInputViewBP_C::OnChildChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "OnChildChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.Reset All
// (Public, BlueprintCallable, BlueprintEvent)

void USettingsInputViewBP_C::Reset_All()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "Reset All");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.PopulateViews
// (Public, BlueprintCallable, BlueprintEvent)

void USettingsInputViewBP_C::PopulateViews()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "PopulateViews");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.PopulateFloatSliders
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void USettingsInputViewBP_C::PopulateFloatSliders()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "PopulateFloatSliders");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.AddSpacer
// (Public, BlueprintCallable, BlueprintEvent)

void USettingsInputViewBP_C::AddSpacer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "AddSpacer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.CreateFloatSliderEntry
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SerializationKey                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FInputInformationFloatSlider     Info                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void USettingsInputViewBP_C::CreateFloatSliderEntry(class FName SerializationKey, const struct FInputInformationFloatSlider& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "CreateFloatSliderEntry");

	Params::SettingsInputViewBP_C_CreateFloatSliderEntry Parms{};

	Parms.SerializationKey = SerializationKey;
	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.OnAnyFloatValueChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USettingsInputViewBP_C::OnAnyFloatValueChanged(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "OnAnyFloatValueChanged");

	Params::SettingsInputViewBP_C_OnAnyFloatValueChanged Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.OnSaveFloatValueWithChange
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USettingsInputViewBP_C::OnSaveFloatValueWithChange(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "OnSaveFloatValueWithChange");

	Params::SettingsInputViewBP_C_OnSaveFloatValueWithChange Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.IsGamepadActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USettingsInputViewBP_C::IsGamepadActive(bool* Value) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "IsGamepadActive");

	Params::SettingsInputViewBP_C_IsGamepadActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function SettingsInputViewBP.SettingsInputViewBP_C.IsLastControllerTypeGamepad
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USettingsInputViewBP_C::IsLastControllerTypeGamepad(bool* Value) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsInputViewBP_C", "IsLastControllerTypeGamepad");

	Params::SettingsInputViewBP_C_IsLastControllerTypeGamepad Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}

}

