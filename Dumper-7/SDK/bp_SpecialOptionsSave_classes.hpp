#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: bp_SpecialOptionsSave

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass bp_SpecialOptionsSave.bp_SpecialOptionsSave_C
// 0x0068 (0x0090 - 0x0028)
class Ubp_SpecialOptionsSave_C final : public USaveGame
{
public:
	bool                                          MotionblurDisabled;                                // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RenderResolution;                                  // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InvertCameraX;                                     // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          InvertCameraY;                                     // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OverallScalability;                                // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DisableTooltips;                                   // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MouseSens;                                         // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DisableCameraShake;                                // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SavedThankYouNoteID;                               // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ThankYouNoteWasHiddenByUser;                       // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DoNotShowVoiceOnStart;                             // 0x0049(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MasterVolume;                                      // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MusicVolume;                                       // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VoiceInputBoost;                                   // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VoiceOutputBoost;                                  // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PushToTalk;                                        // 0x005C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Language;                                          // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          AllowCrossPlatformPlay;                            // 0x0070(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Matchmaker_Language;                               // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          CrossplayNotificationShown;                        // 0x0088(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"bp_SpecialOptionsSave_C">();
	}
	static class Ubp_SpecialOptionsSave_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<Ubp_SpecialOptionsSave_C>();
	}
};
static_assert(alignof(Ubp_SpecialOptionsSave_C) == 0x000008, "Wrong alignment on Ubp_SpecialOptionsSave_C");
static_assert(sizeof(Ubp_SpecialOptionsSave_C) == 0x000090, "Wrong size on Ubp_SpecialOptionsSave_C");
static_assert(offsetof(Ubp_SpecialOptionsSave_C, MotionblurDisabled) == 0x000028, "Member 'Ubp_SpecialOptionsSave_C::MotionblurDisabled' has a wrong offset!");
static_assert(offsetof(Ubp_SpecialOptionsSave_C, RenderResolution) == 0x00002C, "Member 'Ubp_SpecialOptionsSave_C::RenderResolution' has a wrong offset!");
static_assert(offsetof(Ubp_SpecialOptionsSave_C, InvertCameraX) == 0x000030, "Member 'Ubp_SpecialOptionsSave_C::InvertCameraX' has a wrong offset!");
static_assert(offsetof(Ubp_SpecialOptionsSave_C, InvertCameraY) == 0x000031, "Member 'Ubp_SpecialOptionsSave_C::InvertCameraY' has a wrong offset!");
static_assert(offsetof(Ubp_SpecialOptionsSave_C, OverallScalability) == 0x000034, "Member 'Ubp_SpecialOptionsSave_C::OverallScalability' has a wrong offset!");
static_assert(offsetof(Ubp_SpecialOptionsSave_C, DisableTooltips) == 0x000038, "Member 'Ubp_SpecialOptionsSave_C::DisableTooltips' has a wrong offset!");
static_assert(offsetof(Ubp_SpecialOptionsSave_C, MouseSens) == 0x00003C, "Member 'Ubp_SpecialOptionsSave_C::MouseSens' has a wrong offset!");
static_assert(offsetof(Ubp_SpecialOptionsSave_C, DisableCameraShake) == 0x000040, "Member 'Ubp_SpecialOptionsSave_C::DisableCameraShake' has a wrong offset!");
static_assert(offsetof(Ubp_SpecialOptionsSave_C, SavedThankYouNoteID) == 0x000044, "Member 'Ubp_SpecialOptionsSave_C::SavedThankYouNoteID' has a wrong offset!");
static_assert(offsetof(Ubp_SpecialOptionsSave_C, ThankYouNoteWasHiddenByUser) == 0x000048, "Member 'Ubp_SpecialOptionsSave_C::ThankYouNoteWasHiddenByUser' has a wrong offset!");
static_assert(offsetof(Ubp_SpecialOptionsSave_C, DoNotShowVoiceOnStart) == 0x000049, "Member 'Ubp_SpecialOptionsSave_C::DoNotShowVoiceOnStart' has a wrong offset!");
static_assert(offsetof(Ubp_SpecialOptionsSave_C, MasterVolume) == 0x00004C, "Member 'Ubp_SpecialOptionsSave_C::MasterVolume' has a wrong offset!");
static_assert(offsetof(Ubp_SpecialOptionsSave_C, MusicVolume) == 0x000050, "Member 'Ubp_SpecialOptionsSave_C::MusicVolume' has a wrong offset!");
static_assert(offsetof(Ubp_SpecialOptionsSave_C, VoiceInputBoost) == 0x000054, "Member 'Ubp_SpecialOptionsSave_C::VoiceInputBoost' has a wrong offset!");
static_assert(offsetof(Ubp_SpecialOptionsSave_C, VoiceOutputBoost) == 0x000058, "Member 'Ubp_SpecialOptionsSave_C::VoiceOutputBoost' has a wrong offset!");
static_assert(offsetof(Ubp_SpecialOptionsSave_C, PushToTalk) == 0x00005C, "Member 'Ubp_SpecialOptionsSave_C::PushToTalk' has a wrong offset!");
static_assert(offsetof(Ubp_SpecialOptionsSave_C, Language) == 0x000060, "Member 'Ubp_SpecialOptionsSave_C::Language' has a wrong offset!");
static_assert(offsetof(Ubp_SpecialOptionsSave_C, AllowCrossPlatformPlay) == 0x000070, "Member 'Ubp_SpecialOptionsSave_C::AllowCrossPlatformPlay' has a wrong offset!");
static_assert(offsetof(Ubp_SpecialOptionsSave_C, Matchmaker_Language) == 0x000078, "Member 'Ubp_SpecialOptionsSave_C::Matchmaker_Language' has a wrong offset!");
static_assert(offsetof(Ubp_SpecialOptionsSave_C, CrossplayNotificationShown) == 0x000088, "Member 'Ubp_SpecialOptionsSave_C::CrossplayNotificationShown' has a wrong offset!");

}

