#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RadialProgressBar

#include "Basic.hpp"

#include "RadialProgressBar_classes.hpp"
#include "RadialProgressBar_parameters.hpp"


namespace SDK
{

// Function RadialProgressBar.RadialProgressBar_C.ExecuteUbergraph_RadialProgressBar
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialProgressBar_C::ExecuteUbergraph_RadialProgressBar(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialProgressBar_C", "ExecuteUbergraph_RadialProgressBar");

	Params::RadialProgressBar_C_ExecuteUbergraph_RadialProgressBar Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialProgressBar.RadialProgressBar_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void URadialProgressBar_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialProgressBar_C", "PreConstruct");

	Params::RadialProgressBar_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialProgressBar.RadialProgressBar_C.SetPercentage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Percentage_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialProgressBar_C::SetPercentage(float Percentage_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialProgressBar_C", "SetPercentage");

	Params::RadialProgressBar_C_SetPercentage Parms{};

	Parms.Percentage_0 = Percentage_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialProgressBar.RadialProgressBar_C.SetBackgroundColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSlateColor                      Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm)

void URadialProgressBar_C::SetBackgroundColor(const struct FSlateColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialProgressBar_C", "SetBackgroundColor");

	Params::RadialProgressBar_C_SetBackgroundColor Parms{};

	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialProgressBar.RadialProgressBar_C.CreateMaterial
// (Public, BlueprintCallable, BlueprintEvent)

void URadialProgressBar_C::CreateMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialProgressBar_C", "CreateMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RadialProgressBar.RadialProgressBar_C.SetPrimaryColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSlateColor                      Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm)

void URadialProgressBar_C::SetPrimaryColor(const struct FSlateColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialProgressBar_C", "SetPrimaryColor");

	Params::RadialProgressBar_C_SetPrimaryColor Parms{};

	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialProgressBar.RadialProgressBar_C.GetMaterial
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UMaterialInstanceDynamic*         Material_0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialProgressBar_C::GetMaterial(class UMaterialInstanceDynamic** Material_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialProgressBar_C", "GetMaterial");

	Params::RadialProgressBar_C_GetMaterial Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Material_0 != nullptr)
		*Material_0 = Parms.Material_0;
}


// Function RadialProgressBar.RadialProgressBar_C.GetBackgroundColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FSlateColor                      Color                                                  (Parm, OutParm)

void URadialProgressBar_C::GetBackgroundColor(struct FSlateColor* Color) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialProgressBar_C", "GetBackgroundColor");

	Params::RadialProgressBar_C_GetBackgroundColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function RadialProgressBar.RadialProgressBar_C.GetPrimaryColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FSlateColor                      Color                                                  (Parm, OutParm)

void URadialProgressBar_C::GetPrimaryColor(struct FSlateColor* Color) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialProgressBar_C", "GetPrimaryColor");

	Params::RadialProgressBar_C_GetPrimaryColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}

}

