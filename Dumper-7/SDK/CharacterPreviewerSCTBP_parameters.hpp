#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterPreviewerSCTBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SCT_structs.hpp"


namespace SDK::Params
{

// Function CharacterPreviewerSCTBP.CharacterPreviewerSCTBP_C.UpdateHairColor__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct CharacterPreviewerSCTBP_C_UpdateHairColor__DelegateSignature final
{
public:
	struct FLinearColor                           HairColor_0;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharacterPreviewerSCTBP_C_UpdateHairColor__DelegateSignature) == 0x000004, "Wrong alignment on CharacterPreviewerSCTBP_C_UpdateHairColor__DelegateSignature");
static_assert(sizeof(CharacterPreviewerSCTBP_C_UpdateHairColor__DelegateSignature) == 0x000010, "Wrong size on CharacterPreviewerSCTBP_C_UpdateHairColor__DelegateSignature");
static_assert(offsetof(CharacterPreviewerSCTBP_C_UpdateHairColor__DelegateSignature, HairColor_0) == 0x000000, "Member 'CharacterPreviewerSCTBP_C_UpdateHairColor__DelegateSignature::HairColor_0' has a wrong offset!");

// Function CharacterPreviewerSCTBP.CharacterPreviewerSCTBP_C.UpdateClothMasks1__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct CharacterPreviewerSCTBP_C_UpdateClothMasks1__DelegateSignature final
{
public:
	TArray<class UTexture2D*>                     ClothMasks;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(CharacterPreviewerSCTBP_C_UpdateClothMasks1__DelegateSignature) == 0x000008, "Wrong alignment on CharacterPreviewerSCTBP_C_UpdateClothMasks1__DelegateSignature");
static_assert(sizeof(CharacterPreviewerSCTBP_C_UpdateClothMasks1__DelegateSignature) == 0x000010, "Wrong size on CharacterPreviewerSCTBP_C_UpdateClothMasks1__DelegateSignature");
static_assert(offsetof(CharacterPreviewerSCTBP_C_UpdateClothMasks1__DelegateSignature, ClothMasks) == 0x000000, "Member 'CharacterPreviewerSCTBP_C_UpdateClothMasks1__DelegateSignature::ClothMasks' has a wrong offset!");

// Function CharacterPreviewerSCTBP.CharacterPreviewerSCTBP_C.ExecuteUbergraph_CharacterPreviewerSCTBP
// 0x0118 (0x0118 - 0x0000)
struct CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UTexture2D*>                     K2Node_CustomEvent_ClothMasks;                     // 0x0010(0x0010)(ReferenceParm)
	struct FPlayerCustomizationItem               K2Node_CustomEvent_PantsCustomization;             // 0x0020(0x00A8)()
	bool                                          K2Node_CustomEvent_MaskPants;                      // 0x00C8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GodRay_C*                           K2Node_DynamicCast_AsBP_God_Ray;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_CustomEvent_NewHairColor;                   // 0x00E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sin_ReturnValue;                          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_Array_Get_Item;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP) == 0x000008, "Wrong alignment on CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP");
static_assert(sizeof(CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP) == 0x000118, "Wrong size on CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP");
static_assert(offsetof(CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP, EntryPoint) == 0x000000, "Member 'CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP, CallFunc_Lerp_ReturnValue) == 0x000004, "Member 'CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP, CallFunc_GetMaterial_ReturnValue) == 0x000008, "Member 'CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP, K2Node_CustomEvent_ClothMasks) == 0x000010, "Member 'CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP::K2Node_CustomEvent_ClothMasks' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP, K2Node_CustomEvent_PantsCustomization) == 0x000020, "Member 'CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP::K2Node_CustomEvent_PantsCustomization' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP, K2Node_CustomEvent_MaskPants) == 0x0000C8, "Member 'CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP::K2Node_CustomEvent_MaskPants' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000D0, "Member 'CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP, K2Node_DynamicCast_AsBP_God_Ray) == 0x0000D8, "Member 'CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP::K2Node_DynamicCast_AsBP_God_Ray' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP, K2Node_CustomEvent_NewHairColor) == 0x0000E4, "Member 'CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP::K2Node_CustomEvent_NewHairColor' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP, K2Node_Event_DeltaSeconds) == 0x0000F4, "Member 'CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP, CallFunc_GetTimeSeconds_ReturnValue) == 0x0000F8, "Member 'CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP, CallFunc_Sin_ReturnValue) == 0x0000FC, "Member 'CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP, CallFunc_Array_Get_Item) == 0x000100, "Member 'CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP, CallFunc_Add_FloatFloat_ReturnValue) == 0x000108, "Member 'CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00010C, "Member 'CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP, CallFunc_GetFloatValue_ReturnValue) == 0x000110, "Member 'CharacterPreviewerSCTBP_C_ExecuteUbergraph_CharacterPreviewerSCTBP::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");

// Function CharacterPreviewerSCTBP.CharacterPreviewerSCTBP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct CharacterPreviewerSCTBP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharacterPreviewerSCTBP_C_ReceiveTick) == 0x000004, "Wrong alignment on CharacterPreviewerSCTBP_C_ReceiveTick");
static_assert(sizeof(CharacterPreviewerSCTBP_C_ReceiveTick) == 0x000004, "Wrong size on CharacterPreviewerSCTBP_C_ReceiveTick");
static_assert(offsetof(CharacterPreviewerSCTBP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'CharacterPreviewerSCTBP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function CharacterPreviewerSCTBP.CharacterPreviewerSCTBP_C.OnUpdateHairColor_Event
// 0x0010 (0x0010 - 0x0000)
struct CharacterPreviewerSCTBP_C_OnUpdateHairColor_Event final
{
public:
	struct FLinearColor                           NewHairColor;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharacterPreviewerSCTBP_C_OnUpdateHairColor_Event) == 0x000004, "Wrong alignment on CharacterPreviewerSCTBP_C_OnUpdateHairColor_Event");
static_assert(sizeof(CharacterPreviewerSCTBP_C_OnUpdateHairColor_Event) == 0x000010, "Wrong size on CharacterPreviewerSCTBP_C_OnUpdateHairColor_Event");
static_assert(offsetof(CharacterPreviewerSCTBP_C_OnUpdateHairColor_Event, NewHairColor) == 0x000000, "Member 'CharacterPreviewerSCTBP_C_OnUpdateHairColor_Event::NewHairColor' has a wrong offset!");

// Function CharacterPreviewerSCTBP.CharacterPreviewerSCTBP_C.UpdateClothMasks_Event
// 0x00C0 (0x00C0 - 0x0000)
struct CharacterPreviewerSCTBP_C_UpdateClothMasks_Event final
{
public:
	TArray<class UTexture2D*>                     ClothMasks;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FPlayerCustomizationItem               PantsCustomization;                                // 0x0010(0x00A8)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          MaskPants;                                         // 0x00B8(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharacterPreviewerSCTBP_C_UpdateClothMasks_Event) == 0x000008, "Wrong alignment on CharacterPreviewerSCTBP_C_UpdateClothMasks_Event");
static_assert(sizeof(CharacterPreviewerSCTBP_C_UpdateClothMasks_Event) == 0x0000C0, "Wrong size on CharacterPreviewerSCTBP_C_UpdateClothMasks_Event");
static_assert(offsetof(CharacterPreviewerSCTBP_C_UpdateClothMasks_Event, ClothMasks) == 0x000000, "Member 'CharacterPreviewerSCTBP_C_UpdateClothMasks_Event::ClothMasks' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_UpdateClothMasks_Event, PantsCustomization) == 0x000010, "Member 'CharacterPreviewerSCTBP_C_UpdateClothMasks_Event::PantsCustomization' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_UpdateClothMasks_Event, MaskPants) == 0x0000B8, "Member 'CharacterPreviewerSCTBP_C_UpdateClothMasks_Event::MaskPants' has a wrong offset!");

// Function CharacterPreviewerSCTBP.CharacterPreviewerSCTBP_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct CharacterPreviewerSCTBP_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharacterPreviewerSCTBP_C_UserConstructionScript) == 0x000008, "Wrong alignment on CharacterPreviewerSCTBP_C_UserConstructionScript");
static_assert(sizeof(CharacterPreviewerSCTBP_C_UserConstructionScript) == 0x000008, "Wrong size on CharacterPreviewerSCTBP_C_UserConstructionScript");
static_assert(offsetof(CharacterPreviewerSCTBP_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'CharacterPreviewerSCTBP_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function CharacterPreviewerSCTBP.CharacterPreviewerSCTBP_C.UpdateClothMasks
// 0x0070 (0x0070 - 0x0000)
struct CharacterPreviewerSCTBP_C_UpdateClothMasks final
{
public:
	TArray<class UTexture2D*>                     ClothMasks;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UBP_CustomizationCategory_C*            LegsCustomization;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoMaskLegs;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CustomizationCategory_C*            FeetCustomization;                                 // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoMaskFeet;                                        // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               PreviewerDynamicMat;                               // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_Array_Get_Item_2;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharacterPreviewerSCTBP_C_UpdateClothMasks) == 0x000008, "Wrong alignment on CharacterPreviewerSCTBP_C_UpdateClothMasks");
static_assert(sizeof(CharacterPreviewerSCTBP_C_UpdateClothMasks) == 0x000070, "Wrong size on CharacterPreviewerSCTBP_C_UpdateClothMasks");
static_assert(offsetof(CharacterPreviewerSCTBP_C_UpdateClothMasks, ClothMasks) == 0x000000, "Member 'CharacterPreviewerSCTBP_C_UpdateClothMasks::ClothMasks' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_UpdateClothMasks, LegsCustomization) == 0x000010, "Member 'CharacterPreviewerSCTBP_C_UpdateClothMasks::LegsCustomization' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_UpdateClothMasks, DoMaskLegs) == 0x000018, "Member 'CharacterPreviewerSCTBP_C_UpdateClothMasks::DoMaskLegs' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_UpdateClothMasks, FeetCustomization) == 0x000020, "Member 'CharacterPreviewerSCTBP_C_UpdateClothMasks::FeetCustomization' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_UpdateClothMasks, DoMaskFeet) == 0x000028, "Member 'CharacterPreviewerSCTBP_C_UpdateClothMasks::DoMaskFeet' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_UpdateClothMasks, PreviewerDynamicMat) == 0x000030, "Member 'CharacterPreviewerSCTBP_C_UpdateClothMasks::PreviewerDynamicMat' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_UpdateClothMasks, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000038, "Member 'CharacterPreviewerSCTBP_C_UpdateClothMasks::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_UpdateClothMasks, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'CharacterPreviewerSCTBP_C_UpdateClothMasks::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_UpdateClothMasks, CallFunc_Array_Get_Item) == 0x000048, "Member 'CharacterPreviewerSCTBP_C_UpdateClothMasks::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_UpdateClothMasks, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'CharacterPreviewerSCTBP_C_UpdateClothMasks::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_UpdateClothMasks, CallFunc_Array_Get_Item_2) == 0x000058, "Member 'CharacterPreviewerSCTBP_C_UpdateClothMasks::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_UpdateClothMasks, CallFunc_GetMaterial_ReturnValue) == 0x000060, "Member 'CharacterPreviewerSCTBP_C_UpdateClothMasks::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_UpdateClothMasks, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000068, "Member 'CharacterPreviewerSCTBP_C_UpdateClothMasks::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function CharacterPreviewerSCTBP.CharacterPreviewerSCTBP_C.Set Appearance Preset
// 0x00A8 (0x00A8 - 0x0000)
struct CharacterPreviewerSCTBP_C_Set_Appearance_Preset final
{
public:
	struct FPlayerCustomizationPreset             Preset;                                            // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0068(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value;                           // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharacterPreviewerSCTBP_C_Set_Appearance_Preset) == 0x000008, "Wrong alignment on CharacterPreviewerSCTBP_C_Set_Appearance_Preset");
static_assert(sizeof(CharacterPreviewerSCTBP_C_Set_Appearance_Preset) == 0x0000A8, "Wrong size on CharacterPreviewerSCTBP_C_Set_Appearance_Preset");
static_assert(offsetof(CharacterPreviewerSCTBP_C_Set_Appearance_Preset, Preset) == 0x000000, "Member 'CharacterPreviewerSCTBP_C_Set_Appearance_Preset::Preset' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_Set_Appearance_Preset, Temp_int_Array_Index_Variable) == 0x000060, "Member 'CharacterPreviewerSCTBP_C_Set_Appearance_Preset::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_Set_Appearance_Preset, CallFunc_Map_Keys_Keys) == 0x000068, "Member 'CharacterPreviewerSCTBP_C_Set_Appearance_Preset::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_Set_Appearance_Preset, CallFunc_Array_Get_Item) == 0x000078, "Member 'CharacterPreviewerSCTBP_C_Set_Appearance_Preset::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_Set_Appearance_Preset, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'CharacterPreviewerSCTBP_C_Set_Appearance_Preset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_Set_Appearance_Preset, CallFunc_Conv_StringToName_ReturnValue) == 0x00008C, "Member 'CharacterPreviewerSCTBP_C_Set_Appearance_Preset::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_Set_Appearance_Preset, Temp_int_Loop_Counter_Variable) == 0x000094, "Member 'CharacterPreviewerSCTBP_C_Set_Appearance_Preset::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_Set_Appearance_Preset, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'CharacterPreviewerSCTBP_C_Set_Appearance_Preset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_Set_Appearance_Preset, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'CharacterPreviewerSCTBP_C_Set_Appearance_Preset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_Set_Appearance_Preset, CallFunc_Map_Find_Value) == 0x0000A0, "Member 'CharacterPreviewerSCTBP_C_Set_Appearance_Preset::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_Set_Appearance_Preset, CallFunc_Map_Find_ReturnValue) == 0x0000A4, "Member 'CharacterPreviewerSCTBP_C_Set_Appearance_Preset::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function CharacterPreviewerSCTBP.CharacterPreviewerSCTBP_C.SetEyeColor
// 0x0020 (0x0020 - 0x0000)
struct CharacterPreviewerSCTBP_C_SetEyeColor final
{
public:
	struct FPlayerCustomizationColorMaterial      EyeColor;                                          // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(CharacterPreviewerSCTBP_C_SetEyeColor) == 0x000008, "Wrong alignment on CharacterPreviewerSCTBP_C_SetEyeColor");
static_assert(sizeof(CharacterPreviewerSCTBP_C_SetEyeColor) == 0x000020, "Wrong size on CharacterPreviewerSCTBP_C_SetEyeColor");
static_assert(offsetof(CharacterPreviewerSCTBP_C_SetEyeColor, EyeColor) == 0x000000, "Member 'CharacterPreviewerSCTBP_C_SetEyeColor::EyeColor' has a wrong offset!");

// Function CharacterPreviewerSCTBP.CharacterPreviewerSCTBP_C.Set Skin Tone
// 0x0020 (0x0020 - 0x0000)
struct CharacterPreviewerSCTBP_C_Set_Skin_Tone final
{
public:
	struct FPlayerCustomizationColorMaterial      SkinTone;                                          // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(CharacterPreviewerSCTBP_C_Set_Skin_Tone) == 0x000008, "Wrong alignment on CharacterPreviewerSCTBP_C_Set_Skin_Tone");
static_assert(sizeof(CharacterPreviewerSCTBP_C_Set_Skin_Tone) == 0x000020, "Wrong size on CharacterPreviewerSCTBP_C_Set_Skin_Tone");
static_assert(offsetof(CharacterPreviewerSCTBP_C_Set_Skin_Tone, SkinTone) == 0x000000, "Member 'CharacterPreviewerSCTBP_C_Set_Skin_Tone::SkinTone' has a wrong offset!");

// Function CharacterPreviewerSCTBP.CharacterPreviewerSCTBP_C.GetMousePosition
// 0x00C0 (0x00C0 - 0x0000)
struct CharacterPreviewerSCTBP_C_GetMousePosition final
{
public:
	struct FVector2D                              ViewportCenterOffset;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsolePlatform_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisKeyValue_ReturnValue;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisKeyValue_ReturnValue_1;       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisKeyValue_ReturnValue_2;       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2DSquared_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisKeyValue_ReturnValue_3;       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2DSquared_ReturnValue_1;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMousePositionScaledByDPI_LocationX;    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePositionScaledByDPI_LocationY;    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMousePositionScaledByDPI_ReturnValue;  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2DSquared_ReturnValue_2;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_2;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharacterPreviewerSCTBP_C_GetMousePosition) == 0x000008, "Wrong alignment on CharacterPreviewerSCTBP_C_GetMousePosition");
static_assert(sizeof(CharacterPreviewerSCTBP_C_GetMousePosition) == 0x0000C0, "Wrong size on CharacterPreviewerSCTBP_C_GetMousePosition");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, ViewportCenterOffset) == 0x000000, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::ViewportCenterOffset' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, ReturnValue) == 0x000008, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, Temp_bool_Variable) == 0x000010, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, Temp_struct_Variable) == 0x000014, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, Temp_bool_Variable_1) == 0x00001C, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, Temp_bool_Variable_2) == 0x00001D, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_GetViewportScale_ReturnValue) == 0x000020, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_IsConsolePlatform_ReturnValue) == 0x000024, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_IsConsolePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_GetInputAxisKeyValue_ReturnValue) == 0x00002C, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_GetInputAxisKeyValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_GetInputAxisKeyValue_ReturnValue_1) == 0x000030, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_GetInputAxisKeyValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_GetInputAxisKeyValue_ReturnValue_2) == 0x000034, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_GetInputAxisKeyValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_MakeVector2D_ReturnValue) == 0x000038, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000040, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_VSize2DSquared_ReturnValue) == 0x000044, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_VSize2DSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_GetInputAxisKeyValue_ReturnValue_3) == 0x000048, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_GetInputAxisKeyValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_GetViewportSize_ReturnValue) == 0x00004C, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_MakeVector2D_ReturnValue_1) == 0x000054, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x00005C, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_VSize2DSquared_ReturnValue_1) == 0x000064, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_VSize2DSquared_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_GetPlayerController_ReturnValue) == 0x000068, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_Less_FloatFloat_ReturnValue) == 0x000070, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_GetMousePositionScaledByDPI_LocationX) == 0x000074, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_GetMousePositionScaledByDPI_LocationX' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_GetMousePositionScaledByDPI_LocationY) == 0x000078, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_GetMousePositionScaledByDPI_LocationY' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_GetMousePositionScaledByDPI_ReturnValue) == 0x00007C, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_GetMousePositionScaledByDPI_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_MakeVector2D_ReturnValue_2) == 0x000080, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, K2Node_Select_Default) == 0x000088, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000090, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000098, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, K2Node_Select_Default_1) == 0x0000A0, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_VSize2DSquared_ReturnValue_2) == 0x0000A8, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_VSize2DSquared_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0000AC, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, K2Node_Select_Default_2) == 0x0000B0, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_GetMousePosition, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x0000B8, "Member 'CharacterPreviewerSCTBP_C_GetMousePosition::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");

// Function CharacterPreviewerSCTBP.CharacterPreviewerSCTBP_C.AddCocktailGlass
// 0x00E0 (0x00E0 - 0x0000)
struct CharacterPreviewerSCTBP_C_AddCocktailGlass final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0044(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharacterPreviewerSCTBP_C_AddCocktailGlass) == 0x000010, "Wrong alignment on CharacterPreviewerSCTBP_C_AddCocktailGlass");
static_assert(sizeof(CharacterPreviewerSCTBP_C_AddCocktailGlass) == 0x0000E0, "Wrong size on CharacterPreviewerSCTBP_C_AddCocktailGlass");
static_assert(offsetof(CharacterPreviewerSCTBP_C_AddCocktailGlass, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'CharacterPreviewerSCTBP_C_AddCocktailGlass::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_AddCocktailGlass, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'CharacterPreviewerSCTBP_C_AddCocktailGlass::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_AddCocktailGlass, CallFunc_AddComponent_ReturnValue) == 0x000038, "Member 'CharacterPreviewerSCTBP_C_AddCocktailGlass::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_AddCocktailGlass, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'CharacterPreviewerSCTBP_C_AddCocktailGlass::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_AddCocktailGlass, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000044, "Member 'CharacterPreviewerSCTBP_C_AddCocktailGlass::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_AddCocktailGlass, CallFunc_SetStaticMesh_ReturnValue) == 0x0000D0, "Member 'CharacterPreviewerSCTBP_C_AddCocktailGlass::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterPreviewerSCTBP_C_AddCocktailGlass, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000D1, "Member 'CharacterPreviewerSCTBP_C_AddCocktailGlass::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function CharacterPreviewerSCTBP.CharacterPreviewerSCTBP_C.SetCharacterVisibility
// 0x0001 (0x0001 - 0x0000)
struct CharacterPreviewerSCTBP_C_SetCharacterVisibility final
{
public:
	bool                                          bVisibility;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharacterPreviewerSCTBP_C_SetCharacterVisibility) == 0x000001, "Wrong alignment on CharacterPreviewerSCTBP_C_SetCharacterVisibility");
static_assert(sizeof(CharacterPreviewerSCTBP_C_SetCharacterVisibility) == 0x000001, "Wrong size on CharacterPreviewerSCTBP_C_SetCharacterVisibility");
static_assert(offsetof(CharacterPreviewerSCTBP_C_SetCharacterVisibility, bVisibility) == 0x000000, "Member 'CharacterPreviewerSCTBP_C_SetCharacterVisibility::bVisibility' has a wrong offset!");

}

