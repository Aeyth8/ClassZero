#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AquaticLibrary

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AquaticLibrary.BP_AquaticLibrary_C.OnWorldOriginChanged
// 0x0060 (0x0060 - 0x0000)
struct BP_AquaticLibrary_C_OnWorldOriginChanged final
{
public:
	struct FIntVector                             Old_Origin;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             New_Origin;                                        // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0020(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_AqiatocWorld_C>   K2Node_DynamicCast_AsBPI_Aqiatoc_World;            // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AquaticLibrary_C_OnWorldOriginChanged) == 0x000008, "Wrong alignment on BP_AquaticLibrary_C_OnWorldOriginChanged");
static_assert(sizeof(BP_AquaticLibrary_C_OnWorldOriginChanged) == 0x000060, "Wrong size on BP_AquaticLibrary_C_OnWorldOriginChanged");
static_assert(offsetof(BP_AquaticLibrary_C_OnWorldOriginChanged, Old_Origin) == 0x000000, "Member 'BP_AquaticLibrary_C_OnWorldOriginChanged::Old_Origin' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_OnWorldOriginChanged, New_Origin) == 0x00000C, "Member 'BP_AquaticLibrary_C_OnWorldOriginChanged::New_Origin' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_OnWorldOriginChanged, __WorldContext) == 0x000018, "Member 'BP_AquaticLibrary_C_OnWorldOriginChanged::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_OnWorldOriginChanged, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000020, "Member 'BP_AquaticLibrary_C_OnWorldOriginChanged::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_OnWorldOriginChanged, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_AquaticLibrary_C_OnWorldOriginChanged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_OnWorldOriginChanged, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_AquaticLibrary_C_OnWorldOriginChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_OnWorldOriginChanged, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_AquaticLibrary_C_OnWorldOriginChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_OnWorldOriginChanged, K2Node_DynamicCast_AsBPI_Aqiatoc_World) == 0x000040, "Member 'BP_AquaticLibrary_C_OnWorldOriginChanged::K2Node_DynamicCast_AsBPI_Aqiatoc_World' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_OnWorldOriginChanged, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_AquaticLibrary_C_OnWorldOriginChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_OnWorldOriginChanged, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_AquaticLibrary_C_OnWorldOriginChanged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_OnWorldOriginChanged, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_AquaticLibrary_C_OnWorldOriginChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_OnWorldOriginChanged, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_AquaticLibrary_C_OnWorldOriginChanged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AquaticLibrary.BP_AquaticLibrary_C.UpdateHoleParameters
// 0x00C8 (0x00C8 - 0x0000)
struct BP_AquaticLibrary_C_UpdateHoleParameters final
{
public:
	struct FVector                                Position;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              Size;                                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LRotation;                                         // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LPosition;                                         // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_1;         // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AquaticLibrary_C_UpdateHoleParameters) == 0x000008, "Wrong alignment on BP_AquaticLibrary_C_UpdateHoleParameters");
static_assert(sizeof(BP_AquaticLibrary_C_UpdateHoleParameters) == 0x0000C8, "Wrong size on BP_AquaticLibrary_C_UpdateHoleParameters");
static_assert(offsetof(BP_AquaticLibrary_C_UpdateHoleParameters, Position) == 0x000000, "Member 'BP_AquaticLibrary_C_UpdateHoleParameters::Position' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_UpdateHoleParameters, Rotation) == 0x00000C, "Member 'BP_AquaticLibrary_C_UpdateHoleParameters::Rotation' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_UpdateHoleParameters, Size) == 0x000018, "Member 'BP_AquaticLibrary_C_UpdateHoleParameters::Size' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_UpdateHoleParameters, Index_0) == 0x000020, "Member 'BP_AquaticLibrary_C_UpdateHoleParameters::Index_0' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_UpdateHoleParameters, __WorldContext) == 0x000028, "Member 'BP_AquaticLibrary_C_UpdateHoleParameters::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_UpdateHoleParameters, LRotation) == 0x000030, "Member 'BP_AquaticLibrary_C_UpdateHoleParameters::LRotation' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_UpdateHoleParameters, LPosition) == 0x000040, "Member 'BP_AquaticLibrary_C_UpdateHoleParameters::LPosition' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_UpdateHoleParameters, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'BP_AquaticLibrary_C_UpdateHoleParameters::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_UpdateHoleParameters, K2Node_SwitchInteger_CmpSuccess) == 0x000051, "Member 'BP_AquaticLibrary_C_UpdateHoleParameters::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_UpdateHoleParameters, CallFunc_BreakVector2D_X) == 0x000054, "Member 'BP_AquaticLibrary_C_UpdateHoleParameters::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_UpdateHoleParameters, CallFunc_BreakVector2D_Y) == 0x000058, "Member 'BP_AquaticLibrary_C_UpdateHoleParameters::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_UpdateHoleParameters, CallFunc_GetRightVector_ReturnValue) == 0x00005C, "Member 'BP_AquaticLibrary_C_UpdateHoleParameters::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_UpdateHoleParameters, CallFunc_GetForwardVector_ReturnValue) == 0x000068, "Member 'BP_AquaticLibrary_C_UpdateHoleParameters::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_UpdateHoleParameters, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000074, "Member 'BP_AquaticLibrary_C_UpdateHoleParameters::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_UpdateHoleParameters, CallFunc_Divide_VectorFloat_ReturnValue_1) == 0x000080, "Member 'BP_AquaticLibrary_C_UpdateHoleParameters::CallFunc_Divide_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_UpdateHoleParameters, CallFunc_BreakVector_X) == 0x00008C, "Member 'BP_AquaticLibrary_C_UpdateHoleParameters::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_UpdateHoleParameters, CallFunc_BreakVector_Y) == 0x000090, "Member 'BP_AquaticLibrary_C_UpdateHoleParameters::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_UpdateHoleParameters, CallFunc_BreakVector_Z) == 0x000094, "Member 'BP_AquaticLibrary_C_UpdateHoleParameters::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_UpdateHoleParameters, CallFunc_BreakVector_X_1) == 0x000098, "Member 'BP_AquaticLibrary_C_UpdateHoleParameters::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_UpdateHoleParameters, CallFunc_BreakVector_Y_1) == 0x00009C, "Member 'BP_AquaticLibrary_C_UpdateHoleParameters::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_UpdateHoleParameters, CallFunc_BreakVector_Z_1) == 0x0000A0, "Member 'BP_AquaticLibrary_C_UpdateHoleParameters::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_UpdateHoleParameters, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0000A4, "Member 'BP_AquaticLibrary_C_UpdateHoleParameters::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_UpdateHoleParameters, K2Node_MakeStruct_LinearColor) == 0x0000B4, "Member 'BP_AquaticLibrary_C_UpdateHoleParameters::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function BP_AquaticLibrary.BP_AquaticLibrary_C.CutHole
// 0x00C0 (0x00C0 - 0x0000)
struct BP_AquaticLibrary_C_CutHole final
{
public:
	int32                                         HoleIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              HioleOffset;                                       // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              HoleSize;                                          // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AquaticLibrary_C_CutHole) == 0x000010, "Wrong alignment on BP_AquaticLibrary_C_CutHole");
static_assert(sizeof(BP_AquaticLibrary_C_CutHole) == 0x0000C0, "Wrong size on BP_AquaticLibrary_C_CutHole");
static_assert(offsetof(BP_AquaticLibrary_C_CutHole, HoleIndex) == 0x000000, "Member 'BP_AquaticLibrary_C_CutHole::HoleIndex' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_CutHole, Transform) == 0x000010, "Member 'BP_AquaticLibrary_C_CutHole::Transform' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_CutHole, HioleOffset) == 0x000040, "Member 'BP_AquaticLibrary_C_CutHole::HioleOffset' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_CutHole, HoleSize) == 0x000048, "Member 'BP_AquaticLibrary_C_CutHole::HoleSize' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_CutHole, __WorldContext) == 0x000050, "Member 'BP_AquaticLibrary_C_CutHole::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_CutHole, CallFunc_Greater_IntInt_ReturnValue) == 0x000058, "Member 'BP_AquaticLibrary_C_CutHole::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_CutHole, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x00005C, "Member 'BP_AquaticLibrary_C_CutHole::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_CutHole, CallFunc_BreakTransform_Location) == 0x000068, "Member 'BP_AquaticLibrary_C_CutHole::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_CutHole, CallFunc_BreakTransform_Rotation) == 0x000074, "Member 'BP_AquaticLibrary_C_CutHole::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_CutHole, CallFunc_BreakTransform_Scale) == 0x000080, "Member 'BP_AquaticLibrary_C_CutHole::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_CutHole, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x00008C, "Member 'BP_AquaticLibrary_C_CutHole::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_CutHole, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000098, "Member 'BP_AquaticLibrary_C_CutHole::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_CutHole, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A0, "Member 'BP_AquaticLibrary_C_CutHole::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticLibrary_C_CutHole, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x0000AC, "Member 'BP_AquaticLibrary_C_CutHole::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");

}

