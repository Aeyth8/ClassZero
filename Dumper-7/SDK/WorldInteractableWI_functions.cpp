#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WorldInteractableWI

#include "Basic.hpp"

#include "WorldInteractableWI_classes.hpp"
#include "WorldInteractableWI_parameters.hpp"


namespace SDK
{

// Function WorldInteractableWI.WorldInteractableWI_C.ExecuteUbergraph_WorldInteractableWI
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWorldInteractableWI_C::ExecuteUbergraph_WorldInteractableWI(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldInteractableWI_C", "ExecuteUbergraph_WorldInteractableWI");

	Params::WorldInteractableWI_C_ExecuteUbergraph_WorldInteractableWI Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WorldInteractableWI.WorldInteractableWI_C.Add Entry
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UPower*                           Power                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWorldInteractableWI_C::Add_Entry(const struct FKey& Key, class UPower* Power)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldInteractableWI_C", "Add Entry");

	Params::WorldInteractableWI_C_Add_Entry Parms{};

	Parms.Key = std::move(Key);
	Parms.Power = Power;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WorldInteractableWI.WorldInteractableWI_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWorldInteractableWI_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldInteractableWI_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WorldInteractableWI.WorldInteractableWI_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWorldInteractableWI_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldInteractableWI_C", "Tick");

	Params::WorldInteractableWI_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WorldInteractableWI.WorldInteractableWI_C.GetSpecDescriptionAndKey
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             Description                                            (Parm, OutParm)
// class FText                             Key                                                    (Parm, OutParm)

void UWorldInteractableWI_C::GetSpecDescriptionAndKey(class FText* Description, class FText* Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldInteractableWI_C", "GetSpecDescriptionAndKey");

	Params::WorldInteractableWI_C_GetSpecDescriptionAndKey Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Description != nullptr)
		*Description = std::move(Parms.Description);

	if (Key != nullptr)
		*Key = std::move(Parms.Key);
}

}

