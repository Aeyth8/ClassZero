#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WorldOxygenWI

#include "Basic.hpp"

#include "WorldOxygenWI_classes.hpp"
#include "WorldOxygenWI_parameters.hpp"


namespace SDK
{

// Function WorldOxygenWI.WorldOxygenWI_C.ExecuteUbergraph_WorldOxygenWI
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWorldOxygenWI_C::ExecuteUbergraph_WorldOxygenWI(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldOxygenWI_C", "ExecuteUbergraph_WorldOxygenWI");

	Params::WorldOxygenWI_C_ExecuteUbergraph_WorldOxygenWI Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WorldOxygenWI.WorldOxygenWI_C.Animate World Oxygen
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Transfer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWorldOxygenWI_C::Animate_World_Oxygen(bool Transfer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldOxygenWI_C", "Animate World Oxygen");

	Params::WorldOxygenWI_C_Animate_World_Oxygen Parms{};

	Parms.Transfer = Transfer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WorldOxygenWI.WorldOxygenWI_C.Set Color On Global Oxygen
// (BlueprintCallable, BlueprintEvent)

void UWorldOxygenWI_C::Set_Color_On_Global_Oxygen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldOxygenWI_C", "Set Color On Global Oxygen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WorldOxygenWI.WorldOxygenWI_C.Set Color On Oxygen Warning
// (BlueprintCallable, BlueprintEvent)

void UWorldOxygenWI_C::Set_Color_On_Oxygen_Warning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldOxygenWI_C", "Set Color On Oxygen Warning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WorldOxygenWI.WorldOxygenWI_C.Anim Sabotaged
// (BlueprintCallable, BlueprintEvent)

void UWorldOxygenWI_C::Anim_Sabotaged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldOxygenWI_C", "Anim Sabotaged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WorldOxygenWI.WorldOxygenWI_C.UpdateWorldOxygen
// (BlueprintCallable, BlueprintEvent)

void UWorldOxygenWI_C::UpdateWorldOxygen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldOxygenWI_C", "UpdateWorldOxygen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WorldOxygenWI.WorldOxygenWI_C.SetWorldOxygenPercent
// (BlueprintCallable, BlueprintEvent)

void UWorldOxygenWI_C::SetWorldOxygenPercent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldOxygenWI_C", "SetWorldOxygenPercent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WorldOxygenWI.WorldOxygenWI_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWorldOxygenWI_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldOxygenWI_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WorldOxygenWI.WorldOxygenWI_C.SetColorForElements
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSlateColor                      InColorAndOpacity                                      (BlueprintVisible, BlueprintReadOnly, Parm)

void UWorldOxygenWI_C::SetColorForElements(const struct FSlateColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldOxygenWI_C", "SetColorForElements");

	Params::WorldOxygenWI_C_SetColorForElements Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	UObject::ProcessEvent(Func, &Parms);
}

}

