#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OxygenGeneratorBP

#include "Basic.hpp"

#include "E_OxygenGeneratorFailstates_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass OxygenGeneratorBP.OxygenGeneratorBP_C
// 0x0130 (0x0350 - 0x0220)
class AOxygenGeneratorBP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UControllerHapticsComponent*            ControllerHaptics;                                 // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   XrayBillboard;                                     // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   XrayMesh;                                          // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SabotageButton;                                    // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   OutlinePostProcessVolume;                          // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractionProgressBarCreator*         InteractionProgressBarCreatorSabotage;             // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractionComponent*                  InteractionSabotage;                               // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UContextStaticMeshComponent*            ContextStaticMeshSabotage;                         // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal;                                             // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Light;                                          // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class Ubpc_ac_Opener_C*                       bpc_ac_Opener;                                     // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Oxygen_Leak;                                       // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak;                                                // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Door_Top;                                          // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Base;                                              // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TimelineLids_Alpha_24B0345E4BB887E52707C5834DE74BDA; // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TimelineLids__Direction_24B0345E4BB887E52707C5834DE74BDA; // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TimelineLids;                                      // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSabotaged;                                        // 0x02C0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          bStartLidOpen;                                     // 0x02C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C2[0x2];                                      // 0x02C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LidOpenOffset;                                     // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Sabotaged;                                         // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Repaired;                                          // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Default;                                           // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ElementIndex;                                      // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOpen;                                             // 0x02E4(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_2E5[0x3];                                      // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            LidsMove;                                          // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRepaired;                                         // 0x02F0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          bOpening;                                          // 0x02F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F2[0x6];                                      // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACoopActorSCT_C*                        CoopActor;                                         // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GlobalOxygenToGrantOnRepair;                       // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lid_Z_Position;                                    // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GlobalOxygenToRemoveOnFailed;                      // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GlobalOxygenToRemoveOnSabotaged;                   // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFailed;                                           // 0x0310(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	E_OxygenGeneratorFailstates                   Failstates;                                        // 0x0311(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_312[0x6];                                      // 0x0312(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          AudioStartSabotage;                                // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          AudioStopSabotage;                                 // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Sabotaged_UI_Message;                              // 0x0328(0x0018)(Edit, BlueprintVisible)
	class ACharacterSCTBP_C*                      SabotagingActor;                                   // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSabotaging;                                       // 0x0348(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          bRepairing;                                        // 0x0349(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_34A[0x2];                                      // 0x034A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Occlusion_Refresh_Interval;                        // 0x034C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_OxygenGeneratorBP(int32 EntryPoint);
	void BndEvt__ContextStaticMeshSabotage_K2Node_ComponentBoundEvent_5_PriorityDelegate__DelegateSignature();
	void BndEvt__ContextStaticMeshSabotage_K2Node_ComponentBoundEvent_4_PriorityDelegate__DelegateSignature();
	void Sabotage();
	void BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_3_InteractionSuccessfulDelegate__DelegateSignature();
	void BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature(const struct FInteractionPayload& Payload);
	void BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_0_InteractionEndedDelegate__DelegateSignature(const struct FInteractionPayload& Payload, bool WasCancelled);
	void Audio_Sabotage_Stop();
	void Audio_Sabotage_Start();
	void Audio_Sabotaged_UI_Notification();
	void Display_Warning_Message();
	void BndEvt__bpc_ac_Opener_K2Node_ComponentBoundEvent_2_OnOpenStateChanged__DelegateSignature(bool IsOpening);
	void BndEvt__Box_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Multicast_Event_Close_Lids();
	void Multicast_Event_Open_Lids();
	void K2_OnReset();
	void ReceiveBeginPlay();
	void Audio_SabotagedOrFailed();
	void Audio_Repaired();
	void Audio_Idle_Neutral();
	void Audio_Lid_Move_Stop();
	void Audio_Lid_Move();
	void TimelineLids__UpdateFunc();
	void TimelineLids__FinishedFunc();
	void UserConstructionScript();
	void Init();
	void OnRep_bSabotaged();
	void OnRep_bOpen();
	void Set_Open(bool Open);
	void Event_Open_Lids();
	void Event_Close_Lids();
	void MoveLids(float Alpha);
	void Event_Sabotaged();
	void Event_Repaired();
	void Set_Lids(bool Open);
	void Set_Repaired_StateCosmetic(bool Repaired_0);
	void Set_Sabotaged_or_Failed_State_Cosmetic(bool Sabotaged_0);
	void OnRep_bRepaired();
	void Set_Timeline_Time();
	void GetIsNoOneInside(bool* NoOneInside);
	void OnRep_bFailed();
	void Display_Sabotaged_UI();
	void Make_Interactions_Unavailable();
	void Event_Failed();
	void Calculate_Oxygen_Percentage_From_Seconds(float Oxygen_Amount_In_Seconds, float* Oxygen_Amount_In_Percentage);
	void PlayerStateAddGeneratorSabotaged();
	void RenderXray(bool On);
	void OnRep_bSabotaging();
	void OnRep_bRepairing();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"OxygenGeneratorBP_C">();
	}
	static class AOxygenGeneratorBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AOxygenGeneratorBP_C>();
	}
};
static_assert(alignof(AOxygenGeneratorBP_C) == 0x000008, "Wrong alignment on AOxygenGeneratorBP_C");
static_assert(sizeof(AOxygenGeneratorBP_C) == 0x000350, "Wrong size on AOxygenGeneratorBP_C");
static_assert(offsetof(AOxygenGeneratorBP_C, UberGraphFrame) == 0x000220, "Member 'AOxygenGeneratorBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, ControllerHaptics) == 0x000228, "Member 'AOxygenGeneratorBP_C::ControllerHaptics' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, XrayBillboard) == 0x000230, "Member 'AOxygenGeneratorBP_C::XrayBillboard' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, XrayMesh) == 0x000238, "Member 'AOxygenGeneratorBP_C::XrayMesh' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, SabotageButton) == 0x000240, "Member 'AOxygenGeneratorBP_C::SabotageButton' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, OutlinePostProcessVolume) == 0x000248, "Member 'AOxygenGeneratorBP_C::OutlinePostProcessVolume' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, InteractionProgressBarCreatorSabotage) == 0x000250, "Member 'AOxygenGeneratorBP_C::InteractionProgressBarCreatorSabotage' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, InteractionSabotage) == 0x000258, "Member 'AOxygenGeneratorBP_C::InteractionSabotage' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, ContextStaticMeshSabotage) == 0x000260, "Member 'AOxygenGeneratorBP_C::ContextStaticMeshSabotage' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, Decal) == 0x000268, "Member 'AOxygenGeneratorBP_C::Decal' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, SM_Light) == 0x000270, "Member 'AOxygenGeneratorBP_C::SM_Light' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, bpc_ac_Opener) == 0x000278, "Member 'AOxygenGeneratorBP_C::bpc_ac_Opener' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, Box) == 0x000280, "Member 'AOxygenGeneratorBP_C::Box' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, Root) == 0x000288, "Member 'AOxygenGeneratorBP_C::Root' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, Oxygen_Leak) == 0x000290, "Member 'AOxygenGeneratorBP_C::Oxygen_Leak' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, Ak) == 0x000298, "Member 'AOxygenGeneratorBP_C::Ak' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, Door_Top) == 0x0002A0, "Member 'AOxygenGeneratorBP_C::Door_Top' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, Base) == 0x0002A8, "Member 'AOxygenGeneratorBP_C::Base' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, TimelineLids_Alpha_24B0345E4BB887E52707C5834DE74BDA) == 0x0002B0, "Member 'AOxygenGeneratorBP_C::TimelineLids_Alpha_24B0345E4BB887E52707C5834DE74BDA' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, TimelineLids__Direction_24B0345E4BB887E52707C5834DE74BDA) == 0x0002B4, "Member 'AOxygenGeneratorBP_C::TimelineLids__Direction_24B0345E4BB887E52707C5834DE74BDA' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, TimelineLids) == 0x0002B8, "Member 'AOxygenGeneratorBP_C::TimelineLids' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, bSabotaged) == 0x0002C0, "Member 'AOxygenGeneratorBP_C::bSabotaged' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, bStartLidOpen) == 0x0002C1, "Member 'AOxygenGeneratorBP_C::bStartLidOpen' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, LidOpenOffset) == 0x0002C4, "Member 'AOxygenGeneratorBP_C::LidOpenOffset' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, Sabotaged) == 0x0002C8, "Member 'AOxygenGeneratorBP_C::Sabotaged' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, Repaired) == 0x0002D0, "Member 'AOxygenGeneratorBP_C::Repaired' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, Default) == 0x0002D8, "Member 'AOxygenGeneratorBP_C::Default' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, ElementIndex) == 0x0002E0, "Member 'AOxygenGeneratorBP_C::ElementIndex' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, bOpen) == 0x0002E4, "Member 'AOxygenGeneratorBP_C::bOpen' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, LidsMove) == 0x0002E8, "Member 'AOxygenGeneratorBP_C::LidsMove' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, bRepaired) == 0x0002F0, "Member 'AOxygenGeneratorBP_C::bRepaired' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, bOpening) == 0x0002F1, "Member 'AOxygenGeneratorBP_C::bOpening' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, CoopActor) == 0x0002F8, "Member 'AOxygenGeneratorBP_C::CoopActor' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, GlobalOxygenToGrantOnRepair) == 0x000300, "Member 'AOxygenGeneratorBP_C::GlobalOxygenToGrantOnRepair' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, Lid_Z_Position) == 0x000304, "Member 'AOxygenGeneratorBP_C::Lid_Z_Position' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, GlobalOxygenToRemoveOnFailed) == 0x000308, "Member 'AOxygenGeneratorBP_C::GlobalOxygenToRemoveOnFailed' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, GlobalOxygenToRemoveOnSabotaged) == 0x00030C, "Member 'AOxygenGeneratorBP_C::GlobalOxygenToRemoveOnSabotaged' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, bFailed) == 0x000310, "Member 'AOxygenGeneratorBP_C::bFailed' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, Failstates) == 0x000311, "Member 'AOxygenGeneratorBP_C::Failstates' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, AudioStartSabotage) == 0x000318, "Member 'AOxygenGeneratorBP_C::AudioStartSabotage' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, AudioStopSabotage) == 0x000320, "Member 'AOxygenGeneratorBP_C::AudioStopSabotage' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, Sabotaged_UI_Message) == 0x000328, "Member 'AOxygenGeneratorBP_C::Sabotaged_UI_Message' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, SabotagingActor) == 0x000340, "Member 'AOxygenGeneratorBP_C::SabotagingActor' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, bSabotaging) == 0x000348, "Member 'AOxygenGeneratorBP_C::bSabotaging' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, bRepairing) == 0x000349, "Member 'AOxygenGeneratorBP_C::bRepairing' has a wrong offset!");
static_assert(offsetof(AOxygenGeneratorBP_C, Occlusion_Refresh_Interval) == 0x00034C, "Member 'AOxygenGeneratorBP_C::Occlusion_Refresh_Interval' has a wrong offset!");

}

