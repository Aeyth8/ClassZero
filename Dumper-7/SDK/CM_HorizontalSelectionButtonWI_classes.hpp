#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CM_HorizontalSelectionButtonWI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SCT_classes.hpp"
#include "CM_E_MenuAreas_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass CM_HorizontalSelectionButtonWI.CM_HorizontalSelectionButtonWI_C
// 0x0350 (0x05D8 - 0x0288)
class UCM_HorizontalSelectionButtonWI_C : public USubMenuSelectionButtonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0288(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UWidgetAnimation*                       SelectedButton;                                    // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_State;                                       // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnClicked;                                         // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnPressed_0;                                       // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnReleased;                                        // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnHovered;                                         // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnUnhovered;                                       // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          MoveMouseToGamepadFocus;                           // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FButtonStyle                           Style;                                             // 0x02F8(0x0278)(Edit, BlueprintVisible)
	struct FLinearColor                           ColourAndOpacity;                                  // 0x0570(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BackgroundColor;                                   // 0x0580(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ButtonText;                                        // 0x0590(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          Selected;                                          // 0x05A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A9[0x3];                                      // 0x05A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ColorTest;                                         // 0x05AC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BC[0x4];                                      // 0x05BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnGamepadButtonPressed;                            // 0x05C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         ButtonWidth;                                       // 0x05D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void OnClicked__DelegateSignature();
	void OnPressed_0__DelegateSignature(ECM_E_MenuAreas MenuArea);
	void OnReleased__DelegateSignature(ECM_E_MenuAreas MenuArea);
	void OnHovered__DelegateSignature(ECM_E_MenuAreas MenuArea);
	void OnUnhovered__DelegateSignature();
	void OnGamepadButtonPressed__DelegateSignature();
	void ExecuteUbergraph_CM_HorizontalSelectionButtonWI(int32 EntryPoint);
	void Animate(EUMGSequencePlayMode PlayMode);
	void Set_Normal_Cosmetics();
	void Set_Selected_Cosmetics();
	void Set_Pressed_Cosmetics();
	void Set_Hovered_Cosmetics();
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void BndEvt__GamepadButton_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__GamepadButton_K2Node_ComponentBoundEvent_2_OnButtonReleasedEvent__DelegateSignature();
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	void PreConstruct(bool IsDesignTime);
	void BndEvt__GamepadButton_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__GamepadButton_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature();
	void SetMouseToFocus();
	void UpdateFocusHandler();
	void Update_State_Cosmetics(const struct FSlateBrush& ImageBrush, const struct FLinearColor& TextColor);
	void GamepadButtonPressed();
	void GamepadButtonReleased();
	void SetDefaultImageSettings(const struct FMargin& Padding_0, const struct FVector2D& ImageSize);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CM_HorizontalSelectionButtonWI_C">();
	}
	static class UCM_HorizontalSelectionButtonWI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCM_HorizontalSelectionButtonWI_C>();
	}
};
static_assert(alignof(UCM_HorizontalSelectionButtonWI_C) == 0x000008, "Wrong alignment on UCM_HorizontalSelectionButtonWI_C");
static_assert(sizeof(UCM_HorizontalSelectionButtonWI_C) == 0x0005D8, "Wrong size on UCM_HorizontalSelectionButtonWI_C");
static_assert(offsetof(UCM_HorizontalSelectionButtonWI_C, UberGraphFrame) == 0x000288, "Member 'UCM_HorizontalSelectionButtonWI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCM_HorizontalSelectionButtonWI_C, SelectedButton) == 0x000290, "Member 'UCM_HorizontalSelectionButtonWI_C::SelectedButton' has a wrong offset!");
static_assert(offsetof(UCM_HorizontalSelectionButtonWI_C, Image_State) == 0x000298, "Member 'UCM_HorizontalSelectionButtonWI_C::Image_State' has a wrong offset!");
static_assert(offsetof(UCM_HorizontalSelectionButtonWI_C, OnClicked) == 0x0002A0, "Member 'UCM_HorizontalSelectionButtonWI_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UCM_HorizontalSelectionButtonWI_C, OnPressed_0) == 0x0002B0, "Member 'UCM_HorizontalSelectionButtonWI_C::OnPressed_0' has a wrong offset!");
static_assert(offsetof(UCM_HorizontalSelectionButtonWI_C, OnReleased) == 0x0002C0, "Member 'UCM_HorizontalSelectionButtonWI_C::OnReleased' has a wrong offset!");
static_assert(offsetof(UCM_HorizontalSelectionButtonWI_C, OnHovered) == 0x0002D0, "Member 'UCM_HorizontalSelectionButtonWI_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UCM_HorizontalSelectionButtonWI_C, OnUnhovered) == 0x0002E0, "Member 'UCM_HorizontalSelectionButtonWI_C::OnUnhovered' has a wrong offset!");
static_assert(offsetof(UCM_HorizontalSelectionButtonWI_C, MoveMouseToGamepadFocus) == 0x0002F0, "Member 'UCM_HorizontalSelectionButtonWI_C::MoveMouseToGamepadFocus' has a wrong offset!");
static_assert(offsetof(UCM_HorizontalSelectionButtonWI_C, Style) == 0x0002F8, "Member 'UCM_HorizontalSelectionButtonWI_C::Style' has a wrong offset!");
static_assert(offsetof(UCM_HorizontalSelectionButtonWI_C, ColourAndOpacity) == 0x000570, "Member 'UCM_HorizontalSelectionButtonWI_C::ColourAndOpacity' has a wrong offset!");
static_assert(offsetof(UCM_HorizontalSelectionButtonWI_C, BackgroundColor) == 0x000580, "Member 'UCM_HorizontalSelectionButtonWI_C::BackgroundColor' has a wrong offset!");
static_assert(offsetof(UCM_HorizontalSelectionButtonWI_C, ButtonText) == 0x000590, "Member 'UCM_HorizontalSelectionButtonWI_C::ButtonText' has a wrong offset!");
static_assert(offsetof(UCM_HorizontalSelectionButtonWI_C, Selected) == 0x0005A8, "Member 'UCM_HorizontalSelectionButtonWI_C::Selected' has a wrong offset!");
static_assert(offsetof(UCM_HorizontalSelectionButtonWI_C, ColorTest) == 0x0005AC, "Member 'UCM_HorizontalSelectionButtonWI_C::ColorTest' has a wrong offset!");
static_assert(offsetof(UCM_HorizontalSelectionButtonWI_C, OnGamepadButtonPressed) == 0x0005C0, "Member 'UCM_HorizontalSelectionButtonWI_C::OnGamepadButtonPressed' has a wrong offset!");
static_assert(offsetof(UCM_HorizontalSelectionButtonWI_C, ButtonWidth) == 0x0005D0, "Member 'UCM_HorizontalSelectionButtonWI_C::ButtonWidth' has a wrong offset!");

}

