#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AAS_V2Base

#include "Basic.hpp"

#include "Struct_AAS_AsteroidInstanceData_structs.hpp"
#include "Enum_AAS_Status_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Struct_AAS_AsteroidDefaults_structs.hpp"
#include "Struct_AAS_SpawnArrayData_structs.hpp"
#include "Struct_AAS_Chunk_structs.hpp"
#include "Struct_AAS_AsteroidOption_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AAS_V2Base.BP_AAS_V2Base_C
// 0x02D0 (0x04F0 - 0x0220)
class ABP_AAS_V2Base_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    IconBillboard;                                     // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DebugScene;                                        // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          StartOnBeginPlay;                                  // 0x0240(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SystemId;                                          // 0x0244(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cast_Shadow;                                       // 0x024C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          VisibleWhileGenerating;                            // 0x024D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24E[0x2];                                      // 0x024E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Generation_Iterations_Per_Tick;                    // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowDebugIndicatorsInGame;                         // 0x0254(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enable_Debug_Prints;                               // 0x0255(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_256[0x2];                                      // 0x0256(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UInstancedStaticMeshComponent*>  ISMCollection;                                     // 0x0258(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         Generation_Seed;                                   // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          GenerationStream;                                  // 0x026C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor)
	int32                                         Randomness_Seed;                                   // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          RandomnessStream;                                  // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor)
	TArray<struct FStruct_AAS_AsteroidOption>     AsteroidOptions;                                   // 0x0280(0x0010)(Edit, BlueprintVisible)
	TArray<struct FStruct_AAS_SpawnArrayData>     InstanceDataIndexArray;                            // 0x0290(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Use_Noise;                                         // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Invert_Noise;                                      // 0x02A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A2[0x6];                                      // 0x02A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnFinishedGeneration;                              // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnChunkUpdates;                                    // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnFinishedSpawn;                                   // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnResetCompleted;                                  // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnFinishedSetup;                                   // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FTimerHandle                           GenerationTimerHandle;                             // 0x02F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              GenerationStartTime;                               // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	Enum_AAS_Status                               SystemStatus;                                      // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              DebugTaskLoopTime;                                 // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_318[0x8];                                      // 0x0318(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_AAS_AsteroidDefaults           CurrentAsteroidDefaults;                           // 0x0320(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentOptionIndex;                                // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSystemEnabled;                                    // 0x0374(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_375[0x3];                                      // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Current_Asteroid_Index;                            // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_AAS_AsteroidInstanceData> Asteroid_Instance_Data;                            // 0x0380(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<struct FIntVector, struct FStruct_AAS_Chunk> ChunkData;                                         // 0x0390(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FIntVector                             Current_Asteroid_Chunk_Index;                      // 0x03E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_AAS_Chunk                      CurrentAsteroidChunk;                              // 0x03F0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          Use_Advanced_Noise;                                // 0x0410(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_411[0x3];                                      // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NoiseStrength;                                     // 0x0414(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable_Noise_Shrinking;                            // 0x0418(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_419[0x3];                                      // 0x0419(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NoiseShrinkingStrength;                            // 0x041C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NoiseShrinkingRandomness;                          // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NoiseRandomness;                                   // 0x0424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NoiseParameters;                                   // 0x0428(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Noise_Offset;                                      // 0x0434(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable_Rotation;                                   // 0x0440(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_441[0x3];                                      // 0x0441(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rotation_Rate;                                     // 0x0444(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Rotation_Pivot;                                    // 0x0450(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotation_Update_Only_if_Rendered;                  // 0x045C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45D[0x3];                                      // 0x045D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           ChunkUpdateTimerHandle;                            // 0x0460(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UBPC_AAS_Follower_C*>            AttachedChunkFollower;                             // 0x0468(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<struct FIntVector>                     TempNewChunkKeys;                                  // 0x0478(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          EnableChunkSystem;                                 // 0x0488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_489[0x3];                                      // 0x0489(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Chunk_Size;                                        // 0x048C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ChunkSpawnDistance;                                // 0x0498(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Chunk_Updates_Per_Tick;                            // 0x049C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable_System_Updates;                             // 0x04A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A1[0x3];                                      // 0x04A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         System_Update_Time;                                // 0x04A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChunksNeedUpdate;                                  // 0x04A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FIntVector>                     ActiveChunkKeys;                                   // 0x04B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Generation_Iteration_Delay;                        // 0x04C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Spawn_Iterations_Per_Tick;                         // 0x04C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Spawn_Iteration_Delay;                             // 0x04C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Collision_Type;                                    // 0x04CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CD[0x3];                                      // 0x04CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StartCullDistance;                                 // 0x04D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EndCullDistance;                                   // 0x04D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableDebugDraws;                                  // 0x04D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D9[0x7];                                      // 0x04D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnFinishChunkUpdates;                              // 0x04E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnFinishedGeneration__DelegateSignature(class ABP_AAS_V2Base_C* Sender);
	void OnChunkUpdates__DelegateSignature(class ABP_AAS_V2Base_C* Sender);
	void OnFinishedSpawn__DelegateSignature(class ABP_AAS_V2Base_C* Sender);
	void OnResetCompleted__DelegateSignature(class ABP_AAS_V2Base_C* Sender);
	void OnFinishedSetup__DelegateSignature(class ABP_AAS_V2Base_C* Sender);
	void OnFinishChunkUpdates__DelegateSignature(class ABP_AAS_V2Base_C* Sender);
	void ExecuteUbergraph_BP_AAS_V2Base(int32 EntryPoint);
	void Generate_Instances();
	void Generate_Asteroid_Chunks();
	void Start_System();
	void ReceiveBeginPlay();
	void Finish_Update_Chunks_Task();
	void Do_Update_Chunks_Task();
	void Finish_Update_New_Temp_Chunks();
	void Update_New_Temp_Chunks();
	void Finish_Chunk_Updates();
	void System_Called_Chunk_Update();
	void Do_Chunk_Updates();
	void Detach_Follower(class UBPC_AAS_Follower_C* Follower);
	void BeginPlay_ChunkSystem();
	void Follower_Did_Update(class UBPC_AAS_Follower_C* Follower);
	void Attach_New_Follower(class UBPC_AAS_Follower_C* Follower);
	void UserConstructionScript();
	void UpdateIndicators(bool* Completed);
	void RemoveInstance(int32 Data_Index);
	void AddInstance(int32 Data_Index);
	void GetChunkKeyFromLocation(const struct FVector& InVec, struct FIntVector* Key);
	void DrawDebugChunk(const struct FIntVector& Chunk_Key);
	void RemoveActor(int32 Data_Index);
	void AddActor(int32 Data_Index);
	void Print_Debug_String(const class FString& String, const struct FLinearColor& Color);
	void Reset_System();
	void Generate_Asteroid_Data(int32 Option_Index, int32 Asteroid_Index, const struct FStruct_AAS_AsteroidDefaults& Defaults, const struct FStruct_AAS_AsteroidOption& Options, bool* GenerationValid, struct FStruct_AAS_AsteroidInstanceData* New_Asteroid_Instance_Data);
	void IsSystemEnabled(bool* Enabled);
	void Enable_System();
	void Disable_System();
	void DrawAsteroidDebugPoint(const struct FVector& Location, float Duration, float Size);
	void DrawDebugChunks();
	void ApplyAdditionalGeneration(const struct FStruct_AAS_AsteroidInstanceData& Instance_Data, const struct FStruct_AAS_AsteroidDefaults& Defaults, bool* Valid, struct FStruct_AAS_AsteroidInstanceData* New_Instance_Data);
	void SetupRotatingMovement();
	void IsLocationInsideSystem(const struct FVector& World_Location, bool* Inside);
	void GetChunkKeyFromWorldLocation(const struct FVector& InVec, struct FIntVector* Key);
	void UpdateHISMComponent(class UInstancedStaticMeshComponent* HISMComp);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AAS_V2Base_C">();
	}
	static class ABP_AAS_V2Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AAS_V2Base_C>();
	}
};
static_assert(alignof(ABP_AAS_V2Base_C) == 0x000010, "Wrong alignment on ABP_AAS_V2Base_C");
static_assert(sizeof(ABP_AAS_V2Base_C) == 0x0004F0, "Wrong size on ABP_AAS_V2Base_C");
static_assert(offsetof(ABP_AAS_V2Base_C, UberGraphFrame) == 0x000220, "Member 'ABP_AAS_V2Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, IconBillboard) == 0x000228, "Member 'ABP_AAS_V2Base_C::IconBillboard' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, RotatingMovement) == 0x000230, "Member 'ABP_AAS_V2Base_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, DebugScene) == 0x000238, "Member 'ABP_AAS_V2Base_C::DebugScene' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, StartOnBeginPlay) == 0x000240, "Member 'ABP_AAS_V2Base_C::StartOnBeginPlay' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, SystemId) == 0x000244, "Member 'ABP_AAS_V2Base_C::SystemId' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, Cast_Shadow) == 0x00024C, "Member 'ABP_AAS_V2Base_C::Cast_Shadow' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, VisibleWhileGenerating) == 0x00024D, "Member 'ABP_AAS_V2Base_C::VisibleWhileGenerating' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, Generation_Iterations_Per_Tick) == 0x000250, "Member 'ABP_AAS_V2Base_C::Generation_Iterations_Per_Tick' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, ShowDebugIndicatorsInGame) == 0x000254, "Member 'ABP_AAS_V2Base_C::ShowDebugIndicatorsInGame' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, Enable_Debug_Prints) == 0x000255, "Member 'ABP_AAS_V2Base_C::Enable_Debug_Prints' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, ISMCollection) == 0x000258, "Member 'ABP_AAS_V2Base_C::ISMCollection' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, Generation_Seed) == 0x000268, "Member 'ABP_AAS_V2Base_C::Generation_Seed' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, GenerationStream) == 0x00026C, "Member 'ABP_AAS_V2Base_C::GenerationStream' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, Randomness_Seed) == 0x000274, "Member 'ABP_AAS_V2Base_C::Randomness_Seed' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, RandomnessStream) == 0x000278, "Member 'ABP_AAS_V2Base_C::RandomnessStream' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, AsteroidOptions) == 0x000280, "Member 'ABP_AAS_V2Base_C::AsteroidOptions' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, InstanceDataIndexArray) == 0x000290, "Member 'ABP_AAS_V2Base_C::InstanceDataIndexArray' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, Use_Noise) == 0x0002A0, "Member 'ABP_AAS_V2Base_C::Use_Noise' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, Invert_Noise) == 0x0002A1, "Member 'ABP_AAS_V2Base_C::Invert_Noise' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, OnFinishedGeneration) == 0x0002A8, "Member 'ABP_AAS_V2Base_C::OnFinishedGeneration' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, OnChunkUpdates) == 0x0002B8, "Member 'ABP_AAS_V2Base_C::OnChunkUpdates' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, OnFinishedSpawn) == 0x0002C8, "Member 'ABP_AAS_V2Base_C::OnFinishedSpawn' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, OnResetCompleted) == 0x0002D8, "Member 'ABP_AAS_V2Base_C::OnResetCompleted' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, OnFinishedSetup) == 0x0002E8, "Member 'ABP_AAS_V2Base_C::OnFinishedSetup' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, GenerationTimerHandle) == 0x0002F8, "Member 'ABP_AAS_V2Base_C::GenerationTimerHandle' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, GenerationStartTime) == 0x000300, "Member 'ABP_AAS_V2Base_C::GenerationStartTime' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, SystemStatus) == 0x000308, "Member 'ABP_AAS_V2Base_C::SystemStatus' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, DebugTaskLoopTime) == 0x000310, "Member 'ABP_AAS_V2Base_C::DebugTaskLoopTime' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, CurrentAsteroidDefaults) == 0x000320, "Member 'ABP_AAS_V2Base_C::CurrentAsteroidDefaults' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, CurrentOptionIndex) == 0x000370, "Member 'ABP_AAS_V2Base_C::CurrentOptionIndex' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, bSystemEnabled) == 0x000374, "Member 'ABP_AAS_V2Base_C::bSystemEnabled' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, Current_Asteroid_Index) == 0x000378, "Member 'ABP_AAS_V2Base_C::Current_Asteroid_Index' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, Asteroid_Instance_Data) == 0x000380, "Member 'ABP_AAS_V2Base_C::Asteroid_Instance_Data' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, ChunkData) == 0x000390, "Member 'ABP_AAS_V2Base_C::ChunkData' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, Current_Asteroid_Chunk_Index) == 0x0003E0, "Member 'ABP_AAS_V2Base_C::Current_Asteroid_Chunk_Index' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, CurrentAsteroidChunk) == 0x0003F0, "Member 'ABP_AAS_V2Base_C::CurrentAsteroidChunk' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, Use_Advanced_Noise) == 0x000410, "Member 'ABP_AAS_V2Base_C::Use_Advanced_Noise' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, NoiseStrength) == 0x000414, "Member 'ABP_AAS_V2Base_C::NoiseStrength' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, Enable_Noise_Shrinking) == 0x000418, "Member 'ABP_AAS_V2Base_C::Enable_Noise_Shrinking' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, NoiseShrinkingStrength) == 0x00041C, "Member 'ABP_AAS_V2Base_C::NoiseShrinkingStrength' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, NoiseShrinkingRandomness) == 0x000420, "Member 'ABP_AAS_V2Base_C::NoiseShrinkingRandomness' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, NoiseRandomness) == 0x000424, "Member 'ABP_AAS_V2Base_C::NoiseRandomness' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, NoiseParameters) == 0x000428, "Member 'ABP_AAS_V2Base_C::NoiseParameters' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, Noise_Offset) == 0x000434, "Member 'ABP_AAS_V2Base_C::Noise_Offset' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, Enable_Rotation) == 0x000440, "Member 'ABP_AAS_V2Base_C::Enable_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, Rotation_Rate) == 0x000444, "Member 'ABP_AAS_V2Base_C::Rotation_Rate' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, Rotation_Pivot) == 0x000450, "Member 'ABP_AAS_V2Base_C::Rotation_Pivot' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, Rotation_Update_Only_if_Rendered) == 0x00045C, "Member 'ABP_AAS_V2Base_C::Rotation_Update_Only_if_Rendered' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, ChunkUpdateTimerHandle) == 0x000460, "Member 'ABP_AAS_V2Base_C::ChunkUpdateTimerHandle' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, AttachedChunkFollower) == 0x000468, "Member 'ABP_AAS_V2Base_C::AttachedChunkFollower' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, TempNewChunkKeys) == 0x000478, "Member 'ABP_AAS_V2Base_C::TempNewChunkKeys' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, EnableChunkSystem) == 0x000488, "Member 'ABP_AAS_V2Base_C::EnableChunkSystem' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, Chunk_Size) == 0x00048C, "Member 'ABP_AAS_V2Base_C::Chunk_Size' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, ChunkSpawnDistance) == 0x000498, "Member 'ABP_AAS_V2Base_C::ChunkSpawnDistance' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, Chunk_Updates_Per_Tick) == 0x00049C, "Member 'ABP_AAS_V2Base_C::Chunk_Updates_Per_Tick' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, Enable_System_Updates) == 0x0004A0, "Member 'ABP_AAS_V2Base_C::Enable_System_Updates' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, System_Update_Time) == 0x0004A4, "Member 'ABP_AAS_V2Base_C::System_Update_Time' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, ChunksNeedUpdate) == 0x0004A8, "Member 'ABP_AAS_V2Base_C::ChunksNeedUpdate' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, ActiveChunkKeys) == 0x0004B0, "Member 'ABP_AAS_V2Base_C::ActiveChunkKeys' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, Generation_Iteration_Delay) == 0x0004C0, "Member 'ABP_AAS_V2Base_C::Generation_Iteration_Delay' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, Spawn_Iterations_Per_Tick) == 0x0004C4, "Member 'ABP_AAS_V2Base_C::Spawn_Iterations_Per_Tick' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, Spawn_Iteration_Delay) == 0x0004C8, "Member 'ABP_AAS_V2Base_C::Spawn_Iteration_Delay' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, Collision_Type) == 0x0004CC, "Member 'ABP_AAS_V2Base_C::Collision_Type' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, StartCullDistance) == 0x0004D0, "Member 'ABP_AAS_V2Base_C::StartCullDistance' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, EndCullDistance) == 0x0004D4, "Member 'ABP_AAS_V2Base_C::EndCullDistance' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, EnableDebugDraws) == 0x0004D8, "Member 'ABP_AAS_V2Base_C::EnableDebugDraws' has a wrong offset!");
static_assert(offsetof(ABP_AAS_V2Base_C, OnFinishChunkUpdates) == 0x0004E0, "Member 'ABP_AAS_V2Base_C::OnFinishChunkUpdates' has a wrong offset!");

}

