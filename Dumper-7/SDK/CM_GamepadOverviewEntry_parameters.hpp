#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CM_GamepadOverviewEntry

#include "Basic.hpp"

#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function CM_GamepadOverviewEntry.CM_GamepadOverviewEntry_C.ExecuteUbergraph_CM_GamepadOverviewEntry
// 0x0008 (0x0008 - 0x0000)
struct CM_GamepadOverviewEntry_C_ExecuteUbergraph_CM_GamepadOverviewEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETextJustify                                  K2Node_CustomEvent_Justification;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CM_GamepadOverviewEntry_C_ExecuteUbergraph_CM_GamepadOverviewEntry) == 0x000004, "Wrong alignment on CM_GamepadOverviewEntry_C_ExecuteUbergraph_CM_GamepadOverviewEntry");
static_assert(sizeof(CM_GamepadOverviewEntry_C_ExecuteUbergraph_CM_GamepadOverviewEntry) == 0x000008, "Wrong size on CM_GamepadOverviewEntry_C_ExecuteUbergraph_CM_GamepadOverviewEntry");
static_assert(offsetof(CM_GamepadOverviewEntry_C_ExecuteUbergraph_CM_GamepadOverviewEntry, EntryPoint) == 0x000000, "Member 'CM_GamepadOverviewEntry_C_ExecuteUbergraph_CM_GamepadOverviewEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(CM_GamepadOverviewEntry_C_ExecuteUbergraph_CM_GamepadOverviewEntry, K2Node_Event_IsDesignTime) == 0x000004, "Member 'CM_GamepadOverviewEntry_C_ExecuteUbergraph_CM_GamepadOverviewEntry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(CM_GamepadOverviewEntry_C_ExecuteUbergraph_CM_GamepadOverviewEntry, K2Node_CustomEvent_Justification) == 0x000005, "Member 'CM_GamepadOverviewEntry_C_ExecuteUbergraph_CM_GamepadOverviewEntry::K2Node_CustomEvent_Justification' has a wrong offset!");

// Function CM_GamepadOverviewEntry.CM_GamepadOverviewEntry_C.Update Justification
// 0x0001 (0x0001 - 0x0000)
struct CM_GamepadOverviewEntry_C_Update_Justification final
{
public:
	ETextJustify                                  Justification;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CM_GamepadOverviewEntry_C_Update_Justification) == 0x000001, "Wrong alignment on CM_GamepadOverviewEntry_C_Update_Justification");
static_assert(sizeof(CM_GamepadOverviewEntry_C_Update_Justification) == 0x000001, "Wrong size on CM_GamepadOverviewEntry_C_Update_Justification");
static_assert(offsetof(CM_GamepadOverviewEntry_C_Update_Justification, Justification) == 0x000000, "Member 'CM_GamepadOverviewEntry_C_Update_Justification::Justification' has a wrong offset!");

// Function CM_GamepadOverviewEntry.CM_GamepadOverviewEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct CM_GamepadOverviewEntry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CM_GamepadOverviewEntry_C_PreConstruct) == 0x000001, "Wrong alignment on CM_GamepadOverviewEntry_C_PreConstruct");
static_assert(sizeof(CM_GamepadOverviewEntry_C_PreConstruct) == 0x000001, "Wrong size on CM_GamepadOverviewEntry_C_PreConstruct");
static_assert(offsetof(CM_GamepadOverviewEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'CM_GamepadOverviewEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

