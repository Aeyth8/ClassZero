#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PushCharacterGA

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SCT_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PushCharacterGA.PushCharacterGA_C
// 0x0020 (0x0460 - 0x0440)
class UPushCharacterGA_C final : public UContextSkill
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0440(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class ACharacterSCTBP_C*                      GrabbedCharacter;                                  // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PushForce;                                         // 0x0450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            PushForceCurve;                                    // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_PushCharacterGA(int32 EntryPoint);
	void K2_ActivateAbility();
	void CalculatePushVelocity(class AActor** TargetCharacter, struct FVector* LaunchVelocity);
	void GetAlternatePushForce(const struct FVector& InForward, float* Force);

	float GetPushForce(const struct FVector& Forward) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PushCharacterGA_C">();
	}
	static class UPushCharacterGA_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPushCharacterGA_C>();
	}
};
static_assert(alignof(UPushCharacterGA_C) == 0x000008, "Wrong alignment on UPushCharacterGA_C");
static_assert(sizeof(UPushCharacterGA_C) == 0x000460, "Wrong size on UPushCharacterGA_C");
static_assert(offsetof(UPushCharacterGA_C, UberGraphFrame) == 0x000440, "Member 'UPushCharacterGA_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPushCharacterGA_C, GrabbedCharacter) == 0x000448, "Member 'UPushCharacterGA_C::GrabbedCharacter' has a wrong offset!");
static_assert(offsetof(UPushCharacterGA_C, PushForce) == 0x000450, "Member 'UPushCharacterGA_C::PushForce' has a wrong offset!");
static_assert(offsetof(UPushCharacterGA_C, PushForceCurve) == 0x000458, "Member 'UPushCharacterGA_C::PushForceCurve' has a wrong offset!");

}

