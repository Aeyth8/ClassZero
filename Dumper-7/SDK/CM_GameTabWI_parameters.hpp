#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CM_GameTabWI

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function CM_GameTabWI.CM_GameTabWI_C.ExecuteUbergraph_CM_GameTabWI
// 0x00B0 (0x00B0 - 0x0000)
struct CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECheckBoxState                                Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAccelByteGIS*                          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetXboxCrossPlayRestricted_ReturnValue;   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_IsChecked_1;            // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECheckBoxState                                Temp_byte_Variable_5;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class Ubp_SpecialOptionsSave_C*               CallFunc_GetSpecialOptions_SpecialOptions;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Ubp_SpecialOptionsSave_C*               CallFunc_GetSpecialOptions_SpecialOptions_1;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Ubp_SpecialOptionsSave_C*               CallFunc_GetSpecialOptions_SpecialOptions_2;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Ubp_SpecialOptionsSave_C*               CallFunc_GetSpecialOptions_SpecialOptions_3;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                K2Node_Select_Default_1;                           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AClientEntryPC*                         CallFunc_GetMainMenuPlayerController_ReturnValue;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECheckBoxState                                K2Node_Select_Default_2;                           // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RegionSelectionAllowed_ReturnValue;       // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCM_RegionOptionWI_C*                   CallFunc_Create_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_IsChecked;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x006C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsXboxPlatform_ReturnValue;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWinGDKPlatform_ReturnValue;             // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI) == 0x000008, "Wrong alignment on CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI");
static_assert(sizeof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI) == 0x0000B0, "Wrong size on CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, EntryPoint) == 0x000000, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::EntryPoint' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, Temp_byte_Variable) == 0x000004, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, Temp_bool_Variable) == 0x000005, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, Temp_byte_Variable_1) == 0x000006, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, Temp_byte_Variable_2) == 0x000007, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, CallFunc_GetXboxCrossPlayRestricted_ReturnValue) == 0x000010, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::CallFunc_GetXboxCrossPlayRestricted_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, Temp_bool_Variable_1) == 0x000011, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, Temp_byte_Variable_3) == 0x000013, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, Temp_byte_Variable_4) == 0x000014, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, K2Node_Select_Default) == 0x000015, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, K2Node_Event_IsDesignTime) == 0x000016, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, K2Node_ComponentBoundEvent_IsChecked_1) == 0x000017, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::K2Node_ComponentBoundEvent_IsChecked_1' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, Temp_byte_Variable_5) == 0x000018, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, CallFunc_GetSpecialOptions_SpecialOptions) == 0x000020, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::CallFunc_GetSpecialOptions_SpecialOptions' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, CallFunc_GetSpecialOptions_SpecialOptions_1) == 0x000028, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::CallFunc_GetSpecialOptions_SpecialOptions_1' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, CallFunc_GetSpecialOptions_SpecialOptions_2) == 0x000030, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::CallFunc_GetSpecialOptions_SpecialOptions_2' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, CallFunc_GetSpecialOptions_SpecialOptions_3) == 0x000038, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::CallFunc_GetSpecialOptions_SpecialOptions_3' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, K2Node_Select_Default_1) == 0x000040, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, Temp_bool_Variable_2) == 0x000041, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, CallFunc_GetMainMenuPlayerController_ReturnValue) == 0x000048, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::CallFunc_GetMainMenuPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, K2Node_Select_Default_2) == 0x000051, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, CallFunc_RegionSelectionAllowed_ReturnValue) == 0x000052, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::CallFunc_RegionSelectionAllowed_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, CallFunc_GetOwningPlayer_ReturnValue) == 0x000058, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, CallFunc_Create_ReturnValue) == 0x000060, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, K2Node_ComponentBoundEvent_IsChecked) == 0x000068, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::K2Node_ComponentBoundEvent_IsChecked' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, CallFunc_Not_PreBool_ReturnValue_1) == 0x000069, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, K2Node_Event_MyGeometry) == 0x00006C, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, K2Node_Event_InDeltaTime) == 0x0000A4, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, CallFunc_IsXboxPlatform_ReturnValue) == 0x0000A8, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::CallFunc_IsXboxPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, CallFunc_IsWinGDKPlatform_ReturnValue) == 0x0000A9, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::CallFunc_IsWinGDKPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, CallFunc_BooleanOR_ReturnValue) == 0x0000AA, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000AB, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, CallFunc_BooleanOR_ReturnValue_1) == 0x0000AC, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0000AD, "Member 'CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function CM_GameTabWI.CM_GameTabWI_C.Tick
// 0x003C (0x003C - 0x0000)
struct CM_GameTabWI_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CM_GameTabWI_C_Tick) == 0x000004, "Wrong alignment on CM_GameTabWI_C_Tick");
static_assert(sizeof(CM_GameTabWI_C_Tick) == 0x00003C, "Wrong size on CM_GameTabWI_C_Tick");
static_assert(offsetof(CM_GameTabWI_C_Tick, MyGeometry) == 0x000000, "Member 'CM_GameTabWI_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_Tick, InDeltaTime) == 0x000038, "Member 'CM_GameTabWI_C_Tick::InDeltaTime' has a wrong offset!");

// Function CM_GameTabWI.CM_GameTabWI_C.BndEvt__CM_GameTabWI_CM_CheckboxWI_K2Node_ComponentBoundEvent_0_StateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct CM_GameTabWI_C_BndEvt__CM_GameTabWI_CM_CheckboxWI_K2Node_ComponentBoundEvent_0_StateChanged__DelegateSignature final
{
public:
	bool                                          IsChecked;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CM_GameTabWI_C_BndEvt__CM_GameTabWI_CM_CheckboxWI_K2Node_ComponentBoundEvent_0_StateChanged__DelegateSignature) == 0x000001, "Wrong alignment on CM_GameTabWI_C_BndEvt__CM_GameTabWI_CM_CheckboxWI_K2Node_ComponentBoundEvent_0_StateChanged__DelegateSignature");
static_assert(sizeof(CM_GameTabWI_C_BndEvt__CM_GameTabWI_CM_CheckboxWI_K2Node_ComponentBoundEvent_0_StateChanged__DelegateSignature) == 0x000001, "Wrong size on CM_GameTabWI_C_BndEvt__CM_GameTabWI_CM_CheckboxWI_K2Node_ComponentBoundEvent_0_StateChanged__DelegateSignature");
static_assert(offsetof(CM_GameTabWI_C_BndEvt__CM_GameTabWI_CM_CheckboxWI_K2Node_ComponentBoundEvent_0_StateChanged__DelegateSignature, IsChecked) == 0x000000, "Member 'CM_GameTabWI_C_BndEvt__CM_GameTabWI_CM_CheckboxWI_K2Node_ComponentBoundEvent_0_StateChanged__DelegateSignature::IsChecked' has a wrong offset!");

// Function CM_GameTabWI.CM_GameTabWI_C.BndEvt__CM_GameTabWI_CM_CheckboxWI_CrossPlay_K2Node_ComponentBoundEvent_2_StateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct CM_GameTabWI_C_BndEvt__CM_GameTabWI_CM_CheckboxWI_CrossPlay_K2Node_ComponentBoundEvent_2_StateChanged__DelegateSignature final
{
public:
	bool                                          IsChecked;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CM_GameTabWI_C_BndEvt__CM_GameTabWI_CM_CheckboxWI_CrossPlay_K2Node_ComponentBoundEvent_2_StateChanged__DelegateSignature) == 0x000001, "Wrong alignment on CM_GameTabWI_C_BndEvt__CM_GameTabWI_CM_CheckboxWI_CrossPlay_K2Node_ComponentBoundEvent_2_StateChanged__DelegateSignature");
static_assert(sizeof(CM_GameTabWI_C_BndEvt__CM_GameTabWI_CM_CheckboxWI_CrossPlay_K2Node_ComponentBoundEvent_2_StateChanged__DelegateSignature) == 0x000001, "Wrong size on CM_GameTabWI_C_BndEvt__CM_GameTabWI_CM_CheckboxWI_CrossPlay_K2Node_ComponentBoundEvent_2_StateChanged__DelegateSignature");
static_assert(offsetof(CM_GameTabWI_C_BndEvt__CM_GameTabWI_CM_CheckboxWI_CrossPlay_K2Node_ComponentBoundEvent_2_StateChanged__DelegateSignature, IsChecked) == 0x000000, "Member 'CM_GameTabWI_C_BndEvt__CM_GameTabWI_CM_CheckboxWI_CrossPlay_K2Node_ComponentBoundEvent_2_StateChanged__DelegateSignature::IsChecked' has a wrong offset!");

// Function CM_GameTabWI.CM_GameTabWI_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct CM_GameTabWI_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CM_GameTabWI_C_PreConstruct) == 0x000001, "Wrong alignment on CM_GameTabWI_C_PreConstruct");
static_assert(sizeof(CM_GameTabWI_C_PreConstruct) == 0x000001, "Wrong size on CM_GameTabWI_C_PreConstruct");
static_assert(offsetof(CM_GameTabWI_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'CM_GameTabWI_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function CM_GameTabWI.CM_GameTabWI_C.UpdateAndSaveToolTips
// 0x0018 (0x0018 - 0x0000)
struct CM_GameTabWI_C_UpdateAndSaveToolTips final
{
public:
	bool                                          DisableTooltips;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class Ubp_SpecialOptionsSave_C*               SpecialOptions;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGame_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CM_GameTabWI_C_UpdateAndSaveToolTips) == 0x000008, "Wrong alignment on CM_GameTabWI_C_UpdateAndSaveToolTips");
static_assert(sizeof(CM_GameTabWI_C_UpdateAndSaveToolTips) == 0x000018, "Wrong size on CM_GameTabWI_C_UpdateAndSaveToolTips");
static_assert(offsetof(CM_GameTabWI_C_UpdateAndSaveToolTips, DisableTooltips) == 0x000000, "Member 'CM_GameTabWI_C_UpdateAndSaveToolTips::DisableTooltips' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_UpdateAndSaveToolTips, SpecialOptions) == 0x000008, "Member 'CM_GameTabWI_C_UpdateAndSaveToolTips::SpecialOptions' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_UpdateAndSaveToolTips, CallFunc_SaveGame_ReturnValue) == 0x000010, "Member 'CM_GameTabWI_C_UpdateAndSaveToolTips::CallFunc_SaveGame_ReturnValue' has a wrong offset!");

// Function CM_GameTabWI.CM_GameTabWI_C.UpdateAndSaveCrossPlayOption
// 0x0040 (0x0040 - 0x0000)
struct CM_GameTabWI_C_UpdateAndSaveCrossPlayOption final
{
public:
	bool                                          AllowCrossPlatformPlay;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class Ubp_SpecialOptionsSave_C*               SpecialOptions;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bChanged;                                          // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SaveGame_ReturnValue;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AClientEntryPCBP_C*                     K2Node_DynamicCast_AsClient_Entry_PCBP;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAccelByteGIS*                          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CM_GameTabWI_C_UpdateAndSaveCrossPlayOption) == 0x000008, "Wrong alignment on CM_GameTabWI_C_UpdateAndSaveCrossPlayOption");
static_assert(sizeof(CM_GameTabWI_C_UpdateAndSaveCrossPlayOption) == 0x000040, "Wrong size on CM_GameTabWI_C_UpdateAndSaveCrossPlayOption");
static_assert(offsetof(CM_GameTabWI_C_UpdateAndSaveCrossPlayOption, AllowCrossPlatformPlay) == 0x000000, "Member 'CM_GameTabWI_C_UpdateAndSaveCrossPlayOption::AllowCrossPlatformPlay' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_UpdateAndSaveCrossPlayOption, SpecialOptions) == 0x000008, "Member 'CM_GameTabWI_C_UpdateAndSaveCrossPlayOption::SpecialOptions' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_UpdateAndSaveCrossPlayOption, bChanged) == 0x000010, "Member 'CM_GameTabWI_C_UpdateAndSaveCrossPlayOption::bChanged' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_UpdateAndSaveCrossPlayOption, CallFunc_SaveGame_ReturnValue) == 0x000011, "Member 'CM_GameTabWI_C_UpdateAndSaveCrossPlayOption::CallFunc_SaveGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_UpdateAndSaveCrossPlayOption, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'CM_GameTabWI_C_UpdateAndSaveCrossPlayOption::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_UpdateAndSaveCrossPlayOption, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000020, "Member 'CM_GameTabWI_C_UpdateAndSaveCrossPlayOption::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_UpdateAndSaveCrossPlayOption, K2Node_DynamicCast_AsClient_Entry_PCBP) == 0x000028, "Member 'CM_GameTabWI_C_UpdateAndSaveCrossPlayOption::K2Node_DynamicCast_AsClient_Entry_PCBP' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_UpdateAndSaveCrossPlayOption, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'CM_GameTabWI_C_UpdateAndSaveCrossPlayOption::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_UpdateAndSaveCrossPlayOption, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000038, "Member 'CM_GameTabWI_C_UpdateAndSaveCrossPlayOption::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");

// Function CM_GameTabWI.CM_GameTabWI_C.RecreateGameTabContent
// 0x0058 (0x0058 - 0x0000)
struct CM_GameTabWI_C_RecreateGameTabContent final
{
public:
	class UWidget*                                InFirstRowContent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CachedChildren_l;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(CM_GameTabWI_C_RecreateGameTabContent) == 0x000008, "Wrong alignment on CM_GameTabWI_C_RecreateGameTabContent");
static_assert(sizeof(CM_GameTabWI_C_RecreateGameTabContent) == 0x000058, "Wrong size on CM_GameTabWI_C_RecreateGameTabContent");
static_assert(offsetof(CM_GameTabWI_C_RecreateGameTabContent, InFirstRowContent) == 0x000000, "Member 'CM_GameTabWI_C_RecreateGameTabContent::InFirstRowContent' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_RecreateGameTabContent, CachedChildren_l) == 0x000008, "Member 'CM_GameTabWI_C_RecreateGameTabContent::CachedChildren_l' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_RecreateGameTabContent, Temp_int_Array_Index_Variable) == 0x000018, "Member 'CM_GameTabWI_C_RecreateGameTabContent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_RecreateGameTabContent, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'CM_GameTabWI_C_RecreateGameTabContent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_RecreateGameTabContent, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'CM_GameTabWI_C_RecreateGameTabContent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_RecreateGameTabContent, CallFunc_Array_Get_Item) == 0x000028, "Member 'CM_GameTabWI_C_RecreateGameTabContent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_RecreateGameTabContent, CallFunc_AddChild_ReturnValue) == 0x000030, "Member 'CM_GameTabWI_C_RecreateGameTabContent::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_RecreateGameTabContent, CallFunc_AddChild_ReturnValue_1) == 0x000038, "Member 'CM_GameTabWI_C_RecreateGameTabContent::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_RecreateGameTabContent, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'CM_GameTabWI_C_RecreateGameTabContent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_RecreateGameTabContent, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'CM_GameTabWI_C_RecreateGameTabContent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_GameTabWI_C_RecreateGameTabContent, CallFunc_GetAllChildren_ReturnValue) == 0x000048, "Member 'CM_GameTabWI_C_RecreateGameTabContent::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");

}

