#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SettingsKeybindingWI

#include "Basic.hpp"

#include "SettingsKeybindingWI_classes.hpp"
#include "SettingsKeybindingWI_parameters.hpp"


namespace SDK
{

// Function SettingsKeybindingWI.SettingsKeybindingWI_C.SetKeyboardKey__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FInputChord                      Chord                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void USettingsKeybindingWI_C::SetKeyboardKey__DelegateSignature(const struct FInputChord& Chord)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_C", "SetKeyboardKey__DelegateSignature");

	Params::SettingsKeybindingWI_C_SetKeyboardKey__DelegateSignature Parms{};

	Parms.Chord = std::move(Chord);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsKeybindingWI.SettingsKeybindingWI_C.OnChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void USettingsKeybindingWI_C::OnChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_C", "OnChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsKeybindingWI.SettingsKeybindingWI_C.ExecuteUbergraph_SettingsKeybindingWI
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USettingsKeybindingWI_C::ExecuteUbergraph_SettingsKeybindingWI(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_C", "ExecuteUbergraph_SettingsKeybindingWI");

	Params::SettingsKeybindingWI_C_ExecuteUbergraph_SettingsKeybindingWI Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsKeybindingWI.SettingsKeybindingWI_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void USettingsKeybindingWI_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsKeybindingWI.SettingsKeybindingWI_C.BndEvt__SettingsKeybindingWI_GamepadKeyRemapper_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// struct FInputChord                      SelectedKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void USettingsKeybindingWI_C::BndEvt__SettingsKeybindingWI_GamepadKeyRemapper_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature(const struct FInputChord& SelectedKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_C", "BndEvt__SettingsKeybindingWI_GamepadKeyRemapper_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature");

	Params::SettingsKeybindingWI_C_BndEvt__SettingsKeybindingWI_GamepadKeyRemapper_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature Parms{};

	Parms.SelectedKey = std::move(SelectedKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsKeybindingWI.SettingsKeybindingWI_C.BndEvt__SettingsKeybindingWI_KeyboardKeyRemapper_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// struct FInputChord                      SelectedKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void USettingsKeybindingWI_C::BndEvt__SettingsKeybindingWI_KeyboardKeyRemapper_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature(const struct FInputChord& SelectedKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_C", "BndEvt__SettingsKeybindingWI_KeyboardKeyRemapper_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature");

	Params::SettingsKeybindingWI_C_BndEvt__SettingsKeybindingWI_KeyboardKeyRemapper_K2Node_ComponentBoundEvent_0_OnKeySelected__DelegateSignature Parms{};

	Parms.SelectedKey = std::move(SelectedKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsKeybindingWI.SettingsKeybindingWI_C.GetSettings
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserInputSettingsBP_C*           AsUser_Input_Settings_BP                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void USettingsKeybindingWI_C::GetSettings(class UUserInputSettingsBP_C** AsUser_Input_Settings_BP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_C", "GetSettings");

	Params::SettingsKeybindingWI_C_GetSettings Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AsUser_Input_Settings_BP != nullptr)
		*AsUser_Input_Settings_BP = Parms.AsUser_Input_Settings_BP;
}


// Function SettingsKeybindingWI.SettingsKeybindingWI_C.SetDisplayName
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             DisplayName_0                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void USettingsKeybindingWI_C::SetDisplayName(const class FText& DisplayName_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_C", "SetDisplayName");

	Params::SettingsKeybindingWI_C_SetDisplayName Parms{};

	Parms.DisplayName_0 = std::move(DisplayName_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsKeybindingWI.SettingsKeybindingWI_C.SetKeyboardData
// (Public, BlueprintCallable, BlueprintEvent)

void USettingsKeybindingWI_C::SetKeyboardData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_C", "SetKeyboardData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsKeybindingWI.SettingsKeybindingWI_C.Set Action Button Key
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USCTKeySelector*                  UIElement                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FInputActionKeyMapping           Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm)

void USettingsKeybindingWI_C::Set_Action_Button_Key(class USCTKeySelector* UIElement, const struct FInputActionKeyMapping& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_C", "Set Action Button Key");

	Params::SettingsKeybindingWI_C_Set_Action_Button_Key Parms{};

	Parms.UIElement = UIElement;
	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsKeybindingWI.SettingsKeybindingWI_C.SetGamepadData
// (Public, BlueprintCallable, BlueprintEvent)

void USettingsKeybindingWI_C::SetGamepadData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_C", "SetGamepadData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsKeybindingWI.SettingsKeybindingWI_C.OnSetGamepadKey
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FInputChord                      Chord                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void USettingsKeybindingWI_C::OnSetGamepadKey(const struct FInputChord& Chord)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_C", "OnSetGamepadKey");

	Params::SettingsKeybindingWI_C_OnSetGamepadKey Parms{};

	Parms.Chord = std::move(Chord);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsKeybindingWI.SettingsKeybindingWI_C.OnSetKeyboardKey
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FInputChord                      Chord                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void USettingsKeybindingWI_C::OnSetKeyboardKey(const struct FInputChord& Chord)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_C", "OnSetKeyboardKey");

	Params::SettingsKeybindingWI_C_OnSetKeyboardKey Parms{};

	Parms.Chord = std::move(Chord);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsKeybindingWI.SettingsKeybindingWI_C.Set Axis Button Key
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USCTKeySelector*                  UIElement                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FInputAxisKeyMapping             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm)

void USettingsKeybindingWI_C::Set_Axis_Button_Key(class USCTKeySelector* UIElement, const struct FInputAxisKeyMapping& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_C", "Set Axis Button Key");

	Params::SettingsKeybindingWI_C_Set_Axis_Button_Key Parms{};

	Parms.UIElement = UIElement;
	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsKeybindingWI.SettingsKeybindingWI_C.DisableGamepadSelector
// (Public, BlueprintCallable, BlueprintEvent)

void USettingsKeybindingWI_C::DisableGamepadSelector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_C", "DisableGamepadSelector");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsKeybindingWI.SettingsKeybindingWI_C.ResetKeyboard
// (Public, BlueprintCallable, BlueprintEvent)

void USettingsKeybindingWI_C::ResetKeyboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_C", "ResetKeyboard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsKeybindingWI.SettingsKeybindingWI_C.ResetGamepad
// (Public, BlueprintCallable, BlueprintEvent)

void USettingsKeybindingWI_C::ResetGamepad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_C", "ResetGamepad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsKeybindingWI.SettingsKeybindingWI_C.CanBind
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FInputChord                      Chord                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USettingsKeybindingWI_C::CanBind(const struct FInputChord& Chord, bool* Value) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsKeybindingWI_C", "CanBind");

	Params::SettingsKeybindingWI_C_CanBind Parms{};

	Parms.Chord = std::move(Chord);

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}

}

