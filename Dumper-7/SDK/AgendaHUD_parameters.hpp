#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AgendaHUD

#include "Basic.hpp"

#include "SCT_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AgendaHUD.AgendaHUD_C.ExecuteUbergraph_AgendaHUD
// 0x0070 (0x0070 - 0x0000)
struct AgendaHUD_C_ExecuteUbergraph_AgendaHUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0020(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0038(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0048(0x0018)()
	class ASCTPlayerState_MatchBP_C*              CallFunc_GetPlayerState_AsSCTPlayer_State_Match_BP; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AgendaHUD_C_ExecuteUbergraph_AgendaHUD) == 0x000008, "Wrong alignment on AgendaHUD_C_ExecuteUbergraph_AgendaHUD");
static_assert(sizeof(AgendaHUD_C_ExecuteUbergraph_AgendaHUD) == 0x000070, "Wrong size on AgendaHUD_C_ExecuteUbergraph_AgendaHUD");
static_assert(offsetof(AgendaHUD_C_ExecuteUbergraph_AgendaHUD, EntryPoint) == 0x000000, "Member 'AgendaHUD_C_ExecuteUbergraph_AgendaHUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(AgendaHUD_C_ExecuteUbergraph_AgendaHUD, K2Node_MakeArray_Array) == 0x000008, "Member 'AgendaHUD_C_ExecuteUbergraph_AgendaHUD::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AgendaHUD_C_ExecuteUbergraph_AgendaHUD, K2Node_Event_IsDesignTime) == 0x000018, "Member 'AgendaHUD_C_ExecuteUbergraph_AgendaHUD::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(AgendaHUD_C_ExecuteUbergraph_AgendaHUD, CallFunc_Format_ReturnValue) == 0x000020, "Member 'AgendaHUD_C_ExecuteUbergraph_AgendaHUD::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AgendaHUD_C_ExecuteUbergraph_AgendaHUD, K2Node_MakeArray_Array_1) == 0x000038, "Member 'AgendaHUD_C_ExecuteUbergraph_AgendaHUD::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AgendaHUD_C_ExecuteUbergraph_AgendaHUD, CallFunc_Format_ReturnValue_1) == 0x000048, "Member 'AgendaHUD_C_ExecuteUbergraph_AgendaHUD::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AgendaHUD_C_ExecuteUbergraph_AgendaHUD, CallFunc_GetPlayerState_AsSCTPlayer_State_Match_BP) == 0x000060, "Member 'AgendaHUD_C_ExecuteUbergraph_AgendaHUD::CallFunc_GetPlayerState_AsSCTPlayer_State_Match_BP' has a wrong offset!");
static_assert(offsetof(AgendaHUD_C_ExecuteUbergraph_AgendaHUD, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'AgendaHUD_C_ExecuteUbergraph_AgendaHUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function AgendaHUD.AgendaHUD_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct AgendaHUD_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AgendaHUD_C_PreConstruct) == 0x000001, "Wrong alignment on AgendaHUD_C_PreConstruct");
static_assert(sizeof(AgendaHUD_C_PreConstruct) == 0x000001, "Wrong size on AgendaHUD_C_PreConstruct");
static_assert(offsetof(AgendaHUD_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'AgendaHUD_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function AgendaHUD.AgendaHUD_C.UpdateDescription
// 0x0028 (0x0028 - 0x0000)
struct AgendaHUD_C_UpdateDescription final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0018)()
};
static_assert(alignof(AgendaHUD_C_UpdateDescription) == 0x000008, "Wrong alignment on AgendaHUD_C_UpdateDescription");
static_assert(sizeof(AgendaHUD_C_UpdateDescription) == 0x000028, "Wrong size on AgendaHUD_C_UpdateDescription");
static_assert(offsetof(AgendaHUD_C_UpdateDescription, Value) == 0x000000, "Member 'AgendaHUD_C_UpdateDescription::Value' has a wrong offset!");
static_assert(offsetof(AgendaHUD_C_UpdateDescription, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'AgendaHUD_C_UpdateDescription::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function AgendaHUD.AgendaHUD_C.UpdateProgression
// 0x00A0 (0x00A0 - 0x0000)
struct AgendaHUD_C_UpdateProgression final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0058(0x0018)()
	EAgendaObjectState                            Temp_byte_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState_MatchBP_C*              CallFunc_GetPlayerState_AsSCTPlayer_State_Match_BP; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0088(0x0018)()
};
static_assert(alignof(AgendaHUD_C_UpdateProgression) == 0x000008, "Wrong alignment on AgendaHUD_C_UpdateProgression");
static_assert(sizeof(AgendaHUD_C_UpdateProgression) == 0x0000A0, "Wrong size on AgendaHUD_C_UpdateProgression");
static_assert(offsetof(AgendaHUD_C_UpdateProgression, Value) == 0x000000, "Member 'AgendaHUD_C_UpdateProgression::Value' has a wrong offset!");
static_assert(offsetof(AgendaHUD_C_UpdateProgression, Temp_text_Variable) == 0x000010, "Member 'AgendaHUD_C_UpdateProgression::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(AgendaHUD_C_UpdateProgression, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'AgendaHUD_C_UpdateProgression::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AgendaHUD_C_UpdateProgression, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000040, "Member 'AgendaHUD_C_UpdateProgression::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AgendaHUD_C_UpdateProgression, Temp_text_Variable_1) == 0x000058, "Member 'AgendaHUD_C_UpdateProgression::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(AgendaHUD_C_UpdateProgression, Temp_byte_Variable) == 0x000070, "Member 'AgendaHUD_C_UpdateProgression::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AgendaHUD_C_UpdateProgression, CallFunc_GetPlayerState_AsSCTPlayer_State_Match_BP) == 0x000078, "Member 'AgendaHUD_C_UpdateProgression::CallFunc_GetPlayerState_AsSCTPlayer_State_Match_BP' has a wrong offset!");
static_assert(offsetof(AgendaHUD_C_UpdateProgression, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'AgendaHUD_C_UpdateProgression::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AgendaHUD_C_UpdateProgression, K2Node_Select_Default) == 0x000088, "Member 'AgendaHUD_C_UpdateProgression::K2Node_Select_Default' has a wrong offset!");

// Function AgendaHUD.AgendaHUD_C.Initialize
// 0x0008 (0x0008 - 0x0000)
struct AgendaHUD_C_Initialize final
{
public:
	class ASCTPlayerState_MatchBP_C*              CallFunc_GetPlayerState_AsSCTPlayer_State_Match_BP; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AgendaHUD_C_Initialize) == 0x000008, "Wrong alignment on AgendaHUD_C_Initialize");
static_assert(sizeof(AgendaHUD_C_Initialize) == 0x000008, "Wrong size on AgendaHUD_C_Initialize");
static_assert(offsetof(AgendaHUD_C_Initialize, CallFunc_GetPlayerState_AsSCTPlayer_State_Match_BP) == 0x000000, "Member 'AgendaHUD_C_Initialize::CallFunc_GetPlayerState_AsSCTPlayer_State_Match_BP' has a wrong offset!");

// Function AgendaHUD.AgendaHUD_C.Bind To Events
// 0x0028 (0x0028 - 0x0000)
struct AgendaHUD_C_Bind_To_Events final
{
public:
	class ASCTPlayerState_MatchBP_C*              CallFunc_GetPlayerState_AsSCTPlayer_State_Match_BP; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Value)>   K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const class FString& Value)>   K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(AgendaHUD_C_Bind_To_Events) == 0x000008, "Wrong alignment on AgendaHUD_C_Bind_To_Events");
static_assert(sizeof(AgendaHUD_C_Bind_To_Events) == 0x000028, "Wrong size on AgendaHUD_C_Bind_To_Events");
static_assert(offsetof(AgendaHUD_C_Bind_To_Events, CallFunc_GetPlayerState_AsSCTPlayer_State_Match_BP) == 0x000000, "Member 'AgendaHUD_C_Bind_To_Events::CallFunc_GetPlayerState_AsSCTPlayer_State_Match_BP' has a wrong offset!");
static_assert(offsetof(AgendaHUD_C_Bind_To_Events, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'AgendaHUD_C_Bind_To_Events::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AgendaHUD_C_Bind_To_Events, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'AgendaHUD_C_Bind_To_Events::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function AgendaHUD.AgendaHUD_C.GetPlayerState
// 0x0030 (0x0030 - 0x0000)
struct AgendaHUD_C_GetPlayerState final
{
public:
	class ASCTPlayerState_MatchBP_C*              AsSCTPlayer_State_Match_BP;                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      CallFunc_GetSCT_Player_Character_AsCharacter_SCT;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventory*                             CallFunc_GetSCT_Player_Character_CharacterInventory; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCTPlayerState*                        CallFunc_GetSCTPlayerState_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCTPlayerState_MatchBP_C*              K2Node_DynamicCast_AsSCTPlayer_State_Match_BP;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AgendaHUD_C_GetPlayerState) == 0x000008, "Wrong alignment on AgendaHUD_C_GetPlayerState");
static_assert(sizeof(AgendaHUD_C_GetPlayerState) == 0x000030, "Wrong size on AgendaHUD_C_GetPlayerState");
static_assert(offsetof(AgendaHUD_C_GetPlayerState, AsSCTPlayer_State_Match_BP) == 0x000000, "Member 'AgendaHUD_C_GetPlayerState::AsSCTPlayer_State_Match_BP' has a wrong offset!");
static_assert(offsetof(AgendaHUD_C_GetPlayerState, CallFunc_GetSCT_Player_Character_AsCharacter_SCT) == 0x000008, "Member 'AgendaHUD_C_GetPlayerState::CallFunc_GetSCT_Player_Character_AsCharacter_SCT' has a wrong offset!");
static_assert(offsetof(AgendaHUD_C_GetPlayerState, CallFunc_GetSCT_Player_Character_CharacterInventory) == 0x000010, "Member 'AgendaHUD_C_GetPlayerState::CallFunc_GetSCT_Player_Character_CharacterInventory' has a wrong offset!");
static_assert(offsetof(AgendaHUD_C_GetPlayerState, CallFunc_GetSCTPlayerState_ReturnValue) == 0x000018, "Member 'AgendaHUD_C_GetPlayerState::CallFunc_GetSCTPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(AgendaHUD_C_GetPlayerState, K2Node_DynamicCast_AsSCTPlayer_State_Match_BP) == 0x000020, "Member 'AgendaHUD_C_GetPlayerState::K2Node_DynamicCast_AsSCTPlayer_State_Match_BP' has a wrong offset!");
static_assert(offsetof(AgendaHUD_C_GetPlayerState, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'AgendaHUD_C_GetPlayerState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

