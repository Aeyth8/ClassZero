#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OxygenOutletBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "UMG_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass OxygenOutletBP.OxygenOutletBP_C
// 0x0250 (0x0470 - 0x0220)
class AOxygenOutletBP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           AK_HandIn;                                         // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           AkSabotage;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          InstancedStaticMeshDown;                           // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          InstancedStaticMeshUp;                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPOI_WidgetComponent_C*                 POI_WidgetComponent;                               // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem1;                                   // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Oxygen_Flask;                                      // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOxygenPotionInteractionComponent_C*    OxygenFlaskInteractionComponentRefill;             // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   Sabotaged_Timer;                                   // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractionProgressBarCreator*         InteractionProgressBarCreatorRefill;               // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractionProgressBarCreator*         InteractionProgressBarCreatorSabotage;             // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            PhysicsConstraint;                                 // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MouthPiece;                                        // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Rope;                                              // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UContextStaticMeshComponent*            ContextStaticMeshSabotage;                         // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractionComponent*                  Interaction_ComponentSabotage;                     // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   OutlinePostProcessVolume;                          // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   OutlineMesh;                                       // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UContextStaticMeshComponent*            ContextStaticMeshRefill;                           // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UContextStaticMeshComponent*            Stand;                                             // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   Two;                                               // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   O;                                                 // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   EmergencyOxygen;                                   // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Glass;                                             // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak;                                                // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Lid_Alpha_4A49D66C48CCF174C8E9FFA7CFB7ABF7;        // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Lid__Direction_4A49D66C48CCF174C8E9FFA7CFB7ABF7;   // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_315[0x3];                                      // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Lid;                                               // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimelineLightAnimation_Alpha_585D91D64F4E1FAED1AC29B2FBF5E2ED; // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TimelineLightAnimation__Direction_585D91D64F4E1FAED1AC29B2FBF5E2ED; // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_325[0x3];                                      // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TimelineLightAnimation;                            // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightMaxIntensity;                                 // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightMinIntensity;                                 // 0x0334(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            LightCurve;                                        // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          StartDrain;                                        // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          StopDrain;                                         // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WorldOxygenDrainDot;                               // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sabotaged;                                         // 0x0354(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_355[0x3];                                      // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Time_To_Spend_Sabotaged;                           // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      SabotagingCharacter;                               // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          StopSabotageAudio;                                 // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          StartSabotageAudio;                                // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Open;                                              // 0x0378(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseSnapshot                          RestPoseTester;                                    // 0x0380(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           SabotageTimerHandle;                               // 0x03B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Amount_of_Oxygen_to_Add;                           // 0x03C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Activating_Actor;                                  // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sabotage_Start_Timestamp;                          // 0x03D0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventory*                             Inventory;                                         // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Oxygen_Supplied_Text;                              // 0x03E0(0x0018)(Edit, BlueprintVisible)
	class FText                                   Oxygen_Sabotaged_Text;                             // 0x03F8(0x0018)(Edit, BlueprintVisible)
	bool                                          bHasSucceeded;                                     // 0x0410(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Oxygen_Failed_To_Supply_With_Stacks_Lost;          // 0x0418(0x0018)(Edit, BlueprintVisible)
	class FText                                   Oxygen_Failed_To_Supply_Without_Stacks_Lost;       // 0x0430(0x0018)(Edit, BlueprintVisible)
	float                                         Message_Duration;                                  // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Oxygen_to_Remove_on_Sabotaged;                     // 0x044C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowScreenPOI;                                     // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPOI_WI_OxygenOutlet_C*                 POIWidget;                                         // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ExtendersUp;                                       // 0x0460(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ExtendersDown;                                     // 0x0464(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Held;                                              // 0x0468(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)

public:
	void ExecuteUbergraph_OxygenOutletBP(int32 EntryPoint);
	void BndEvt__ContextStaticMeshRefill_K2Node_ComponentBoundEvent_9_ToggleHighlightEffect__DelegateSignature(bool ShouldShow);
	void Check_For_Global_Oxygen();
	void Audio_Succes();
	void Oxygen_Flask_Change_Visibility(bool IsVisible);
	void BndEvt__OxygenFlaskInteractionComponentRefill_K2Node_ComponentBoundEvent_8_InteractionDelegate__DelegateSignature(const struct FInteractionPayload& Payload);
	void Show_Message_To_All_Players(const class FText& Message, bool Transfer);
	void Show_Failed_Message_Activating_Player(const class FText& Message);
	void BndEvt__OxygenPotionInteractionComponent_K2Node_ComponentBoundEvent_4_InteractionSuccessfulDelegate__DelegateSignature();
	void BndEvt__OxygenPotionInteractionComponent_K2Node_ComponentBoundEvent_3_InteractionEndedDelegate__DelegateSignature(const struct FInteractionPayload& Payload, bool WasCancelled);
	void BndEvt__OxygenPotionInteractionComponent_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature(const struct FInteractionPayload& Payload);
	void Add_Score_Give_Oxygen(const class AActor* Character);
	void BndEvt__Interaction_Component_K2Node_ComponentBoundEvent_10_InteractionSuccessfulDelegate__DelegateSignature();
	void SaveSnapshot();
	void Close_Lid();
	void Open_Lid();
	void BndEvt__Box_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Audio_Start_Sabotage();
	void Audio_Stop_Sabotage();
	void Sabotage();
	void Add_Score_Sabotage(class AActor* Character);
	void BndEvt__Interaction_Component_K2Node_ComponentBoundEvent_3_InteractionDelegate__DelegateSignature(const struct FInteractionPayload& Payload, bool WasCancelled);
	void BndEvt__Interaction_Component_K2Node_ComponentBoundEvent_5_InteractionDelegate__DelegateSignature(const struct FInteractionPayload& Payload);
	void ReceiveBeginPlay();
	void K2_OnReset();
	void Audio_Stop_Drain();
	void Audio_Start_Drain();
	void Lid__UpdateFunc();
	void Lid__FinishedFunc();
	void TimelineLightAnimation__UpdateFunc();
	void TimelineLightAnimation__FinishedFunc();
	void UserConstructionScript();
	void Event_Start_Drain();
	void Event_Stop_Drain();
	void Init();
	void SetupMiniPostProcessTransform();
	void OnRep_Sabotaged();
	void SetSabotaged(bool IsSabotaged);
	void GetIsNoOneInside(bool* NoOneInside);
	void OnRep_Open();
	void Add_Score(const class FName Data_Table_Row_Name, class ACharacterSCTBP_C* Character);
	void OnRep_Sabotage_Start_Timestamp();
	void UI_Update_Repair_Timer_Text();
	void Server_Set_Sabotaged_State(bool Sabotaged_0);
	void Become_Sabotaged();
	void Become_Repaired();
	void Remove_OxygenPotion_Stacks();
	void Set_ActivatingActor_and_Inventory_from_Payload(const struct FInteractionPayload& InteractionPayload);
	void Get_Oxygen_Amount_To_Add_From_Power_Percent(float* Amount);
	void Get_Oxygen_Amount_to_Add_from_Power_Seconds(float* Amount);
	void Oxygen_Flask_Fail_Refill();
	void AnimateWorldOxygen(bool Transfer);
	void ShowPOIIfLowOxygen();
	void AddExtenders(bool Up);
	void OnRep_Held();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"OxygenOutletBP_C">();
	}
	static class AOxygenOutletBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AOxygenOutletBP_C>();
	}
};
static_assert(alignof(AOxygenOutletBP_C) == 0x000008, "Wrong alignment on AOxygenOutletBP_C");
static_assert(sizeof(AOxygenOutletBP_C) == 0x000470, "Wrong size on AOxygenOutletBP_C");
static_assert(offsetof(AOxygenOutletBP_C, UberGraphFrame) == 0x000220, "Member 'AOxygenOutletBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, AK_HandIn) == 0x000228, "Member 'AOxygenOutletBP_C::AK_HandIn' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, AkSabotage) == 0x000230, "Member 'AOxygenOutletBP_C::AkSabotage' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, InstancedStaticMeshDown) == 0x000238, "Member 'AOxygenOutletBP_C::InstancedStaticMeshDown' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, InstancedStaticMeshUp) == 0x000240, "Member 'AOxygenOutletBP_C::InstancedStaticMeshUp' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, POI_WidgetComponent) == 0x000248, "Member 'AOxygenOutletBP_C::POI_WidgetComponent' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, ParticleSystem1) == 0x000250, "Member 'AOxygenOutletBP_C::ParticleSystem1' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, ParticleSystem) == 0x000258, "Member 'AOxygenOutletBP_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Oxygen_Flask) == 0x000260, "Member 'AOxygenOutletBP_C::Oxygen_Flask' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, OxygenFlaskInteractionComponentRefill) == 0x000268, "Member 'AOxygenOutletBP_C::OxygenFlaskInteractionComponentRefill' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Sabotaged_Timer) == 0x000270, "Member 'AOxygenOutletBP_C::Sabotaged_Timer' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, InteractionProgressBarCreatorRefill) == 0x000278, "Member 'AOxygenOutletBP_C::InteractionProgressBarCreatorRefill' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, InteractionProgressBarCreatorSabotage) == 0x000280, "Member 'AOxygenOutletBP_C::InteractionProgressBarCreatorSabotage' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, PhysicsConstraint) == 0x000288, "Member 'AOxygenOutletBP_C::PhysicsConstraint' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, MouthPiece) == 0x000290, "Member 'AOxygenOutletBP_C::MouthPiece' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Rope) == 0x000298, "Member 'AOxygenOutletBP_C::Rope' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Box) == 0x0002A0, "Member 'AOxygenOutletBP_C::Box' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, ContextStaticMeshSabotage) == 0x0002A8, "Member 'AOxygenOutletBP_C::ContextStaticMeshSabotage' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Interaction_ComponentSabotage) == 0x0002B0, "Member 'AOxygenOutletBP_C::Interaction_ComponentSabotage' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, OutlinePostProcessVolume) == 0x0002B8, "Member 'AOxygenOutletBP_C::OutlinePostProcessVolume' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, OutlineMesh) == 0x0002C0, "Member 'AOxygenOutletBP_C::OutlineMesh' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, ContextStaticMeshRefill) == 0x0002C8, "Member 'AOxygenOutletBP_C::ContextStaticMeshRefill' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Stand) == 0x0002D0, "Member 'AOxygenOutletBP_C::Stand' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Root) == 0x0002D8, "Member 'AOxygenOutletBP_C::Root' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Two) == 0x0002E0, "Member 'AOxygenOutletBP_C::Two' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, O) == 0x0002E8, "Member 'AOxygenOutletBP_C::O' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, EmergencyOxygen) == 0x0002F0, "Member 'AOxygenOutletBP_C::EmergencyOxygen' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Glass) == 0x0002F8, "Member 'AOxygenOutletBP_C::Glass' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, SpotLight) == 0x000300, "Member 'AOxygenOutletBP_C::SpotLight' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Ak) == 0x000308, "Member 'AOxygenOutletBP_C::Ak' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Lid_Alpha_4A49D66C48CCF174C8E9FFA7CFB7ABF7) == 0x000310, "Member 'AOxygenOutletBP_C::Lid_Alpha_4A49D66C48CCF174C8E9FFA7CFB7ABF7' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Lid__Direction_4A49D66C48CCF174C8E9FFA7CFB7ABF7) == 0x000314, "Member 'AOxygenOutletBP_C::Lid__Direction_4A49D66C48CCF174C8E9FFA7CFB7ABF7' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Lid) == 0x000318, "Member 'AOxygenOutletBP_C::Lid' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, TimelineLightAnimation_Alpha_585D91D64F4E1FAED1AC29B2FBF5E2ED) == 0x000320, "Member 'AOxygenOutletBP_C::TimelineLightAnimation_Alpha_585D91D64F4E1FAED1AC29B2FBF5E2ED' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, TimelineLightAnimation__Direction_585D91D64F4E1FAED1AC29B2FBF5E2ED) == 0x000324, "Member 'AOxygenOutletBP_C::TimelineLightAnimation__Direction_585D91D64F4E1FAED1AC29B2FBF5E2ED' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, TimelineLightAnimation) == 0x000328, "Member 'AOxygenOutletBP_C::TimelineLightAnimation' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, LightMaxIntensity) == 0x000330, "Member 'AOxygenOutletBP_C::LightMaxIntensity' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, LightMinIntensity) == 0x000334, "Member 'AOxygenOutletBP_C::LightMinIntensity' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, LightCurve) == 0x000338, "Member 'AOxygenOutletBP_C::LightCurve' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, StartDrain) == 0x000340, "Member 'AOxygenOutletBP_C::StartDrain' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, StopDrain) == 0x000348, "Member 'AOxygenOutletBP_C::StopDrain' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, WorldOxygenDrainDot) == 0x000350, "Member 'AOxygenOutletBP_C::WorldOxygenDrainDot' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Sabotaged) == 0x000354, "Member 'AOxygenOutletBP_C::Sabotaged' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Time_To_Spend_Sabotaged) == 0x000358, "Member 'AOxygenOutletBP_C::Time_To_Spend_Sabotaged' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, SabotagingCharacter) == 0x000360, "Member 'AOxygenOutletBP_C::SabotagingCharacter' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, StopSabotageAudio) == 0x000368, "Member 'AOxygenOutletBP_C::StopSabotageAudio' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, StartSabotageAudio) == 0x000370, "Member 'AOxygenOutletBP_C::StartSabotageAudio' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Open) == 0x000378, "Member 'AOxygenOutletBP_C::Open' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, RestPoseTester) == 0x000380, "Member 'AOxygenOutletBP_C::RestPoseTester' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, SabotageTimerHandle) == 0x0003B8, "Member 'AOxygenOutletBP_C::SabotageTimerHandle' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Amount_of_Oxygen_to_Add) == 0x0003C0, "Member 'AOxygenOutletBP_C::Amount_of_Oxygen_to_Add' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Activating_Actor) == 0x0003C8, "Member 'AOxygenOutletBP_C::Activating_Actor' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Sabotage_Start_Timestamp) == 0x0003D0, "Member 'AOxygenOutletBP_C::Sabotage_Start_Timestamp' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Inventory) == 0x0003D8, "Member 'AOxygenOutletBP_C::Inventory' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Oxygen_Supplied_Text) == 0x0003E0, "Member 'AOxygenOutletBP_C::Oxygen_Supplied_Text' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Oxygen_Sabotaged_Text) == 0x0003F8, "Member 'AOxygenOutletBP_C::Oxygen_Sabotaged_Text' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, bHasSucceeded) == 0x000410, "Member 'AOxygenOutletBP_C::bHasSucceeded' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Oxygen_Failed_To_Supply_With_Stacks_Lost) == 0x000418, "Member 'AOxygenOutletBP_C::Oxygen_Failed_To_Supply_With_Stacks_Lost' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Oxygen_Failed_To_Supply_Without_Stacks_Lost) == 0x000430, "Member 'AOxygenOutletBP_C::Oxygen_Failed_To_Supply_Without_Stacks_Lost' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Message_Duration) == 0x000448, "Member 'AOxygenOutletBP_C::Message_Duration' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Oxygen_to_Remove_on_Sabotaged) == 0x00044C, "Member 'AOxygenOutletBP_C::Oxygen_to_Remove_on_Sabotaged' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, ShowScreenPOI) == 0x000450, "Member 'AOxygenOutletBP_C::ShowScreenPOI' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, POIWidget) == 0x000458, "Member 'AOxygenOutletBP_C::POIWidget' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, ExtendersUp) == 0x000460, "Member 'AOxygenOutletBP_C::ExtendersUp' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, ExtendersDown) == 0x000464, "Member 'AOxygenOutletBP_C::ExtendersDown' has a wrong offset!");
static_assert(offsetof(AOxygenOutletBP_C, Held) == 0x000468, "Member 'AOxygenOutletBP_C::Held' has a wrong offset!");

}

