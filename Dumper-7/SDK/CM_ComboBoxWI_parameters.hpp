#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CM_ComboBoxWI

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function CM_ComboBoxWI.CM_ComboBoxWI_C.OnSelectionChanged__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct CM_ComboBoxWI_C_OnSelectionChanged__DelegateSignature final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CM_ComboBoxWI_C_OnSelectionChanged__DelegateSignature) == 0x000008, "Wrong alignment on CM_ComboBoxWI_C_OnSelectionChanged__DelegateSignature");
static_assert(sizeof(CM_ComboBoxWI_C_OnSelectionChanged__DelegateSignature) == 0x000018, "Wrong size on CM_ComboBoxWI_C_OnSelectionChanged__DelegateSignature");
static_assert(offsetof(CM_ComboBoxWI_C_OnSelectionChanged__DelegateSignature, SelectedItem) == 0x000000, "Member 'CM_ComboBoxWI_C_OnSelectionChanged__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(CM_ComboBoxWI_C_OnSelectionChanged__DelegateSignature, SelectionType) == 0x000010, "Member 'CM_ComboBoxWI_C_OnSelectionChanged__DelegateSignature::SelectionType' has a wrong offset!");

// Function CM_ComboBoxWI.CM_ComboBoxWI_C.ExecuteUbergraph_CM_ComboBoxWI
// 0x0188 (0x0188 - 0x0000)
struct CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry_1;                         // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_SelectedItem;           // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_ComponentBoundEvent_SelectionType;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x0054(0x0008)(NoDestructor)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x005C(0x0008)(NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0064(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x00A0(0x0070)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0110(0x0070)(ConstParm)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI) == 0x000008, "Wrong alignment on CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI");
static_assert(sizeof(CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI) == 0x000188, "Wrong size on CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI");
static_assert(offsetof(CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI, EntryPoint) == 0x000000, "Member 'CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI::EntryPoint' has a wrong offset!");
static_assert(offsetof(CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI, K2Node_Event_MyGeometry_1) == 0x000004, "Member 'CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI::K2Node_Event_MyGeometry_1' has a wrong offset!");
static_assert(offsetof(CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI, K2Node_ComponentBoundEvent_SelectedItem) == 0x000040, "Member 'CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI::K2Node_ComponentBoundEvent_SelectedItem' has a wrong offset!");
static_assert(offsetof(CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI, K2Node_ComponentBoundEvent_SelectionType) == 0x000050, "Member 'CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI::K2Node_ComponentBoundEvent_SelectionType' has a wrong offset!");
static_assert(offsetof(CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI, K2Node_Event_InFocusEvent_1) == 0x000054, "Member 'CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI, K2Node_Event_InFocusEvent) == 0x00005C, "Member 'CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI, K2Node_Event_MyGeometry) == 0x000064, "Member 'CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI, K2Node_Event_MouseEvent_1) == 0x0000A0, "Member 'CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI, K2Node_Event_MouseEvent) == 0x000110, "Member 'CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI, K2Node_Event_IsDesignTime) == 0x000180, "Member 'CM_ComboBoxWI_C_ExecuteUbergraph_CM_ComboBoxWI::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function CM_ComboBoxWI.CM_ComboBoxWI_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct CM_ComboBoxWI_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CM_ComboBoxWI_C_PreConstruct) == 0x000001, "Wrong alignment on CM_ComboBoxWI_C_PreConstruct");
static_assert(sizeof(CM_ComboBoxWI_C_PreConstruct) == 0x000001, "Wrong size on CM_ComboBoxWI_C_PreConstruct");
static_assert(offsetof(CM_ComboBoxWI_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'CM_ComboBoxWI_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function CM_ComboBoxWI.CM_ComboBoxWI_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct CM_ComboBoxWI_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(CM_ComboBoxWI_C_OnMouseLeave) == 0x000008, "Wrong alignment on CM_ComboBoxWI_C_OnMouseLeave");
static_assert(sizeof(CM_ComboBoxWI_C_OnMouseLeave) == 0x000070, "Wrong size on CM_ComboBoxWI_C_OnMouseLeave");
static_assert(offsetof(CM_ComboBoxWI_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'CM_ComboBoxWI_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function CM_ComboBoxWI.CM_ComboBoxWI_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct CM_ComboBoxWI_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(CM_ComboBoxWI_C_OnMouseEnter) == 0x000008, "Wrong alignment on CM_ComboBoxWI_C_OnMouseEnter");
static_assert(sizeof(CM_ComboBoxWI_C_OnMouseEnter) == 0x0000A8, "Wrong size on CM_ComboBoxWI_C_OnMouseEnter");
static_assert(offsetof(CM_ComboBoxWI_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'CM_ComboBoxWI_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(CM_ComboBoxWI_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'CM_ComboBoxWI_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function CM_ComboBoxWI.CM_ComboBoxWI_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct CM_ComboBoxWI_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(CM_ComboBoxWI_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on CM_ComboBoxWI_C_OnRemovedFromFocusPath");
static_assert(sizeof(CM_ComboBoxWI_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on CM_ComboBoxWI_C_OnRemovedFromFocusPath");
static_assert(offsetof(CM_ComboBoxWI_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'CM_ComboBoxWI_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function CM_ComboBoxWI.CM_ComboBoxWI_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct CM_ComboBoxWI_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(CM_ComboBoxWI_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on CM_ComboBoxWI_C_OnAddedToFocusPath");
static_assert(sizeof(CM_ComboBoxWI_C_OnAddedToFocusPath) == 0x000008, "Wrong size on CM_ComboBoxWI_C_OnAddedToFocusPath");
static_assert(offsetof(CM_ComboBoxWI_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'CM_ComboBoxWI_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function CM_ComboBoxWI.CM_ComboBoxWI_C.BndEvt__CM_ComboBoxWI_ComboBox_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct CM_ComboBoxWI_C_BndEvt__CM_ComboBoxWI_ComboBox_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CM_ComboBoxWI_C_BndEvt__CM_ComboBoxWI_ComboBox_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on CM_ComboBoxWI_C_BndEvt__CM_ComboBoxWI_ComboBox_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature");
static_assert(sizeof(CM_ComboBoxWI_C_BndEvt__CM_ComboBoxWI_ComboBox_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature) == 0x000018, "Wrong size on CM_ComboBoxWI_C_BndEvt__CM_ComboBoxWI_ComboBox_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature");
static_assert(offsetof(CM_ComboBoxWI_C_BndEvt__CM_ComboBoxWI_ComboBox_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature, SelectedItem) == 0x000000, "Member 'CM_ComboBoxWI_C_BndEvt__CM_ComboBoxWI_ComboBox_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(CM_ComboBoxWI_C_BndEvt__CM_ComboBoxWI_ComboBox_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature, SelectionType) == 0x000010, "Member 'CM_ComboBoxWI_C_BndEvt__CM_ComboBoxWI_ComboBox_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature::SelectionType' has a wrong offset!");

// Function CM_ComboBoxWI.CM_ComboBoxWI_C.Tick
// 0x003C (0x003C - 0x0000)
struct CM_ComboBoxWI_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CM_ComboBoxWI_C_Tick) == 0x000004, "Wrong alignment on CM_ComboBoxWI_C_Tick");
static_assert(sizeof(CM_ComboBoxWI_C_Tick) == 0x00003C, "Wrong size on CM_ComboBoxWI_C_Tick");
static_assert(offsetof(CM_ComboBoxWI_C_Tick, MyGeometry) == 0x000000, "Member 'CM_ComboBoxWI_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(CM_ComboBoxWI_C_Tick, InDeltaTime) == 0x000038, "Member 'CM_ComboBoxWI_C_Tick::InDeltaTime' has a wrong offset!");

// Function CM_ComboBoxWI.CM_ComboBoxWI_C.SetDefaultValues
// 0x0048 (0x0048 - 0x0000)
struct CM_ComboBoxWI_C_SetDefaultValues final
{
public:
	TArray<class FString>                         Entries;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 DefaultValue;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CM_ComboBoxWI_C_SetDefaultValues) == 0x000008, "Wrong alignment on CM_ComboBoxWI_C_SetDefaultValues");
static_assert(sizeof(CM_ComboBoxWI_C_SetDefaultValues) == 0x000048, "Wrong size on CM_ComboBoxWI_C_SetDefaultValues");
static_assert(offsetof(CM_ComboBoxWI_C_SetDefaultValues, Entries) == 0x000000, "Member 'CM_ComboBoxWI_C_SetDefaultValues::Entries' has a wrong offset!");
static_assert(offsetof(CM_ComboBoxWI_C_SetDefaultValues, DefaultValue) == 0x000010, "Member 'CM_ComboBoxWI_C_SetDefaultValues::DefaultValue' has a wrong offset!");
static_assert(offsetof(CM_ComboBoxWI_C_SetDefaultValues, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'CM_ComboBoxWI_C_SetDefaultValues::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_ComboBoxWI_C_SetDefaultValues, Temp_int_Array_Index_Variable) == 0x000024, "Member 'CM_ComboBoxWI_C_SetDefaultValues::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CM_ComboBoxWI_C_SetDefaultValues, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'CM_ComboBoxWI_C_SetDefaultValues::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CM_ComboBoxWI_C_SetDefaultValues, CallFunc_Array_Get_Item) == 0x000030, "Member 'CM_ComboBoxWI_C_SetDefaultValues::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CM_ComboBoxWI_C_SetDefaultValues, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'CM_ComboBoxWI_C_SetDefaultValues::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_ComboBoxWI_C_SetDefaultValues, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'CM_ComboBoxWI_C_SetDefaultValues::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function CM_ComboBoxWI.CM_ComboBoxWI_C.OnMouseOver
// 0x0218 (0x0218 - 0x0000)
struct CM_ComboBoxWI_C_OnMouseOver final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x0160(0x00B8)(UObjectWrapper)
};
static_assert(alignof(CM_ComboBoxWI_C_OnMouseOver) == 0x000008, "Wrong alignment on CM_ComboBoxWI_C_OnMouseOver");
static_assert(sizeof(CM_ComboBoxWI_C_OnMouseOver) == 0x000218, "Wrong size on CM_ComboBoxWI_C_OnMouseOver");
static_assert(offsetof(CM_ComboBoxWI_C_OnMouseOver, MyGeometry) == 0x000000, "Member 'CM_ComboBoxWI_C_OnMouseOver::MyGeometry' has a wrong offset!");
static_assert(offsetof(CM_ComboBoxWI_C_OnMouseOver, MouseEvent) == 0x000038, "Member 'CM_ComboBoxWI_C_OnMouseOver::MouseEvent' has a wrong offset!");
static_assert(offsetof(CM_ComboBoxWI_C_OnMouseOver, ReturnValue) == 0x0000A8, "Member 'CM_ComboBoxWI_C_OnMouseOver::ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_ComboBoxWI_C_OnMouseOver, K2Node_MakeStruct_EventReply) == 0x000160, "Member 'CM_ComboBoxWI_C_OnMouseOver::K2Node_MakeStruct_EventReply' has a wrong offset!");

// Function CM_ComboBoxWI.CM_ComboBoxWI_C.GetNavigationWidget
// 0x0008 (0x0008 - 0x0000)
struct CM_ComboBoxWI_C_GetNavigationWidget final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CM_ComboBoxWI_C_GetNavigationWidget) == 0x000008, "Wrong alignment on CM_ComboBoxWI_C_GetNavigationWidget");
static_assert(sizeof(CM_ComboBoxWI_C_GetNavigationWidget) == 0x000008, "Wrong size on CM_ComboBoxWI_C_GetNavigationWidget");
static_assert(offsetof(CM_ComboBoxWI_C_GetNavigationWidget, Widget) == 0x000000, "Member 'CM_ComboBoxWI_C_GetNavigationWidget::Widget' has a wrong offset!");

}

