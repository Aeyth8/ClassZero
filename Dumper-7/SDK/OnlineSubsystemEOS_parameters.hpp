#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OnlineSubsystemEOS

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OnlineSubsystemEOS_structs.hpp"


namespace SDK::Params
{

// Function OnlineSubsystemEOS.EOSGetPlayerAvatar.GetPlayerAvatar
// 0x0048 (0x0048 - 0x0000)
struct EOSGetPlayerAvatar_GetPlayerAvatar final
{
public:
	const class UObject*                          WorldContextObject_0;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LocalUserNum_0;                                    // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       UserId_0;                                          // 0x0010(0x0028)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             DefaultAvatar_0;                                   // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEOSGetPlayerAvatar*                    ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EOSGetPlayerAvatar_GetPlayerAvatar) == 0x000008, "Wrong alignment on EOSGetPlayerAvatar_GetPlayerAvatar");
static_assert(sizeof(EOSGetPlayerAvatar_GetPlayerAvatar) == 0x000048, "Wrong size on EOSGetPlayerAvatar_GetPlayerAvatar");
static_assert(offsetof(EOSGetPlayerAvatar_GetPlayerAvatar, WorldContextObject_0) == 0x000000, "Member 'EOSGetPlayerAvatar_GetPlayerAvatar::WorldContextObject_0' has a wrong offset!");
static_assert(offsetof(EOSGetPlayerAvatar_GetPlayerAvatar, LocalUserNum_0) == 0x000008, "Member 'EOSGetPlayerAvatar_GetPlayerAvatar::LocalUserNum_0' has a wrong offset!");
static_assert(offsetof(EOSGetPlayerAvatar_GetPlayerAvatar, UserId_0) == 0x000010, "Member 'EOSGetPlayerAvatar_GetPlayerAvatar::UserId_0' has a wrong offset!");
static_assert(offsetof(EOSGetPlayerAvatar_GetPlayerAvatar, DefaultAvatar_0) == 0x000038, "Member 'EOSGetPlayerAvatar_GetPlayerAvatar::DefaultAvatar_0' has a wrong offset!");
static_assert(offsetof(EOSGetPlayerAvatar_GetPlayerAvatar, ReturnValue) == 0x000040, "Member 'EOSGetPlayerAvatar_GetPlayerAvatar::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemEOS.EOSUserInterface_EnterDevicePinCode.SetupUserInterface
// 0x0028 (0x0028 - 0x0000)
struct EOSUserInterface_EnterDevicePinCode_SetupUserInterface final
{
public:
	class UEOSUserInterface_EnterDevicePinCode_Context* Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 VerificationUrl;                                   // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PinCode;                                           // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EOSUserInterface_EnterDevicePinCode_SetupUserInterface) == 0x000008, "Wrong alignment on EOSUserInterface_EnterDevicePinCode_SetupUserInterface");
static_assert(sizeof(EOSUserInterface_EnterDevicePinCode_SetupUserInterface) == 0x000028, "Wrong size on EOSUserInterface_EnterDevicePinCode_SetupUserInterface");
static_assert(offsetof(EOSUserInterface_EnterDevicePinCode_SetupUserInterface, Context) == 0x000000, "Member 'EOSUserInterface_EnterDevicePinCode_SetupUserInterface::Context' has a wrong offset!");
static_assert(offsetof(EOSUserInterface_EnterDevicePinCode_SetupUserInterface, VerificationUrl) == 0x000008, "Member 'EOSUserInterface_EnterDevicePinCode_SetupUserInterface::VerificationUrl' has a wrong offset!");
static_assert(offsetof(EOSUserInterface_EnterDevicePinCode_SetupUserInterface, PinCode) == 0x000018, "Member 'EOSUserInterface_EnterDevicePinCode_SetupUserInterface::PinCode' has a wrong offset!");

// Function OnlineSubsystemEOS.EOSUserInterface_LinkEOSAccountsAgainstEAS_Context.SelectedCandidates
// 0x0010 (0x0010 - 0x0000)
struct EOSUserInterface_LinkEOSAccountsAgainstEAS_Context_SelectedCandidates final
{
public:
	TArray<struct FEOSUserInterface_CandidateEOSAccount> SelectedCandidates_0;                              // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(EOSUserInterface_LinkEOSAccountsAgainstEAS_Context_SelectedCandidates) == 0x000008, "Wrong alignment on EOSUserInterface_LinkEOSAccountsAgainstEAS_Context_SelectedCandidates");
static_assert(sizeof(EOSUserInterface_LinkEOSAccountsAgainstEAS_Context_SelectedCandidates) == 0x000010, "Wrong size on EOSUserInterface_LinkEOSAccountsAgainstEAS_Context_SelectedCandidates");
static_assert(offsetof(EOSUserInterface_LinkEOSAccountsAgainstEAS_Context_SelectedCandidates, SelectedCandidates_0) == 0x000000, "Member 'EOSUserInterface_LinkEOSAccountsAgainstEAS_Context_SelectedCandidates::SelectedCandidates_0' has a wrong offset!");

// Function OnlineSubsystemEOS.EOSUserInterface_LinkEOSAccountsAgainstEAS.SetupUserInterface
// 0x0018 (0x0018 - 0x0000)
struct EOSUserInterface_LinkEOSAccountsAgainstEAS_SetupUserInterface final
{
public:
	class UEOSUserInterface_LinkEOSAccountsAgainstEAS_Context* Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEOSUserInterface_CandidateEOSAccount> AvailableCandidates;                               // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EOSUserInterface_LinkEOSAccountsAgainstEAS_SetupUserInterface) == 0x000008, "Wrong alignment on EOSUserInterface_LinkEOSAccountsAgainstEAS_SetupUserInterface");
static_assert(sizeof(EOSUserInterface_LinkEOSAccountsAgainstEAS_SetupUserInterface) == 0x000018, "Wrong size on EOSUserInterface_LinkEOSAccountsAgainstEAS_SetupUserInterface");
static_assert(offsetof(EOSUserInterface_LinkEOSAccountsAgainstEAS_SetupUserInterface, Context) == 0x000000, "Member 'EOSUserInterface_LinkEOSAccountsAgainstEAS_SetupUserInterface::Context' has a wrong offset!");
static_assert(offsetof(EOSUserInterface_LinkEOSAccountsAgainstEAS_SetupUserInterface, AvailableCandidates) == 0x000008, "Member 'EOSUserInterface_LinkEOSAccountsAgainstEAS_SetupUserInterface::AvailableCandidates' has a wrong offset!");

// Function OnlineSubsystemEOS.EOSUserInterface_SelectEOSAccount_Context.SelectCandidate
// 0x00B0 (0x00B0 - 0x0000)
struct EOSUserInterface_SelectEOSAccount_Context_SelectCandidate final
{
public:
	struct FEOSUserInterface_CandidateEOSAccount  SelectedCandidate;                                 // 0x0000(0x00B0)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EOSUserInterface_SelectEOSAccount_Context_SelectCandidate) == 0x000008, "Wrong alignment on EOSUserInterface_SelectEOSAccount_Context_SelectCandidate");
static_assert(sizeof(EOSUserInterface_SelectEOSAccount_Context_SelectCandidate) == 0x0000B0, "Wrong size on EOSUserInterface_SelectEOSAccount_Context_SelectCandidate");
static_assert(offsetof(EOSUserInterface_SelectEOSAccount_Context_SelectCandidate, SelectedCandidate) == 0x000000, "Member 'EOSUserInterface_SelectEOSAccount_Context_SelectCandidate::SelectedCandidate' has a wrong offset!");

// Function OnlineSubsystemEOS.EOSUserInterface_SelectEOSAccount.SetupUserInterface
// 0x0018 (0x0018 - 0x0000)
struct EOSUserInterface_SelectEOSAccount_SetupUserInterface final
{
public:
	class UEOSUserInterface_SelectEOSAccount_Context* Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEOSUserInterface_CandidateEOSAccount> AvailableCandidates;                               // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EOSUserInterface_SelectEOSAccount_SetupUserInterface) == 0x000008, "Wrong alignment on EOSUserInterface_SelectEOSAccount_SetupUserInterface");
static_assert(sizeof(EOSUserInterface_SelectEOSAccount_SetupUserInterface) == 0x000018, "Wrong size on EOSUserInterface_SelectEOSAccount_SetupUserInterface");
static_assert(offsetof(EOSUserInterface_SelectEOSAccount_SetupUserInterface, Context) == 0x000000, "Member 'EOSUserInterface_SelectEOSAccount_SetupUserInterface::Context' has a wrong offset!");
static_assert(offsetof(EOSUserInterface_SelectEOSAccount_SetupUserInterface, AvailableCandidates) == 0x000008, "Member 'EOSUserInterface_SelectEOSAccount_SetupUserInterface::AvailableCandidates' has a wrong offset!");

// Function OnlineSubsystemEOS.EOSUserInterface_SwitchToEASAccount_Context.SelectChoice
// 0x0001 (0x0001 - 0x0000)
struct EOSUserInterface_SwitchToEASAccount_Context_SelectChoice final
{
public:
	EEOSUserInterface_SwitchToEASAccount_Choice   SelectedChoice;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EOSUserInterface_SwitchToEASAccount_Context_SelectChoice) == 0x000001, "Wrong alignment on EOSUserInterface_SwitchToEASAccount_Context_SelectChoice");
static_assert(sizeof(EOSUserInterface_SwitchToEASAccount_Context_SelectChoice) == 0x000001, "Wrong size on EOSUserInterface_SwitchToEASAccount_Context_SelectChoice");
static_assert(offsetof(EOSUserInterface_SwitchToEASAccount_Context_SelectChoice, SelectedChoice) == 0x000000, "Member 'EOSUserInterface_SwitchToEASAccount_Context_SelectChoice::SelectedChoice' has a wrong offset!");

// Function OnlineSubsystemEOS.EOSUserInterface_SwitchToEASAccount.SetupUserInterface
// 0x0018 (0x0018 - 0x0000)
struct EOSUserInterface_SwitchToEASAccount_SetupUserInterface final
{
public:
	class UEOSUserInterface_SwitchToEASAccount_Context* Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EpicAccountName;                                   // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EOSUserInterface_SwitchToEASAccount_SetupUserInterface) == 0x000008, "Wrong alignment on EOSUserInterface_SwitchToEASAccount_SetupUserInterface");
static_assert(sizeof(EOSUserInterface_SwitchToEASAccount_SetupUserInterface) == 0x000018, "Wrong size on EOSUserInterface_SwitchToEASAccount_SetupUserInterface");
static_assert(offsetof(EOSUserInterface_SwitchToEASAccount_SetupUserInterface, Context) == 0x000000, "Member 'EOSUserInterface_SwitchToEASAccount_SetupUserInterface::Context' has a wrong offset!");
static_assert(offsetof(EOSUserInterface_SwitchToEASAccount_SetupUserInterface, EpicAccountName) == 0x000008, "Member 'EOSUserInterface_SwitchToEASAccount_SetupUserInterface::EpicAccountName' has a wrong offset!");

}

