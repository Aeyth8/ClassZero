#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerListSCT

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function PlayerListSCT.PlayerListSCT_C.ExecuteUbergraph_PlayerListSCT
// 0x0030 (0x0030 - 0x0000)
struct PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Visible;                        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState*                        K2Node_Event_playerState_1;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState*                        K2Node_Event_playerState;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT) == 0x000008, "Wrong alignment on PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT");
static_assert(sizeof(PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT) == 0x000030, "Wrong size on PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT");
static_assert(offsetof(PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT, EntryPoint) == 0x000000, "Member 'PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT, Temp_byte_Variable) == 0x000004, "Member 'PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT, Temp_byte_Variable_1) == 0x000005, "Member 'PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT, K2Node_Event_IsDesignTime) == 0x000006, "Member 'PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT, K2Node_CustomEvent_Visible) == 0x000007, "Member 'PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT::K2Node_CustomEvent_Visible' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT, Temp_bool_Variable) == 0x000010, "Member 'PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT, K2Node_Event_playerState_1) == 0x000018, "Member 'PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT::K2Node_Event_playerState_1' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT, K2Node_Select_Default) == 0x000020, "Member 'PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT, K2Node_Event_playerState) == 0x000028, "Member 'PlayerListSCT_C_ExecuteUbergraph_PlayerListSCT::K2Node_Event_playerState' has a wrong offset!");

// Function PlayerListSCT.PlayerListSCT_C.PlayerStateRemoved
// 0x0008 (0x0008 - 0x0000)
struct PlayerListSCT_C_PlayerStateRemoved final
{
public:
	class ASCTPlayerState*                        PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerListSCT_C_PlayerStateRemoved) == 0x000008, "Wrong alignment on PlayerListSCT_C_PlayerStateRemoved");
static_assert(sizeof(PlayerListSCT_C_PlayerStateRemoved) == 0x000008, "Wrong size on PlayerListSCT_C_PlayerStateRemoved");
static_assert(offsetof(PlayerListSCT_C_PlayerStateRemoved, PlayerState) == 0x000000, "Member 'PlayerListSCT_C_PlayerStateRemoved::PlayerState' has a wrong offset!");

// Function PlayerListSCT.PlayerListSCT_C.PlayerStateAdded
// 0x0008 (0x0008 - 0x0000)
struct PlayerListSCT_C_PlayerStateAdded final
{
public:
	class ASCTPlayerState*                        PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerListSCT_C_PlayerStateAdded) == 0x000008, "Wrong alignment on PlayerListSCT_C_PlayerStateAdded");
static_assert(sizeof(PlayerListSCT_C_PlayerStateAdded) == 0x000008, "Wrong size on PlayerListSCT_C_PlayerStateAdded");
static_assert(offsetof(PlayerListSCT_C_PlayerStateAdded, PlayerState) == 0x000000, "Member 'PlayerListSCT_C_PlayerStateAdded::PlayerState' has a wrong offset!");

// Function PlayerListSCT.PlayerListSCT_C.ShowWidget
// 0x0001 (0x0001 - 0x0000)
struct PlayerListSCT_C_ShowWidget final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListSCT_C_ShowWidget) == 0x000001, "Wrong alignment on PlayerListSCT_C_ShowWidget");
static_assert(sizeof(PlayerListSCT_C_ShowWidget) == 0x000001, "Wrong size on PlayerListSCT_C_ShowWidget");
static_assert(offsetof(PlayerListSCT_C_ShowWidget, Visible) == 0x000000, "Member 'PlayerListSCT_C_ShowWidget::Visible' has a wrong offset!");

// Function PlayerListSCT.PlayerListSCT_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct PlayerListSCT_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListSCT_C_PreConstruct) == 0x000001, "Wrong alignment on PlayerListSCT_C_PreConstruct");
static_assert(sizeof(PlayerListSCT_C_PreConstruct) == 0x000001, "Wrong size on PlayerListSCT_C_PreConstruct");
static_assert(offsetof(PlayerListSCT_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'PlayerListSCT_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function PlayerListSCT.PlayerListSCT_C.UpdateListOfPlayers
// 0x0058 (0x0058 - 0x0000)
struct PlayerListSCT_C_UpdateListOfPlayers final
{
public:
	TArray<class APlayerState*>                   PlayerArray;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         L_YTransform;                                      // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState*                        K2Node_DynamicCast_AsSCTPlayer_State;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerListSCT_C_UpdateListOfPlayers) == 0x000008, "Wrong alignment on PlayerListSCT_C_UpdateListOfPlayers");
static_assert(sizeof(PlayerListSCT_C_UpdateListOfPlayers) == 0x000058, "Wrong size on PlayerListSCT_C_UpdateListOfPlayers");
static_assert(offsetof(PlayerListSCT_C_UpdateListOfPlayers, PlayerArray) == 0x000000, "Member 'PlayerListSCT_C_UpdateListOfPlayers::PlayerArray' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_UpdateListOfPlayers, L_YTransform) == 0x000010, "Member 'PlayerListSCT_C_UpdateListOfPlayers::L_YTransform' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_UpdateListOfPlayers, Temp_int_Array_Index_Variable) == 0x000014, "Member 'PlayerListSCT_C_UpdateListOfPlayers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_UpdateListOfPlayers, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'PlayerListSCT_C_UpdateListOfPlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_UpdateListOfPlayers, CallFunc_Array_Get_Item) == 0x000020, "Member 'PlayerListSCT_C_UpdateListOfPlayers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_UpdateListOfPlayers, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'PlayerListSCT_C_UpdateListOfPlayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_UpdateListOfPlayers, K2Node_DynamicCast_AsSCTPlayer_State) == 0x000030, "Member 'PlayerListSCT_C_UpdateListOfPlayers::K2Node_DynamicCast_AsSCTPlayer_State' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_UpdateListOfPlayers, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'PlayerListSCT_C_UpdateListOfPlayers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_UpdateListOfPlayers, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'PlayerListSCT_C_UpdateListOfPlayers::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_UpdateListOfPlayers, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'PlayerListSCT_C_UpdateListOfPlayers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_UpdateListOfPlayers, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'PlayerListSCT_C_UpdateListOfPlayers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_UpdateListOfPlayers, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'PlayerListSCT_C_UpdateListOfPlayers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function PlayerListSCT.PlayerListSCT_C.UpdateListOfPlayersDesignTime
// 0x0030 (0x0030 - 0x0000)
struct PlayerListSCT_C_UpdateListOfPlayersDesignTime final
{
public:
	int32                                         Fake_Player_Count;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerListEntrySCT_C*                  CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerListSCT_C_UpdateListOfPlayersDesignTime) == 0x000008, "Wrong alignment on PlayerListSCT_C_UpdateListOfPlayersDesignTime");
static_assert(sizeof(PlayerListSCT_C_UpdateListOfPlayersDesignTime) == 0x000030, "Wrong size on PlayerListSCT_C_UpdateListOfPlayersDesignTime");
static_assert(offsetof(PlayerListSCT_C_UpdateListOfPlayersDesignTime, Fake_Player_Count) == 0x000000, "Member 'PlayerListSCT_C_UpdateListOfPlayersDesignTime::Fake_Player_Count' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_UpdateListOfPlayersDesignTime, Temp_int_Variable) == 0x000004, "Member 'PlayerListSCT_C_UpdateListOfPlayersDesignTime::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_UpdateListOfPlayersDesignTime, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'PlayerListSCT_C_UpdateListOfPlayersDesignTime::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_UpdateListOfPlayersDesignTime, CallFunc_Create_ReturnValue) == 0x000010, "Member 'PlayerListSCT_C_UpdateListOfPlayersDesignTime::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_UpdateListOfPlayersDesignTime, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000018, "Member 'PlayerListSCT_C_UpdateListOfPlayersDesignTime::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_UpdateListOfPlayersDesignTime, CallFunc_AddChildToCanvas_ReturnValue) == 0x000020, "Member 'PlayerListSCT_C_UpdateListOfPlayersDesignTime::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_UpdateListOfPlayersDesignTime, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'PlayerListSCT_C_UpdateListOfPlayersDesignTime::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function PlayerListSCT.PlayerListSCT_C.SortListOfPlayersByVotes
// 0x00F8 (0x00F8 - 0x0000)
struct PlayerListSCT_C_SortListOfPlayersByVotes final
{
public:
	TArray<class UPlayerListEntrySCT_C*>          L_ListEntries;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TMap<class AActor*, int32>                    L_ActorsWithInts;                                  // 0x0010(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerListEntrySCT_C*                  CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0090(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<class UPlayerListEntrySCT_C*>          CallFunc_Map_Values_Values;                        // 0x0098(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerListEntrySCT_C*                  CallFunc_Array_Get_Item_1;                         // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetVoteSum_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetSortedActorsDescending_ReturnValue;    // 0x00D8(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListSCT_C_SortListOfPlayersByVotes) == 0x000008, "Wrong alignment on PlayerListSCT_C_SortListOfPlayersByVotes");
static_assert(sizeof(PlayerListSCT_C_SortListOfPlayersByVotes) == 0x0000F8, "Wrong size on PlayerListSCT_C_SortListOfPlayersByVotes");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, L_ListEntries) == 0x000000, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::L_ListEntries' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, L_ActorsWithInts) == 0x000010, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::L_ActorsWithInts' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, Temp_int_Array_Index_Variable) == 0x000060, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, Temp_bool_True_if_break_was_hit_Variable) == 0x00006C, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, Temp_int_Array_Index_Variable_1) == 0x000070, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, CallFunc_Not_PreBool_ReturnValue) == 0x000074, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, Temp_int_Array_Index_Variable_2) == 0x000078, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, CallFunc_Array_Get_Item) == 0x000080, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, CallFunc_K2_SetTimer_ReturnValue) == 0x000090, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, CallFunc_Map_Values_Values) == 0x000098, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, Temp_int_Loop_Counter_Variable_1) == 0x0000A8, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000AC, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, Temp_int_Loop_Counter_Variable_2) == 0x0000B0, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, CallFunc_Array_Get_Item_1) == 0x0000B8, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, CallFunc_GetVoteSum_ReturnValue) == 0x0000C4, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::CallFunc_GetVoteSum_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000C8, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, CallFunc_Array_Length_ReturnValue_1) == 0x0000CC, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D0, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, CallFunc_GetSortedActorsDescending_ReturnValue) == 0x0000D8, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::CallFunc_GetSortedActorsDescending_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, CallFunc_Array_Get_Item_2) == 0x0000E8, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, CallFunc_Array_Length_ReturnValue_2) == 0x0000F0, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000F4, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000F5, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_SortListOfPlayersByVotes, CallFunc_BooleanAND_ReturnValue) == 0x0000F6, "Member 'PlayerListSCT_C_SortListOfPlayersByVotes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function PlayerListSCT.PlayerListSCT_C.CleanupDynamicCanvasPanel
// 0x0030 (0x0030 - 0x0000)
struct PlayerListSCT_C_CleanupDynamicCanvasPanel final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveChildAt_ReturnValue;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerListEntrySCT_C*                  K2Node_DynamicCast_AsPlayer_List_Entry_SCT;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerListSCT_C_CleanupDynamicCanvasPanel) == 0x000008, "Wrong alignment on PlayerListSCT_C_CleanupDynamicCanvasPanel");
static_assert(sizeof(PlayerListSCT_C_CleanupDynamicCanvasPanel) == 0x000030, "Wrong size on PlayerListSCT_C_CleanupDynamicCanvasPanel");
static_assert(offsetof(PlayerListSCT_C_CleanupDynamicCanvasPanel, Temp_int_Variable) == 0x000000, "Member 'PlayerListSCT_C_CleanupDynamicCanvasPanel::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_CleanupDynamicCanvasPanel, CallFunc_RemoveChildAt_ReturnValue) == 0x000004, "Member 'PlayerListSCT_C_CleanupDynamicCanvasPanel::CallFunc_RemoveChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_CleanupDynamicCanvasPanel, CallFunc_GetChildrenCount_ReturnValue) == 0x000008, "Member 'PlayerListSCT_C_CleanupDynamicCanvasPanel::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_CleanupDynamicCanvasPanel, CallFunc_GetChildAt_ReturnValue) == 0x000010, "Member 'PlayerListSCT_C_CleanupDynamicCanvasPanel::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_CleanupDynamicCanvasPanel, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'PlayerListSCT_C_CleanupDynamicCanvasPanel::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_CleanupDynamicCanvasPanel, K2Node_DynamicCast_AsPlayer_List_Entry_SCT) == 0x000020, "Member 'PlayerListSCT_C_CleanupDynamicCanvasPanel::K2Node_DynamicCast_AsPlayer_List_Entry_SCT' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_CleanupDynamicCanvasPanel, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PlayerListSCT_C_CleanupDynamicCanvasPanel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_CleanupDynamicCanvasPanel, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000029, "Member 'PlayerListSCT_C_CleanupDynamicCanvasPanel::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_CleanupDynamicCanvasPanel, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'PlayerListSCT_C_CleanupDynamicCanvasPanel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function PlayerListSCT.PlayerListSCT_C.DoLerpHelpText
// 0x0010 (0x0010 - 0x0000)
struct PlayerListSCT_C_DoLerpHelpText final
{
public:
	float                                         NewTargetYLocation;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerListSCT_C_DoLerpHelpText) == 0x000008, "Wrong alignment on PlayerListSCT_C_DoLerpHelpText");
static_assert(sizeof(PlayerListSCT_C_DoLerpHelpText) == 0x000010, "Wrong size on PlayerListSCT_C_DoLerpHelpText");
static_assert(offsetof(PlayerListSCT_C_DoLerpHelpText, NewTargetYLocation) == 0x000000, "Member 'PlayerListSCT_C_DoLerpHelpText::NewTargetYLocation' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_DoLerpHelpText, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'PlayerListSCT_C_DoLerpHelpText::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function PlayerListSCT.PlayerListSCT_C.Create Y Positions
// 0x0014 (0x0014 - 0x0000)
struct PlayerListSCT_C_Create_Y_Positions final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerListSCT_C_Create_Y_Positions) == 0x000004, "Wrong alignment on PlayerListSCT_C_Create_Y_Positions");
static_assert(sizeof(PlayerListSCT_C_Create_Y_Positions) == 0x000014, "Wrong size on PlayerListSCT_C_Create_Y_Positions");
static_assert(offsetof(PlayerListSCT_C_Create_Y_Positions, Temp_int_Variable) == 0x000000, "Member 'PlayerListSCT_C_Create_Y_Positions::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_Create_Y_Positions, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000004, "Member 'PlayerListSCT_C_Create_Y_Positions::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_Create_Y_Positions, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'PlayerListSCT_C_Create_Y_Positions::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_Create_Y_Positions, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'PlayerListSCT_C_Create_Y_Positions::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_Create_Y_Positions, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'PlayerListSCT_C_Create_Y_Positions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function PlayerListSCT.PlayerListSCT_C.IsOtherPlayerState
// 0x0020 (0x0020 - 0x0000)
struct PlayerListSCT_C_IsOtherPlayerState final
{
public:
	class ASCTPlayerState*                        PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListSCT_C_IsOtherPlayerState) == 0x000008, "Wrong alignment on PlayerListSCT_C_IsOtherPlayerState");
static_assert(sizeof(PlayerListSCT_C_IsOtherPlayerState) == 0x000020, "Wrong size on PlayerListSCT_C_IsOtherPlayerState");
static_assert(offsetof(PlayerListSCT_C_IsOtherPlayerState, PlayerState) == 0x000000, "Member 'PlayerListSCT_C_IsOtherPlayerState::PlayerState' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_IsOtherPlayerState, ReturnValue) == 0x000008, "Member 'PlayerListSCT_C_IsOtherPlayerState::ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_IsOtherPlayerState, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'PlayerListSCT_C_IsOtherPlayerState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_IsOtherPlayerState, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'PlayerListSCT_C_IsOtherPlayerState::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_IsOtherPlayerState, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'PlayerListSCT_C_IsOtherPlayerState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_IsOtherPlayerState, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000019, "Member 'PlayerListSCT_C_IsOtherPlayerState::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function PlayerListSCT.PlayerListSCT_C.AddEntry
// 0x0008 (0x0008 - 0x0000)
struct PlayerListSCT_C_AddEntry final
{
public:
	class ASCTPlayerState*                        PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerListSCT_C_AddEntry) == 0x000008, "Wrong alignment on PlayerListSCT_C_AddEntry");
static_assert(sizeof(PlayerListSCT_C_AddEntry) == 0x000008, "Wrong size on PlayerListSCT_C_AddEntry");
static_assert(offsetof(PlayerListSCT_C_AddEntry, PlayerState) == 0x000000, "Member 'PlayerListSCT_C_AddEntry::PlayerState' has a wrong offset!");

// Function PlayerListSCT.PlayerListSCT_C.RemoveEntry
// 0x0038 (0x0038 - 0x0000)
struct PlayerListSCT_C_RemoveEntry final
{
public:
	int32                                         PlayerId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UPlayerListEntrySCT_C*                  CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerListSCT_C_RemoveEntry) == 0x000008, "Wrong alignment on PlayerListSCT_C_RemoveEntry");
static_assert(sizeof(PlayerListSCT_C_RemoveEntry) == 0x000038, "Wrong size on PlayerListSCT_C_RemoveEntry");
static_assert(offsetof(PlayerListSCT_C_RemoveEntry, PlayerId) == 0x000000, "Member 'PlayerListSCT_C_RemoveEntry::PlayerId' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_RemoveEntry, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'PlayerListSCT_C_RemoveEntry::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_RemoveEntry, CallFunc_Map_Find_Value) == 0x000018, "Member 'PlayerListSCT_C_RemoveEntry::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_RemoveEntry, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'PlayerListSCT_C_RemoveEntry::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_RemoveEntry, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'PlayerListSCT_C_RemoveEntry::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function PlayerListSCT.PlayerListSCT_C.CreateChildElement
// 0x0020 (0x0020 - 0x0000)
struct PlayerListSCT_C_CreateChildElement final
{
public:
	class ASCTPlayerState*                        PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerListEntrySCT_C*                  CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerListSCT_C_CreateChildElement) == 0x000008, "Wrong alignment on PlayerListSCT_C_CreateChildElement");
static_assert(sizeof(PlayerListSCT_C_CreateChildElement) == 0x000020, "Wrong size on PlayerListSCT_C_CreateChildElement");
static_assert(offsetof(PlayerListSCT_C_CreateChildElement, PlayerState) == 0x000000, "Member 'PlayerListSCT_C_CreateChildElement::PlayerState' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_CreateChildElement, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'PlayerListSCT_C_CreateChildElement::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_CreateChildElement, CallFunc_Create_ReturnValue) == 0x000010, "Member 'PlayerListSCT_C_CreateChildElement::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_CreateChildElement, CallFunc_AddChildToCanvas_ReturnValue) == 0x000018, "Member 'PlayerListSCT_C_CreateChildElement::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");

// Function PlayerListSCT.PlayerListSCT_C.EnsureChildElementExists
// 0x0010 (0x0010 - 0x0000)
struct PlayerListSCT_C_EnsureChildElementExists final
{
public:
	class ASCTPlayerState*                        Player_State;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ContainsEntry_Return_Value;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListSCT_C_EnsureChildElementExists) == 0x000008, "Wrong alignment on PlayerListSCT_C_EnsureChildElementExists");
static_assert(sizeof(PlayerListSCT_C_EnsureChildElementExists) == 0x000010, "Wrong size on PlayerListSCT_C_EnsureChildElementExists");
static_assert(offsetof(PlayerListSCT_C_EnsureChildElementExists, Player_State) == 0x000000, "Member 'PlayerListSCT_C_EnsureChildElementExists::Player_State' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_EnsureChildElementExists, CallFunc_ContainsEntry_Return_Value) == 0x000008, "Member 'PlayerListSCT_C_EnsureChildElementExists::CallFunc_ContainsEntry_Return_Value' has a wrong offset!");

// Function PlayerListSCT.PlayerListSCT_C.BindToChildElement
// 0x0028 (0x0028 - 0x0000)
struct PlayerListSCT_C_BindToChildElement final
{
public:
	class ASCTPlayerState*                        PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UPlayerListEntrySCT_C*                  CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListSCT_C_BindToChildElement) == 0x000008, "Wrong alignment on PlayerListSCT_C_BindToChildElement");
static_assert(sizeof(PlayerListSCT_C_BindToChildElement) == 0x000028, "Wrong size on PlayerListSCT_C_BindToChildElement");
static_assert(offsetof(PlayerListSCT_C_BindToChildElement, PlayerState) == 0x000000, "Member 'PlayerListSCT_C_BindToChildElement::PlayerState' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_BindToChildElement, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'PlayerListSCT_C_BindToChildElement::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_BindToChildElement, CallFunc_Map_Find_Value) == 0x000018, "Member 'PlayerListSCT_C_BindToChildElement::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_BindToChildElement, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'PlayerListSCT_C_BindToChildElement::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function PlayerListSCT.PlayerListSCT_C.AddExistingPlayerStates
// 0x0040 (0x0040 - 0x0000)
struct PlayerListSCT_C_AddExistingPlayerStates final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCTPlayerState*                        K2Node_DynamicCast_AsSCTPlayer_State;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListSCT_C_AddExistingPlayerStates) == 0x000008, "Wrong alignment on PlayerListSCT_C_AddExistingPlayerStates");
static_assert(sizeof(PlayerListSCT_C_AddExistingPlayerStates) == 0x000040, "Wrong size on PlayerListSCT_C_AddExistingPlayerStates");
static_assert(offsetof(PlayerListSCT_C_AddExistingPlayerStates, Temp_int_Array_Index_Variable) == 0x000000, "Member 'PlayerListSCT_C_AddExistingPlayerStates::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_AddExistingPlayerStates, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'PlayerListSCT_C_AddExistingPlayerStates::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_AddExistingPlayerStates, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'PlayerListSCT_C_AddExistingPlayerStates::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_AddExistingPlayerStates, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'PlayerListSCT_C_AddExistingPlayerStates::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_AddExistingPlayerStates, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'PlayerListSCT_C_AddExistingPlayerStates::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_AddExistingPlayerStates, CallFunc_Array_Get_Item) == 0x000020, "Member 'PlayerListSCT_C_AddExistingPlayerStates::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_AddExistingPlayerStates, K2Node_DynamicCast_AsSCTPlayer_State) == 0x000028, "Member 'PlayerListSCT_C_AddExistingPlayerStates::K2Node_DynamicCast_AsSCTPlayer_State' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_AddExistingPlayerStates, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'PlayerListSCT_C_AddExistingPlayerStates::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_AddExistingPlayerStates, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'PlayerListSCT_C_AddExistingPlayerStates::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_AddExistingPlayerStates, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'PlayerListSCT_C_AddExistingPlayerStates::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function PlayerListSCT.PlayerListSCT_C.RemoveExpiredEntries
// 0x0058 (0x0058 - 0x0000)
struct PlayerListSCT_C_RemoveExpiredEntries final
{
public:
	bool                                          FoundPlayerState;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0028(0x0010)(ReferenceParm)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListSCT_C_RemoveExpiredEntries) == 0x000008, "Wrong alignment on PlayerListSCT_C_RemoveExpiredEntries");
static_assert(sizeof(PlayerListSCT_C_RemoveExpiredEntries) == 0x000058, "Wrong size on PlayerListSCT_C_RemoveExpiredEntries");
static_assert(offsetof(PlayerListSCT_C_RemoveExpiredEntries, FoundPlayerState) == 0x000000, "Member 'PlayerListSCT_C_RemoveExpiredEntries::FoundPlayerState' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_RemoveExpiredEntries, Temp_bool_True_if_break_was_hit_Variable) == 0x000001, "Member 'PlayerListSCT_C_RemoveExpiredEntries::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_RemoveExpiredEntries, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'PlayerListSCT_C_RemoveExpiredEntries::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_RemoveExpiredEntries, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'PlayerListSCT_C_RemoveExpiredEntries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_RemoveExpiredEntries, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'PlayerListSCT_C_RemoveExpiredEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_RemoveExpiredEntries, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'PlayerListSCT_C_RemoveExpiredEntries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_RemoveExpiredEntries, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'PlayerListSCT_C_RemoveExpiredEntries::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_RemoveExpiredEntries, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'PlayerListSCT_C_RemoveExpiredEntries::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_RemoveExpiredEntries, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'PlayerListSCT_C_RemoveExpiredEntries::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_RemoveExpiredEntries, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'PlayerListSCT_C_RemoveExpiredEntries::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_RemoveExpiredEntries, CallFunc_Map_Keys_Keys) == 0x000028, "Member 'PlayerListSCT_C_RemoveExpiredEntries::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_RemoveExpiredEntries, CallFunc_Array_Get_Item) == 0x000038, "Member 'PlayerListSCT_C_RemoveExpiredEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_RemoveExpiredEntries, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'PlayerListSCT_C_RemoveExpiredEntries::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_RemoveExpiredEntries, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000044, "Member 'PlayerListSCT_C_RemoveExpiredEntries::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_RemoveExpiredEntries, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'PlayerListSCT_C_RemoveExpiredEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_RemoveExpiredEntries, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'PlayerListSCT_C_RemoveExpiredEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_RemoveExpiredEntries, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'PlayerListSCT_C_RemoveExpiredEntries::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_RemoveExpiredEntries, CallFunc_Less_IntInt_ReturnValue_1) == 0x000054, "Member 'PlayerListSCT_C_RemoveExpiredEntries::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_RemoveExpiredEntries, CallFunc_BooleanAND_ReturnValue) == 0x000055, "Member 'PlayerListSCT_C_RemoveExpiredEntries::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function PlayerListSCT.PlayerListSCT_C.DestroyEntry
// 0x0040 (0x0040 - 0x0000)
struct PlayerListSCT_C_DestroyEntry final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerListEntrySCT_C*                  CallFunc_Map_Find_Value;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListSCT_C_DestroyEntry) == 0x000008, "Wrong alignment on PlayerListSCT_C_DestroyEntry");
static_assert(sizeof(PlayerListSCT_C_DestroyEntry) == 0x000040, "Wrong size on PlayerListSCT_C_DestroyEntry");
static_assert(offsetof(PlayerListSCT_C_DestroyEntry, ID) == 0x000000, "Member 'PlayerListSCT_C_DestroyEntry::ID' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_DestroyEntry, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'PlayerListSCT_C_DestroyEntry::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_DestroyEntry, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'PlayerListSCT_C_DestroyEntry::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_DestroyEntry, CallFunc_Map_Remove_ReturnValue) == 0x000028, "Member 'PlayerListSCT_C_DestroyEntry::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_DestroyEntry, CallFunc_Map_Find_Value) == 0x000030, "Member 'PlayerListSCT_C_DestroyEntry::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_DestroyEntry, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'PlayerListSCT_C_DestroyEntry::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function PlayerListSCT.PlayerListSCT_C.TryGetEntryFromPlayerState
// 0x0028 (0x0028 - 0x0000)
struct PlayerListSCT_C_TryGetEntryFromPlayerState final
{
public:
	class ASCTPlayerState*                        Player_State;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerListEntrySCT_C*                  Entry;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Succeeded;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerListEntrySCT_C*                  CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListSCT_C_TryGetEntryFromPlayerState) == 0x000008, "Wrong alignment on PlayerListSCT_C_TryGetEntryFromPlayerState");
static_assert(sizeof(PlayerListSCT_C_TryGetEntryFromPlayerState) == 0x000028, "Wrong size on PlayerListSCT_C_TryGetEntryFromPlayerState");
static_assert(offsetof(PlayerListSCT_C_TryGetEntryFromPlayerState, Player_State) == 0x000000, "Member 'PlayerListSCT_C_TryGetEntryFromPlayerState::Player_State' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_TryGetEntryFromPlayerState, Entry) == 0x000008, "Member 'PlayerListSCT_C_TryGetEntryFromPlayerState::Entry' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_TryGetEntryFromPlayerState, Succeeded) == 0x000010, "Member 'PlayerListSCT_C_TryGetEntryFromPlayerState::Succeeded' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_TryGetEntryFromPlayerState, CallFunc_Map_Find_Value) == 0x000018, "Member 'PlayerListSCT_C_TryGetEntryFromPlayerState::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_TryGetEntryFromPlayerState, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'PlayerListSCT_C_TryGetEntryFromPlayerState::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function PlayerListSCT.PlayerListSCT_C.ContainsEntry
// 0x0010 (0x0010 - 0x0000)
struct PlayerListSCT_C_ContainsEntry final
{
public:
	class ASCTPlayerState*                        Player_State;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return_Value;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListSCT_C_ContainsEntry) == 0x000008, "Wrong alignment on PlayerListSCT_C_ContainsEntry");
static_assert(sizeof(PlayerListSCT_C_ContainsEntry) == 0x000010, "Wrong size on PlayerListSCT_C_ContainsEntry");
static_assert(offsetof(PlayerListSCT_C_ContainsEntry, Player_State) == 0x000000, "Member 'PlayerListSCT_C_ContainsEntry::Player_State' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_ContainsEntry, Return_Value) == 0x000008, "Member 'PlayerListSCT_C_ContainsEntry::Return_Value' has a wrong offset!");
static_assert(offsetof(PlayerListSCT_C_ContainsEntry, CallFunc_Map_Contains_ReturnValue) == 0x000009, "Member 'PlayerListSCT_C_ContainsEntry::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");

}

