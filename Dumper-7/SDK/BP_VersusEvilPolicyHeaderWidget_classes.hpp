#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VersusEvilPolicyHeaderWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_VersusEvilPolicyHeaderWidget.BP_VersusEvilPolicyHeaderWidget_C
// 0x0078 (0x02D8 - 0x0260)
class UBP_VersusEvilPolicyHeaderWidget_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UImage*                                 Background;                                        // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HeaderText;                                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateColor                            HighlightedColor;                                  // 0x0278(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            DimmedColor;                                       // 0x02A0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 HeaderString;                                      // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_VersusEvilPolicyHeaderWidget(int32 EntryPoint);
	void Construct();
	void Highlight();
	void Dim();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_VersusEvilPolicyHeaderWidget_C">();
	}
	static class UBP_VersusEvilPolicyHeaderWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_VersusEvilPolicyHeaderWidget_C>();
	}
};
static_assert(alignof(UBP_VersusEvilPolicyHeaderWidget_C) == 0x000008, "Wrong alignment on UBP_VersusEvilPolicyHeaderWidget_C");
static_assert(sizeof(UBP_VersusEvilPolicyHeaderWidget_C) == 0x0002D8, "Wrong size on UBP_VersusEvilPolicyHeaderWidget_C");
static_assert(offsetof(UBP_VersusEvilPolicyHeaderWidget_C, UberGraphFrame) == 0x000260, "Member 'UBP_VersusEvilPolicyHeaderWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_VersusEvilPolicyHeaderWidget_C, Background) == 0x000268, "Member 'UBP_VersusEvilPolicyHeaderWidget_C::Background' has a wrong offset!");
static_assert(offsetof(UBP_VersusEvilPolicyHeaderWidget_C, HeaderText) == 0x000270, "Member 'UBP_VersusEvilPolicyHeaderWidget_C::HeaderText' has a wrong offset!");
static_assert(offsetof(UBP_VersusEvilPolicyHeaderWidget_C, HighlightedColor) == 0x000278, "Member 'UBP_VersusEvilPolicyHeaderWidget_C::HighlightedColor' has a wrong offset!");
static_assert(offsetof(UBP_VersusEvilPolicyHeaderWidget_C, DimmedColor) == 0x0002A0, "Member 'UBP_VersusEvilPolicyHeaderWidget_C::DimmedColor' has a wrong offset!");
static_assert(offsetof(UBP_VersusEvilPolicyHeaderWidget_C, HeaderString) == 0x0002C8, "Member 'UBP_VersusEvilPolicyHeaderWidget_C::HeaderString' has a wrong offset!");

}

