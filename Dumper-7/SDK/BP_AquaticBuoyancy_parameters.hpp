#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AquaticBuoyancy

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AquaticBuoyancy.BP_AquaticBuoyancy_C.ExecuteUbergraph_BP_AquaticBuoyancy
// 0x0008 (0x0008 - 0x0000)
struct BP_AquaticBuoyancy_C_ExecuteUbergraph_BP_AquaticBuoyancy final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AquaticBuoyancy_C_ExecuteUbergraph_BP_AquaticBuoyancy) == 0x000004, "Wrong alignment on BP_AquaticBuoyancy_C_ExecuteUbergraph_BP_AquaticBuoyancy");
static_assert(sizeof(BP_AquaticBuoyancy_C_ExecuteUbergraph_BP_AquaticBuoyancy) == 0x000008, "Wrong size on BP_AquaticBuoyancy_C_ExecuteUbergraph_BP_AquaticBuoyancy");
static_assert(offsetof(BP_AquaticBuoyancy_C_ExecuteUbergraph_BP_AquaticBuoyancy, EntryPoint) == 0x000000, "Member 'BP_AquaticBuoyancy_C_ExecuteUbergraph_BP_AquaticBuoyancy::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_ExecuteUbergraph_BP_AquaticBuoyancy, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_AquaticBuoyancy_C_ExecuteUbergraph_BP_AquaticBuoyancy::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_AquaticBuoyancy.BP_AquaticBuoyancy_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AquaticBuoyancy_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AquaticBuoyancy_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AquaticBuoyancy_C_ReceiveTick");
static_assert(sizeof(BP_AquaticBuoyancy_C_ReceiveTick) == 0x000004, "Wrong size on BP_AquaticBuoyancy_C_ReceiveTick");
static_assert(offsetof(BP_AquaticBuoyancy_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AquaticBuoyancy_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AquaticBuoyancy.BP_AquaticBuoyancy_C.UpdateInFluid
// 0x00D0 (0x00D0 - 0x0000)
struct BP_AquaticBuoyancy_C_UpdateInFluid final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BuoyancyForce;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPI_ReturnValue;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             CallFunc_GetWorldOriginLocation_ReturnValue;       // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             CallFunc_GetWorldOriginLocation_ReturnValue_1;     // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSurfceDistance_Distance;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AquaticBuoyancy_C_UpdateInFluid) == 0x000010, "Wrong alignment on BP_AquaticBuoyancy_C_UpdateInFluid");
static_assert(sizeof(BP_AquaticBuoyancy_C_UpdateInFluid) == 0x0000D0, "Wrong size on BP_AquaticBuoyancy_C_UpdateInFluid");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, DeltaTime) == 0x000000, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, BuoyancyForce) == 0x000004, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::BuoyancyForce' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_GetPI_ReturnValue) == 0x000008, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_GetPI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_GetWorldOriginLocation_ReturnValue) == 0x00000C, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_GetWorldOriginLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_GetWorldOriginLocation_ReturnValue_1) == 0x000018, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_GetWorldOriginLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000025, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000026, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_BooleanAND_ReturnValue) == 0x000027, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_BooleanAND_ReturnValue_1) == 0x000029, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, K2Node_SwitchEnum_CmpSuccess) == 0x000060, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000064, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000068, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_TransformLocation_ReturnValue) == 0x00006C, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_MakeVector_ReturnValue) == 0x000078, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000084, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_GetSurfceDistance_Distance) == 0x000090, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_GetSurfceDistance_Distance' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_FMax_ReturnValue) == 0x000098, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00009C, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_FMax_ReturnValue_1) == 0x0000A0, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0000A4, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_FClamp_ReturnValue) == 0x0000A8, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0000AC, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000B0, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000B4, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x0000B8, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x0000BC, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x0000C0, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_UpdateInFluid, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000C4, "Member 'BP_AquaticBuoyancy_C_UpdateInFluid::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_AquaticBuoyancy.BP_AquaticBuoyancy_C.SetTickMode
// 0x000C (0x000C - 0x0000)
struct BP_AquaticBuoyancy_C_SetTickMode final
{
public:
	bool                                          InWater_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AquaticBuoyancy_C_SetTickMode) == 0x000004, "Wrong alignment on BP_AquaticBuoyancy_C_SetTickMode");
static_assert(sizeof(BP_AquaticBuoyancy_C_SetTickMode) == 0x00000C, "Wrong size on BP_AquaticBuoyancy_C_SetTickMode");
static_assert(offsetof(BP_AquaticBuoyancy_C_SetTickMode, InWater_0) == 0x000000, "Member 'BP_AquaticBuoyancy_C_SetTickMode::InWater_0' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_SetTickMode, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_AquaticBuoyancy_C_SetTickMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_SetTickMode, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_AquaticBuoyancy_C_SetTickMode::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_SetTickMode, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000008, "Member 'BP_AquaticBuoyancy_C_SetTickMode::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_AquaticBuoyancy.BP_AquaticBuoyancy_C.SetAquaticVolume
// 0x0028 (0x0028 - 0x0000)
struct BP_AquaticBuoyancy_C_SetAquaticVolume final
{
public:
	class ABP_AquaticSurface_C*                   AquaticSurface;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AquaticBuoyancy_C_SetAquaticVolume) == 0x000008, "Wrong alignment on BP_AquaticBuoyancy_C_SetAquaticVolume");
static_assert(sizeof(BP_AquaticBuoyancy_C_SetAquaticVolume) == 0x000028, "Wrong size on BP_AquaticBuoyancy_C_SetAquaticVolume");
static_assert(offsetof(BP_AquaticBuoyancy_C_SetAquaticVolume, AquaticSurface) == 0x000000, "Member 'BP_AquaticBuoyancy_C_SetAquaticVolume::AquaticSurface' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_SetAquaticVolume, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_AquaticBuoyancy_C_SetAquaticVolume::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_SetAquaticVolume, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BP_AquaticBuoyancy_C_SetAquaticVolume::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_SetAquaticVolume, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_AquaticBuoyancy_C_SetAquaticVolume::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_SetAquaticVolume, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BP_AquaticBuoyancy_C_SetAquaticVolume::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_SetAquaticVolume, CallFunc_IsValid_ReturnValue_2) == 0x000020, "Member 'BP_AquaticBuoyancy_C_SetAquaticVolume::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_AquaticBuoyancy.BP_AquaticBuoyancy_C.ValidateMesh
// 0x0038 (0x0038 - 0x0000)
struct BP_AquaticBuoyancy_C_ValidateMesh final
{
public:
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLinearDamping_ReturnValue;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAngularDamping_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AquaticBuoyancy_C_ValidateMesh) == 0x000008, "Wrong alignment on BP_AquaticBuoyancy_C_ValidateMesh");
static_assert(sizeof(BP_AquaticBuoyancy_C_ValidateMesh) == 0x000038, "Wrong size on BP_AquaticBuoyancy_C_ValidateMesh");
static_assert(offsetof(BP_AquaticBuoyancy_C_ValidateMesh, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000000, "Member 'BP_AquaticBuoyancy_C_ValidateMesh::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_ValidateMesh, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_AquaticBuoyancy_C_ValidateMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_ValidateMesh, CallFunc_Dot_VectorVector_ReturnValue) == 0x000010, "Member 'BP_AquaticBuoyancy_C_ValidateMesh::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_ValidateMesh, CallFunc_GetLinearDamping_ReturnValue) == 0x000014, "Member 'BP_AquaticBuoyancy_C_ValidateMesh::CallFunc_GetLinearDamping_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_ValidateMesh, CallFunc_GetAngularDamping_ReturnValue) == 0x000018, "Member 'BP_AquaticBuoyancy_C_ValidateMesh::CallFunc_GetAngularDamping_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_ValidateMesh, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BP_AquaticBuoyancy_C_ValidateMesh::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_ValidateMesh, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'BP_AquaticBuoyancy_C_ValidateMesh::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_ValidateMesh, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_AquaticBuoyancy_C_ValidateMesh::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_ValidateMesh, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000034, "Member 'BP_AquaticBuoyancy_C_ValidateMesh::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");

// Function BP_AquaticBuoyancy.BP_AquaticBuoyancy_C.GetSurfceDistance
// 0x0040 (0x0040 - 0x0000)
struct BP_AquaticBuoyancy_C_GetSurfceDistance final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AquaticBuoyancy_C_GetSurfceDistance) == 0x000004, "Wrong alignment on BP_AquaticBuoyancy_C_GetSurfceDistance");
static_assert(sizeof(BP_AquaticBuoyancy_C_GetSurfceDistance) == 0x000040, "Wrong size on BP_AquaticBuoyancy_C_GetSurfceDistance");
static_assert(offsetof(BP_AquaticBuoyancy_C_GetSurfceDistance, Location) == 0x000000, "Member 'BP_AquaticBuoyancy_C_GetSurfceDistance::Location' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_GetSurfceDistance, Distance) == 0x00000C, "Member 'BP_AquaticBuoyancy_C_GetSurfceDistance::Distance' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_GetSurfceDistance, CallFunc_BreakVector_X) == 0x000010, "Member 'BP_AquaticBuoyancy_C_GetSurfceDistance::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_GetSurfceDistance, CallFunc_BreakVector_Y) == 0x000014, "Member 'BP_AquaticBuoyancy_C_GetSurfceDistance::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_GetSurfceDistance, CallFunc_BreakVector_Z) == 0x000018, "Member 'BP_AquaticBuoyancy_C_GetSurfceDistance::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_GetSurfceDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'BP_AquaticBuoyancy_C_GetSurfceDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_GetSurfceDistance, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_AquaticBuoyancy_C_GetSurfceDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_GetSurfceDistance, CallFunc_BreakVector_X_1) == 0x00002C, "Member 'BP_AquaticBuoyancy_C_GetSurfceDistance::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_GetSurfceDistance, CallFunc_BreakVector_Y_1) == 0x000030, "Member 'BP_AquaticBuoyancy_C_GetSurfceDistance::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_GetSurfceDistance, CallFunc_BreakVector_Z_1) == 0x000034, "Member 'BP_AquaticBuoyancy_C_GetSurfceDistance::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_GetSurfceDistance, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_AquaticBuoyancy_C_GetSurfceDistance::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AquaticBuoyancy_C_GetSurfceDistance, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_AquaticBuoyancy_C_GetSurfceDistance::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

}

