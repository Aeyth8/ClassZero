#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EmergencyEvent_Base

#include "Basic.hpp"

#include "EmergencyEvent_Base_classes.hpp"
#include "EmergencyEvent_Base_parameters.hpp"


namespace SDK
{

// Function EmergencyEvent_Base.EmergencyEvent_Base_C.On_Complete__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AEmergencyEvent_Base_C*           EmergencyBase                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyEvent_Base_C::On_Complete__DelegateSignature(class AEmergencyEvent_Base_C* EmergencyBase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEvent_Base_C", "On_Complete__DelegateSignature");

	Params::EmergencyEvent_Base_C_On_Complete__DelegateSignature Parms{};

	Parms.EmergencyBase = EmergencyBase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyEvent_Base.EmergencyEvent_Base_C.ExecuteUbergraph_EmergencyEvent_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyEvent_Base_C::ExecuteUbergraph_EmergencyEvent_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEvent_Base_C", "ExecuteUbergraph_EmergencyEvent_Base");

	Params::EmergencyEvent_Base_C_ExecuteUbergraph_EmergencyEvent_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyEvent_Base.EmergencyEvent_Base_C.Update Participants On Progressbar
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LastIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyEvent_Base_C::Update_Participants_On_Progressbar(int32 LastIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEvent_Base_C", "Update Participants On Progressbar");

	Params::EmergencyEvent_Base_C_Update_Participants_On_Progressbar Parms{};

	Parms.LastIndex = LastIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyEvent_Base.EmergencyEvent_Base_C.Multi_Audio Stop Holding
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AEmergencyEvent_Base_C::Multi_Audio_Stop_Holding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEvent_Base_C", "Multi_Audio Stop Holding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEvent_Base.EmergencyEvent_Base_C.Multi_Audio Start Holding
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AEmergencyEvent_Base_C::Multi_Audio_Start_Holding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEvent_Base_C", "Multi_Audio Start Holding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEvent_Base.EmergencyEvent_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AEmergencyEvent_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEvent_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEvent_Base.EmergencyEvent_Base_C.Deactivate Emergency Base
// (BlueprintCallable, BlueprintEvent)

void AEmergencyEvent_Base_C::Deactivate_Emergency_Base()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEvent_Base_C", "Deactivate Emergency Base");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEvent_Base.EmergencyEvent_Base_C.Non Active Cosmetics
// (BlueprintCallable, BlueprintEvent)

void AEmergencyEvent_Base_C::Non_Active_Cosmetics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEvent_Base_C", "Non Active Cosmetics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEvent_Base.EmergencyEvent_Base_C.Active Cosmetics
// (BlueprintCallable, BlueprintEvent)

void AEmergencyEvent_Base_C::Active_Cosmetics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEvent_Base_C", "Active Cosmetics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEvent_Base.EmergencyEvent_Base_C.Activate Emergency Base
// (BlueprintCallable, BlueprintEvent)

void AEmergencyEvent_Base_C::Activate_Emergency_Base()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEvent_Base_C", "Activate Emergency Base");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEvent_Base.EmergencyEvent_Base_C.Complete Cosmetics
// (BlueprintCallable, BlueprintEvent)

void AEmergencyEvent_Base_C::Complete_Cosmetics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEvent_Base_C", "Complete Cosmetics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEvent_Base.EmergencyEvent_Base_C.Stop Checking Amount Holding
// (BlueprintCallable, BlueprintEvent)

void AEmergencyEvent_Base_C::Stop_Checking_Amount_Holding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEvent_Base_C", "Stop Checking Amount Holding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEvent_Base.EmergencyEvent_Base_C.Start Holding With Amount Update
// (BlueprintCallable, BlueprintEvent)

void AEmergencyEvent_Base_C::Start_Holding_With_Amount_Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEvent_Base_C", "Start Holding With Amount Update");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEvent_Base.EmergencyEvent_Base_C.BndEvt__Interaction Component_K2Node_ComponentBoundEvent_1_InteractionEndedDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// bool                                    WasCancelled                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AEmergencyEvent_Base_C::BndEvt__Interaction_Component_K2Node_ComponentBoundEvent_1_InteractionEndedDelegate__DelegateSignature(const struct FInteractionPayload& Payload, bool WasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEvent_Base_C", "BndEvt__Interaction Component_K2Node_ComponentBoundEvent_1_InteractionEndedDelegate__DelegateSignature");

	Params::EmergencyEvent_Base_C_BndEvt__Interaction_Component_K2Node_ComponentBoundEvent_1_InteractionEndedDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);
	Parms.WasCancelled = WasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyEvent_Base.EmergencyEvent_Base_C.BndEvt__Interaction Component_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void AEmergencyEvent_Base_C::BndEvt__Interaction_Component_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature(const struct FInteractionPayload& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEvent_Base_C", "BndEvt__Interaction Component_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature");

	Params::EmergencyEvent_Base_C_BndEvt__Interaction_Component_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyEvent_Base.EmergencyEvent_Base_C.RepairTimeline__UpdateFunc
// (BlueprintEvent)

void AEmergencyEvent_Base_C::RepairTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEvent_Base_C", "RepairTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEvent_Base.EmergencyEvent_Base_C.RepairTimeline__FinishedFunc
// (BlueprintEvent)

void AEmergencyEvent_Base_C::RepairTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEvent_Base_C", "RepairTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEvent_Base.EmergencyEvent_Base_C.OnRep_Completed
// (BlueprintCallable, BlueprintEvent)

void AEmergencyEvent_Base_C::OnRep_Completed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEvent_Base_C", "OnRep_Completed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEvent_Base.EmergencyEvent_Base_C.OnRep_EmergencyActive
// (BlueprintCallable, BlueprintEvent)

void AEmergencyEvent_Base_C::OnRep_EmergencyActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEvent_Base_C", "OnRep_EmergencyActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEvent_Base.EmergencyEvent_Base_C.OnRep_AmountHolding
// (BlueprintCallable, BlueprintEvent)

void AEmergencyEvent_Base_C::OnRep_AmountHolding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEvent_Base_C", "OnRep_AmountHolding");

	UObject::ProcessEvent(Func, nullptr);
}

}

