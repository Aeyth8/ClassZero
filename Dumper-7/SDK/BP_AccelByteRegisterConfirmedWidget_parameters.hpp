#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AccelByteRegisterConfirmedWidget

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_AccelByteRegisterConfirmedWidget.BP_AccelByteRegisterConfirmedWidget_C.ExecuteUbergraph_BP_AccelByteRegisterConfirmedWidget
// 0x0048 (0x0048 - 0x0000)
struct BP_AccelByteRegisterConfirmedWidget_C_ExecuteUbergraph_BP_AccelByteRegisterConfirmedWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Email_1;                        // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Password_1;                     // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Email;                          // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Password;                       // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteRegisterConfirmedWidget_C_ExecuteUbergraph_BP_AccelByteRegisterConfirmedWidget) == 0x000008, "Wrong alignment on BP_AccelByteRegisterConfirmedWidget_C_ExecuteUbergraph_BP_AccelByteRegisterConfirmedWidget");
static_assert(sizeof(BP_AccelByteRegisterConfirmedWidget_C_ExecuteUbergraph_BP_AccelByteRegisterConfirmedWidget) == 0x000048, "Wrong size on BP_AccelByteRegisterConfirmedWidget_C_ExecuteUbergraph_BP_AccelByteRegisterConfirmedWidget");
static_assert(offsetof(BP_AccelByteRegisterConfirmedWidget_C_ExecuteUbergraph_BP_AccelByteRegisterConfirmedWidget, EntryPoint) == 0x000000, "Member 'BP_AccelByteRegisterConfirmedWidget_C_ExecuteUbergraph_BP_AccelByteRegisterConfirmedWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterConfirmedWidget_C_ExecuteUbergraph_BP_AccelByteRegisterConfirmedWidget, K2Node_CustomEvent_Email_1) == 0x000008, "Member 'BP_AccelByteRegisterConfirmedWidget_C_ExecuteUbergraph_BP_AccelByteRegisterConfirmedWidget::K2Node_CustomEvent_Email_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterConfirmedWidget_C_ExecuteUbergraph_BP_AccelByteRegisterConfirmedWidget, K2Node_CustomEvent_Password_1) == 0x000018, "Member 'BP_AccelByteRegisterConfirmedWidget_C_ExecuteUbergraph_BP_AccelByteRegisterConfirmedWidget::K2Node_CustomEvent_Password_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterConfirmedWidget_C_ExecuteUbergraph_BP_AccelByteRegisterConfirmedWidget, K2Node_CustomEvent_Email) == 0x000028, "Member 'BP_AccelByteRegisterConfirmedWidget_C_ExecuteUbergraph_BP_AccelByteRegisterConfirmedWidget::K2Node_CustomEvent_Email' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterConfirmedWidget_C_ExecuteUbergraph_BP_AccelByteRegisterConfirmedWidget, K2Node_CustomEvent_Password) == 0x000038, "Member 'BP_AccelByteRegisterConfirmedWidget_C_ExecuteUbergraph_BP_AccelByteRegisterConfirmedWidget::K2Node_CustomEvent_Password' has a wrong offset!");

// Function BP_AccelByteRegisterConfirmedWidget.BP_AccelByteRegisterConfirmedWidget_C.Register
// 0x0020 (0x0020 - 0x0000)
struct BP_AccelByteRegisterConfirmedWidget_C_Register final
{
public:
	class FString                                 Email;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Password;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteRegisterConfirmedWidget_C_Register) == 0x000008, "Wrong alignment on BP_AccelByteRegisterConfirmedWidget_C_Register");
static_assert(sizeof(BP_AccelByteRegisterConfirmedWidget_C_Register) == 0x000020, "Wrong size on BP_AccelByteRegisterConfirmedWidget_C_Register");
static_assert(offsetof(BP_AccelByteRegisterConfirmedWidget_C_Register, Email) == 0x000000, "Member 'BP_AccelByteRegisterConfirmedWidget_C_Register::Email' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterConfirmedWidget_C_Register, Password) == 0x000010, "Member 'BP_AccelByteRegisterConfirmedWidget_C_Register::Password' has a wrong offset!");

// Function BP_AccelByteRegisterConfirmedWidget.BP_AccelByteRegisterConfirmedWidget_C.Login
// 0x0020 (0x0020 - 0x0000)
struct BP_AccelByteRegisterConfirmedWidget_C_Login final
{
public:
	class FString                                 Email;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Password;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteRegisterConfirmedWidget_C_Login) == 0x000008, "Wrong alignment on BP_AccelByteRegisterConfirmedWidget_C_Login");
static_assert(sizeof(BP_AccelByteRegisterConfirmedWidget_C_Login) == 0x000020, "Wrong size on BP_AccelByteRegisterConfirmedWidget_C_Login");
static_assert(offsetof(BP_AccelByteRegisterConfirmedWidget_C_Login, Email) == 0x000000, "Member 'BP_AccelByteRegisterConfirmedWidget_C_Login::Email' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterConfirmedWidget_C_Login, Password) == 0x000010, "Member 'BP_AccelByteRegisterConfirmedWidget_C_Login::Password' has a wrong offset!");

}

