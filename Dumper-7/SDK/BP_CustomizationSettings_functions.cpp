#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CustomizationSettings

#include "Basic.hpp"

#include "BP_CustomizationSettings_classes.hpp"
#include "BP_CustomizationSettings_parameters.hpp"


namespace SDK
{

// Function BP_CustomizationSettings.BP_CustomizationSettings_C.ExecuteUbergraph_BP_CustomizationSettings
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomizationSettings_C::ExecuteUbergraph_BP_CustomizationSettings(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "ExecuteUbergraph_BP_CustomizationSettings");

	Params::BP_CustomizationSettings_C_ExecuteUbergraph_BP_CustomizationSettings Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_CustomizationSettings_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.OnSuccess_9E6F33F14E3462DDFBFE84B52FBABDE1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAccelByteModelsEntitlementPagingSlicedResultEntitlements                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   Code                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_CustomizationSettings_C::OnSuccess_9E6F33F14E3462DDFBFE84B52FBABDE1(const struct FAccelByteModelsEntitlementPagingSlicedResult& Entitlements, int32 Code, const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "OnSuccess_9E6F33F14E3462DDFBFE84B52FBABDE1");

	Params::BP_CustomizationSettings_C_OnSuccess_9E6F33F14E3462DDFBFE84B52FBABDE1 Parms{};

	Parms.Entitlements = std::move(Entitlements);
	Parms.Code = Code;
	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.OnFail_9E6F33F14E3462DDFBFE84B52FBABDE1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Code                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_CustomizationSettings_C::OnFail_9E6F33F14E3462DDFBFE84B52FBABDE1(int32 Code, const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "OnFail_9E6F33F14E3462DDFBFE84B52FBABDE1");

	Params::BP_CustomizationSettings_C_OnFail_9E6F33F14E3462DDFBFE84B52FBABDE1 Parms{};

	Parms.Code = Code;
	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.GetHeadItemFromDT
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           TableKey                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FPlayerCustomizationItemTableRow Item                                                   (Parm, OutParm)

void ABP_CustomizationSettings_C::GetHeadItemFromDT(const class FString& TableKey, struct FPlayerCustomizationItemTableRow* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "GetHeadItemFromDT");

	Params::BP_CustomizationSettings_C_GetHeadItemFromDT Parms{};

	Parms.TableKey = std::move(TableKey);

	UObject::ProcessEvent(Func, &Parms);

	if (Item != nullptr)
		*Item = std::move(Parms.Item);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.GetBodyItemFromDT
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           TableKey                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FPlayerCustomizationItemTableRow Item                                                   (Parm, OutParm)

void ABP_CustomizationSettings_C::GetBodyItemFromDT(const class FString& TableKey, struct FPlayerCustomizationItemTableRow* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "GetBodyItemFromDT");

	Params::BP_CustomizationSettings_C_GetBodyItemFromDT Parms{};

	Parms.TableKey = std::move(TableKey);

	UObject::ProcessEvent(Func, &Parms);

	if (Item != nullptr)
		*Item = std::move(Parms.Item);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.GetLegsItemFromDT
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           TableKey                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FPlayerCustomizationItemTableRow Item                                                   (Parm, OutParm)

void ABP_CustomizationSettings_C::GetLegsItemFromDT(const class FString& TableKey, struct FPlayerCustomizationItemTableRow* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "GetLegsItemFromDT");

	Params::BP_CustomizationSettings_C_GetLegsItemFromDT Parms{};

	Parms.TableKey = std::move(TableKey);

	UObject::ProcessEvent(Func, &Parms);

	if (Item != nullptr)
		*Item = std::move(Parms.Item);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.Get Category DTRow Names
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerCustomizationType                Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FName>                     RowNames                                               (Parm, OutParm)

void ABP_CustomizationSettings_C::Get_Category_DTRow_Names(EPlayerCustomizationType Type, TArray<class FName>* RowNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "Get Category DTRow Names");

	Params::BP_CustomizationSettings_C_Get_Category_DTRow_Names Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	if (RowNames != nullptr)
		*RowNames = std::move(Parms.RowNames);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.GetFeetItemFromDT
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           TableKey                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FPlayerCustomizationItemTableRow Item                                                   (Parm, OutParm)

void ABP_CustomizationSettings_C::GetFeetItemFromDT(const class FString& TableKey, struct FPlayerCustomizationItemTableRow* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "GetFeetItemFromDT");

	Params::BP_CustomizationSettings_C_GetFeetItemFromDT Parms{};

	Parms.TableKey = std::move(TableKey);

	UObject::ProcessEvent(Func, &Parms);

	if (Item != nullptr)
		*Item = std::move(Parms.Item);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.GetFacialHairItemFromDT
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           TableKey                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FPlayerCustomizationItemTableRow Item                                                   (Parm, OutParm)

void ABP_CustomizationSettings_C::GetFacialHairItemFromDT(const class FString& TableKey, struct FPlayerCustomizationItemTableRow* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "GetFacialHairItemFromDT");

	Params::BP_CustomizationSettings_C_GetFacialHairItemFromDT Parms{};

	Parms.TableKey = std::move(TableKey);

	UObject::ProcessEvent(Func, &Parms);

	if (Item != nullptr)
		*Item = std::move(Parms.Item);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.GetSkinColorFromDT
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FPlayerCustomizationColorMaterialOutRow                                                 (Parm, OutParm)

void ABP_CustomizationSettings_C::GetSkinColorFromDT(const class FString& RowName, struct FPlayerCustomizationColorMaterial* OutRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "GetSkinColorFromDT");

	Params::BP_CustomizationSettings_C_GetSkinColorFromDT Parms{};

	Parms.RowName = std::move(RowName);

	UObject::ProcessEvent(Func, &Parms);

	if (OutRow != nullptr)
		*OutRow = std::move(Parms.OutRow);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.GetEyewearItemFromDT
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           TableKey                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FPlayerCustomizationItemTableRow Item                                                   (Parm, OutParm)

void ABP_CustomizationSettings_C::GetEyewearItemFromDT(const class FString& TableKey, struct FPlayerCustomizationItemTableRow* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "GetEyewearItemFromDT");

	Params::BP_CustomizationSettings_C_GetEyewearItemFromDT Parms{};

	Parms.TableKey = std::move(TableKey);

	UObject::ProcessEvent(Func, &Parms);

	if (Item != nullptr)
		*Item = std::move(Parms.Item);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.GetAccessoryItemFromDT
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           TableKey                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FPlayerCustomizationItemTableRow Item                                                   (Parm, OutParm)

void ABP_CustomizationSettings_C::GetAccessoryItemFromDT(const class FString& TableKey, struct FPlayerCustomizationItemTableRow* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "GetAccessoryItemFromDT");

	Params::BP_CustomizationSettings_C_GetAccessoryItemFromDT Parms{};

	Parms.TableKey = std::move(TableKey);

	UObject::ProcessEvent(Func, &Parms);

	if (Item != nullptr)
		*Item = std::move(Parms.Item);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.GetActiveCustomizationMasks
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TMap<class FString, class UTexture2D*>  OutMasks                                               (Parm, OutParm)
// bool                                    DoMaskLegs                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDoMaskFeet                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CustomizationSettings_C::GetActiveCustomizationMasks(TMap<class FString, class UTexture2D*>* OutMasks, bool* DoMaskLegs, bool* bDoMaskFeet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "GetActiveCustomizationMasks");

	Params::BP_CustomizationSettings_C_GetActiveCustomizationMasks Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutMasks != nullptr)
		*OutMasks = std::move(Parms.OutMasks);

	if (DoMaskLegs != nullptr)
		*DoMaskLegs = Parms.DoMaskLegs;

	if (bDoMaskFeet != nullptr)
		*bDoMaskFeet = Parms.bDoMaskFeet;
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.GetEyeColorFromDT
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FPlayerCustomizationColorMaterialOut_Row                                                (Parm, OutParm)

void ABP_CustomizationSettings_C::GetEyeColorFromDT(const class FString& RowName, struct FPlayerCustomizationColorMaterial* Out_Row)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "GetEyeColorFromDT");

	Params::BP_CustomizationSettings_C_GetEyeColorFromDT Parms{};

	Parms.RowName = std::move(RowName);

	UObject::ProcessEvent(Func, &Parms);

	if (Out_Row != nullptr)
		*Out_Row = std::move(Parms.Out_Row);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.GetPresetFromDT
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FPlayerCustomizationPreset       OutRow                                                 (Parm, OutParm)

void ABP_CustomizationSettings_C::GetPresetFromDT(const class FString& RowName, struct FPlayerCustomizationPreset* OutRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "GetPresetFromDT");

	Params::BP_CustomizationSettings_C_GetPresetFromDT Parms{};

	Parms.RowName = std::move(RowName);

	UObject::ProcessEvent(Func, &Parms);

	if (OutRow != nullptr)
		*OutRow = std::move(Parms.OutRow);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.Get Current Item by Category
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPlayerCustomizationType                Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPlayerCustomizationItemTableRow Item                                                   (Parm, OutParm)
// class FString                           RowName                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_CustomizationSettings_C::Get_Current_Item_by_Category(EPlayerCustomizationType Type, struct FPlayerCustomizationItemTableRow* Item, class FString* RowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "Get Current Item by Category");

	Params::BP_CustomizationSettings_C_Get_Current_Item_by_Category Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	if (Item != nullptr)
		*Item = std::move(Parms.Item);

	if (RowName != nullptr)
		*RowName = std::move(Parms.RowName);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.InitDefaultConfig
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerCustomizationGender              Gender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomizationSettings_C::InitDefaultConfig(EPlayerCustomizationGender Gender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "InitDefaultConfig");

	Params::BP_CustomizationSettings_C_InitDefaultConfig Parms{};

	Parms.Gender = Gender;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.GetHairColorFromDT
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FPlayerCustomizationColor        Out_Row                                                (Parm, OutParm)

void ABP_CustomizationSettings_C::GetHairColorFromDT(const class FString& RowName, struct FPlayerCustomizationColor* Out_Row)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "GetHairColorFromDT");

	Params::BP_CustomizationSettings_C_GetHairColorFromDT Parms{};

	Parms.RowName = std::move(RowName);

	UObject::ProcessEvent(Func, &Parms);

	if (Out_Row != nullptr)
		*Out_Row = std::move(Parms.Out_Row);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.InitCurrentConfig
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFCTCloudCustomizationGender     GenderConfig                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_CustomizationSettings_C::InitCurrentConfig(const struct FFCTCloudCustomizationGender& GenderConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "InitCurrentConfig");

	Params::BP_CustomizationSettings_C_InitCurrentConfig Parms{};

	Parms.GenderConfig = std::move(GenderConfig);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.Get Eye Color Info
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class FName>                     OutRowNames                                            (Parm, OutParm)
// class UDataTable*                       DataTable                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Selected                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_CustomizationSettings_C::Get_Eye_Color_Info(TArray<class FName>* OutRowNames, class UDataTable** DataTable, class FString* Selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "Get Eye Color Info");

	Params::BP_CustomizationSettings_C_Get_Eye_Color_Info Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutRowNames != nullptr)
		*OutRowNames = std::move(Parms.OutRowNames);

	if (DataTable != nullptr)
		*DataTable = Parms.DataTable;

	if (Selected != nullptr)
		*Selected = std::move(Parms.Selected);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.GetSkinColorInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class FName>                     OutRowNames                                            (Parm, OutParm)
// class UDataTable*                       DataTable                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Selected                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_CustomizationSettings_C::GetSkinColorInfo(TArray<class FName>* OutRowNames, class UDataTable** DataTable, class FString* Selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "GetSkinColorInfo");

	Params::BP_CustomizationSettings_C_GetSkinColorInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutRowNames != nullptr)
		*OutRowNames = std::move(Parms.OutRowNames);

	if (DataTable != nullptr)
		*DataTable = Parms.DataTable;

	if (Selected != nullptr)
		*Selected = std::move(Parms.Selected);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.GetHairColorInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class FName>                     OutRowNames                                            (Parm, OutParm)
// class UDataTable*                       DataTable                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Selected                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_CustomizationSettings_C::GetHairColorInfo(TArray<class FName>* OutRowNames, class UDataTable** DataTable, class FString* Selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "GetHairColorInfo");

	Params::BP_CustomizationSettings_C_GetHairColorInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutRowNames != nullptr)
		*OutRowNames = std::move(Parms.OutRowNames);

	if (DataTable != nullptr)
		*DataTable = Parms.DataTable;

	if (Selected != nullptr)
		*Selected = std::move(Parms.Selected);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.GetPresetInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class FName>                     OutRowNames                                            (Parm, OutParm)
// class UDataTable*                       DataTable                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Selected                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_CustomizationSettings_C::GetPresetInfo(TArray<class FName>* OutRowNames, class UDataTable** DataTable, class FString* Selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "GetPresetInfo");

	Params::BP_CustomizationSettings_C_GetPresetInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutRowNames != nullptr)
		*OutRowNames = std::move(Parms.OutRowNames);

	if (DataTable != nullptr)
		*DataTable = Parms.DataTable;

	if (Selected != nullptr)
		*Selected = std::move(Parms.Selected);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.GetCurrentEyeColor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayerCustomizationColorMaterialOut_Row                                                (Parm, OutParm)

void ABP_CustomizationSettings_C::GetCurrentEyeColor(struct FPlayerCustomizationColorMaterial* Out_Row)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "GetCurrentEyeColor");

	Params::BP_CustomizationSettings_C_GetCurrentEyeColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Out_Row != nullptr)
		*Out_Row = std::move(Parms.Out_Row);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.ConfirmGenderSettings
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFCTCloudCustomizationGender     UpdatedSetting                                         (Parm, OutParm)

void ABP_CustomizationSettings_C::ConfirmGenderSettings(struct FFCTCloudCustomizationGender* UpdatedSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "ConfirmGenderSettings");

	Params::BP_CustomizationSettings_C_ConfirmGenderSettings Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UpdatedSetting != nullptr)
		*UpdatedSetting = std::move(Parms.UpdatedSetting);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.RevertGenderSettings
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CustomizationSettings_C::RevertGenderSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "RevertGenderSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.Apply Preset to Character
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomizationSettings_C::Apply_Preset_to_Character(const class FString& RowName, class USkeletalMeshComponent* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "Apply Preset to Character");

	Params::BP_CustomizationSettings_C_Apply_Preset_to_Character Parms{};

	Parms.RowName = std::move(RowName);
	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.ApplyItemToCharacter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerCustomizationType                Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           SkeletalMeshComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomizationSettings_C::ApplyItemToCharacter(EPlayerCustomizationType Type, const class FString& RowName, class USkeletalMeshComponent* SkeletalMeshComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "ApplyItemToCharacter");

	Params::BP_CustomizationSettings_C_ApplyItemToCharacter Parms{};

	Parms.Type = Type;
	Parms.RowName = std::move(RowName);
	Parms.SkeletalMeshComponent = SkeletalMeshComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.ApplyFullCustomization
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           SkeletalMesh                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           HeadMesh                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           BodyMesh                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           LegsMesh                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           FeetMesh                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           EyewearMesh                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           AccessoryMesh                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           FacialHairMesh                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SetCurrent                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CustomizationSettings_C::ApplyFullCustomization(class USkeletalMeshComponent* SkeletalMesh, class USkeletalMeshComponent* HeadMesh, class USkeletalMeshComponent* BodyMesh, class USkeletalMeshComponent* LegsMesh, class USkeletalMeshComponent* FeetMesh, class USkeletalMeshComponent* EyewearMesh, class USkeletalMeshComponent* AccessoryMesh, class USkeletalMeshComponent* FacialHairMesh, bool SetCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "ApplyFullCustomization");

	Params::BP_CustomizationSettings_C_ApplyFullCustomization Parms{};

	Parms.SkeletalMesh = SkeletalMesh;
	Parms.HeadMesh = HeadMesh;
	Parms.BodyMesh = BodyMesh;
	Parms.LegsMesh = LegsMesh;
	Parms.FeetMesh = FeetMesh;
	Parms.EyewearMesh = EyewearMesh;
	Parms.AccessoryMesh = AccessoryMesh;
	Parms.FacialHairMesh = FacialHairMesh;
	Parms.SetCurrent = SetCurrent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.ApplyEyeColorToCharacter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomizationSettings_C::ApplyEyeColorToCharacter(const class FString& RowName, class USkeletalMeshComponent* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "ApplyEyeColorToCharacter");

	Params::BP_CustomizationSettings_C_ApplyEyeColorToCharacter Parms{};

	Parms.RowName = std::move(RowName);
	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.ApplySkinColorToCharacter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomizationSettings_C::ApplySkinColorToCharacter(const class FString& RowName, class USkeletalMeshComponent* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "ApplySkinColorToCharacter");

	Params::BP_CustomizationSettings_C_ApplySkinColorToCharacter Parms{};

	Parms.RowName = std::move(RowName);
	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.ApplyCustomizationToPreviewer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacterPreviewerSCTBP_C*       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SetCurrent                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CustomizationSettings_C::ApplyCustomizationToPreviewer(class ACharacterPreviewerSCTBP_C* Character, bool SetCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "ApplyCustomizationToPreviewer");

	Params::BP_CustomizationSettings_C_ApplyCustomizationToPreviewer Parms{};

	Parms.Character = Character;
	Parms.SetCurrent = SetCurrent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.ApplyCustomizationToGameCharacter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacterSCTBP_C*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomizationSettings_C::ApplyCustomizationToGameCharacter(class ACharacterSCTBP_C* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "ApplyCustomizationToGameCharacter");

	Params::BP_CustomizationSettings_C_ApplyCustomizationToGameCharacter Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.RefreshMasks
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           CharacterMesh                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Preview                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    MaskLegs                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    MaskFeet                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CustomizationSettings_C::RefreshMasks(class USkeletalMeshComponent* CharacterMesh, bool Preview, bool* MaskLegs, bool* MaskFeet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "RefreshMasks");

	Params::BP_CustomizationSettings_C_RefreshMasks Parms{};

	Parms.CharacterMesh = CharacterMesh;
	Parms.Preview = Preview;

	UObject::ProcessEvent(Func, &Parms);

	if (MaskLegs != nullptr)
		*MaskLegs = Parms.MaskLegs;

	if (MaskFeet != nullptr)
		*MaskFeet = Parms.MaskFeet;
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.GetItemByCategory
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerCustomizationType                Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Table_Key                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FPlayerCustomizationItemTableRow Item                                                   (Parm, OutParm)
// class FString                           MaskName                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_CustomizationSettings_C::GetItemByCategory(EPlayerCustomizationType Type, const class FString& Table_Key, struct FPlayerCustomizationItemTableRow* Item, class FString* MaskName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "GetItemByCategory");

	Params::BP_CustomizationSettings_C_GetItemByCategory Parms{};

	Parms.Type = Type;
	Parms.Table_Key = std::move(Table_Key);

	UObject::ProcessEvent(Func, &Parms);

	if (Item != nullptr)
		*Item = std::move(Parms.Item);

	if (MaskName != nullptr)
		*MaskName = std::move(Parms.MaskName);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.ApplyHairColorToCharacter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           Head                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomizationSettings_C::ApplyHairColorToCharacter(const class FString& RowName, class USkeletalMeshComponent* Head)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "ApplyHairColorToCharacter");

	Params::BP_CustomizationSettings_C_ApplyHairColorToCharacter Parms{};

	Parms.RowName = std::move(RowName);
	Parms.Head = Head;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.Get Audio Event by Category
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPlayerCustomizationType                Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UAkAudioEvent*>            OutAudioEvent                                          (Parm, OutParm)

void ABP_CustomizationSettings_C::Get_Audio_Event_by_Category(EPlayerCustomizationType Type, TArray<class UAkAudioEvent*>* OutAudioEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "Get Audio Event by Category");

	Params::BP_CustomizationSettings_C_Get_Audio_Event_by_Category Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	if (OutAudioEvent != nullptr)
		*OutAudioEvent = std::move(Parms.OutAudioEvent);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.GetGender
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPlayerCustomizationGender              Gender                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomizationSettings_C::GetGender(EPlayerCustomizationGender* Gender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "GetGender");

	Params::BP_CustomizationSettings_C_GetGender Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Gender != nullptr)
		*Gender = Parms.Gender;
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.Get Mask Feet
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bBodyMasksFeet                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bLegsMasksFeet                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDoMaskFeet                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CustomizationSettings_C::Get_Mask_Feet(bool bBodyMasksFeet, bool bLegsMasksFeet, bool* bDoMaskFeet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "Get Mask Feet");

	Params::BP_CustomizationSettings_C_Get_Mask_Feet Parms{};

	Parms.bBodyMasksFeet = bBodyMasksFeet;
	Parms.bLegsMasksFeet = bLegsMasksFeet;

	UObject::ProcessEvent(Func, &Parms);

	if (bDoMaskFeet != nullptr)
		*bDoMaskFeet = Parms.bDoMaskFeet;
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.Mask Character Mesh Component
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkinnedMeshComponent*            Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         MaterialInstance                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             MaskName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomizationSettings_C::Mask_Character_Mesh_Component(class USkinnedMeshComponent* Mesh, class UMaterialInstanceDynamic* MaterialInstance, class FName MaskName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "Mask Character Mesh Component");

	Params::BP_CustomizationSettings_C_Mask_Character_Mesh_Component Parms{};

	Parms.Mesh = Mesh;
	Parms.MaterialInstance = MaterialInstance;
	Parms.MaskName = MaskName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.UnmaskCharacterMeshComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayerCustomizationItemTableRow PlayerCustomizationItemTableRow                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper)
// class UMeshComponent*                   Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         MaterialInstance                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture*                         Mask                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             MaskName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomizationSettings_C::UnmaskCharacterMeshComponent(const struct FPlayerCustomizationItemTableRow& PlayerCustomizationItemTableRow, class UMeshComponent* Mesh, class UMaterialInstanceDynamic* MaterialInstance, class UTexture* Mask, class FName MaskName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "UnmaskCharacterMeshComponent");

	Params::BP_CustomizationSettings_C_UnmaskCharacterMeshComponent Parms{};

	Parms.PlayerCustomizationItemTableRow = std::move(PlayerCustomizationItemTableRow);
	Parms.Mesh = Mesh;
	Parms.MaterialInstance = MaterialInstance;
	Parms.Mask = Mask;
	Parms.MaskName = MaskName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.CreateEntitlementRange
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerCustomizationType                Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomizationSettings_C::CreateEntitlementRange(EPlayerCustomizationType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "CreateEntitlementRange");

	Params::BP_CustomizationSettings_C_CreateEntitlementRange Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.GetActivePreviewMasks
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TMap<class FString, class UTexture2D*>  OutMasks                                               (Parm, OutParm)
// bool                                    DoMaskLegs                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDoMaskFeet                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CustomizationSettings_C::GetActivePreviewMasks(TMap<class FString, class UTexture2D*>* OutMasks, bool* DoMaskLegs, bool* bDoMaskFeet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "GetActivePreviewMasks");

	Params::BP_CustomizationSettings_C_GetActivePreviewMasks Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutMasks != nullptr)
		*OutMasks = std::move(Parms.OutMasks);

	if (DoMaskLegs != nullptr)
		*DoMaskLegs = Parms.DoMaskLegs;

	if (bDoMaskFeet != nullptr)
		*bDoMaskFeet = Parms.bDoMaskFeet;
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.InitializeItemList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   ItemList                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FAccelByteModelsEntitlementInfo>UnlockedEntitlements                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UDataTable*                       DataTable                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CustomizationSettings_C::InitializeItemList(TArray<class FString>& ItemList, TArray<struct FAccelByteModelsEntitlementInfo>& UnlockedEntitlements, class UDataTable* DataTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "InitializeItemList");

	Params::BP_CustomizationSettings_C_InitializeItemList Parms{};

	Parms.ItemList = std::move(ItemList);
	Parms.UnlockedEntitlements = std::move(UnlockedEntitlements);
	Parms.DataTable = DataTable;

	UObject::ProcessEvent(Func, &Parms);

	ItemList = std::move(Parms.ItemList);
	UnlockedEntitlements = std::move(Parms.UnlockedEntitlements);
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.UserOwnsEntitlement
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FAccelByteModelsEntitlementInfo>Entitlements                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FString                           QueryID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    bFound                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CustomizationSettings_C::UserOwnsEntitlement(TArray<struct FAccelByteModelsEntitlementInfo>& Entitlements, const class FString& QueryID, bool* bFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "UserOwnsEntitlement");

	Params::BP_CustomizationSettings_C_UserOwnsEntitlement Parms{};

	Parms.Entitlements = std::move(Entitlements);
	Parms.QueryID = std::move(QueryID);

	UObject::ProcessEvent(Func, &Parms);

	Entitlements = std::move(Parms.Entitlements);

	if (bFound != nullptr)
		*bFound = Parms.bFound;
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.GetCurrentLevel
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_CustomizationSettings_C::GetCurrentLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "GetCurrentLevel");

	Params::BP_CustomizationSettings_C_GetCurrentLevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_CustomizationSettings.BP_CustomizationSettings_C.Get List Info by Item Category
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerCustomizationType                ItemCategory                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>                   OutItemList                                            (Parm, OutParm)
// class FString                           SelectedRowName                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_CustomizationSettings_C::Get_List_Info_by_Item_Category(EPlayerCustomizationType ItemCategory, TArray<class FString>* OutItemList, class FString* SelectedRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CustomizationSettings_C", "Get List Info by Item Category");

	Params::BP_CustomizationSettings_C_Get_List_Info_by_Item_Category Parms{};

	Parms.ItemCategory = ItemCategory;

	UObject::ProcessEvent(Func, &Parms);

	if (OutItemList != nullptr)
		*OutItemList = std::move(Parms.OutItemList);

	if (SelectedRowName != nullptr)
		*SelectedRowName = std::move(Parms.SelectedRowName);
}

}

