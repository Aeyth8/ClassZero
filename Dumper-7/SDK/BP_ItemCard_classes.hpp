#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemCard

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SCT_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_ItemCard.BP_ItemCard_C
// 0x0128 (0x06E0 - 0x05B8)
class UBP_ItemCard_C : public UItemCardUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UOverlay*                               AchievementOverlay;                                // 0x05C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_0;                                     // 0x05C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CosmeticImage_1;                                   // 0x05D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_101;                                         // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_112;                                         // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_296;                                         // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             LevelText;                                         // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LockedIcon;                                        // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               LockedOverlay;                                     // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_0;                                         // 0x0618(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 QualityLockedOverlay;                              // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URadialProgressBar_C*                   RadialProgressBar;                                 // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SelectedAndHoveredCosmetic;                        // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ThumbnailIcon;                                     // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 DTRowName;                                         // 0x0640(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           QualityColor;                                      // 0x0650(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture2D*                             TooltipThumbnail;                                  // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUnlocked;                                         // 0x0668(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_669[0x7];                                      // 0x0669(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFCTAchievement*                        AchievementUnlock;                                 // 0x0670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnItemSelected;                                    // 0x0678(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnItemFocusStateChanged;                           // 0x0688(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UTexture2DDynamic*                      TooltipThumbnailDynamic;                           // 0x0698(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           PreviewerTimerHandle;                              // 0x06A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnRevertItem;                                      // 0x06A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FVector2D                              AbsolutePosition;                                  // 0x06B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemTooltip_C*                      ItemTooltip;                                       // 0x06C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnSetTooltipState;                                 // 0x06C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	uint8                                         CategoryAsByte;                                    // 0x06D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnItemSelected__DelegateSignature(class UBP_ItemCard_C* Item);
	void OnItemFocusStateChanged__DelegateSignature(bool Focused, class UBP_ItemCard_C* Item);
	void OnRevertItem__DelegateSignature();
	void OnSetTooltipState__DelegateSignature(bool Visible, class UBP_ItemCard_C* ItemCard, uint8 CategoryAsByte_0);
	void ExecuteUbergraph_BP_ItemCard(int32 EntryPoint);
	void K2_EventOnSetNormalCosmetics();
	void BndEvt__BP_ItemCard_SelectButton_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void K2_EventOnSetHoveredCosmetics();
	void K2_EventOnSelectionPressed();
	void Construct();
	void OnPreviewWithControllerInput();
	void OnSetPreviewEventTimer(float Time);
	void OnPreviewingItem();
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void SetVariables(class UTexture2D* IconThumbnail, const class FString& AchievementCode, int32 UnlockLevel, int32 CurrentLevel, const struct FFCTAchievementList& AchievementList);
	class UWidget* GetTooltip();
	void ItemSelected();
	void CreateTooltipWidget(const class FString& InAchievementString, bool InEquipped, class UBP_CustomizationSlotTooltip_C** ToolTip);
	void ResetRadialProgressBar();
	void SetAbsolutePosition(class UWidget* ParentWidget);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ItemCard_C">();
	}
	static class UBP_ItemCard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ItemCard_C>();
	}
};
static_assert(alignof(UBP_ItemCard_C) == 0x000008, "Wrong alignment on UBP_ItemCard_C");
static_assert(sizeof(UBP_ItemCard_C) == 0x0006E0, "Wrong size on UBP_ItemCard_C");
static_assert(offsetof(UBP_ItemCard_C, UberGraphFrame) == 0x0005B8, "Member 'UBP_ItemCard_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, AchievementOverlay) == 0x0005C0, "Member 'UBP_ItemCard_C::AchievementOverlay' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, CanvasPanel_0) == 0x0005C8, "Member 'UBP_ItemCard_C::CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, CosmeticImage_1) == 0x0005D0, "Member 'UBP_ItemCard_C::CosmeticImage_1' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, Image_1) == 0x0005D8, "Member 'UBP_ItemCard_C::Image_1' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, Image_2) == 0x0005E0, "Member 'UBP_ItemCard_C::Image_2' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, Image_101) == 0x0005E8, "Member 'UBP_ItemCard_C::Image_101' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, Image_112) == 0x0005F0, "Member 'UBP_ItemCard_C::Image_112' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, Image_296) == 0x0005F8, "Member 'UBP_ItemCard_C::Image_296' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, LevelText) == 0x000600, "Member 'UBP_ItemCard_C::LevelText' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, LockedIcon) == 0x000608, "Member 'UBP_ItemCard_C::LockedIcon' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, LockedOverlay) == 0x000610, "Member 'UBP_ItemCard_C::LockedOverlay' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, Overlay_0) == 0x000618, "Member 'UBP_ItemCard_C::Overlay_0' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, QualityLockedOverlay) == 0x000620, "Member 'UBP_ItemCard_C::QualityLockedOverlay' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, RadialProgressBar) == 0x000628, "Member 'UBP_ItemCard_C::RadialProgressBar' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, SelectedAndHoveredCosmetic) == 0x000630, "Member 'UBP_ItemCard_C::SelectedAndHoveredCosmetic' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, ThumbnailIcon) == 0x000638, "Member 'UBP_ItemCard_C::ThumbnailIcon' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, DTRowName) == 0x000640, "Member 'UBP_ItemCard_C::DTRowName' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, QualityColor) == 0x000650, "Member 'UBP_ItemCard_C::QualityColor' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, TooltipThumbnail) == 0x000660, "Member 'UBP_ItemCard_C::TooltipThumbnail' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, bUnlocked) == 0x000668, "Member 'UBP_ItemCard_C::bUnlocked' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, AchievementUnlock) == 0x000670, "Member 'UBP_ItemCard_C::AchievementUnlock' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, OnItemSelected) == 0x000678, "Member 'UBP_ItemCard_C::OnItemSelected' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, OnItemFocusStateChanged) == 0x000688, "Member 'UBP_ItemCard_C::OnItemFocusStateChanged' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, TooltipThumbnailDynamic) == 0x000698, "Member 'UBP_ItemCard_C::TooltipThumbnailDynamic' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, PreviewerTimerHandle) == 0x0006A0, "Member 'UBP_ItemCard_C::PreviewerTimerHandle' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, OnRevertItem) == 0x0006A8, "Member 'UBP_ItemCard_C::OnRevertItem' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, AbsolutePosition) == 0x0006B8, "Member 'UBP_ItemCard_C::AbsolutePosition' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, ItemTooltip) == 0x0006C0, "Member 'UBP_ItemCard_C::ItemTooltip' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, OnSetTooltipState) == 0x0006C8, "Member 'UBP_ItemCard_C::OnSetTooltipState' has a wrong offset!");
static_assert(offsetof(UBP_ItemCard_C, CategoryAsByte) == 0x0006D8, "Member 'UBP_ItemCard_C::CategoryAsByte' has a wrong offset!");

}

