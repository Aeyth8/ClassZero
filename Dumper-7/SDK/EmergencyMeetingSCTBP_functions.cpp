#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EmergencyMeetingSCTBP

#include "Basic.hpp"

#include "EmergencyMeetingSCTBP_classes.hpp"
#include "EmergencyMeetingSCTBP_parameters.hpp"


namespace SDK
{

// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.On_EndMeeting__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::On_EndMeeting__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "On_EndMeeting__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.ExecuteUbergraph_EmergencyMeetingSCTBP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyMeetingSCTBP_C::ExecuteUbergraph_EmergencyMeetingSCTBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "ExecuteUbergraph_EmergencyMeetingSCTBP");

	Params::EmergencyMeetingSCTBP_C_ExecuteUbergraph_EmergencyMeetingSCTBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.StartArtisticFade
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::StartArtisticFade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "StartArtisticFade");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.TrySettingCamera
// (BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::TrySettingCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "TrySettingCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.OnMatchHasStarted
// (Event, Public, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::OnMatchHasStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "OnMatchHasStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.Audio No Player Was Doomed
// (BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::Audio_No_Player_Was_Doomed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "Audio No Player Was Doomed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.Audio Player Was Doomed
// (BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::Audio_Player_Was_Doomed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "Audio Player Was Doomed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.InitiateTrustEndVote
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       CharacterVotedOut                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyMeetingSCTBP_C::InitiateTrustEndVote(class ACharacter* CharacterVotedOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "InitiateTrustEndVote");

	Params::EmergencyMeetingSCTBP_C_InitiateTrustEndVote Parms{};

	Parms.CharacterVotedOut = CharacterVotedOut;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.InvalidateEndTimer
// (BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::InvalidateEndTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "InvalidateEndTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.EndVoteExpired
// (BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::EndVoteExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "EndVoteExpired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.InitiateResultScreen
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       CharacterVotedOut                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ExpectedVotes_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyMeetingSCTBP_C::InitiateResultScreen(class ACharacter* CharacterVotedOut, int32 ExpectedVotes_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "InitiateResultScreen");

	Params::EmergencyMeetingSCTBP_C_InitiateResultScreen Parms{};

	Parms.CharacterVotedOut = CharacterVotedOut;
	Parms.ExpectedVotes_0 = ExpectedVotes_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.EliminationVoteEnded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       VotedOut                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyMeetingSCTBP_C::EliminationVoteEnded(class ACharacter* VotedOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "EliminationVoteEnded");

	Params::EmergencyMeetingSCTBP_C_EliminationVoteEnded Parms{};

	Parms.VotedOut = VotedOut;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.InvalidateMeetingTimer
// (BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::InvalidateMeetingTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "InvalidateMeetingTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.MeetingExpired
// (BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::MeetingExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "MeetingExpired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.InitiateEliminationVote
// (BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::InitiateEliminationVote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "InitiateEliminationVote");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.MeetingWidgetV2
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ACharacter*>               CharactersForVote                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   ExpectedVotes_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Countdown                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ACharacter*>               PassengerLogs                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   TargetPassengerLog                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPassengerLogInformation         PassengerLogInfo                                       (BlueprintVisible, BlueprintReadOnly, Parm)
// TArray<int32>                           MeetingCallers_0                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   LottoSeed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyMeetingSCTBP_C::MeetingWidgetV2(TArray<class ACharacter*>& CharactersForVote, int32 ExpectedVotes_0, int32 Countdown, const TArray<class ACharacter*>& PassengerLogs, int32 TargetPassengerLog, const struct FPassengerLogInformation& PassengerLogInfo, const TArray<int32>& MeetingCallers_0, int32 LottoSeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "MeetingWidgetV2");

	Params::EmergencyMeetingSCTBP_C_MeetingWidgetV2 Parms{};

	Parms.CharactersForVote = std::move(CharactersForVote);
	Parms.ExpectedVotes_0 = ExpectedVotes_0;
	Parms.Countdown = Countdown;
	Parms.PassengerLogs = std::move(PassengerLogs);
	Parms.TargetPassengerLog = TargetPassengerLog;
	Parms.PassengerLogInfo = std::move(PassengerLogInfo);
	Parms.MeetingCallers_0 = std::move(MeetingCallers_0);
	Parms.LottoSeed = LottoSeed;

	UObject::ProcessEvent(Func, &Parms);

	CharactersForVote = std::move(Parms.CharactersForVote);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.MatchEnded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EEndConditions                          End_Condition                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyMeetingSCTBP_C::MatchEnded(EEndConditions End_Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "MatchEnded");

	Params::EmergencyMeetingSCTBP_C_MatchEnded Parms{};

	Parms.End_Condition = End_Condition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.SetInterviewCamera
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       ViewTarget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyMeetingSCTBP_C::SetInterviewCamera(class ACharacter* ViewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "SetInterviewCamera");

	Params::EmergencyMeetingSCTBP_C_SetInterviewCamera Parms{};

	Parms.ViewTarget = ViewTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.ForceEndTrust
// (BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::ForceEndTrust()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "ForceEndTrust");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.ForceEndElimination
// (BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::ForceEndElimination()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "ForceEndElimination");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.DisableVotedOutWidget
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       VotedOut                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyMeetingSCTBP_C::DisableVotedOutWidget(class ACharacter* VotedOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "DisableVotedOutWidget");

	Params::EmergencyMeetingSCTBP_C_DisableVotedOutWidget Parms{};

	Parms.VotedOut = VotedOut;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.Start
// (BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.EliminationVoteMULTICAST
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       VoteFrom                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACharacter*                       VoteFor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyMeetingSCTBP_C::EliminationVoteMULTICAST(class ACharacter* VoteFrom, class ACharacter* VoteFor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "EliminationVoteMULTICAST");

	Params::EmergencyMeetingSCTBP_C_EliminationVoteMULTICAST Parms{};

	Parms.VoteFrom = VoteFrom;
	Parms.VoteFor = VoteFor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.EliminationVoteSERVER
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       VoteComesFrom                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACharacter*                       Vote                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyMeetingSCTBP_C::EliminationVoteSERVER(class ACharacter* VoteComesFrom, class ACharacter* Vote)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "EliminationVoteSERVER");

	Params::EmergencyMeetingSCTBP_C_EliminationVoteSERVER Parms{};

	Parms.VoteComesFrom = VoteComesFrom;
	Parms.Vote = Vote;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.TrustVoteMULTICAST
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TrustYes                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AEmergencyMeetingSCTBP_C::TrustVoteMULTICAST(bool TrustYes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "TrustVoteMULTICAST");

	Params::EmergencyMeetingSCTBP_C_TrustVoteMULTICAST Parms{};

	Parms.TrustYes = TrustYes;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.TrustVoteServer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Vote                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AEmergencyMeetingSCTBP_C::TrustVoteServer(bool Vote)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "TrustVoteServer");

	Params::EmergencyMeetingSCTBP_C_TrustVoteServer Parms{};

	Parms.Vote = Vote;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.InitiateEndMeetingMULTICAST
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::InitiateEndMeetingMULTICAST()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "InitiateEndMeetingMULTICAST");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.InitiateEndMeeting
// (BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::InitiateEndMeeting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "InitiateEndMeeting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.InitiateEmergencyMeeting
// (BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::InitiateEmergencyMeeting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "InitiateEmergencyMeeting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.ResetBetweenVoteVariables
// (Public, BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::ResetBetweenVoteVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "ResetBetweenVoteVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.SetupMeetingReferences
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::SetupMeetingReferences()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "SetupMeetingReferences");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.GetVoteEligibleCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   VoteEligiblePlayers                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyMeetingSCTBP_C::GetVoteEligibleCount(int32* VoteEligiblePlayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "GetVoteEligibleCount");

	Params::EmergencyMeetingSCTBP_C_GetVoteEligibleCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (VoteEligiblePlayers != nullptr)
		*VoteEligiblePlayers = Parms.VoteEligiblePlayers;
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.CountEliminationVotes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    WasDeadlocked                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class ACharacter*>               Deadlocked                                             (Parm, OutParm)
// class ACharacter*                       VotedOut                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyMeetingSCTBP_C::CountEliminationVotes(bool* WasDeadlocked, TArray<class ACharacter*>* Deadlocked, class ACharacter** VotedOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "CountEliminationVotes");

	Params::EmergencyMeetingSCTBP_C_CountEliminationVotes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WasDeadlocked != nullptr)
		*WasDeadlocked = Parms.WasDeadlocked;

	if (Deadlocked != nullptr)
		*Deadlocked = std::move(Parms.Deadlocked);

	if (VotedOut != nullptr)
		*VotedOut = Parms.VotedOut;
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.NamesToText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class ACharacter*>               Characters                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText AEmergencyMeetingSCTBP_C::NamesToText(TArray<class ACharacter*>& Characters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "NamesToText");

	Params::EmergencyMeetingSCTBP_C_NamesToText Parms{};

	Parms.Characters = std::move(Characters);

	UObject::ProcessEvent(Func, &Parms);

	Characters = std::move(Parms.Characters);

	return Parms.ReturnValue;
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.GetRandomTextFromArray
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class FText>                     Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class ACharacter*>               Characters                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             Result                                                 (Parm, OutParm)

void AEmergencyMeetingSCTBP_C::GetRandomTextFromArray(TArray<class FText>& Array, TArray<class ACharacter*>& Characters, class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "GetRandomTextFromArray");

	Params::EmergencyMeetingSCTBP_C_GetRandomTextFromArray Parms{};

	Parms.Array = std::move(Array);
	Parms.Characters = std::move(Characters);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
	Characters = std::move(Parms.Characters);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.Remove Meeting References
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::Remove_Meeting_References()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "Remove Meeting References");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.GetEmergencyWidget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class UEmergencyMeetingWI_C*>    EmergencyMeetingWI                                     (Parm, OutParm, ContainsInstancedReference)

void AEmergencyMeetingSCTBP_C::GetEmergencyWidget(bool* IsValid, TArray<class UEmergencyMeetingWI_C*>* EmergencyMeetingWI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "GetEmergencyWidget");

	Params::EmergencyMeetingSCTBP_C_GetEmergencyWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	if (EmergencyMeetingWI != nullptr)
		*EmergencyMeetingWI = std::move(Parms.EmergencyMeetingWI);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.SetWidgetActorReferences
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UEmergencyMeetingWI_C*>    Widgets                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void AEmergencyMeetingSCTBP_C::SetWidgetActorReferences(TArray<class UEmergencyMeetingWI_C*>& Widgets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "SetWidgetActorReferences");

	Params::EmergencyMeetingSCTBP_C_SetWidgetActorReferences Parms{};

	Parms.Widgets = std::move(Widgets);

	UObject::ProcessEvent(Func, &Parms);

	Widgets = std::move(Parms.Widgets);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.SetCameraView
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyMeetingSCTBP_C::SetCameraView(class ACharacter* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "SetCameraView");

	Params::EmergencyMeetingSCTBP_C_SetCameraView Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.InvalidateExpirationTimers
// (Public, BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::InvalidateExpirationTimers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "InvalidateExpirationTimers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.FindAnyPassengerLogs
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    PassengerLogAvailable                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class ACharacter*>               PlayerWithLog                                          (Parm, OutParm)
// int32                                   TargetLog                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPassengerLogInformation         PassengerLog                                           (Parm, OutParm)

void AEmergencyMeetingSCTBP_C::FindAnyPassengerLogs(bool* PassengerLogAvailable, TArray<class ACharacter*>* PlayerWithLog, int32* TargetLog, struct FPassengerLogInformation* PassengerLog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "FindAnyPassengerLogs");

	Params::EmergencyMeetingSCTBP_C_FindAnyPassengerLogs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PassengerLogAvailable != nullptr)
		*PassengerLogAvailable = Parms.PassengerLogAvailable;

	if (PlayerWithLog != nullptr)
		*PlayerWithLog = std::move(Parms.PlayerWithLog);

	if (TargetLog != nullptr)
		*TargetLog = Parms.TargetLog;

	if (PassengerLog != nullptr)
		*PassengerLog = std::move(Parms.PassengerLog);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.RandomIntInRange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Min                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 AEmergencyMeetingSCTBP_C::RandomIntInRange(int32 Min, int32 Max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "RandomIntInRange");

	Params::EmergencyMeetingSCTBP_C_RandomIntInRange Parms{};

	Parms.Min = Min;
	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.GetInitiatingCharacters
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ACharacter*>               Characters                                             (Parm, OutParm)

void AEmergencyMeetingSCTBP_C::GetInitiatingCharacters(TArray<class ACharacter*>* Characters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "GetInitiatingCharacters");

	Params::EmergencyMeetingSCTBP_C_GetInitiatingCharacters Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Characters != nullptr)
		*Characters = std::move(Parms.Characters);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.AddMissingEliminationVotes
// (Public, BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::AddMissingEliminationVotes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "AddMissingEliminationVotes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.AttemptToExecutePlayer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyMeetingSCTBP_C::AttemptToExecutePlayer(class ACharacter* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "AttemptToExecutePlayer");

	Params::EmergencyMeetingSCTBP_C_AttemptToExecutePlayer Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.AttemptToMoveToExecution
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyMeetingSCTBP_C::AttemptToMoveToExecution(class ACharacter* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "AttemptToMoveToExecution");

	Params::EmergencyMeetingSCTBP_C_AttemptToMoveToExecution Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.AnyPersonoidsAlive
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    PersonoidAlive                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AEmergencyMeetingSCTBP_C::AnyPersonoidsAlive(bool* PersonoidAlive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "AnyPersonoidsAlive");

	Params::EmergencyMeetingSCTBP_C_AnyPersonoidsAlive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PersonoidAlive != nullptr)
		*PersonoidAlive = Parms.PersonoidAlive;
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.MoveToMeetingPosition
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UArrowComponent*                  Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyMeetingSCTBP_C::MoveToMeetingPosition(class ACharacter* Character, class UArrowComponent* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "MoveToMeetingPosition");

	Params::EmergencyMeetingSCTBP_C_MoveToMeetingPosition Parms{};

	Parms.Character = Character;
	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.AttemptToOpenDoor
// (Public, BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::AttemptToOpenDoor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "AttemptToOpenDoor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.GetVoteIneligiblePlayers
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          OptionalVotedOut                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    VoteIneligible                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AEmergencyMeetingSCTBP_C::GetVoteIneligiblePlayers(class UObject* OptionalVotedOut, bool* VoteIneligible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "GetVoteIneligiblePlayers");

	Params::EmergencyMeetingSCTBP_C_GetVoteIneligiblePlayers Parms{};

	Parms.OptionalVotedOut = OptionalVotedOut;

	UObject::ProcessEvent(Func, &Parms);

	if (VoteIneligible != nullptr)
		*VoteIneligible = Parms.VoteIneligible;
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.MeetingCallerToIndex
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<int32>                           MeetingCallersArray                                    (Parm, OutParm)

void AEmergencyMeetingSCTBP_C::MeetingCallerToIndex(TArray<int32>* MeetingCallersArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "MeetingCallerToIndex");

	Params::EmergencyMeetingSCTBP_C_MeetingCallerToIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MeetingCallersArray != nullptr)
		*MeetingCallersArray = std::move(Parms.MeetingCallersArray);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.RemoveLightningEffects
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::RemoveLightningEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "RemoveLightningEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.HideCertainWidgets
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::HideCertainWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "HideCertainWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.GetCharactersToTeleport
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ACharacter*>               Characters                                             (Parm, OutParm)

void AEmergencyMeetingSCTBP_C::GetCharactersToTeleport(TArray<class ACharacter*>* Characters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "GetCharactersToTeleport");

	Params::EmergencyMeetingSCTBP_C_GetCharactersToTeleport Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Characters != nullptr)
		*Characters = std::move(Parms.Characters);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.GrantScoreToPassedPlayers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::GrantScoreToPassedPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "GrantScoreToPassedPlayers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.GrantScoreForVoting
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       VoteComesFrom                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACharacter*                       Vote                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyMeetingSCTBP_C::GrantScoreForVoting(class ACharacter* VoteComesFrom, class ACharacter* Vote)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "GrantScoreForVoting");

	Params::EmergencyMeetingSCTBP_C_GrantScoreForVoting Parms{};

	Parms.VoteComesFrom = VoteComesFrom;
	Parms.Vote = Vote;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.RemoveAllPassengerLogs
// (Public, BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::RemoveAllPassengerLogs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "RemoveAllPassengerLogs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.Move Characters to Meeting
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ACharacter*>               Characters                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AEmergencyMeetingSCTBP_C::Move_Characters_to_Meeting(TArray<class ACharacter*>& Characters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "Move Characters to Meeting");

	Params::EmergencyMeetingSCTBP_C_Move_Characters_to_Meeting Parms{};

	Parms.Characters = std::move(Characters);

	UObject::ProcessEvent(Func, &Parms);

	Characters = std::move(Parms.Characters);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.RotateToMeetingPosition
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UArrowComponent*                  Position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyMeetingSCTBP_C::RotateToMeetingPosition(class ACharacter* Character, class UArrowComponent* Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "RotateToMeetingPosition");

	Params::EmergencyMeetingSCTBP_C_RotateToMeetingPosition Parms{};

	Parms.Character = Character;
	Parms.Position = Position;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.BlockModals
// (Public, BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::BlockModals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "BlockModals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.RemoveModalBlock
// (Public, BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::RemoveModalBlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "RemoveModalBlock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.ForceSense
// (Public, BlueprintCallable, BlueprintEvent)

void AEmergencyMeetingSCTBP_C::ForceSense()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "ForceSense");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.Server_LatentInteractionSuccess
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InteractingActorIsCharacter                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           InteractingInstigator                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           InteractionFacilitator                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Void                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AEmergencyMeetingSCTBP_C::Server_LatentInteractionSuccess(bool InteractingActorIsCharacter, class AActor* InteractingInstigator, class AActor* InteractionFacilitator, bool* Void)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "Server_LatentInteractionSuccess");

	Params::EmergencyMeetingSCTBP_C_Server_LatentInteractionSuccess Parms{};

	Parms.InteractingActorIsCharacter = InteractingActorIsCharacter;
	Parms.InteractingInstigator = InteractingInstigator;
	Parms.InteractionFacilitator = InteractionFacilitator;

	UObject::ProcessEvent(Func, &Parms);

	if (Void != nullptr)
		*Void = Parms.Void;
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.InteractReleased
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InteractingActorIsCharacter                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Void                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AEmergencyMeetingSCTBP_C::InteractReleased(bool InteractingActorIsCharacter, class AActor* InteractingActor, bool* Void)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "InteractReleased");

	Params::EmergencyMeetingSCTBP_C_InteractReleased Parms{};

	Parms.InteractingActorIsCharacter = InteractingActorIsCharacter;
	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Void != nullptr)
		*Void = Parms.Void;
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.GetCanInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSimulated                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InteractingActorIsCharacter                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CanInteract                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AEmergencyMeetingSCTBP_C::GetCanInteract(bool IsSimulated, bool InteractingActorIsCharacter, class AActor* InteractingActor, bool* CanInteract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "GetCanInteract");

	Params::EmergencyMeetingSCTBP_C_GetCanInteract Parms{};

	Parms.IsSimulated = IsSimulated;
	Parms.InteractingActorIsCharacter = InteractingActorIsCharacter;
	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);

	if (CanInteract != nullptr)
		*CanInteract = Parms.CanInteract;
}


// Function EmergencyMeetingSCTBP.EmergencyMeetingSCTBP_C.InteractPressed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InteractingActorIsCharacter                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       InteractedHitResult                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AEmergencyMeetingSCTBP_C::InteractPressed(bool InteractingActorIsCharacter, class AActor* InteractingActor, const struct FHitResult& InteractedHitResult, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyMeetingSCTBP_C", "InteractPressed");

	Params::EmergencyMeetingSCTBP_C_InteractPressed Parms{};

	Parms.InteractingActorIsCharacter = InteractingActorIsCharacter;
	Parms.InteractingActor = InteractingActor;
	Parms.InteractedHitResult = std::move(InteractedHitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}

}

