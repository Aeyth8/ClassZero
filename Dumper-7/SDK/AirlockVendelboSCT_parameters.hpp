#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AirlockVendelboSCT

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PassengerLogFactType_structs.hpp"
#include "SCT_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.ExecuteUbergraph_AirlockVendelboSCT
// 0x0B40 (0x0B40 - 0x0000)
struct AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EEndConditions End_Condition)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ConstParm, ReferenceParm)
	TArray<class ACharacter*>                     K2Node_MakeArray_Array_1;                          // 0x0030(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACharacter*>                     K2Node_MakeArray_Array_2;                          // 0x0058(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Variable_1;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACharacter*>                     K2Node_MakeArray_Array_3;                          // 0x0070(0x0010)(ConstParm, ReferenceParm)
	TArray<class ACharacter*>                     K2Node_MakeArray_Array_4;                          // 0x0080(0x0010)(ConstParm, ReferenceParm)
	TArray<class ACharacter*>                     K2Node_MakeArray_Array_5;                          // 0x0090(0x0010)(ConstParm, ReferenceParm)
	TArray<class UAirlockWI_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x00A0(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UAirlockWI_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets_1;      // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAirlockWI_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets_2;      // 0x00D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAirlockWI_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets_3;      // 0x00E8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_3;         // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAirlockWI_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets_4;      // 0x0100(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_4;         // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAirlockWI_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets_5;      // 0x0118(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_5;         // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAirlockWI_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets_6;      // 0x0130(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UAirlockWI_C*                           CallFunc_Array_Get_Item;                           // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_6;         // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14E[0x2];                                      // 0x014E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAirlockWI_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets_7;      // 0x0150(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_7;         // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAirlockWI_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets_8;      // 0x0170(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UAirlockWI_C*                           CallFunc_Array_Get_Item_1;                         // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_8;         // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18E[0x2];                                      // 0x018E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAirlockWI_C*                           CallFunc_Array_Get_Item_2;                         // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x01A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_ToRagdoll;                            // 0x01A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_Duration;                             // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_OptionalImpulse;                      // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Force;                                // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Aiming;                               // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         K2Node_Event_AimType;                              // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFate                                         K2Node_Event_Fate;                                 // 0x01BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Impulse;                              // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_TargetLocation;                       // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Event_TargetRotation;                       // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InputValue;                           // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Delay;                                // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Show;                                 // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDeathRequirement_SomeoneShouldDie;   // 0x01E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E7[0x1];                                      // 0x01E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CheckDeathRequirement_HowManyShouldDie;   // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     K2Node_CustomEvent_PlayersAlive;                   // 0x01F0(0x0010)(ConstParm, ReferenceParm)
	TArray<class ACharacter*>                     K2Node_CustomEvent_DoomedCharacters_2;             // 0x0200(0x0010)(ConstParm, ReferenceParm)
	uint8                                         K2Node_CustomEvent_ExpectedVotes_2;                // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACharacter*>                     CallFunc_RemoveSelfFromArray_OutputArray;          // 0x0218(0x0010)(ReferenceParm)
	class AActor*                                 K2Node_Event_AirlockTarget_1;                      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_Event_VotedCharacter;                       // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_Event_VotingCharacter_2;                    // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindHighestVote_Deadlock;                 // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     CallFunc_FindHighestVote_DeadlockedCharacters;     // 0x0248(0x0010)(ReferenceParm)
	class ACharacter*                             CallFunc_FindHighestVote_CharacterVotedOut;        // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACharacter*>                     K2Node_MakeArray_Array_6;                          // 0x0260(0x0010)(ConstParm, ReferenceParm)
	TArray<class ACharacter*>                     K2Node_CustomEvent_DoomedCharacters_1;             // 0x0270(0x0010)(ConstParm, ReferenceParm)
	uint8                                         K2Node_CustomEvent_ExpectedVotes_1;                // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_TargetAirlock;                        // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Yes;                                  // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_Event_VotingCharacter_1;                    // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AnyPersonoidsLeft_PersonoidPresent;       // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FindAnyPassengerLogs_PassengerLogPresent; // 0x02AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AB[0x5];                                      // 0x02AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     CallFunc_FindAnyPassengerLogs_PassengerLogCandidates; // 0x02B0(0x0010)(ReferenceParm)
	TArray<class ACharacter*>                     K2Node_CustomEvent_Characters_2;                   // 0x02C0(0x0010)(ReferenceParm)
	TArray<class ACharacter*>                     K2Node_CustomEvent_DoomedCharacters;               // 0x02D0(0x0010)(ConstParm, ReferenceParm)
	uint8                                         K2Node_CustomEvent_ExpectedVotes;                  // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_Array_Get_Item_3;                         // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     CallFunc_RemoveSelfFromArray_OutputArray_1;        // 0x02F8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_AirlockTarget;                        // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_Event_TargetCharacter;                      // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_Event_VotingCharacter;                      // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAirlockWI_C*                           CallFunc_Array_Get_Item_4;                         // 0x0330(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FindHighestVote_Deadlock_1;               // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33A[0x6];                                      // 0x033A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     CallFunc_FindHighestVote_DeadlockedCharacters_1;   // 0x0340(0x0010)(ReferenceParm)
	class ACharacter*                             CallFunc_FindHighestVote_CharacterVotedOut_1;      // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_CustomEvent_Character_1;                    // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0360(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     K2Node_MakeArray_Array_7;                          // 0x0378(0x0010)(ConstParm, ReferenceParm)
	EPassengerLogFactType                         CallFunc_GetHeldLogInfoBPI_FactType;               // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPlayerData>                    CallFunc_GetHeldLogInfoBPI_Players;                // 0x0390(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetHeldLogInfoBPI_HasLog;                 // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     K2Node_CustomEvent_Players;                        // 0x03A8(0x0010)(ConstParm, ReferenceParm)
	const class ACharacter*                       K2Node_CustomEvent_CharacterForInterview;          // 0x03B8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetHeadCameraTransform_NewParam;          // 0x03C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x03F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x03FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0408(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0414(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACharacter*>                     CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers; // 0x04A8(0x0010)(ReferenceParm)
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT_1;             // 0x04B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C9[0x3];                                      // 0x04C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAliveBPI_Alive;                         // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x04D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x04D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D3[0x5];                                      // 0x04D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers_1; // 0x04D8(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E9[0x3];                                      // 0x04E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x04EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACharacter*>                     CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers_2; // 0x04F0(0x0010)(ReferenceParm)
	TArray<class ACharacter*>                     CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers_3; // 0x0500(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable_4;                               // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAirlockWI_C*                           CallFunc_Array_Get_Item_5;                         // 0x0518(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     K2Node_CustomEvent_Characters_1;                   // 0x0528(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x053C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0548(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0554(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult_1; // 0x0564(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x05F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F2[0x6];                                      // 0x05F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class Ubpc_ac_Opener_C*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x05F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACharacter*>                     K2Node_CustomEvent_CharactersInterviewed;          // 0x0600(0x0010)(ConstParm, ReferenceParm)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0610(0x0030)(IsPlainOldData, NoDestructor)
	TArray<class ACharacter*>                     CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers_4; // 0x0640(0x0010)(ReferenceParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654[0x4];                                      // 0x0654(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_2;         // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT_2;             // 0x0668(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_679[0x7];                                      // 0x0679(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT_3;             // 0x0680(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAliveBPI_Alive_1;                       // 0x0691(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAliveBPI_Alive_2;                       // 0x0692(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0693(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0694(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0695(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0696(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0697(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_699[0x7];                                      // 0x0699(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_CustomEvent_TargetCharacter;                // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ACharacter*                       K2Node_CustomEvent_VotingCharacter_2;              // 0x06A8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ACharacter*                       K2Node_CustomEvent_Character;                      // 0x06B0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ACharacter*                       K2Node_CustomEvent_VotingCharacter_1;              // 0x06B8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Yes;                            // 0x06C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C2[0x6];                                      // 0x06C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class ACharacter*                       K2Node_CustomEvent_VotingCharacter;                // 0x06C8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x06D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x06D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x06D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DC[0x4];                                      // 0x06DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAirlockWI_C*                           CallFunc_Array_Get_Item_6;                         // 0x06E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x06E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E9[0x7];                                      // 0x06E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers_5; // 0x06F0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x0700(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0704(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACharacter*>                     CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers_6; // 0x0708(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_14;              // 0x071C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_721[0x3];                                      // 0x0721(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0724(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x072C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0730(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0734(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_2;                     // 0x0738(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x073C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0740(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_15;              // 0x074C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_751[0x3];                                      // 0x0751(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_16;              // 0x0754(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_759[0x3];                                      // 0x0759(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_17;              // 0x075C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_761[0x3];                                      // 0x0761(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_Array_Get_Item_7;                         // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0770(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_774[0x4];                                      // 0x0774(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     K2Node_MakeArray_Array_8;                          // 0x0778(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetFlushLocation_ReturnValue_Location;    // 0x0788(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0794(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0820(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_4;          // 0x0821(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_822[0x6];                                      // 0x0822(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_Array_Get_Item_8;                         // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_18;              // 0x0830(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_834[0x4];                                      // 0x0834(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIAnimBp_C>            K2Node_DynamicCast_AsIAnim_Bp;                     // 0x0838(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0848(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0849(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84A[0x6];                                      // 0x084A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT_4;             // 0x0850(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_861[0xF];                                      // 0x0861(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0870(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x08A0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x08D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x08D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x08D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x08DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x08E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x08F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0900(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x090C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0998(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A4[0x4];                                      // 0x09A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTGameMode_MatchBP_C*                 CallFunc_GetGameModeMatchSCT_AsSCTGame_Mode_Match_BP; // 0x09A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x09B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_5;          // 0x09BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9BD[0x3];                                      // 0x09BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_6;                               // 0x09C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x09C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAirlockWI_C*                           CallFunc_Array_Get_Item_9;                         // 0x09C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x09D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         K2Node_CustomEvent_StatementType;                  // 0x09D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D2[0x6];                                      // 0x09D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     K2Node_CustomEvent_Characters;                     // 0x09D8(0x0010)(ConstParm, ReferenceParm)
	class FText                                   CallFunc_GetInfoText_ReturnValue;                  // 0x09E8(0x0018)()
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_6;          // 0x0A00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A01[0x7];                                      // 0x0A01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0A10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0A18(0x0010)(ZeroConstructor, NoDestructor)
	TArray<class ACharacter*>                     K2Node_MakeArray_Array_9;                          // 0x0A28(0x0010)(ConstParm, ReferenceParm)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0A38(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_7;          // 0x0A40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_8;          // 0x0A41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A42[0x2];                                      // 0x0A42(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0A44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0A48(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0A58(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0A68(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x0A70(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0A78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0A7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0A80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A81[0x3];                                      // 0x0A81(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0A84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAirlockWI_C*                           CallFunc_Array_Get_Item_10;                        // 0x0A88(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x0A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A91[0x7];                                      // 0x0A91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     K2Node_MakeArray_Array_10;                         // 0x0A98(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Variable_9;                               // 0x0AA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0AAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AAD[0x3];                                      // 0x0AAD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0AB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB4[0x4];                                      // 0x0AB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAirlockWI_C*                           CallFunc_Array_Get_Item_11;                        // 0x0AB8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x0AC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC1[0x3];                                      // 0x0AC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_10;                              // 0x0AC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_3;         // 0x0AC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD1[0x7];                                      // 0x0AD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP;              // 0x0AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0AE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AE1[0x7];                                      // 0x0AE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_4;         // 0x0AE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldDisableAirlock_ReturnValue;         // 0x0AF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AF1[0x7];                                      // 0x0AF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP_1;            // 0x0AF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B01[0x7];                                      // 0x0B01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0B08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndConditions                                K2Node_CustomEvent_End_Condition;                  // 0x0B10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B11[0x7];                                      // 0x0B11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTGameMode_MatchBP_C*                 K2Node_DynamicCast_AsSCTGame_Mode_Match_BP;        // 0x0B18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0B20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0B21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B22[0x2];                                      // 0x0B22(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_19;              // 0x0B24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0B29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2A[0x2];                                      // 0x0B2A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0B2C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_SpawnAkComponentAtLocation_ReturnValue;   // 0x0B38(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT) == 0x000010, "Wrong alignment on AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT");
static_assert(sizeof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT) == 0x000B40, "Wrong size on AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, EntryPoint) == 0x000000, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::EntryPoint' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, Temp_int_Variable) == 0x000004, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_MakeArray_Array) == 0x000020, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_MakeArray_Array_1) == 0x000030, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CreateDelegate_OutputDelegate_1) == 0x000040, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_MakeArray_Array_2) == 0x000058, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, Temp_int_Variable_1) == 0x000068, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Add_IntInt_ReturnValue_2) == 0x00006C, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_MakeArray_Array_3) == 0x000070, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_MakeArray_Array_4) == 0x000080, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_MakeArray_Array_5) == 0x000090, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x0000A0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetAllWidgetsOfClass_FoundWidgets_1) == 0x0000B0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetAllWidgetsOfClass_FoundWidgets_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Length_ReturnValue_1) == 0x0000C4, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000C8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0000C9, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetAllWidgetsOfClass_FoundWidgets_2) == 0x0000D0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetAllWidgetsOfClass_FoundWidgets_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Length_ReturnValue_2) == 0x0000E0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x0000E4, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetAllWidgetsOfClass_FoundWidgets_3) == 0x0000E8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetAllWidgetsOfClass_FoundWidgets_3' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Length_ReturnValue_3) == 0x0000F8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_IsValidIndex_ReturnValue_3) == 0x0000FC, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_IsValidIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetAllWidgetsOfClass_FoundWidgets_4) == 0x000100, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetAllWidgetsOfClass_FoundWidgets_4' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Length_ReturnValue_4) == 0x000110, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_IsValidIndex_ReturnValue_4) == 0x000114, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_IsValidIndex_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetAllWidgetsOfClass_FoundWidgets_5) == 0x000118, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetAllWidgetsOfClass_FoundWidgets_5' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Length_ReturnValue_5) == 0x000128, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_IsValidIndex_ReturnValue_5) == 0x00012C, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_IsValidIndex_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetAllWidgetsOfClass_FoundWidgets_6) == 0x000130, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetAllWidgetsOfClass_FoundWidgets_6' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Get_Item) == 0x000140, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Length_ReturnValue_6) == 0x000148, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Less_IntInt_ReturnValue) == 0x00014C, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_IsValidIndex_ReturnValue_6) == 0x00014D, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_IsValidIndex_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetAllWidgetsOfClass_FoundWidgets_7) == 0x000150, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetAllWidgetsOfClass_FoundWidgets_7' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, Temp_bool_Has_Been_Initd_Variable) == 0x000160, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Length_ReturnValue_7) == 0x000164, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_IsValidIndex_ReturnValue_7) == 0x000168, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_IsValidIndex_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetAllWidgetsOfClass_FoundWidgets_8) == 0x000170, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetAllWidgetsOfClass_FoundWidgets_8' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Get_Item_1) == 0x000180, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Length_ReturnValue_8) == 0x000188, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_IsValidIndex_ReturnValue_8) == 0x00018C, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_IsValidIndex_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Less_IntInt_ReturnValue_1) == 0x00018D, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, Temp_int_Variable_2) == 0x000190, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Add_IntInt_ReturnValue_3) == 0x000194, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Get_Item_2) == 0x000198, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001A0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_IsDedicatedServer_ReturnValue) == 0x0001A1, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, Temp_bool_IsClosed_Variable) == 0x0001A2, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x0001A3, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x0001A4, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_HasAuthority_ReturnValue) == 0x0001A5, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_HasAuthority_ReturnValue_1) == 0x0001A6, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_Event_ToRagdoll) == 0x0001A7, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_Event_ToRagdoll' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_Event_Duration) == 0x0001A8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_Event_Duration' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_Event_OptionalImpulse) == 0x0001AC, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_Event_OptionalImpulse' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_Event_Force) == 0x0001B8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_Event_Force' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_Event_Aiming) == 0x0001B9, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_Event_Aiming' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_Event_AimType) == 0x0001BA, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_Event_AimType' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_Event_Fate) == 0x0001BB, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_Event_Fate' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_Event_Impulse) == 0x0001BC, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_Event_Impulse' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_Event_TargetLocation) == 0x0001C8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_Event_TargetLocation' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_Event_TargetRotation) == 0x0001D4, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_Event_TargetRotation' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_Event_InputValue) == 0x0001E0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_Event_InputValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_Event_Delay) == 0x0001E4, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_Event_Show) == 0x0001E5, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_Event_Show' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_CheckDeathRequirement_SomeoneShouldDie) == 0x0001E6, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_CheckDeathRequirement_SomeoneShouldDie' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_CheckDeathRequirement_HowManyShouldDie) == 0x0001E8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_CheckDeathRequirement_HowManyShouldDie' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CustomEvent_PlayersAlive) == 0x0001F0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CustomEvent_PlayersAlive' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CustomEvent_DoomedCharacters_2) == 0x000200, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CustomEvent_DoomedCharacters_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CustomEvent_ExpectedVotes_2) == 0x000210, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CustomEvent_ExpectedVotes_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000214, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_RemoveSelfFromArray_OutputArray) == 0x000218, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_RemoveSelfFromArray_OutputArray' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_Event_AirlockTarget_1) == 0x000228, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_Event_AirlockTarget_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_Event_VotedCharacter) == 0x000230, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_Event_VotedCharacter' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_Event_VotingCharacter_2) == 0x000238, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_Event_VotingCharacter_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_FindHighestVote_Deadlock) == 0x000240, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_FindHighestVote_Deadlock' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_FindHighestVote_DeadlockedCharacters) == 0x000248, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_FindHighestVote_DeadlockedCharacters' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_FindHighestVote_CharacterVotedOut) == 0x000258, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_FindHighestVote_CharacterVotedOut' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_MakeArray_Array_6) == 0x000260, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CustomEvent_DoomedCharacters_1) == 0x000270, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CustomEvent_DoomedCharacters_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CustomEvent_ExpectedVotes_1) == 0x000280, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CustomEvent_ExpectedVotes_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000284, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Add_ReturnValue) == 0x000288, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_Event_TargetAirlock) == 0x000290, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_Event_TargetAirlock' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_Event_Yes) == 0x000298, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_Event_Yes' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_Event_VotingCharacter_1) == 0x0002A0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_Event_VotingCharacter_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_AnyPersonoidsLeft_PersonoidPresent) == 0x0002A8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_AnyPersonoidsLeft_PersonoidPresent' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Not_PreBool_ReturnValue) == 0x0002A9, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_FindAnyPassengerLogs_PassengerLogPresent) == 0x0002AA, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_FindAnyPassengerLogs_PassengerLogPresent' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_FindAnyPassengerLogs_PassengerLogCandidates) == 0x0002B0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_FindAnyPassengerLogs_PassengerLogCandidates' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CustomEvent_Characters_2) == 0x0002C0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CustomEvent_Characters_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CustomEvent_DoomedCharacters) == 0x0002D0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CustomEvent_DoomedCharacters' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CustomEvent_ExpectedVotes) == 0x0002E0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CustomEvent_ExpectedVotes' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Get_Item_3) == 0x0002E8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x0002F0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_RemoveSelfFromArray_OutputArray_1) == 0x0002F8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_RemoveSelfFromArray_OutputArray_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Length_ReturnValue_9) == 0x000308, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00030C, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_Event_AirlockTarget) == 0x000310, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_Event_AirlockTarget' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_Event_TargetCharacter) == 0x000318, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_Event_TargetCharacter' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_Event_VotingCharacter) == 0x000320, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_Event_VotingCharacter' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, Temp_int_Variable_3) == 0x000328, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Add_IntInt_ReturnValue_4) == 0x00032C, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Get_Item_4) == 0x000330, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Less_IntInt_ReturnValue_3) == 0x000338, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_FindHighestVote_Deadlock_1) == 0x000339, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_FindHighestVote_Deadlock_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_FindHighestVote_DeadlockedCharacters_1) == 0x000340, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_FindHighestVote_DeadlockedCharacters_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_FindHighestVote_CharacterVotedOut_1) == 0x000350, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_FindHighestVote_CharacterVotedOut_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CustomEvent_Character_1) == 0x000358, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CustomEvent_Character_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_DynamicCast_AsICharacter_SCT) == 0x000360, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_DynamicCast_bSuccess) == 0x000370, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_MakeArray_Array_7) == 0x000378, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_MakeArray_Array_7' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetHeldLogInfoBPI_FactType) == 0x000388, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetHeldLogInfoBPI_FactType' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetHeldLogInfoBPI_Players) == 0x000390, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetHeldLogInfoBPI_Players' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetHeldLogInfoBPI_HasLog) == 0x0003A0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetHeldLogInfoBPI_HasLog' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CustomEvent_Players) == 0x0003A8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CustomEvent_Players' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CustomEvent_CharacterForInterview) == 0x0003B8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CustomEvent_CharacterForInterview' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetHeadCameraTransform_NewParam) == 0x0003C0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetHeadCameraTransform_NewParam' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_BreakTransform_Location) == 0x0003F0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_BreakTransform_Rotation) == 0x0003FC, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_BreakTransform_Scale) == 0x000408, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000414, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetPlayerCharacter_ReturnValue) == 0x0004A0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers) == 0x0004A8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_DynamicCast_AsICharacter_SCT_1) == 0x0004B8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_DynamicCast_AsICharacter_SCT_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_DynamicCast_bSuccess_1) == 0x0004C8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Length_ReturnValue_10) == 0x0004CC, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_IsAliveBPI_Alive) == 0x0004D0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_IsAliveBPI_Alive' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Contains_ReturnValue) == 0x0004D1, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Not_PreBool_ReturnValue_1) == 0x0004D2, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers_1) == 0x0004D8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_BooleanOR_ReturnValue) == 0x0004E8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Length_ReturnValue_11) == 0x0004EC, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers_2) == 0x0004F0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers_3) == 0x000500, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers_3' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, Temp_int_Variable_4) == 0x000510, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Add_IntInt_ReturnValue_5) == 0x000514, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Get_Item_5) == 0x000518, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Less_IntInt_ReturnValue_4) == 0x000520, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CustomEvent_Characters_1) == 0x000528, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CustomEvent_Characters_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Length_ReturnValue_12) == 0x000538, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_BreakTransform_Location_1) == 0x00053C, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_BreakTransform_Rotation_1) == 0x000548, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_BreakTransform_Scale_1) == 0x000554, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Subtract_IntInt_ReturnValue) == 0x000560, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult_1) == 0x000564, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x0005F0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_IsValid_ReturnValue) == 0x0005F1, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetComponentByClass_ReturnValue) == 0x0005F8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CustomEvent_CharactersInterviewed) == 0x000600, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CustomEvent_CharactersInterviewed' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_MakeTransform_ReturnValue) == 0x000610, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers_4) == 0x000640, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers_4' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000650, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000658, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetPlayerCharacter_ReturnValue_2) == 0x000660, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetPlayerCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_DynamicCast_AsICharacter_SCT_2) == 0x000668, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_DynamicCast_AsICharacter_SCT_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_DynamicCast_bSuccess_2) == 0x000678, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_DynamicCast_AsICharacter_SCT_3) == 0x000680, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_DynamicCast_AsICharacter_SCT_3' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_DynamicCast_bSuccess_3) == 0x000690, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_IsAliveBPI_Alive_1) == 0x000691, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_IsAliveBPI_Alive_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_IsAliveBPI_Alive_2) == 0x000692, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_IsAliveBPI_Alive_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Not_PreBool_ReturnValue_2) == 0x000693, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Not_PreBool_ReturnValue_3) == 0x000694, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Contains_ReturnValue_1) == 0x000695, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Contains_ReturnValue_2) == 0x000696, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_BooleanOR_ReturnValue_1) == 0x000697, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_BooleanOR_ReturnValue_2) == 0x000698, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CustomEvent_TargetCharacter) == 0x0006A0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CustomEvent_TargetCharacter' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CustomEvent_VotingCharacter_2) == 0x0006A8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CustomEvent_VotingCharacter_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CustomEvent_Character) == 0x0006B0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CustomEvent_VotingCharacter_1) == 0x0006B8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CustomEvent_VotingCharacter_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_SwitchEnum_CmpSuccess) == 0x0006C0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CustomEvent_Yes) == 0x0006C1, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CustomEvent_Yes' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CustomEvent_VotingCharacter) == 0x0006C8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CustomEvent_VotingCharacter' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, Temp_int_Variable_5) == 0x0006D0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Lerp_ReturnValue) == 0x0006D4, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Add_IntInt_ReturnValue_6) == 0x0006D8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Get_Item_6) == 0x0006E0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Less_IntInt_ReturnValue_5) == 0x0006E8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers_5) == 0x0006F0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers_5' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Length_ReturnValue_13) == 0x000700, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Add_ReturnValue_1) == 0x000704, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers_6) == 0x000708, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers_6' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Add_ReturnValue_2) == 0x000718, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Length_ReturnValue_14) == 0x00071C, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Length_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Greater_IntInt_ReturnValue) == 0x000720, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Add_FloatFloat_ReturnValue) == 0x000724, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_FTrunc_ReturnValue) == 0x000728, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00072C, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_FTrunc_ReturnValue_1) == 0x000730, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000734, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_FTrunc_ReturnValue_2) == 0x000738, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_FTrunc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x00073C, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000740, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Add_ReturnValue_3) == 0x000748, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Length_ReturnValue_15) == 0x00074C, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Length_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000750, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Length_ReturnValue_16) == 0x000754, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Length_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000758, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Length_ReturnValue_17) == 0x00075C, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Length_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000760, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000764, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Get_Item_7) == 0x000768, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, Temp_int_Array_Index_Variable) == 0x000770, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_MakeArray_Array_8) == 0x000778, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_MakeArray_Array_8' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetFlushLocation_ReturnValue_Location) == 0x000788, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetFlushLocation_ReturnValue_Location' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000794, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000820, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_IsDedicatedServer_ReturnValue_4) == 0x000821, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_IsDedicatedServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Get_Item_8) == 0x000828, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Length_ReturnValue_18) == 0x000830, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Length_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_DynamicCast_AsIAnim_Bp) == 0x000838, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_DynamicCast_AsIAnim_Bp' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_DynamicCast_bSuccess_4) == 0x000848, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Less_IntInt_ReturnValue_6) == 0x000849, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_DynamicCast_AsICharacter_SCT_4) == 0x000850, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_DynamicCast_AsICharacter_SCT_4' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_DynamicCast_bSuccess_5) == 0x000860, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetTransform_ReturnValue) == 0x000870, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_ComposeTransforms_ReturnValue) == 0x0008A0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_BreakVector_X) == 0x0008D0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_BreakVector_Y) == 0x0008D4, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_BreakVector_Z) == 0x0008D8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_BreakTransform_Location_2) == 0x0008DC, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_BreakTransform_Rotation_2) == 0x0008E8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_BreakTransform_Scale_2) == 0x0008F4, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_MakeVector_ReturnValue) == 0x000900, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x00090C, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetActorRightVector_ReturnValue) == 0x000998, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetGameModeMatchSCT_AsSCTGame_Mode_Match_BP) == 0x0009A8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetGameModeMatchSCT_AsSCTGame_Mode_Match_BP' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0009B0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_IsDedicatedServer_ReturnValue_5) == 0x0009BC, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_IsDedicatedServer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, Temp_int_Variable_6) == 0x0009C0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Add_IntInt_ReturnValue_7) == 0x0009C4, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Get_Item_9) == 0x0009C8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Less_IntInt_ReturnValue_7) == 0x0009D0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CustomEvent_StatementType) == 0x0009D1, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CustomEvent_StatementType' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CustomEvent_Characters) == 0x0009D8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CustomEvent_Characters' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetInfoText_ReturnValue) == 0x0009E8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetInfoText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_IsDedicatedServer_ReturnValue_6) == 0x000A00, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_IsDedicatedServer_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000A08, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000A10, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CreateDelegate_OutputDelegate_2) == 0x000A18, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_MakeArray_Array_9) == 0x000A28, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_MakeArray_Array_9' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000A38, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_IsDedicatedServer_ReturnValue_7) == 0x000A40, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_IsDedicatedServer_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_IsDedicatedServer_ReturnValue_8) == 0x000A41, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_IsDedicatedServer_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_RandomFloatInRange_ReturnValue) == 0x000A44, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CreateDelegate_OutputDelegate_3) == 0x000A48, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CreateDelegate_OutputDelegate_4) == 0x000A58, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000A68, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x000A70, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, Temp_int_Variable_7) == 0x000A78, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, Temp_int_Variable_8) == 0x000A7C, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000A80, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Add_IntInt_ReturnValue_8) == 0x000A84, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Get_Item_10) == 0x000A88, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Less_IntInt_ReturnValue_8) == 0x000A90, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_MakeArray_Array_10) == 0x000A98, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_MakeArray_Array_10' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, Temp_int_Variable_9) == 0x000AA8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000AAC, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Add_IntInt_ReturnValue_9) == 0x000AB0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Get_Item_11) == 0x000AB8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Less_IntInt_ReturnValue_9) == 0x000AC0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, Temp_int_Variable_10) == 0x000AC4, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetPlayerCharacter_ReturnValue_3) == 0x000AC8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetPlayerCharacter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000AD0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_DynamicCast_AsCharacter_SCTBP) == 0x000AD8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_DynamicCast_AsCharacter_SCTBP' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_DynamicCast_bSuccess_6) == 0x000AE0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetPlayerCharacter_ReturnValue_4) == 0x000AE8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetPlayerCharacter_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_ShouldDisableAirlock_ReturnValue) == 0x000AF0, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_ShouldDisableAirlock_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_DynamicCast_AsCharacter_SCTBP_1) == 0x000AF8, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_DynamicCast_AsCharacter_SCTBP_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_DynamicCast_bSuccess_7) == 0x000B00, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_GetGameMode_ReturnValue) == 0x000B08, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_CustomEvent_End_Condition) == 0x000B10, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_CustomEvent_End_Condition' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_DynamicCast_AsSCTGame_Mode_Match_BP) == 0x000B18, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_DynamicCast_AsSCTGame_Mode_Match_BP' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, K2Node_DynamicCast_bSuccess_8) == 0x000B20, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Not_PreBool_ReturnValue_4) == 0x000B21, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Array_Length_ReturnValue_19) == 0x000B24, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Array_Length_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_BooleanAND_ReturnValue) == 0x000B28, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000B29, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000B2C, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT, CallFunc_SpawnAkComponentAtLocation_ReturnValue) == 0x000B38, "Member 'AirlockVendelboSCT_C_ExecuteUbergraph_AirlockVendelboSCT::CallFunc_SpawnAkComponentAtLocation_ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.MatchEnded
// 0x0001 (0x0001 - 0x0000)
struct AirlockVendelboSCT_C_MatchEnded final
{
public:
	EEndConditions                                End_Condition;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_MatchEnded) == 0x000001, "Wrong alignment on AirlockVendelboSCT_C_MatchEnded");
static_assert(sizeof(AirlockVendelboSCT_C_MatchEnded) == 0x000001, "Wrong size on AirlockVendelboSCT_C_MatchEnded");
static_assert(offsetof(AirlockVendelboSCT_C_MatchEnded, End_Condition) == 0x000000, "Member 'AirlockVendelboSCT_C_MatchEnded::End_Condition' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.InfoStageAll
// 0x0018 (0x0018 - 0x0000)
struct AirlockVendelboSCT_C_InfoStageAll final
{
public:
	uint8                                         StatementType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     Characters;                                        // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AirlockVendelboSCT_C_InfoStageAll) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_InfoStageAll");
static_assert(sizeof(AirlockVendelboSCT_C_InfoStageAll) == 0x000018, "Wrong size on AirlockVendelboSCT_C_InfoStageAll");
static_assert(offsetof(AirlockVendelboSCT_C_InfoStageAll, StatementType) == 0x000000, "Member 'AirlockVendelboSCT_C_InfoStageAll::StatementType' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_InfoStageAll, Characters) == 0x000008, "Member 'AirlockVendelboSCT_C_InfoStageAll::Characters' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.TrustVote
// 0x0010 (0x0010 - 0x0000)
struct AirlockVendelboSCT_C_TrustVote final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class ACharacter*                       VotingCharacter;                                   // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_TrustVote) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_TrustVote");
static_assert(sizeof(AirlockVendelboSCT_C_TrustVote) == 0x000010, "Wrong size on AirlockVendelboSCT_C_TrustVote");
static_assert(offsetof(AirlockVendelboSCT_C_TrustVote, Yes) == 0x000000, "Member 'AirlockVendelboSCT_C_TrustVote::Yes' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TrustVote, VotingCharacter) == 0x000008, "Member 'AirlockVendelboSCT_C_TrustVote::VotingCharacter' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.AirlockVote
// 0x0010 (0x0010 - 0x0000)
struct AirlockVendelboSCT_C_AirlockVote final
{
public:
	const class ACharacter*                       Character;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ACharacter*                       VotingCharacter;                                   // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_AirlockVote) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_AirlockVote");
static_assert(sizeof(AirlockVendelboSCT_C_AirlockVote) == 0x000010, "Wrong size on AirlockVendelboSCT_C_AirlockVote");
static_assert(offsetof(AirlockVendelboSCT_C_AirlockVote, Character) == 0x000000, "Member 'AirlockVendelboSCT_C_AirlockVote::Character' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AirlockVote, VotingCharacter) == 0x000008, "Member 'AirlockVendelboSCT_C_AirlockVote::VotingCharacter' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.PassengerLogVote
// 0x0010 (0x0010 - 0x0000)
struct AirlockVendelboSCT_C_PassengerLogVote final
{
public:
	class ACharacter*                             TargetCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ACharacter*                       VotingCharacter;                                   // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_PassengerLogVote) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_PassengerLogVote");
static_assert(sizeof(AirlockVendelboSCT_C_PassengerLogVote) == 0x000010, "Wrong size on AirlockVendelboSCT_C_PassengerLogVote");
static_assert(offsetof(AirlockVendelboSCT_C_PassengerLogVote, TargetCharacter) == 0x000000, "Member 'AirlockVendelboSCT_C_PassengerLogVote::TargetCharacter' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_PassengerLogVote, VotingCharacter) == 0x000008, "Member 'AirlockVendelboSCT_C_PassengerLogVote::VotingCharacter' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.InterviewStageFinished
// 0x0010 (0x0010 - 0x0000)
struct AirlockVendelboSCT_C_InterviewStageFinished final
{
public:
	TArray<class ACharacter*>                     CharactersInterviewed;                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AirlockVendelboSCT_C_InterviewStageFinished) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_InterviewStageFinished");
static_assert(sizeof(AirlockVendelboSCT_C_InterviewStageFinished) == 0x000010, "Wrong size on AirlockVendelboSCT_C_InterviewStageFinished");
static_assert(offsetof(AirlockVendelboSCT_C_InterviewStageFinished, CharactersInterviewed) == 0x000000, "Member 'AirlockVendelboSCT_C_InterviewStageFinished::CharactersInterviewed' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.InitiateInterviewStage
// 0x0010 (0x0010 - 0x0000)
struct AirlockVendelboSCT_C_InitiateInterviewStage final
{
public:
	TArray<class ACharacter*>                     Characters;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AirlockVendelboSCT_C_InitiateInterviewStage) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_InitiateInterviewStage");
static_assert(sizeof(AirlockVendelboSCT_C_InitiateInterviewStage) == 0x000010, "Wrong size on AirlockVendelboSCT_C_InitiateInterviewStage");
static_assert(offsetof(AirlockVendelboSCT_C_InitiateInterviewStage, Characters) == 0x000000, "Member 'AirlockVendelboSCT_C_InitiateInterviewStage::Characters' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.InterviewPlayerMulticast
// 0x0008 (0x0008 - 0x0000)
struct AirlockVendelboSCT_C_InterviewPlayerMulticast final
{
public:
	const class ACharacter*                       CharacterForInterview;                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_InterviewPlayerMulticast) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_InterviewPlayerMulticast");
static_assert(sizeof(AirlockVendelboSCT_C_InterviewPlayerMulticast) == 0x000008, "Wrong size on AirlockVendelboSCT_C_InterviewPlayerMulticast");
static_assert(offsetof(AirlockVendelboSCT_C_InterviewPlayerMulticast, CharacterForInterview) == 0x000000, "Member 'AirlockVendelboSCT_C_InterviewPlayerMulticast::CharacterForInterview' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.InitiateDeathVoteStage
// 0x0010 (0x0010 - 0x0000)
struct AirlockVendelboSCT_C_InitiateDeathVoteStage final
{
public:
	TArray<class ACharacter*>                     Players;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AirlockVendelboSCT_C_InitiateDeathVoteStage) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_InitiateDeathVoteStage");
static_assert(sizeof(AirlockVendelboSCT_C_InitiateDeathVoteStage) == 0x000010, "Wrong size on AirlockVendelboSCT_C_InitiateDeathVoteStage");
static_assert(offsetof(AirlockVendelboSCT_C_InitiateDeathVoteStage, Players) == 0x000000, "Member 'AirlockVendelboSCT_C_InitiateDeathVoteStage::Players' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.RevealPassengerLog
// 0x0008 (0x0008 - 0x0000)
struct AirlockVendelboSCT_C_RevealPassengerLog final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_RevealPassengerLog) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_RevealPassengerLog");
static_assert(sizeof(AirlockVendelboSCT_C_RevealPassengerLog) == 0x000008, "Wrong size on AirlockVendelboSCT_C_RevealPassengerLog");
static_assert(offsetof(AirlockVendelboSCT_C_RevealPassengerLog, Character) == 0x000000, "Member 'AirlockVendelboSCT_C_RevealPassengerLog::Character' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.PassengerLogVoteBPI
// 0x0018 (0x0018 - 0x0000)
struct AirlockVendelboSCT_C_PassengerLogVoteBPI final
{
public:
	class AActor*                                 AirlockTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             TargetCharacter;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             VotingCharacter;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_PassengerLogVoteBPI) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_PassengerLogVoteBPI");
static_assert(sizeof(AirlockVendelboSCT_C_PassengerLogVoteBPI) == 0x000018, "Wrong size on AirlockVendelboSCT_C_PassengerLogVoteBPI");
static_assert(offsetof(AirlockVendelboSCT_C_PassengerLogVoteBPI, AirlockTarget) == 0x000000, "Member 'AirlockVendelboSCT_C_PassengerLogVoteBPI::AirlockTarget' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_PassengerLogVoteBPI, TargetCharacter) == 0x000008, "Member 'AirlockVendelboSCT_C_PassengerLogVoteBPI::TargetCharacter' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_PassengerLogVoteBPI, VotingCharacter) == 0x000010, "Member 'AirlockVendelboSCT_C_PassengerLogVoteBPI::VotingCharacter' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.InitiatePassengerLogVoteDisplay
// 0x0028 (0x0028 - 0x0000)
struct AirlockVendelboSCT_C_InitiatePassengerLogVoteDisplay final
{
public:
	TArray<class ACharacter*>                     Characters;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class ACharacter*>                     DoomedCharacters_0;                                // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	uint8                                         ExpectedVotes;                                     // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_InitiatePassengerLogVoteDisplay) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_InitiatePassengerLogVoteDisplay");
static_assert(sizeof(AirlockVendelboSCT_C_InitiatePassengerLogVoteDisplay) == 0x000028, "Wrong size on AirlockVendelboSCT_C_InitiatePassengerLogVoteDisplay");
static_assert(offsetof(AirlockVendelboSCT_C_InitiatePassengerLogVoteDisplay, Characters) == 0x000000, "Member 'AirlockVendelboSCT_C_InitiatePassengerLogVoteDisplay::Characters' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_InitiatePassengerLogVoteDisplay, DoomedCharacters_0) == 0x000010, "Member 'AirlockVendelboSCT_C_InitiatePassengerLogVoteDisplay::DoomedCharacters_0' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_InitiatePassengerLogVoteDisplay, ExpectedVotes) == 0x000020, "Member 'AirlockVendelboSCT_C_InitiatePassengerLogVoteDisplay::ExpectedVotes' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.TrustVoteBPI
// 0x0018 (0x0018 - 0x0000)
struct AirlockVendelboSCT_C_TrustVoteBPI final
{
public:
	class AActor*                                 TargetAirlock;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Yes;                                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             VotingCharacter;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_TrustVoteBPI) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_TrustVoteBPI");
static_assert(sizeof(AirlockVendelboSCT_C_TrustVoteBPI) == 0x000018, "Wrong size on AirlockVendelboSCT_C_TrustVoteBPI");
static_assert(offsetof(AirlockVendelboSCT_C_TrustVoteBPI, TargetAirlock) == 0x000000, "Member 'AirlockVendelboSCT_C_TrustVoteBPI::TargetAirlock' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TrustVoteBPI, Yes) == 0x000008, "Member 'AirlockVendelboSCT_C_TrustVoteBPI::Yes' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TrustVoteBPI, VotingCharacter) == 0x000010, "Member 'AirlockVendelboSCT_C_TrustVoteBPI::VotingCharacter' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.TrustVoteAll
// 0x0018 (0x0018 - 0x0000)
struct AirlockVendelboSCT_C_TrustVoteAll final
{
public:
	TArray<class ACharacter*>                     DoomedCharacters_0;                                // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	uint8                                         ExpectedVotes;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_TrustVoteAll) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_TrustVoteAll");
static_assert(sizeof(AirlockVendelboSCT_C_TrustVoteAll) == 0x000018, "Wrong size on AirlockVendelboSCT_C_TrustVoteAll");
static_assert(offsetof(AirlockVendelboSCT_C_TrustVoteAll, DoomedCharacters_0) == 0x000000, "Member 'AirlockVendelboSCT_C_TrustVoteAll::DoomedCharacters_0' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TrustVoteAll, ExpectedVotes) == 0x000010, "Member 'AirlockVendelboSCT_C_TrustVoteAll::ExpectedVotes' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.EliminationVoteBPI
// 0x0018 (0x0018 - 0x0000)
struct AirlockVendelboSCT_C_EliminationVoteBPI final
{
public:
	class AActor*                                 AirlockTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             VotedCharacter;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             VotingCharacter;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_EliminationVoteBPI) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_EliminationVoteBPI");
static_assert(sizeof(AirlockVendelboSCT_C_EliminationVoteBPI) == 0x000018, "Wrong size on AirlockVendelboSCT_C_EliminationVoteBPI");
static_assert(offsetof(AirlockVendelboSCT_C_EliminationVoteBPI, AirlockTarget) == 0x000000, "Member 'AirlockVendelboSCT_C_EliminationVoteBPI::AirlockTarget' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_EliminationVoteBPI, VotedCharacter) == 0x000008, "Member 'AirlockVendelboSCT_C_EliminationVoteBPI::VotedCharacter' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_EliminationVoteBPI, VotingCharacter) == 0x000010, "Member 'AirlockVendelboSCT_C_EliminationVoteBPI::VotingCharacter' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.InitiateDeathVoteUI
// 0x0028 (0x0028 - 0x0000)
struct AirlockVendelboSCT_C_InitiateDeathVoteUI final
{
public:
	TArray<class ACharacter*>                     PlayersAlive;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class ACharacter*>                     DoomedCharacters_0;                                // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	uint8                                         ExpectedVotes;                                     // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_InitiateDeathVoteUI) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_InitiateDeathVoteUI");
static_assert(sizeof(AirlockVendelboSCT_C_InitiateDeathVoteUI) == 0x000028, "Wrong size on AirlockVendelboSCT_C_InitiateDeathVoteUI");
static_assert(offsetof(AirlockVendelboSCT_C_InitiateDeathVoteUI, PlayersAlive) == 0x000000, "Member 'AirlockVendelboSCT_C_InitiateDeathVoteUI::PlayersAlive' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_InitiateDeathVoteUI, DoomedCharacters_0) == 0x000010, "Member 'AirlockVendelboSCT_C_InitiateDeathVoteUI::DoomedCharacters_0' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_InitiateDeathVoteUI, ExpectedVotes) == 0x000020, "Member 'AirlockVendelboSCT_C_InitiateDeathVoteUI::ExpectedVotes' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.DisplayAirlockWidgetBPI
// 0x0001 (0x0001 - 0x0000)
struct AirlockVendelboSCT_C_DisplayAirlockWidgetBPI final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_DisplayAirlockWidgetBPI) == 0x000001, "Wrong alignment on AirlockVendelboSCT_C_DisplayAirlockWidgetBPI");
static_assert(sizeof(AirlockVendelboSCT_C_DisplayAirlockWidgetBPI) == 0x000001, "Wrong size on AirlockVendelboSCT_C_DisplayAirlockWidgetBPI");
static_assert(offsetof(AirlockVendelboSCT_C_DisplayAirlockWidgetBPI, Show) == 0x000000, "Member 'AirlockVendelboSCT_C_DisplayAirlockWidgetBPI::Show' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.AddAlcoholBPI
// 0x0008 (0x0008 - 0x0000)
struct AirlockVendelboSCT_C_AddAlcoholBPI final
{
public:
	float                                         InputValue;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Delay;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_AddAlcoholBPI) == 0x000004, "Wrong alignment on AirlockVendelboSCT_C_AddAlcoholBPI");
static_assert(sizeof(AirlockVendelboSCT_C_AddAlcoholBPI) == 0x000008, "Wrong size on AirlockVendelboSCT_C_AddAlcoholBPI");
static_assert(offsetof(AirlockVendelboSCT_C_AddAlcoholBPI, InputValue) == 0x000000, "Member 'AirlockVendelboSCT_C_AddAlcoholBPI::InputValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AddAlcoholBPI, Delay) == 0x000004, "Member 'AirlockVendelboSCT_C_AddAlcoholBPI::Delay' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.TeleportLocationRotationBPI
// 0x0018 (0x0018 - 0x0000)
struct AirlockVendelboSCT_C_TeleportLocationRotationBPI final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TargetRotation;                                    // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_TeleportLocationRotationBPI) == 0x000004, "Wrong alignment on AirlockVendelboSCT_C_TeleportLocationRotationBPI");
static_assert(sizeof(AirlockVendelboSCT_C_TeleportLocationRotationBPI) == 0x000018, "Wrong size on AirlockVendelboSCT_C_TeleportLocationRotationBPI");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportLocationRotationBPI, TargetLocation) == 0x000000, "Member 'AirlockVendelboSCT_C_TeleportLocationRotationBPI::TargetLocation' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportLocationRotationBPI, TargetRotation) == 0x00000C, "Member 'AirlockVendelboSCT_C_TeleportLocationRotationBPI::TargetRotation' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.SetDestinyBPI
// 0x0010 (0x0010 - 0x0000)
struct AirlockVendelboSCT_C_SetDestinyBPI final
{
public:
	EFate                                         Fate;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Impulse;                                           // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_SetDestinyBPI) == 0x000004, "Wrong alignment on AirlockVendelboSCT_C_SetDestinyBPI");
static_assert(sizeof(AirlockVendelboSCT_C_SetDestinyBPI) == 0x000010, "Wrong size on AirlockVendelboSCT_C_SetDestinyBPI");
static_assert(offsetof(AirlockVendelboSCT_C_SetDestinyBPI, Fate) == 0x000000, "Member 'AirlockVendelboSCT_C_SetDestinyBPI::Fate' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SetDestinyBPI, Impulse) == 0x000004, "Member 'AirlockVendelboSCT_C_SetDestinyBPI::Impulse' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.SetAimingStateBPI
// 0x0002 (0x0002 - 0x0000)
struct AirlockVendelboSCT_C_SetAimingStateBPI final
{
public:
	bool                                          Aiming;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         AimType;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_SetAimingStateBPI) == 0x000001, "Wrong alignment on AirlockVendelboSCT_C_SetAimingStateBPI");
static_assert(sizeof(AirlockVendelboSCT_C_SetAimingStateBPI) == 0x000002, "Wrong size on AirlockVendelboSCT_C_SetAimingStateBPI");
static_assert(offsetof(AirlockVendelboSCT_C_SetAimingStateBPI, Aiming) == 0x000000, "Member 'AirlockVendelboSCT_C_SetAimingStateBPI::Aiming' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SetAimingStateBPI, AimType) == 0x000001, "Member 'AirlockVendelboSCT_C_SetAimingStateBPI::AimType' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.RagdollCharacterBPI
// 0x0018 (0x0018 - 0x0000)
struct AirlockVendelboSCT_C_RagdollCharacterBPI final
{
public:
	bool                                          ToRagdoll;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Duration;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OptionalImpulse;                                   // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Force;                                             // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_RagdollCharacterBPI) == 0x000004, "Wrong alignment on AirlockVendelboSCT_C_RagdollCharacterBPI");
static_assert(sizeof(AirlockVendelboSCT_C_RagdollCharacterBPI) == 0x000018, "Wrong size on AirlockVendelboSCT_C_RagdollCharacterBPI");
static_assert(offsetof(AirlockVendelboSCT_C_RagdollCharacterBPI, ToRagdoll) == 0x000000, "Member 'AirlockVendelboSCT_C_RagdollCharacterBPI::ToRagdoll' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_RagdollCharacterBPI, Duration) == 0x000004, "Member 'AirlockVendelboSCT_C_RagdollCharacterBPI::Duration' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_RagdollCharacterBPI, OptionalImpulse) == 0x000008, "Member 'AirlockVendelboSCT_C_RagdollCharacterBPI::OptionalImpulse' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_RagdollCharacterBPI, Force) == 0x000014, "Member 'AirlockVendelboSCT_C_RagdollCharacterBPI::Force' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.UserConstructionScript
// 0x0030 (0x0030 - 0x0000)
struct AirlockVendelboSCT_C_UserConstructionScript final
{
public:
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_UserConstructionScript) == 0x000010, "Wrong alignment on AirlockVendelboSCT_C_UserConstructionScript");
static_assert(sizeof(AirlockVendelboSCT_C_UserConstructionScript) == 0x000030, "Wrong size on AirlockVendelboSCT_C_UserConstructionScript");
static_assert(offsetof(AirlockVendelboSCT_C_UserConstructionScript, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000000, "Member 'AirlockVendelboSCT_C_UserConstructionScript::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.Airlock Widget and Camera
// 0x0038 (0x0038 - 0x0000)
struct AirlockVendelboSCT_C_Airlock_Widget_and_Camera final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_Airlock_Widget_and_Camera) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_Airlock_Widget_and_Camera");
static_assert(sizeof(AirlockVendelboSCT_C_Airlock_Widget_and_Camera) == 0x000038, "Wrong size on AirlockVendelboSCT_C_Airlock_Widget_and_Camera");
static_assert(offsetof(AirlockVendelboSCT_C_Airlock_Widget_and_Camera, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'AirlockVendelboSCT_C_Airlock_Widget_and_Camera::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_Airlock_Widget_and_Camera, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'AirlockVendelboSCT_C_Airlock_Widget_and_Camera::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_Airlock_Widget_and_Camera, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000010, "Member 'AirlockVendelboSCT_C_Airlock_Widget_and_Camera::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_Airlock_Widget_and_Camera, K2Node_DynamicCast_AsICharacter_SCT) == 0x000018, "Member 'AirlockVendelboSCT_C_Airlock_Widget_and_Camera::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_Airlock_Widget_and_Camera, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'AirlockVendelboSCT_C_Airlock_Widget_and_Camera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_Airlock_Widget_and_Camera, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'AirlockVendelboSCT_C_Airlock_Widget_and_Camera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.TeleportAllPlayersToAirlock
// 0x01E8 (0x01E8 - 0x0000)
struct AirlockVendelboSCT_C_TeleportAllPlayersToAirlock final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_PlayerIDToDestination_ReturnLocation;     // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_PlayerIDToDestination_ReturnRotation;     // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponentBPI_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIAnimBp_C>            K2Node_DynamicCast_AsIAnim_Bp;                     // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0084(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT_1;             // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAliveBPI_Alive;                         // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x00A4(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP;              // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x0144(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP_1;            // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_TeleportAllPlayersToAirlock");
static_assert(sizeof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock) == 0x0001E8, "Wrong size on AirlockVendelboSCT_C_TeleportAllPlayersToAirlock");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, Temp_int_Array_Index_Variable) == 0x000000, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, CallFunc_PlayerIDToDestination_ReturnLocation) == 0x000008, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::CallFunc_PlayerIDToDestination_ReturnLocation' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, CallFunc_PlayerIDToDestination_ReturnRotation) == 0x000014, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::CallFunc_PlayerIDToDestination_ReturnRotation' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, CallFunc_GetAllActorsOfClass_OutActors) == 0x000028, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, CallFunc_Array_Get_Item) == 0x000040, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, K2Node_DynamicCast_AsICharacter_SCT) == 0x000050, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, CallFunc_GetAbilitySystemComponentBPI_ReturnValue) == 0x000068, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::CallFunc_GetAbilitySystemComponentBPI_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, K2Node_DynamicCast_AsIAnim_Bp) == 0x000070, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::K2Node_DynamicCast_AsIAnim_Bp' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000084, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, K2Node_DynamicCast_AsICharacter_SCT_1) == 0x000090, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::K2Node_DynamicCast_AsICharacter_SCT_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, CallFunc_IsAliveBPI_Alive) == 0x0000A1, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::CallFunc_IsAliveBPI_Alive' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0000A4, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000130, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, K2Node_DynamicCast_AsCharacter_SCTBP) == 0x000138, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::K2Node_DynamicCast_AsCharacter_SCTBP' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, K2Node_DynamicCast_bSuccess_3) == 0x000140, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x000144, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x0001D0, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, K2Node_DynamicCast_AsCharacter_SCTBP_1) == 0x0001D8, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::K2Node_DynamicCast_AsCharacter_SCTBP_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_TeleportAllPlayersToAirlock, K2Node_DynamicCast_bSuccess_4) == 0x0001E0, "Member 'AirlockVendelboSCT_C_TeleportAllPlayersToAirlock::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.CheckDeathRequirement
// 0x00C8 (0x00C8 - 0x0000)
struct AirlockVendelboSCT_C_CheckDeathRequirement final
{
public:
	bool                                          SomeoneShouldDie;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HowManyShouldDie;                                  // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AlivePlayersCount;                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACharacter*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0050(0x0010)(ReferenceParm)
	class ACharacter*                             CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAliveBPI_Alive;                         // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_CheckDeathRequirement) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_CheckDeathRequirement");
static_assert(sizeof(AirlockVendelboSCT_C_CheckDeathRequirement) == 0x0000C8, "Wrong size on AirlockVendelboSCT_C_CheckDeathRequirement");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, SomeoneShouldDie) == 0x000000, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::SomeoneShouldDie' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, HowManyShouldDie) == 0x000004, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::HowManyShouldDie' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, AlivePlayersCount) == 0x000008, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::AlivePlayersCount' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, Temp_int_Variable) == 0x00000C, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, Temp_int_Array_Index_Variable) == 0x000018, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, CallFunc_Conv_IntToString_ReturnValue) == 0x000020, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, CallFunc_Max_ReturnValue) == 0x000044, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, CallFunc_GetAllActorsOfClass_OutActors) == 0x000050, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, CallFunc_Array_Get_Item) == 0x000060, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, K2Node_DynamicCast_AsICharacter_SCT) == 0x000070, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, CallFunc_Less_IntInt_ReturnValue) == 0x000081, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, CallFunc_IsAliveBPI_Alive) == 0x000082, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::CallFunc_IsAliveBPI_Alive' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, CallFunc_Array_Contains_ReturnValue) == 0x000083, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, CallFunc_Array_Length_ReturnValue_1) == 0x000084, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000088, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000098, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A8, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CheckDeathRequirement, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B8, "Member 'AirlockVendelboSCT_C_CheckDeathRequirement::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.PlayerIDToDestination
// 0x0040 (0x0040 - 0x0000)
struct AirlockVendelboSCT_C_PlayerIDToDestination final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnLocation;                                    // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ReturnRotation;                                    // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_PlayerIDToDestination) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_PlayerIDToDestination");
static_assert(sizeof(AirlockVendelboSCT_C_PlayerIDToDestination) == 0x000040, "Wrong size on AirlockVendelboSCT_C_PlayerIDToDestination");
static_assert(offsetof(AirlockVendelboSCT_C_PlayerIDToDestination, Index_0) == 0x000000, "Member 'AirlockVendelboSCT_C_PlayerIDToDestination::Index_0' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_PlayerIDToDestination, ReturnLocation) == 0x000004, "Member 'AirlockVendelboSCT_C_PlayerIDToDestination::ReturnLocation' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_PlayerIDToDestination, ReturnRotation) == 0x000010, "Member 'AirlockVendelboSCT_C_PlayerIDToDestination::ReturnRotation' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_PlayerIDToDestination, Temp_int_Variable) == 0x00001C, "Member 'AirlockVendelboSCT_C_PlayerIDToDestination::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_PlayerIDToDestination, K2Node_Select_Default) == 0x000020, "Member 'AirlockVendelboSCT_C_PlayerIDToDestination::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_PlayerIDToDestination, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000028, "Member 'AirlockVendelboSCT_C_PlayerIDToDestination::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_PlayerIDToDestination, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000034, "Member 'AirlockVendelboSCT_C_PlayerIDToDestination::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.CountVote
// 0x0028 (0x0028 - 0x0000)
struct AirlockVendelboSCT_C_CountVote final
{
public:
	const class ACharacter*                       Character;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_CountVote) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_CountVote");
static_assert(sizeof(AirlockVendelboSCT_C_CountVote) == 0x000028, "Wrong size on AirlockVendelboSCT_C_CountVote");
static_assert(offsetof(AirlockVendelboSCT_C_CountVote, Character) == 0x000000, "Member 'AirlockVendelboSCT_C_CountVote::Character' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CountVote, Temp_int_Variable) == 0x000008, "Member 'AirlockVendelboSCT_C_CountVote::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CountVote, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'AirlockVendelboSCT_C_CountVote::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CountVote, CallFunc_Array_Add_ReturnValue_1) == 0x000010, "Member 'AirlockVendelboSCT_C_CountVote::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CountVote, CallFunc_Array_Find_ReturnValue) == 0x000014, "Member 'AirlockVendelboSCT_C_CountVote::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CountVote, CallFunc_Array_Contains_ReturnValue) == 0x000018, "Member 'AirlockVendelboSCT_C_CountVote::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CountVote, CallFunc_Array_Get_Item) == 0x00001C, "Member 'AirlockVendelboSCT_C_CountVote::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_CountVote, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'AirlockVendelboSCT_C_CountVote::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.FindHighestVote
// 0x0088 (0x0088 - 0x0000)
struct AirlockVendelboSCT_C_FindHighestVote final
{
public:
	bool                                          Deadlock;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     DeadlockedCharacters;                              // 0x0008(0x0010)(Parm, OutParm)
	class ACharacter*                             CharacterVotedOut;                                 // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACharacter*>                     EliminationCandidates;                             // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         HighestVote;                                       // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_FindHighestVote) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_FindHighestVote");
static_assert(sizeof(AirlockVendelboSCT_C_FindHighestVote) == 0x000088, "Wrong size on AirlockVendelboSCT_C_FindHighestVote");
static_assert(offsetof(AirlockVendelboSCT_C_FindHighestVote, Deadlock) == 0x000000, "Member 'AirlockVendelboSCT_C_FindHighestVote::Deadlock' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindHighestVote, DeadlockedCharacters) == 0x000008, "Member 'AirlockVendelboSCT_C_FindHighestVote::DeadlockedCharacters' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindHighestVote, CharacterVotedOut) == 0x000018, "Member 'AirlockVendelboSCT_C_FindHighestVote::CharacterVotedOut' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindHighestVote, EliminationCandidates) == 0x000020, "Member 'AirlockVendelboSCT_C_FindHighestVote::EliminationCandidates' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindHighestVote, HighestVote) == 0x000030, "Member 'AirlockVendelboSCT_C_FindHighestVote::HighestVote' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindHighestVote, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'AirlockVendelboSCT_C_FindHighestVote::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindHighestVote, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'AirlockVendelboSCT_C_FindHighestVote::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindHighestVote, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'AirlockVendelboSCT_C_FindHighestVote::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindHighestVote, Temp_int_Array_Index_Variable_1) == 0x000040, "Member 'AirlockVendelboSCT_C_FindHighestVote::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindHighestVote, CallFunc_Array_Get_Item) == 0x000048, "Member 'AirlockVendelboSCT_C_FindHighestVote::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindHighestVote, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'AirlockVendelboSCT_C_FindHighestVote::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindHighestVote, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'AirlockVendelboSCT_C_FindHighestVote::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindHighestVote, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'AirlockVendelboSCT_C_FindHighestVote::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindHighestVote, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'AirlockVendelboSCT_C_FindHighestVote::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindHighestVote, Temp_int_Loop_Counter_Variable_1) == 0x000064, "Member 'AirlockVendelboSCT_C_FindHighestVote::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindHighestVote, CallFunc_Array_Get_Item_2) == 0x000068, "Member 'AirlockVendelboSCT_C_FindHighestVote::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindHighestVote, CallFunc_Array_Length_ReturnValue_1) == 0x00006C, "Member 'AirlockVendelboSCT_C_FindHighestVote::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindHighestVote, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000070, "Member 'AirlockVendelboSCT_C_FindHighestVote::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindHighestVote, CallFunc_Less_IntInt_ReturnValue) == 0x000071, "Member 'AirlockVendelboSCT_C_FindHighestVote::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindHighestVote, CallFunc_Add_IntInt_ReturnValue_1) == 0x000074, "Member 'AirlockVendelboSCT_C_FindHighestVote::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindHighestVote, CallFunc_Array_Length_ReturnValue_2) == 0x000078, "Member 'AirlockVendelboSCT_C_FindHighestVote::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindHighestVote, CallFunc_Array_Get_Item_3) == 0x00007C, "Member 'AirlockVendelboSCT_C_FindHighestVote::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindHighestVote, CallFunc_Less_IntInt_ReturnValue_1) == 0x000080, "Member 'AirlockVendelboSCT_C_FindHighestVote::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindHighestVote, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000081, "Member 'AirlockVendelboSCT_C_FindHighestVote::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.ReturnControlToPlayer
// 0x0038 (0x0038 - 0x0000)
struct AirlockVendelboSCT_C_ReturnControlToPlayer final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_ReturnControlToPlayer) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_ReturnControlToPlayer");
static_assert(sizeof(AirlockVendelboSCT_C_ReturnControlToPlayer) == 0x000038, "Wrong size on AirlockVendelboSCT_C_ReturnControlToPlayer");
static_assert(offsetof(AirlockVendelboSCT_C_ReturnControlToPlayer, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'AirlockVendelboSCT_C_ReturnControlToPlayer::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ReturnControlToPlayer, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'AirlockVendelboSCT_C_ReturnControlToPlayer::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ReturnControlToPlayer, K2Node_DynamicCast_AsICharacter_SCT) == 0x000010, "Member 'AirlockVendelboSCT_C_ReturnControlToPlayer::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ReturnControlToPlayer, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AirlockVendelboSCT_C_ReturnControlToPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ReturnControlToPlayer, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'AirlockVendelboSCT_C_ReturnControlToPlayer::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ReturnControlToPlayer, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000030, "Member 'AirlockVendelboSCT_C_ReturnControlToPlayer::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.AnyPersonoidsLeft
// 0x0080 (0x0080 - 0x0000)
struct AirlockVendelboSCT_C_AnyPersonoidsLeft final
{
public:
	bool                                          PersonoidPresent;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LocalPersonoidPresent;                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     LocalCharacters;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPersonoidBPI_IsPersonoid;               // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT_1;             // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAliveBPI_Alive;                         // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x5];                                       // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0070(0x0010)(ReferenceParm)
};
static_assert(alignof(AirlockVendelboSCT_C_AnyPersonoidsLeft) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_AnyPersonoidsLeft");
static_assert(sizeof(AirlockVendelboSCT_C_AnyPersonoidsLeft) == 0x000080, "Wrong size on AirlockVendelboSCT_C_AnyPersonoidsLeft");
static_assert(offsetof(AirlockVendelboSCT_C_AnyPersonoidsLeft, PersonoidPresent) == 0x000000, "Member 'AirlockVendelboSCT_C_AnyPersonoidsLeft::PersonoidPresent' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AnyPersonoidsLeft, LocalPersonoidPresent) == 0x000001, "Member 'AirlockVendelboSCT_C_AnyPersonoidsLeft::LocalPersonoidPresent' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AnyPersonoidsLeft, LocalCharacters) == 0x000008, "Member 'AirlockVendelboSCT_C_AnyPersonoidsLeft::LocalCharacters' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AnyPersonoidsLeft, Temp_bool_True_if_break_was_hit_Variable) == 0x000018, "Member 'AirlockVendelboSCT_C_AnyPersonoidsLeft::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AnyPersonoidsLeft, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'AirlockVendelboSCT_C_AnyPersonoidsLeft::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AnyPersonoidsLeft, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'AirlockVendelboSCT_C_AnyPersonoidsLeft::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AnyPersonoidsLeft, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'AirlockVendelboSCT_C_AnyPersonoidsLeft::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AnyPersonoidsLeft, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'AirlockVendelboSCT_C_AnyPersonoidsLeft::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AnyPersonoidsLeft, CallFunc_Array_Get_Item) == 0x000030, "Member 'AirlockVendelboSCT_C_AnyPersonoidsLeft::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AnyPersonoidsLeft, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'AirlockVendelboSCT_C_AnyPersonoidsLeft::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AnyPersonoidsLeft, K2Node_DynamicCast_AsICharacter_SCT) == 0x000040, "Member 'AirlockVendelboSCT_C_AnyPersonoidsLeft::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AnyPersonoidsLeft, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'AirlockVendelboSCT_C_AnyPersonoidsLeft::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AnyPersonoidsLeft, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'AirlockVendelboSCT_C_AnyPersonoidsLeft::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AnyPersonoidsLeft, CallFunc_IsPersonoidBPI_IsPersonoid) == 0x000052, "Member 'AirlockVendelboSCT_C_AnyPersonoidsLeft::CallFunc_IsPersonoidBPI_IsPersonoid' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AnyPersonoidsLeft, CallFunc_BooleanAND_ReturnValue) == 0x000053, "Member 'AirlockVendelboSCT_C_AnyPersonoidsLeft::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AnyPersonoidsLeft, K2Node_DynamicCast_AsICharacter_SCT_1) == 0x000058, "Member 'AirlockVendelboSCT_C_AnyPersonoidsLeft::K2Node_DynamicCast_AsICharacter_SCT_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AnyPersonoidsLeft, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'AirlockVendelboSCT_C_AnyPersonoidsLeft::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AnyPersonoidsLeft, CallFunc_Array_Contains_ReturnValue) == 0x000069, "Member 'AirlockVendelboSCT_C_AnyPersonoidsLeft::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AnyPersonoidsLeft, CallFunc_IsAliveBPI_Alive) == 0x00006A, "Member 'AirlockVendelboSCT_C_AnyPersonoidsLeft::CallFunc_IsAliveBPI_Alive' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AnyPersonoidsLeft, CallFunc_GetAllActorsOfClass_OutActors) == 0x000070, "Member 'AirlockVendelboSCT_C_AnyPersonoidsLeft::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.RemoveFromArray
// 0x0068 (0x0068 - 0x0000)
struct AirlockVendelboSCT_C_RemoveFromArray final
{
public:
	TArray<class ACharacter*>                     InputArray;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class ACharacter*>                     ArrayToRemove;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class ACharacter*>                     CleanedArray;                                      // 0x0020(0x0010)(Parm, OutParm)
	TArray<class ACharacter*>                     LocalArray;                                        // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_RemoveFromArray) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_RemoveFromArray");
static_assert(sizeof(AirlockVendelboSCT_C_RemoveFromArray) == 0x000068, "Wrong size on AirlockVendelboSCT_C_RemoveFromArray");
static_assert(offsetof(AirlockVendelboSCT_C_RemoveFromArray, InputArray) == 0x000000, "Member 'AirlockVendelboSCT_C_RemoveFromArray::InputArray' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_RemoveFromArray, ArrayToRemove) == 0x000010, "Member 'AirlockVendelboSCT_C_RemoveFromArray::ArrayToRemove' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_RemoveFromArray, CleanedArray) == 0x000020, "Member 'AirlockVendelboSCT_C_RemoveFromArray::CleanedArray' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_RemoveFromArray, LocalArray) == 0x000030, "Member 'AirlockVendelboSCT_C_RemoveFromArray::LocalArray' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_RemoveFromArray, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'AirlockVendelboSCT_C_RemoveFromArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_RemoveFromArray, Temp_int_Array_Index_Variable) == 0x000044, "Member 'AirlockVendelboSCT_C_RemoveFromArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_RemoveFromArray, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'AirlockVendelboSCT_C_RemoveFromArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_RemoveFromArray, CallFunc_Array_Get_Item) == 0x000050, "Member 'AirlockVendelboSCT_C_RemoveFromArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_RemoveFromArray, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'AirlockVendelboSCT_C_RemoveFromArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_RemoveFromArray, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'AirlockVendelboSCT_C_RemoveFromArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_RemoveFromArray, CallFunc_Array_RemoveItem_ReturnValue) == 0x000060, "Member 'AirlockVendelboSCT_C_RemoveFromArray::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_RemoveFromArray, CallFunc_Array_Contains_ReturnValue) == 0x000061, "Member 'AirlockVendelboSCT_C_RemoveFromArray::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.FindAnyPassengerLogs
// 0x00B8 (0x00B8 - 0x0000)
struct AirlockVendelboSCT_C_FindAnyPassengerLogs final
{
public:
	bool                                          PassengerLogPresent;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     PassengerLogCandidates;                            // 0x0008(0x0010)(Parm, OutParm)
	bool                                          LocalPassengerLogPresent;                          // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     LocalPassengerLogCandidates;                       // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPassengerLogFactType                         CallFunc_GetHeldLogInfoBPI_FactType;               // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPlayerData>                    CallFunc_GetHeldLogInfoBPI_Players;                // 0x0080(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetHeldLogInfoBPI_HasLog;                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT_1;             // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAliveBPI_Alive;                         // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_FindAnyPassengerLogs) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_FindAnyPassengerLogs");
static_assert(sizeof(AirlockVendelboSCT_C_FindAnyPassengerLogs) == 0x0000B8, "Wrong size on AirlockVendelboSCT_C_FindAnyPassengerLogs");
static_assert(offsetof(AirlockVendelboSCT_C_FindAnyPassengerLogs, PassengerLogPresent) == 0x000000, "Member 'AirlockVendelboSCT_C_FindAnyPassengerLogs::PassengerLogPresent' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindAnyPassengerLogs, PassengerLogCandidates) == 0x000008, "Member 'AirlockVendelboSCT_C_FindAnyPassengerLogs::PassengerLogCandidates' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindAnyPassengerLogs, LocalPassengerLogPresent) == 0x000018, "Member 'AirlockVendelboSCT_C_FindAnyPassengerLogs::LocalPassengerLogPresent' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindAnyPassengerLogs, LocalPassengerLogCandidates) == 0x000020, "Member 'AirlockVendelboSCT_C_FindAnyPassengerLogs::LocalPassengerLogCandidates' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindAnyPassengerLogs, Temp_int_Array_Index_Variable) == 0x000030, "Member 'AirlockVendelboSCT_C_FindAnyPassengerLogs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindAnyPassengerLogs, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'AirlockVendelboSCT_C_FindAnyPassengerLogs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindAnyPassengerLogs, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'AirlockVendelboSCT_C_FindAnyPassengerLogs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindAnyPassengerLogs, CallFunc_GetAllActorsOfClass_OutActors) == 0x000040, "Member 'AirlockVendelboSCT_C_FindAnyPassengerLogs::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindAnyPassengerLogs, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'AirlockVendelboSCT_C_FindAnyPassengerLogs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindAnyPassengerLogs, CallFunc_Array_Get_Item) == 0x000058, "Member 'AirlockVendelboSCT_C_FindAnyPassengerLogs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindAnyPassengerLogs, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'AirlockVendelboSCT_C_FindAnyPassengerLogs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindAnyPassengerLogs, K2Node_DynamicCast_AsICharacter_SCT) == 0x000068, "Member 'AirlockVendelboSCT_C_FindAnyPassengerLogs::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindAnyPassengerLogs, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'AirlockVendelboSCT_C_FindAnyPassengerLogs::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindAnyPassengerLogs, CallFunc_GetHeldLogInfoBPI_FactType) == 0x000079, "Member 'AirlockVendelboSCT_C_FindAnyPassengerLogs::CallFunc_GetHeldLogInfoBPI_FactType' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindAnyPassengerLogs, CallFunc_GetHeldLogInfoBPI_Players) == 0x000080, "Member 'AirlockVendelboSCT_C_FindAnyPassengerLogs::CallFunc_GetHeldLogInfoBPI_Players' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindAnyPassengerLogs, CallFunc_GetHeldLogInfoBPI_HasLog) == 0x000090, "Member 'AirlockVendelboSCT_C_FindAnyPassengerLogs::CallFunc_GetHeldLogInfoBPI_HasLog' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindAnyPassengerLogs, K2Node_DynamicCast_AsICharacter_SCT_1) == 0x000098, "Member 'AirlockVendelboSCT_C_FindAnyPassengerLogs::K2Node_DynamicCast_AsICharacter_SCT_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindAnyPassengerLogs, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'AirlockVendelboSCT_C_FindAnyPassengerLogs::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindAnyPassengerLogs, CallFunc_IsAliveBPI_Alive) == 0x0000A9, "Member 'AirlockVendelboSCT_C_FindAnyPassengerLogs::CallFunc_IsAliveBPI_Alive' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindAnyPassengerLogs, CallFunc_Array_Add_ReturnValue) == 0x0000AC, "Member 'AirlockVendelboSCT_C_FindAnyPassengerLogs::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_FindAnyPassengerLogs, CallFunc_Array_Contains_ReturnValue) == 0x0000B0, "Member 'AirlockVendelboSCT_C_FindAnyPassengerLogs::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.GetHeadCameraTransform
// 0x0100 (0x0100 - 0x0000)
struct AirlockVendelboSCT_C_GetHeadCameraTransform final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Offset;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             NewParam;                                          // 0x0010(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C4[0xC];                                       // 0x00C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_GetHeadCameraTransform) == 0x000010, "Wrong alignment on AirlockVendelboSCT_C_GetHeadCameraTransform");
static_assert(sizeof(AirlockVendelboSCT_C_GetHeadCameraTransform) == 0x000100, "Wrong size on AirlockVendelboSCT_C_GetHeadCameraTransform");
static_assert(offsetof(AirlockVendelboSCT_C_GetHeadCameraTransform, Character) == 0x000000, "Member 'AirlockVendelboSCT_C_GetHeadCameraTransform::Character' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetHeadCameraTransform, Offset) == 0x000008, "Member 'AirlockVendelboSCT_C_GetHeadCameraTransform::Offset' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetHeadCameraTransform, NewParam) == 0x000010, "Member 'AirlockVendelboSCT_C_GetHeadCameraTransform::NewParam' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetHeadCameraTransform, CallFunc_GetSocketTransform_ReturnValue) == 0x000040, "Member 'AirlockVendelboSCT_C_GetHeadCameraTransform::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetHeadCameraTransform, CallFunc_BreakTransform_Location) == 0x000070, "Member 'AirlockVendelboSCT_C_GetHeadCameraTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetHeadCameraTransform, CallFunc_BreakTransform_Rotation) == 0x00007C, "Member 'AirlockVendelboSCT_C_GetHeadCameraTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetHeadCameraTransform, CallFunc_BreakTransform_Scale) == 0x000088, "Member 'AirlockVendelboSCT_C_GetHeadCameraTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetHeadCameraTransform, CallFunc_GetRightVector_ReturnValue) == 0x000094, "Member 'AirlockVendelboSCT_C_GetHeadCameraTransform::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetHeadCameraTransform, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000A0, "Member 'AirlockVendelboSCT_C_GetHeadCameraTransform::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetHeadCameraTransform, CallFunc_Add_VectorVector_ReturnValue) == 0x0000AC, "Member 'AirlockVendelboSCT_C_GetHeadCameraTransform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetHeadCameraTransform, CallFunc_FindLookAtRotation_ReturnValue) == 0x0000B8, "Member 'AirlockVendelboSCT_C_GetHeadCameraTransform::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetHeadCameraTransform, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'AirlockVendelboSCT_C_GetHeadCameraTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.SetupInterviewWidget
// 0x0030 (0x0030 - 0x0000)
struct AirlockVendelboSCT_C_SetupInterviewWidget final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAirlockWI_C*>                   CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UAirlockWI_C*                           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_SetupInterviewWidget) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_SetupInterviewWidget");
static_assert(sizeof(AirlockVendelboSCT_C_SetupInterviewWidget) == 0x000030, "Wrong size on AirlockVendelboSCT_C_SetupInterviewWidget");
static_assert(offsetof(AirlockVendelboSCT_C_SetupInterviewWidget, Character) == 0x000000, "Member 'AirlockVendelboSCT_C_SetupInterviewWidget::Character' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SetupInterviewWidget, CallFunc_IsDedicatedServer_ReturnValue) == 0x000008, "Member 'AirlockVendelboSCT_C_SetupInterviewWidget::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SetupInterviewWidget, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000010, "Member 'AirlockVendelboSCT_C_SetupInterviewWidget::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SetupInterviewWidget, CallFunc_Array_Get_Item) == 0x000020, "Member 'AirlockVendelboSCT_C_SetupInterviewWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SetupInterviewWidget, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000028, "Member 'AirlockVendelboSCT_C_SetupInterviewWidget::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.RemoveSelfFromArray
// 0x0040 (0x0040 - 0x0000)
struct AirlockVendelboSCT_C_RemoveSelfFromArray final
{
public:
	TArray<class ACharacter*>                     InputArray;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class ACharacter*>                     OutputArray;                                       // 0x0010(0x0010)(Parm, OutParm)
	TArray<class ACharacter*>                     LocalArray;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_RemoveSelfFromArray) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_RemoveSelfFromArray");
static_assert(sizeof(AirlockVendelboSCT_C_RemoveSelfFromArray) == 0x000040, "Wrong size on AirlockVendelboSCT_C_RemoveSelfFromArray");
static_assert(offsetof(AirlockVendelboSCT_C_RemoveSelfFromArray, InputArray) == 0x000000, "Member 'AirlockVendelboSCT_C_RemoveSelfFromArray::InputArray' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_RemoveSelfFromArray, OutputArray) == 0x000010, "Member 'AirlockVendelboSCT_C_RemoveSelfFromArray::OutputArray' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_RemoveSelfFromArray, LocalArray) == 0x000020, "Member 'AirlockVendelboSCT_C_RemoveSelfFromArray::LocalArray' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_RemoveSelfFromArray, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000030, "Member 'AirlockVendelboSCT_C_RemoveSelfFromArray::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_RemoveSelfFromArray, CallFunc_Array_RemoveItem_ReturnValue) == 0x000038, "Member 'AirlockVendelboSCT_C_RemoveSelfFromArray::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.SetupTrustVoteFunction
// 0x0018 (0x0018 - 0x0000)
struct AirlockVendelboSCT_C_SetupTrustVoteFunction final
{
public:
	TArray<class ACharacter*>                     CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers; // 0x0000(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_SetupTrustVoteFunction) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_SetupTrustVoteFunction");
static_assert(sizeof(AirlockVendelboSCT_C_SetupTrustVoteFunction) == 0x000018, "Wrong size on AirlockVendelboSCT_C_SetupTrustVoteFunction");
static_assert(offsetof(AirlockVendelboSCT_C_SetupTrustVoteFunction, CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers) == 0x000000, "Member 'AirlockVendelboSCT_C_SetupTrustVoteFunction::CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SetupTrustVoteFunction, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'AirlockVendelboSCT_C_SetupTrustVoteFunction::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SetupTrustVoteFunction, CallFunc_Conv_IntToByte_ReturnValue) == 0x000014, "Member 'AirlockVendelboSCT_C_SetupTrustVoteFunction::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.GetAlivePlayersExcludingDoomed
// 0x0078 (0x0078 - 0x0000)
struct AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed final
{
public:
	TArray<class ACharacter*>                     AlivePlayers;                                      // 0x0000(0x0010)(Parm, OutParm)
	TArray<class ACharacter*>                     LocalAlivePlayers;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAliveBPI_Alive;                         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed");
static_assert(sizeof(AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed) == 0x000078, "Wrong size on AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed");
static_assert(offsetof(AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed, AlivePlayers) == 0x000000, "Member 'AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed::AlivePlayers' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed, LocalAlivePlayers) == 0x000010, "Member 'AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed::LocalAlivePlayers' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed, Temp_int_Array_Index_Variable) == 0x000020, "Member 'AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed, CallFunc_Array_Get_Item) == 0x000048, "Member 'AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed, K2Node_DynamicCast_AsICharacter_SCT) == 0x000058, "Member 'AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed, CallFunc_IsAliveBPI_Alive) == 0x000069, "Member 'AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed::CallFunc_IsAliveBPI_Alive' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed, CallFunc_Array_Contains_ReturnValue) == 0x000070, "Member 'AirlockVendelboSCT_C_GetAlivePlayersExcludingDoomed::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.GetPassengerLogsAliveExcludingDoomed
// 0x00B0 (0x00B0 - 0x0000)
struct AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed final
{
public:
	int32                                         TotalAmountOfLogs;                                 // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     CharactersWithLogs;                                // 0x0008(0x0010)(Parm, OutParm)
	TArray<class ACharacter*>                     LocalPlayersWithLogs;                              // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACharacter*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPassengerLogFactType                         CallFunc_GetHeldLogInfoBPI_FactType;               // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPlayerData>                    CallFunc_GetHeldLogInfoBPI_Players;                // 0x0078(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetHeldLogInfoBPI_HasLog;                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT_1;             // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAliveBPI_Alive;                         // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed");
static_assert(sizeof(AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed) == 0x0000B0, "Wrong size on AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed");
static_assert(offsetof(AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed, TotalAmountOfLogs) == 0x000000, "Member 'AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed::TotalAmountOfLogs' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed, CharactersWithLogs) == 0x000008, "Member 'AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed::CharactersWithLogs' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed, LocalPlayersWithLogs) == 0x000018, "Member 'AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed::LocalPlayersWithLogs' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed, Temp_int_Array_Index_Variable) == 0x000028, "Member 'AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed, CallFunc_GetAllActorsOfClass_OutActors) == 0x000038, "Member 'AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed, CallFunc_Array_Get_Item) == 0x000050, "Member 'AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed, K2Node_DynamicCast_AsICharacter_SCT) == 0x000060, "Member 'AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed, CallFunc_GetHeldLogInfoBPI_FactType) == 0x000071, "Member 'AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed::CallFunc_GetHeldLogInfoBPI_FactType' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed, CallFunc_GetHeldLogInfoBPI_Players) == 0x000078, "Member 'AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed::CallFunc_GetHeldLogInfoBPI_Players' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed, CallFunc_GetHeldLogInfoBPI_HasLog) == 0x000088, "Member 'AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed::CallFunc_GetHeldLogInfoBPI_HasLog' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed, K2Node_DynamicCast_AsICharacter_SCT_1) == 0x000090, "Member 'AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed::K2Node_DynamicCast_AsICharacter_SCT_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed, CallFunc_IsAliveBPI_Alive) == 0x0000A1, "Member 'AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed::CallFunc_IsAliveBPI_Alive' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed, CallFunc_Array_Add_ReturnValue) == 0x0000A4, "Member 'AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed, CallFunc_Array_Contains_ReturnValue) == 0x0000A8, "Member 'AirlockVendelboSCT_C_GetPassengerLogsAliveExcludingDoomed::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.SetupDeathVoteFunction
// 0x0028 (0x0028 - 0x0000)
struct AirlockVendelboSCT_C_SetupDeathVoteFunction final
{
public:
	TArray<class ACharacter*>                     PlayersForVote;                                    // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class ACharacter*>                     CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers; // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_SetupDeathVoteFunction) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_SetupDeathVoteFunction");
static_assert(sizeof(AirlockVendelboSCT_C_SetupDeathVoteFunction) == 0x000028, "Wrong size on AirlockVendelboSCT_C_SetupDeathVoteFunction");
static_assert(offsetof(AirlockVendelboSCT_C_SetupDeathVoteFunction, PlayersForVote) == 0x000000, "Member 'AirlockVendelboSCT_C_SetupDeathVoteFunction::PlayersForVote' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SetupDeathVoteFunction, CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers) == 0x000010, "Member 'AirlockVendelboSCT_C_SetupDeathVoteFunction::CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SetupDeathVoteFunction, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'AirlockVendelboSCT_C_SetupDeathVoteFunction::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SetupDeathVoteFunction, CallFunc_Conv_IntToByte_ReturnValue) == 0x000024, "Member 'AirlockVendelboSCT_C_SetupDeathVoteFunction::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.SetupPassengerLogVoteFunction
// 0x0028 (0x0028 - 0x0000)
struct AirlockVendelboSCT_C_SetupPassengerLogVoteFunction final
{
public:
	TArray<class ACharacter*>                     PlayersForVote;                                    // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class ACharacter*>                     CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers; // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_SetupPassengerLogVoteFunction) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_SetupPassengerLogVoteFunction");
static_assert(sizeof(AirlockVendelboSCT_C_SetupPassengerLogVoteFunction) == 0x000028, "Wrong size on AirlockVendelboSCT_C_SetupPassengerLogVoteFunction");
static_assert(offsetof(AirlockVendelboSCT_C_SetupPassengerLogVoteFunction, PlayersForVote) == 0x000000, "Member 'AirlockVendelboSCT_C_SetupPassengerLogVoteFunction::PlayersForVote' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SetupPassengerLogVoteFunction, CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers) == 0x000010, "Member 'AirlockVendelboSCT_C_SetupPassengerLogVoteFunction::CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SetupPassengerLogVoteFunction, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'AirlockVendelboSCT_C_SetupPassengerLogVoteFunction::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SetupPassengerLogVoteFunction, CallFunc_Conv_IntToByte_ReturnValue) == 0x000024, "Member 'AirlockVendelboSCT_C_SetupPassengerLogVoteFunction::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.AutomationTestingTimes
// 0x0008 (0x0008 - 0x0000)
struct AirlockVendelboSCT_C_AutomationTestingTimes final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_AutomationTestingTimes) == 0x000004, "Wrong alignment on AirlockVendelboSCT_C_AutomationTestingTimes");
static_assert(sizeof(AirlockVendelboSCT_C_AutomationTestingTimes) == 0x000008, "Wrong size on AirlockVendelboSCT_C_AutomationTestingTimes");
static_assert(offsetof(AirlockVendelboSCT_C_AutomationTestingTimes, ReturnValue) == 0x000000, "Member 'AirlockVendelboSCT_C_AutomationTestingTimes::ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomationTestingTimes, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'AirlockVendelboSCT_C_AutomationTestingTimes::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.AutomaticEliminationVote
// 0x0070 (0x0070 - 0x0000)
struct AirlockVendelboSCT_C_AutomaticEliminationVote final
{
public:
	TArray<class ACharacter*>                     CurrentVoteable;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers; // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_AutomaticEliminationVote) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_AutomaticEliminationVote");
static_assert(sizeof(AirlockVendelboSCT_C_AutomaticEliminationVote) == 0x000070, "Wrong size on AirlockVendelboSCT_C_AutomaticEliminationVote");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticEliminationVote, CurrentVoteable) == 0x000000, "Member 'AirlockVendelboSCT_C_AutomaticEliminationVote::CurrentVoteable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticEliminationVote, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'AirlockVendelboSCT_C_AutomaticEliminationVote::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticEliminationVote, Temp_int_Array_Index_Variable) == 0x000014, "Member 'AirlockVendelboSCT_C_AutomaticEliminationVote::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticEliminationVote, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'AirlockVendelboSCT_C_AutomaticEliminationVote::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticEliminationVote, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'AirlockVendelboSCT_C_AutomaticEliminationVote::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticEliminationVote, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'AirlockVendelboSCT_C_AutomaticEliminationVote::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticEliminationVote, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'AirlockVendelboSCT_C_AutomaticEliminationVote::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticEliminationVote, CallFunc_Array_Get_Item) == 0x000028, "Member 'AirlockVendelboSCT_C_AutomaticEliminationVote::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticEliminationVote, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'AirlockVendelboSCT_C_AutomaticEliminationVote::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticEliminationVote, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'AirlockVendelboSCT_C_AutomaticEliminationVote::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticEliminationVote, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'AirlockVendelboSCT_C_AutomaticEliminationVote::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticEliminationVote, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'AirlockVendelboSCT_C_AutomaticEliminationVote::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticEliminationVote, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'AirlockVendelboSCT_C_AutomaticEliminationVote::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticEliminationVote, CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers) == 0x000048, "Member 'AirlockVendelboSCT_C_AutomaticEliminationVote::CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticEliminationVote, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'AirlockVendelboSCT_C_AutomaticEliminationVote::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticEliminationVote, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'AirlockVendelboSCT_C_AutomaticEliminationVote::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticEliminationVote, CallFunc_Less_IntInt_ReturnValue_1) == 0x000068, "Member 'AirlockVendelboSCT_C_AutomaticEliminationVote::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticEliminationVote, CallFunc_Array_Contains_ReturnValue) == 0x000069, "Member 'AirlockVendelboSCT_C_AutomaticEliminationVote::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticEliminationVote, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00006A, "Member 'AirlockVendelboSCT_C_AutomaticEliminationVote::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.AutomaticPassengerLogVote
// 0x0080 (0x0080 - 0x0000)
struct AirlockVendelboSCT_C_AutomaticPassengerLogVote final
{
public:
	TArray<class ACharacter*>                     CurrentVoteable;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ACharacter*>                     CharactersWhoHaveNotVoted;                         // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers; // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_AutomaticPassengerLogVote) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_AutomaticPassengerLogVote");
static_assert(sizeof(AirlockVendelboSCT_C_AutomaticPassengerLogVote) == 0x000080, "Wrong size on AirlockVendelboSCT_C_AutomaticPassengerLogVote");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticPassengerLogVote, CurrentVoteable) == 0x000000, "Member 'AirlockVendelboSCT_C_AutomaticPassengerLogVote::CurrentVoteable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticPassengerLogVote, CharactersWhoHaveNotVoted) == 0x000010, "Member 'AirlockVendelboSCT_C_AutomaticPassengerLogVote::CharactersWhoHaveNotVoted' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticPassengerLogVote, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'AirlockVendelboSCT_C_AutomaticPassengerLogVote::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticPassengerLogVote, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'AirlockVendelboSCT_C_AutomaticPassengerLogVote::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticPassengerLogVote, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'AirlockVendelboSCT_C_AutomaticPassengerLogVote::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticPassengerLogVote, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'AirlockVendelboSCT_C_AutomaticPassengerLogVote::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticPassengerLogVote, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'AirlockVendelboSCT_C_AutomaticPassengerLogVote::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticPassengerLogVote, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'AirlockVendelboSCT_C_AutomaticPassengerLogVote::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticPassengerLogVote, CallFunc_Array_Get_Item) == 0x000038, "Member 'AirlockVendelboSCT_C_AutomaticPassengerLogVote::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticPassengerLogVote, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'AirlockVendelboSCT_C_AutomaticPassengerLogVote::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticPassengerLogVote, Temp_int_Loop_Counter_Variable_1) == 0x000044, "Member 'AirlockVendelboSCT_C_AutomaticPassengerLogVote::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticPassengerLogVote, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'AirlockVendelboSCT_C_AutomaticPassengerLogVote::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticPassengerLogVote, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'AirlockVendelboSCT_C_AutomaticPassengerLogVote::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticPassengerLogVote, CallFunc_BooleanAND_ReturnValue) == 0x000050, "Member 'AirlockVendelboSCT_C_AutomaticPassengerLogVote::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticPassengerLogVote, CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers) == 0x000058, "Member 'AirlockVendelboSCT_C_AutomaticPassengerLogVote::CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticPassengerLogVote, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'AirlockVendelboSCT_C_AutomaticPassengerLogVote::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticPassengerLogVote, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'AirlockVendelboSCT_C_AutomaticPassengerLogVote::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticPassengerLogVote, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'AirlockVendelboSCT_C_AutomaticPassengerLogVote::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticPassengerLogVote, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000079, "Member 'AirlockVendelboSCT_C_AutomaticPassengerLogVote::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_AutomaticPassengerLogVote, CallFunc_Array_Contains_ReturnValue) == 0x00007A, "Member 'AirlockVendelboSCT_C_AutomaticPassengerLogVote::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.ServerTimeToOffset
// 0x0030 (0x0030 - 0x0000)
struct AirlockVendelboSCT_C_ServerTimeToOffset final
{
public:
	float                                         ServerTime;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DecimalDelay;                                      // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Offset;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_ServerTimeToOffset) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_ServerTimeToOffset");
static_assert(sizeof(AirlockVendelboSCT_C_ServerTimeToOffset) == 0x000030, "Wrong size on AirlockVendelboSCT_C_ServerTimeToOffset");
static_assert(offsetof(AirlockVendelboSCT_C_ServerTimeToOffset, ServerTime) == 0x000000, "Member 'AirlockVendelboSCT_C_ServerTimeToOffset::ServerTime' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ServerTimeToOffset, DecimalDelay) == 0x000004, "Member 'AirlockVendelboSCT_C_ServerTimeToOffset::DecimalDelay' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ServerTimeToOffset, Offset) == 0x000008, "Member 'AirlockVendelboSCT_C_ServerTimeToOffset::Offset' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ServerTimeToOffset, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'AirlockVendelboSCT_C_ServerTimeToOffset::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ServerTimeToOffset, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000018, "Member 'AirlockVendelboSCT_C_ServerTimeToOffset::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ServerTimeToOffset, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'AirlockVendelboSCT_C_ServerTimeToOffset::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ServerTimeToOffset, CallFunc_FFloor_ReturnValue) == 0x000020, "Member 'AirlockVendelboSCT_C_ServerTimeToOffset::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ServerTimeToOffset, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000024, "Member 'AirlockVendelboSCT_C_ServerTimeToOffset::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ServerTimeToOffset, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000028, "Member 'AirlockVendelboSCT_C_ServerTimeToOffset::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.GetFlushLocation
// 0x00E0 (0x00E0 - 0x0000)
struct AirlockVendelboSCT_C_GetFlushLocation final
{
public:
	struct FVector                                ReturnValue_Location;                              // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCapsuleComponent*                      K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_GetFlushLocation) == 0x000010, "Wrong alignment on AirlockVendelboSCT_C_GetFlushLocation");
static_assert(sizeof(AirlockVendelboSCT_C_GetFlushLocation) == 0x0000E0, "Wrong size on AirlockVendelboSCT_C_GetFlushLocation");
static_assert(offsetof(AirlockVendelboSCT_C_GetFlushLocation, ReturnValue_Location) == 0x000000, "Member 'AirlockVendelboSCT_C_GetFlushLocation::ReturnValue_Location' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetFlushLocation, Temp_int_Variable) == 0x00000C, "Member 'AirlockVendelboSCT_C_GetFlushLocation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetFlushLocation, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'AirlockVendelboSCT_C_GetFlushLocation::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetFlushLocation, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'AirlockVendelboSCT_C_GetFlushLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetFlushLocation, K2Node_Select_Default) == 0x000048, "Member 'AirlockVendelboSCT_C_GetFlushLocation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetFlushLocation, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000050, "Member 'AirlockVendelboSCT_C_GetFlushLocation::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetFlushLocation, CallFunc_ComposeTransforms_ReturnValue) == 0x000080, "Member 'AirlockVendelboSCT_C_GetFlushLocation::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetFlushLocation, CallFunc_BreakTransform_Location) == 0x0000B0, "Member 'AirlockVendelboSCT_C_GetFlushLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetFlushLocation, CallFunc_BreakTransform_Rotation) == 0x0000BC, "Member 'AirlockVendelboSCT_C_GetFlushLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetFlushLocation, CallFunc_BreakTransform_Scale) == 0x0000C8, "Member 'AirlockVendelboSCT_C_GetFlushLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.EnablePlayerMovement
// 0x0088 (0x0088 - 0x0000)
struct AirlockVendelboSCT_C_EnablePlayerMovement final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers; // 0x0008(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIAnimBp_C>            K2Node_DynamicCast_AsIAnim_Bp;                     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponentBPI_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT_1;             // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAliveBPI_Alive;                         // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73[0x1];                                       // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_EnablePlayerMovement) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_EnablePlayerMovement");
static_assert(sizeof(AirlockVendelboSCT_C_EnablePlayerMovement) == 0x000088, "Wrong size on AirlockVendelboSCT_C_EnablePlayerMovement");
static_assert(offsetof(AirlockVendelboSCT_C_EnablePlayerMovement, Temp_int_Array_Index_Variable) == 0x000000, "Member 'AirlockVendelboSCT_C_EnablePlayerMovement::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_EnablePlayerMovement, CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers) == 0x000008, "Member 'AirlockVendelboSCT_C_EnablePlayerMovement::CallFunc_GetAlivePlayersExcludingDoomed_AlivePlayers' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_EnablePlayerMovement, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'AirlockVendelboSCT_C_EnablePlayerMovement::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_EnablePlayerMovement, CallFunc_Array_Get_Item) == 0x000020, "Member 'AirlockVendelboSCT_C_EnablePlayerMovement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_EnablePlayerMovement, K2Node_DynamicCast_AsIAnim_Bp) == 0x000028, "Member 'AirlockVendelboSCT_C_EnablePlayerMovement::K2Node_DynamicCast_AsIAnim_Bp' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_EnablePlayerMovement, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'AirlockVendelboSCT_C_EnablePlayerMovement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_EnablePlayerMovement, K2Node_DynamicCast_AsICharacter_SCT) == 0x000040, "Member 'AirlockVendelboSCT_C_EnablePlayerMovement::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_EnablePlayerMovement, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'AirlockVendelboSCT_C_EnablePlayerMovement::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_EnablePlayerMovement, CallFunc_GetAbilitySystemComponentBPI_ReturnValue) == 0x000058, "Member 'AirlockVendelboSCT_C_EnablePlayerMovement::CallFunc_GetAbilitySystemComponentBPI_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_EnablePlayerMovement, K2Node_DynamicCast_AsICharacter_SCT_1) == 0x000060, "Member 'AirlockVendelboSCT_C_EnablePlayerMovement::K2Node_DynamicCast_AsICharacter_SCT_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_EnablePlayerMovement, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'AirlockVendelboSCT_C_EnablePlayerMovement::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_EnablePlayerMovement, CallFunc_IsAliveBPI_Alive) == 0x000071, "Member 'AirlockVendelboSCT_C_EnablePlayerMovement::CallFunc_IsAliveBPI_Alive' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_EnablePlayerMovement, CallFunc_IsValid_ReturnValue) == 0x000072, "Member 'AirlockVendelboSCT_C_EnablePlayerMovement::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_EnablePlayerMovement, CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue) == 0x000074, "Member 'AirlockVendelboSCT_C_EnablePlayerMovement::CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_EnablePlayerMovement, CallFunc_IsValid_ReturnValue_1) == 0x000078, "Member 'AirlockVendelboSCT_C_EnablePlayerMovement::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_EnablePlayerMovement, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'AirlockVendelboSCT_C_EnablePlayerMovement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_EnablePlayerMovement, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'AirlockVendelboSCT_C_EnablePlayerMovement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_EnablePlayerMovement, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'AirlockVendelboSCT_C_EnablePlayerMovement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.PrintStringDebug
// 0x0010 (0x0010 - 0x0000)
struct AirlockVendelboSCT_C_PrintStringDebug final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_PrintStringDebug) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_PrintStringDebug");
static_assert(sizeof(AirlockVendelboSCT_C_PrintStringDebug) == 0x000010, "Wrong size on AirlockVendelboSCT_C_PrintStringDebug");
static_assert(offsetof(AirlockVendelboSCT_C_PrintStringDebug, InString) == 0x000000, "Member 'AirlockVendelboSCT_C_PrintStringDebug::InString' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.GetInfoText
// 0x01A0 (0x01A0 - 0x0000)
struct AirlockVendelboSCT_C_GetInfoText final
{
public:
	uint8                                         StatementType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     Characters;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   ReturnValue;                                       // 0x0018(0x0018)(Parm, OutParm, ReturnParm)
	uint8                                         Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0038(0x0018)()
	class FText                                   CallFunc_GetRandomText_ReturnValue;                // 0x0050(0x0018)()
	class FText                                   CallFunc_GetRandomText_ReturnValue_1;              // 0x0068(0x0018)()
	class FText                                   CallFunc_GetRandomText_ReturnValue_2;              // 0x0080(0x0018)()
	class FText                                   CallFunc_GetRandomPlayersText_ReturnValue;         // 0x0098(0x0018)()
	class FText                                   CallFunc_GetRandomText_ReturnValue_3;              // 0x00B0(0x0018)()
	class FText                                   CallFunc_GetRandomPlayersText_ReturnValue_1;       // 0x00C8(0x0018)()
	class FText                                   CallFunc_GetRandomPlayersText_ReturnValue_2;       // 0x00E0(0x0018)()
	class FText                                   CallFunc_GetRandomPlayersText_ReturnValue_3;       // 0x00F8(0x0018)()
	class FText                                   CallFunc_GetRandomText_ReturnValue_4;              // 0x0110(0x0018)()
	class FText                                   CallFunc_GetRandomText_ReturnValue_5;              // 0x0128(0x0018)()
	class FText                                   CallFunc_GetRandomPlayersText_ReturnValue_4;       // 0x0140(0x0018)()
	class FText                                   CallFunc_GetRandomText_ReturnValue_6;              // 0x0158(0x0018)()
	class FText                                   CallFunc_GetRandomText_ReturnValue_7;              // 0x0170(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0188(0x0018)()
};
static_assert(alignof(AirlockVendelboSCT_C_GetInfoText) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_GetInfoText");
static_assert(sizeof(AirlockVendelboSCT_C_GetInfoText) == 0x0001A0, "Wrong size on AirlockVendelboSCT_C_GetInfoText");
static_assert(offsetof(AirlockVendelboSCT_C_GetInfoText, StatementType) == 0x000000, "Member 'AirlockVendelboSCT_C_GetInfoText::StatementType' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetInfoText, Characters) == 0x000008, "Member 'AirlockVendelboSCT_C_GetInfoText::Characters' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetInfoText, ReturnValue) == 0x000018, "Member 'AirlockVendelboSCT_C_GetInfoText::ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetInfoText, Temp_byte_Variable) == 0x000030, "Member 'AirlockVendelboSCT_C_GetInfoText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetInfoText, Temp_text_Variable) == 0x000038, "Member 'AirlockVendelboSCT_C_GetInfoText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetInfoText, CallFunc_GetRandomText_ReturnValue) == 0x000050, "Member 'AirlockVendelboSCT_C_GetInfoText::CallFunc_GetRandomText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetInfoText, CallFunc_GetRandomText_ReturnValue_1) == 0x000068, "Member 'AirlockVendelboSCT_C_GetInfoText::CallFunc_GetRandomText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetInfoText, CallFunc_GetRandomText_ReturnValue_2) == 0x000080, "Member 'AirlockVendelboSCT_C_GetInfoText::CallFunc_GetRandomText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetInfoText, CallFunc_GetRandomPlayersText_ReturnValue) == 0x000098, "Member 'AirlockVendelboSCT_C_GetInfoText::CallFunc_GetRandomPlayersText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetInfoText, CallFunc_GetRandomText_ReturnValue_3) == 0x0000B0, "Member 'AirlockVendelboSCT_C_GetInfoText::CallFunc_GetRandomText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetInfoText, CallFunc_GetRandomPlayersText_ReturnValue_1) == 0x0000C8, "Member 'AirlockVendelboSCT_C_GetInfoText::CallFunc_GetRandomPlayersText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetInfoText, CallFunc_GetRandomPlayersText_ReturnValue_2) == 0x0000E0, "Member 'AirlockVendelboSCT_C_GetInfoText::CallFunc_GetRandomPlayersText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetInfoText, CallFunc_GetRandomPlayersText_ReturnValue_3) == 0x0000F8, "Member 'AirlockVendelboSCT_C_GetInfoText::CallFunc_GetRandomPlayersText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetInfoText, CallFunc_GetRandomText_ReturnValue_4) == 0x000110, "Member 'AirlockVendelboSCT_C_GetInfoText::CallFunc_GetRandomText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetInfoText, CallFunc_GetRandomText_ReturnValue_5) == 0x000128, "Member 'AirlockVendelboSCT_C_GetInfoText::CallFunc_GetRandomText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetInfoText, CallFunc_GetRandomPlayersText_ReturnValue_4) == 0x000140, "Member 'AirlockVendelboSCT_C_GetInfoText::CallFunc_GetRandomPlayersText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetInfoText, CallFunc_GetRandomText_ReturnValue_6) == 0x000158, "Member 'AirlockVendelboSCT_C_GetInfoText::CallFunc_GetRandomText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetInfoText, CallFunc_GetRandomText_ReturnValue_7) == 0x000170, "Member 'AirlockVendelboSCT_C_GetInfoText::CallFunc_GetRandomText_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetInfoText, K2Node_Select_Default) == 0x000188, "Member 'AirlockVendelboSCT_C_GetInfoText::K2Node_Select_Default' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.NamesToString
// 0x00B0 (0x00B0 - 0x0000)
struct AirlockVendelboSCT_C_NamesToString final
{
public:
	TArray<class ACharacter*>                     Characters;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm)
	TArray<class FString>                         Names;                                             // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerNameBPI_Name;                    // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0098(0x0018)()
};
static_assert(alignof(AirlockVendelboSCT_C_NamesToString) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_NamesToString");
static_assert(sizeof(AirlockVendelboSCT_C_NamesToString) == 0x0000B0, "Wrong size on AirlockVendelboSCT_C_NamesToString");
static_assert(offsetof(AirlockVendelboSCT_C_NamesToString, Characters) == 0x000000, "Member 'AirlockVendelboSCT_C_NamesToString::Characters' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_NamesToString, ReturnValue) == 0x000010, "Member 'AirlockVendelboSCT_C_NamesToString::ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_NamesToString, Names) == 0x000028, "Member 'AirlockVendelboSCT_C_NamesToString::Names' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_NamesToString, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'AirlockVendelboSCT_C_NamesToString::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_NamesToString, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'AirlockVendelboSCT_C_NamesToString::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_NamesToString, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'AirlockVendelboSCT_C_NamesToString::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_NamesToString, CallFunc_Array_Get_Item) == 0x000048, "Member 'AirlockVendelboSCT_C_NamesToString::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_NamesToString, K2Node_DynamicCast_AsICharacter_SCT) == 0x000050, "Member 'AirlockVendelboSCT_C_NamesToString::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_NamesToString, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'AirlockVendelboSCT_C_NamesToString::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_NamesToString, CallFunc_Less_IntInt_ReturnValue) == 0x000061, "Member 'AirlockVendelboSCT_C_NamesToString::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_NamesToString, CallFunc_GetPlayerNameBPI_Name) == 0x000068, "Member 'AirlockVendelboSCT_C_NamesToString::CallFunc_GetPlayerNameBPI_Name' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_NamesToString, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'AirlockVendelboSCT_C_NamesToString::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_NamesToString, CallFunc_JoinStringArray_ReturnValue) == 0x000080, "Member 'AirlockVendelboSCT_C_NamesToString::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_NamesToString, CallFunc_Array_Add_ReturnValue) == 0x000090, "Member 'AirlockVendelboSCT_C_NamesToString::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_NamesToString, CallFunc_Conv_StringToText_ReturnValue) == 0x000098, "Member 'AirlockVendelboSCT_C_NamesToString::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.GetRandomText
// 0x0038 (0x0038 - 0x0000)
struct AirlockVendelboSCT_C_GetRandomText final
{
public:
	TArray<class FText>                           TextArray;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_GetRandomText) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_GetRandomText");
static_assert(sizeof(AirlockVendelboSCT_C_GetRandomText) == 0x000038, "Wrong size on AirlockVendelboSCT_C_GetRandomText");
static_assert(offsetof(AirlockVendelboSCT_C_GetRandomText, TextArray) == 0x000000, "Member 'AirlockVendelboSCT_C_GetRandomText::TextArray' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetRandomText, ReturnValue) == 0x000010, "Member 'AirlockVendelboSCT_C_GetRandomText::ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetRandomText, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'AirlockVendelboSCT_C_GetRandomText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetRandomText, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'AirlockVendelboSCT_C_GetRandomText::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetRandomText, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000030, "Member 'AirlockVendelboSCT_C_GetRandomText::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.GetRandomPlayersText
// 0x00D0 (0x00D0 - 0x0000)
struct AirlockVendelboSCT_C_GetRandomPlayersText final
{
public:
	TArray<class FText>                           TextArray;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class ACharacter*>                     Characters;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   ReturnValue;                                       // 0x0020(0x0018)(Parm, OutParm, ReturnParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_NamesToString_ReturnValue;                // 0x0040(0x0018)()
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0018)()
};
static_assert(alignof(AirlockVendelboSCT_C_GetRandomPlayersText) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_GetRandomPlayersText");
static_assert(sizeof(AirlockVendelboSCT_C_GetRandomPlayersText) == 0x0000D0, "Wrong size on AirlockVendelboSCT_C_GetRandomPlayersText");
static_assert(offsetof(AirlockVendelboSCT_C_GetRandomPlayersText, TextArray) == 0x000000, "Member 'AirlockVendelboSCT_C_GetRandomPlayersText::TextArray' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetRandomPlayersText, Characters) == 0x000010, "Member 'AirlockVendelboSCT_C_GetRandomPlayersText::Characters' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetRandomPlayersText, ReturnValue) == 0x000020, "Member 'AirlockVendelboSCT_C_GetRandomPlayersText::ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetRandomPlayersText, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'AirlockVendelboSCT_C_GetRandomPlayersText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetRandomPlayersText, CallFunc_NamesToString_ReturnValue) == 0x000040, "Member 'AirlockVendelboSCT_C_GetRandomPlayersText::CallFunc_NamesToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetRandomPlayersText, CallFunc_Subtract_IntInt_ReturnValue) == 0x000058, "Member 'AirlockVendelboSCT_C_GetRandomPlayersText::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetRandomPlayersText, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'AirlockVendelboSCT_C_GetRandomPlayersText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetRandomPlayersText, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0000A0, "Member 'AirlockVendelboSCT_C_GetRandomPlayersText::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetRandomPlayersText, K2Node_MakeArray_Array) == 0x0000A8, "Member 'AirlockVendelboSCT_C_GetRandomPlayersText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetRandomPlayersText, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'AirlockVendelboSCT_C_GetRandomPlayersText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.SimulateDisconnect
// 0x0060 (0x0060 - 0x0000)
struct AirlockVendelboSCT_C_SimulateDisconnect final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDestiny                               K2Node_MakeStruct_Destiny;                         // 0x0010(0x0010)(NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AHumanoidCharacter*>             CallFunc_GetAllActorsOfClass_OutActors;            // 0x0028(0x0010)(ReferenceParm)
	class AHumanoidCharacter*                     CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAliveBPI_Alive;                         // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_SimulateDisconnect) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_SimulateDisconnect");
static_assert(sizeof(AirlockVendelboSCT_C_SimulateDisconnect) == 0x000060, "Wrong size on AirlockVendelboSCT_C_SimulateDisconnect");
static_assert(offsetof(AirlockVendelboSCT_C_SimulateDisconnect, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'AirlockVendelboSCT_C_SimulateDisconnect::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SimulateDisconnect, Temp_int_Array_Index_Variable) == 0x000004, "Member 'AirlockVendelboSCT_C_SimulateDisconnect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SimulateDisconnect, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'AirlockVendelboSCT_C_SimulateDisconnect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SimulateDisconnect, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'AirlockVendelboSCT_C_SimulateDisconnect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SimulateDisconnect, K2Node_MakeStruct_Destiny) == 0x000010, "Member 'AirlockVendelboSCT_C_SimulateDisconnect::K2Node_MakeStruct_Destiny' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SimulateDisconnect, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'AirlockVendelboSCT_C_SimulateDisconnect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SimulateDisconnect, CallFunc_GetAllActorsOfClass_OutActors) == 0x000028, "Member 'AirlockVendelboSCT_C_SimulateDisconnect::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SimulateDisconnect, CallFunc_Array_Get_Item) == 0x000038, "Member 'AirlockVendelboSCT_C_SimulateDisconnect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SimulateDisconnect, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'AirlockVendelboSCT_C_SimulateDisconnect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SimulateDisconnect, K2Node_DynamicCast_AsICharacter_SCT) == 0x000048, "Member 'AirlockVendelboSCT_C_SimulateDisconnect::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SimulateDisconnect, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'AirlockVendelboSCT_C_SimulateDisconnect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SimulateDisconnect, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'AirlockVendelboSCT_C_SimulateDisconnect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SimulateDisconnect, CallFunc_IsAliveBPI_Alive) == 0x00005A, "Member 'AirlockVendelboSCT_C_SimulateDisconnect::CallFunc_IsAliveBPI_Alive' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_SimulateDisconnect, CallFunc_BooleanAND_ReturnValue) == 0x00005B, "Member 'AirlockVendelboSCT_C_SimulateDisconnect::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.IsAliveBPI
// 0x0001 (0x0001 - 0x0000)
struct AirlockVendelboSCT_C_IsAliveBPI final
{
public:
	bool                                          Alive;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_IsAliveBPI) == 0x000001, "Wrong alignment on AirlockVendelboSCT_C_IsAliveBPI");
static_assert(sizeof(AirlockVendelboSCT_C_IsAliveBPI) == 0x000001, "Wrong size on AirlockVendelboSCT_C_IsAliveBPI");
static_assert(offsetof(AirlockVendelboSCT_C_IsAliveBPI, Alive) == 0x000000, "Member 'AirlockVendelboSCT_C_IsAliveBPI::Alive' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.GetHeldLogInfoBPI
// 0x0020 (0x0020 - 0x0000)
struct AirlockVendelboSCT_C_GetHeldLogInfoBPI final
{
public:
	EPassengerLogFactType                         FactType;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPlayerData>                    Players;                                           // 0x0008(0x0010)(Parm, OutParm)
	bool                                          HasLog;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_GetHeldLogInfoBPI) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_GetHeldLogInfoBPI");
static_assert(sizeof(AirlockVendelboSCT_C_GetHeldLogInfoBPI) == 0x000020, "Wrong size on AirlockVendelboSCT_C_GetHeldLogInfoBPI");
static_assert(offsetof(AirlockVendelboSCT_C_GetHeldLogInfoBPI, FactType) == 0x000000, "Member 'AirlockVendelboSCT_C_GetHeldLogInfoBPI::FactType' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetHeldLogInfoBPI, Players) == 0x000008, "Member 'AirlockVendelboSCT_C_GetHeldLogInfoBPI::Players' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetHeldLogInfoBPI, HasLog) == 0x000018, "Member 'AirlockVendelboSCT_C_GetHeldLogInfoBPI::HasLog' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.IsPersonoidBPI
// 0x0001 (0x0001 - 0x0000)
struct AirlockVendelboSCT_C_IsPersonoidBPI final
{
public:
	bool                                          IsPersonoid;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_IsPersonoidBPI) == 0x000001, "Wrong alignment on AirlockVendelboSCT_C_IsPersonoidBPI");
static_assert(sizeof(AirlockVendelboSCT_C_IsPersonoidBPI) == 0x000001, "Wrong size on AirlockVendelboSCT_C_IsPersonoidBPI");
static_assert(offsetof(AirlockVendelboSCT_C_IsPersonoidBPI, IsPersonoid) == 0x000000, "Member 'AirlockVendelboSCT_C_IsPersonoidBPI::IsPersonoid' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.GetPlayerNameBPI
// 0x0010 (0x0010 - 0x0000)
struct AirlockVendelboSCT_C_GetPlayerNameBPI final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_GetPlayerNameBPI) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_GetPlayerNameBPI");
static_assert(sizeof(AirlockVendelboSCT_C_GetPlayerNameBPI) == 0x000010, "Wrong size on AirlockVendelboSCT_C_GetPlayerNameBPI");
static_assert(offsetof(AirlockVendelboSCT_C_GetPlayerNameBPI, Name_0) == 0x000000, "Member 'AirlockVendelboSCT_C_GetPlayerNameBPI::Name_0' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.IsFemaleBPI
// 0x0001 (0x0001 - 0x0000)
struct AirlockVendelboSCT_C_IsFemaleBPI final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_IsFemaleBPI) == 0x000001, "Wrong alignment on AirlockVendelboSCT_C_IsFemaleBPI");
static_assert(sizeof(AirlockVendelboSCT_C_IsFemaleBPI) == 0x000001, "Wrong size on AirlockVendelboSCT_C_IsFemaleBPI");
static_assert(offsetof(AirlockVendelboSCT_C_IsFemaleBPI, ReturnValue) == 0x000000, "Member 'AirlockVendelboSCT_C_IsFemaleBPI::ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.GetAbilitySystemComponentBPI
// 0x0008 (0x0008 - 0x0000)
struct AirlockVendelboSCT_C_GetAbilitySystemComponentBPI final
{
public:
	class UAbilitySystemComponent*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_GetAbilitySystemComponentBPI) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_GetAbilitySystemComponentBPI");
static_assert(sizeof(AirlockVendelboSCT_C_GetAbilitySystemComponentBPI) == 0x000008, "Wrong size on AirlockVendelboSCT_C_GetAbilitySystemComponentBPI");
static_assert(offsetof(AirlockVendelboSCT_C_GetAbilitySystemComponentBPI, ReturnValue) == 0x000000, "Member 'AirlockVendelboSCT_C_GetAbilitySystemComponentBPI::ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.GetPortrait
// 0x0008 (0x0008 - 0x0000)
struct AirlockVendelboSCT_C_GetPortrait final
{
public:
	class UTexture2D*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_GetPortrait) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_GetPortrait");
static_assert(sizeof(AirlockVendelboSCT_C_GetPortrait) == 0x000008, "Wrong size on AirlockVendelboSCT_C_GetPortrait");
static_assert(offsetof(AirlockVendelboSCT_C_GetPortrait, ReturnValue) == 0x000000, "Member 'AirlockVendelboSCT_C_GetPortrait::ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.GetHomingTargetBPI
// 0x0008 (0x0008 - 0x0000)
struct AirlockVendelboSCT_C_GetHomingTargetBPI final
{
public:
	class USceneComponent*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockVendelboSCT_C_GetHomingTargetBPI) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_GetHomingTargetBPI");
static_assert(sizeof(AirlockVendelboSCT_C_GetHomingTargetBPI) == 0x000008, "Wrong size on AirlockVendelboSCT_C_GetHomingTargetBPI");
static_assert(offsetof(AirlockVendelboSCT_C_GetHomingTargetBPI, ReturnValue) == 0x000000, "Member 'AirlockVendelboSCT_C_GetHomingTargetBPI::ReturnValue' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.IsPlayerBlocked
// 0x0010 (0x0010 - 0x0000)
struct AirlockVendelboSCT_C_IsPlayerBlocked final
{
public:
	class APlayerState*                           Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLocked;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_IsPlayerBlocked) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_IsPlayerBlocked");
static_assert(sizeof(AirlockVendelboSCT_C_IsPlayerBlocked) == 0x000010, "Wrong size on AirlockVendelboSCT_C_IsPlayerBlocked");
static_assert(offsetof(AirlockVendelboSCT_C_IsPlayerBlocked, Player) == 0x000000, "Member 'AirlockVendelboSCT_C_IsPlayerBlocked::Player' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_IsPlayerBlocked, bLocked) == 0x000008, "Member 'AirlockVendelboSCT_C_IsPlayerBlocked::bLocked' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.IsPlayerConsoleCommunicationBlocked
// 0x0010 (0x0010 - 0x0000)
struct AirlockVendelboSCT_C_IsPlayerConsoleCommunicationBlocked final
{
public:
	class APlayerState*                           Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLocked;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_IsPlayerConsoleCommunicationBlocked) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_IsPlayerConsoleCommunicationBlocked");
static_assert(sizeof(AirlockVendelboSCT_C_IsPlayerConsoleCommunicationBlocked) == 0x000010, "Wrong size on AirlockVendelboSCT_C_IsPlayerConsoleCommunicationBlocked");
static_assert(offsetof(AirlockVendelboSCT_C_IsPlayerConsoleCommunicationBlocked, Player) == 0x000000, "Member 'AirlockVendelboSCT_C_IsPlayerConsoleCommunicationBlocked::Player' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_IsPlayerConsoleCommunicationBlocked, bLocked) == 0x000008, "Member 'AirlockVendelboSCT_C_IsPlayerConsoleCommunicationBlocked::bLocked' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.Server_LatentInteractionSuccess
// 0x0020 (0x0020 - 0x0000)
struct AirlockVendelboSCT_C_Server_LatentInteractionSuccess final
{
public:
	bool                                          InteractingActorIsCharacter;                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 InteractingInstigator;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InteractionFacilitator;                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Void;                                              // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_Server_LatentInteractionSuccess) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_Server_LatentInteractionSuccess");
static_assert(sizeof(AirlockVendelboSCT_C_Server_LatentInteractionSuccess) == 0x000020, "Wrong size on AirlockVendelboSCT_C_Server_LatentInteractionSuccess");
static_assert(offsetof(AirlockVendelboSCT_C_Server_LatentInteractionSuccess, InteractingActorIsCharacter) == 0x000000, "Member 'AirlockVendelboSCT_C_Server_LatentInteractionSuccess::InteractingActorIsCharacter' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_Server_LatentInteractionSuccess, InteractingInstigator) == 0x000008, "Member 'AirlockVendelboSCT_C_Server_LatentInteractionSuccess::InteractingInstigator' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_Server_LatentInteractionSuccess, InteractionFacilitator) == 0x000010, "Member 'AirlockVendelboSCT_C_Server_LatentInteractionSuccess::InteractionFacilitator' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_Server_LatentInteractionSuccess, Void) == 0x000018, "Member 'AirlockVendelboSCT_C_Server_LatentInteractionSuccess::Void' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.InteractReleased
// 0x0018 (0x0018 - 0x0000)
struct AirlockVendelboSCT_C_InteractReleased final
{
public:
	bool                                          InteractingActorIsCharacter;                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 InteractingActor;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Void;                                              // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_InteractReleased) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_InteractReleased");
static_assert(sizeof(AirlockVendelboSCT_C_InteractReleased) == 0x000018, "Wrong size on AirlockVendelboSCT_C_InteractReleased");
static_assert(offsetof(AirlockVendelboSCT_C_InteractReleased, InteractingActorIsCharacter) == 0x000000, "Member 'AirlockVendelboSCT_C_InteractReleased::InteractingActorIsCharacter' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_InteractReleased, InteractingActor) == 0x000008, "Member 'AirlockVendelboSCT_C_InteractReleased::InteractingActor' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_InteractReleased, Void) == 0x000010, "Member 'AirlockVendelboSCT_C_InteractReleased::Void' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.GetCanInteract
// 0x0018 (0x0018 - 0x0000)
struct AirlockVendelboSCT_C_GetCanInteract final
{
public:
	bool                                          IsSimulated;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InteractingActorIsCharacter;                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 InteractingActor;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanInteract;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_GetCanInteract) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_GetCanInteract");
static_assert(sizeof(AirlockVendelboSCT_C_GetCanInteract) == 0x000018, "Wrong size on AirlockVendelboSCT_C_GetCanInteract");
static_assert(offsetof(AirlockVendelboSCT_C_GetCanInteract, IsSimulated) == 0x000000, "Member 'AirlockVendelboSCT_C_GetCanInteract::IsSimulated' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetCanInteract, InteractingActorIsCharacter) == 0x000001, "Member 'AirlockVendelboSCT_C_GetCanInteract::InteractingActorIsCharacter' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetCanInteract, InteractingActor) == 0x000008, "Member 'AirlockVendelboSCT_C_GetCanInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_GetCanInteract, CanInteract) == 0x000010, "Member 'AirlockVendelboSCT_C_GetCanInteract::CanInteract' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.InteractPressed
// 0x00A0 (0x00A0 - 0x0000)
struct AirlockVendelboSCT_C_InteractPressed final
{
public:
	bool                                          InteractingActorIsCharacter;                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 InteractingActor;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             InteractedHitResult;                               // 0x0010(0x008C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Success;                                           // 0x009C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_InteractPressed) == 0x000008, "Wrong alignment on AirlockVendelboSCT_C_InteractPressed");
static_assert(sizeof(AirlockVendelboSCT_C_InteractPressed) == 0x0000A0, "Wrong size on AirlockVendelboSCT_C_InteractPressed");
static_assert(offsetof(AirlockVendelboSCT_C_InteractPressed, InteractingActorIsCharacter) == 0x000000, "Member 'AirlockVendelboSCT_C_InteractPressed::InteractingActorIsCharacter' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_InteractPressed, InteractingActor) == 0x000008, "Member 'AirlockVendelboSCT_C_InteractPressed::InteractingActor' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_InteractPressed, InteractedHitResult) == 0x000010, "Member 'AirlockVendelboSCT_C_InteractPressed::InteractedHitResult' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_InteractPressed, Success) == 0x00009C, "Member 'AirlockVendelboSCT_C_InteractPressed::Success' has a wrong offset!");

// Function AirlockVendelboSCT.AirlockVendelboSCT_C.ShouldDisableAirlock
// 0x0003 (0x0003 - 0x0000)
struct AirlockVendelboSCT_C_ShouldDisableAirlock final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldDisableAirlockInEditor_ReturnValue; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockVendelboSCT_C_ShouldDisableAirlock) == 0x000001, "Wrong alignment on AirlockVendelboSCT_C_ShouldDisableAirlock");
static_assert(sizeof(AirlockVendelboSCT_C_ShouldDisableAirlock) == 0x000003, "Wrong size on AirlockVendelboSCT_C_ShouldDisableAirlock");
static_assert(offsetof(AirlockVendelboSCT_C_ShouldDisableAirlock, ReturnValue) == 0x000000, "Member 'AirlockVendelboSCT_C_ShouldDisableAirlock::ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ShouldDisableAirlock, CallFunc_ShouldDisableAirlockInEditor_ReturnValue) == 0x000001, "Member 'AirlockVendelboSCT_C_ShouldDisableAirlock::CallFunc_ShouldDisableAirlockInEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockVendelboSCT_C_ShouldDisableAirlock, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'AirlockVendelboSCT_C_ShouldDisableAirlock::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

