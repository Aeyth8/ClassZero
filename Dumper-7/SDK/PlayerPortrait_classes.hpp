#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerPortrait

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PlayerPortrait.PlayerPortrait_C
// 0x0040 (0x02A0 - 0x0260)
class UPlayerPortrait_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UImage*                                 Avatar;                                            // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_Portrait;                                   // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         TargetId;                                          // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SteamID;                                           // 0x0280(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 AccelByteId;                                       // 0x0290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_PlayerPortrait(int32 EntryPoint);
	void OnUpdateAvatarAsync(const class FString& AccelByteId_0);
	void OnRetrieved_2CFA8F5F48B364BE270840A2EFA76E67(const class FString& AccelByteId_0, class UTexture2DDynamic* AvatarTexture);
	void SetPortraitAvatar(class UTexture2D* Portrait);
	void InitWithRawData(int32 PlayerId, const class FString& SteamID_0);
	void SetupEventBindings();
	void Set_Avatar_from_Steam_ID(const class FString& ID);
	void OnSteamIDChanged(const class FString& SteamID_0, int32 PlayerId);
	void Set_Avatar_From_PlayerID(int32 PlayerId);
	void SetBorderColorFromPlayerID();
	void OnIdentificationColorChanged(class APlayerState* PlayerState, const struct FLinearColor& Value);
	void UpdateAppearance();
	void InitWithEndData(const struct FPlayerEndData& PlayerEndData);
	void InitWithPlayerState(class ASCTPlayerState* PlayerState);
	void CheckPlayerID();
	void CheckSteamID();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerPortrait_C">();
	}
	static class UPlayerPortrait_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerPortrait_C>();
	}
};
static_assert(alignof(UPlayerPortrait_C) == 0x000008, "Wrong alignment on UPlayerPortrait_C");
static_assert(sizeof(UPlayerPortrait_C) == 0x0002A0, "Wrong size on UPlayerPortrait_C");
static_assert(offsetof(UPlayerPortrait_C, UberGraphFrame) == 0x000260, "Member 'UPlayerPortrait_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPlayerPortrait_C, Avatar) == 0x000268, "Member 'UPlayerPortrait_C::Avatar' has a wrong offset!");
static_assert(offsetof(UPlayerPortrait_C, Border_Portrait) == 0x000270, "Member 'UPlayerPortrait_C::Border_Portrait' has a wrong offset!");
static_assert(offsetof(UPlayerPortrait_C, TargetId) == 0x000278, "Member 'UPlayerPortrait_C::TargetId' has a wrong offset!");
static_assert(offsetof(UPlayerPortrait_C, SteamID) == 0x000280, "Member 'UPlayerPortrait_C::SteamID' has a wrong offset!");
static_assert(offsetof(UPlayerPortrait_C, AccelByteId) == 0x000290, "Member 'UPlayerPortrait_C::AccelByteId' has a wrong offset!");

}

