#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CarryCorpseGA

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function CarryCorpseGA.CarryCorpseGA_C.On_ReleaseCorpse__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct CarryCorpseGA_C_On_ReleaseCorpse__DelegateSignature final
{
public:
	class ACharacterSCTBP_C*                      CarriedCorpse_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CarryCorpseGA_C_On_ReleaseCorpse__DelegateSignature) == 0x000008, "Wrong alignment on CarryCorpseGA_C_On_ReleaseCorpse__DelegateSignature");
static_assert(sizeof(CarryCorpseGA_C_On_ReleaseCorpse__DelegateSignature) == 0x000008, "Wrong size on CarryCorpseGA_C_On_ReleaseCorpse__DelegateSignature");
static_assert(offsetof(CarryCorpseGA_C_On_ReleaseCorpse__DelegateSignature, CarriedCorpse_0) == 0x000000, "Member 'CarryCorpseGA_C_On_ReleaseCorpse__DelegateSignature::CarriedCorpse_0' has a wrong offset!");

// Function CarryCorpseGA.CarryCorpseGA_C.ExecuteUbergraph_CarryCorpseGA
// 0x0148 (0x0148 - 0x0000)
struct CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      K2Node_CustomEvent_CarriedCorpse;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_CustomEvent_ReleaseLocation;                // 0x0010(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_CustomEvent_ReleaseRotation;                // 0x001C(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_CustomEvent_ReleaseVelocity;                // 0x0028(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue;   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    CallFunc_NetQuantizeVector_QuantizedVector;        // 0x0058(0x000C)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_MakeStruct_Vector_NetQuantize;              // 0x009C(0x000C)(NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    CallFunc_NetQuantizeVector_QuantizedVector_1;      // 0x00B4(0x000C)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      K2Node_CustomEvent_CarriedCorpse_1;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      K2Node_CustomEvent_OwningCharacter;                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP_1;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           CallFunc_MakeEffectContext_ReturnValue;            // 0x00F8(0x0018)()
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_2;  // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0118(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0128(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA) == 0x000008, "Wrong alignment on CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA");
static_assert(sizeof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA) == 0x000148, "Wrong size on CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, EntryPoint) == 0x000000, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::EntryPoint' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, K2Node_CustomEvent_CarriedCorpse) == 0x000008, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::K2Node_CustomEvent_CarriedCorpse' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, K2Node_CustomEvent_ReleaseLocation) == 0x000010, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::K2Node_CustomEvent_ReleaseLocation' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, K2Node_CustomEvent_ReleaseRotation) == 0x00001C, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::K2Node_CustomEvent_ReleaseRotation' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, K2Node_CustomEvent_ReleaseVelocity) == 0x000028, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::K2Node_CustomEvent_ReleaseVelocity' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000034, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000040, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, CallFunc_RemoveActiveGameplayEffect_ReturnValue) == 0x000049, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::CallFunc_RemoveActiveGameplayEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, CallFunc_GetVelocity_ReturnValue) == 0x00004C, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, CallFunc_NetQuantizeVector_QuantizedVector) == 0x000058, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::CallFunc_NetQuantizeVector_QuantizedVector' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000064, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, CallFunc_IsServer_ReturnValue) == 0x000065, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, CallFunc_GetOwner_ReturnValue) == 0x000068, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, K2Node_DynamicCast_AsCharacter_SCTBP) == 0x000078, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::K2Node_DynamicCast_AsCharacter_SCTBP' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000084, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, CallFunc_BreakRotator_Roll) == 0x000090, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, CallFunc_BreakRotator_Pitch) == 0x000094, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, CallFunc_BreakRotator_Yaw) == 0x000098, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, K2Node_MakeStruct_Vector_NetQuantize) == 0x00009C, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::K2Node_MakeStruct_Vector_NetQuantize' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000A8, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, CallFunc_NetQuantizeVector_QuantizedVector_1) == 0x0000B4, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::CallFunc_NetQuantizeVector_QuantizedVector_1' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, CallFunc_IsServer_ReturnValue_1) == 0x0000C0, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, K2Node_Event_bWasCancelled) == 0x0000C1, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, K2Node_CustomEvent_CarriedCorpse_1) == 0x0000C8, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::K2Node_CustomEvent_CarriedCorpse_1' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, K2Node_CustomEvent_OwningCharacter) == 0x0000D0, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::K2Node_CustomEvent_OwningCharacter' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0000D8, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x0000E0, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, K2Node_DynamicCast_AsCharacter_SCTBP_1) == 0x0000E8, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::K2Node_DynamicCast_AsCharacter_SCTBP_1' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, K2Node_DynamicCast_bSuccess_1) == 0x0000F0, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, CallFunc_MakeEffectContext_ReturnValue) == 0x0000F8, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::CallFunc_MakeEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, CallFunc_GetAbilitySystemComponent_ReturnValue_2) == 0x000110, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::CallFunc_GetAbilitySystemComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000118, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, K2Node_CustomEvent_DestroyedActor) == 0x000120, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, K2Node_CreateDelegate_OutputDelegate) == 0x000128, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, CallFunc_MakeLiteralName_ReturnValue) == 0x000138, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA, CallFunc_IsValid_ReturnValue_2) == 0x000140, "Member 'CarryCorpseGA_C_ExecuteUbergraph_CarryCorpseGA::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function CarryCorpseGA.CarryCorpseGA_C.OnDestroyed_Carried
// 0x0008 (0x0008 - 0x0000)
struct CarryCorpseGA_C_OnDestroyed_Carried final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CarryCorpseGA_C_OnDestroyed_Carried) == 0x000008, "Wrong alignment on CarryCorpseGA_C_OnDestroyed_Carried");
static_assert(sizeof(CarryCorpseGA_C_OnDestroyed_Carried) == 0x000008, "Wrong size on CarryCorpseGA_C_OnDestroyed_Carried");
static_assert(offsetof(CarryCorpseGA_C_OnDestroyed_Carried, DestroyedActor) == 0x000000, "Member 'CarryCorpseGA_C_OnDestroyed_Carried::DestroyedActor' has a wrong offset!");

// Function CarryCorpseGA.CarryCorpseGA_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct CarryCorpseGA_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarryCorpseGA_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on CarryCorpseGA_C_K2_OnEndAbility");
static_assert(sizeof(CarryCorpseGA_C_K2_OnEndAbility) == 0x000001, "Wrong size on CarryCorpseGA_C_K2_OnEndAbility");
static_assert(offsetof(CarryCorpseGA_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'CarryCorpseGA_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function CarryCorpseGA.CarryCorpseGA_C.ReleaseCorpse
// 0x0030 (0x0030 - 0x0000)
struct CarryCorpseGA_C_ReleaseCorpse final
{
public:
	class ACharacterSCTBP_C*                      CarriedCorpse_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    ReleaseLocation;                                   // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    ReleaseRotation;                                   // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    ReleaseVelocity;                                   // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CarryCorpseGA_C_ReleaseCorpse) == 0x000008, "Wrong alignment on CarryCorpseGA_C_ReleaseCorpse");
static_assert(sizeof(CarryCorpseGA_C_ReleaseCorpse) == 0x000030, "Wrong size on CarryCorpseGA_C_ReleaseCorpse");
static_assert(offsetof(CarryCorpseGA_C_ReleaseCorpse, CarriedCorpse_0) == 0x000000, "Member 'CarryCorpseGA_C_ReleaseCorpse::CarriedCorpse_0' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ReleaseCorpse, ReleaseLocation) == 0x000008, "Member 'CarryCorpseGA_C_ReleaseCorpse::ReleaseLocation' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ReleaseCorpse, ReleaseRotation) == 0x000014, "Member 'CarryCorpseGA_C_ReleaseCorpse::ReleaseRotation' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_ReleaseCorpse, ReleaseVelocity) == 0x000020, "Member 'CarryCorpseGA_C_ReleaseCorpse::ReleaseVelocity' has a wrong offset!");

// Function CarryCorpseGA.CarryCorpseGA_C.CarryAll
// 0x0010 (0x0010 - 0x0000)
struct CarryCorpseGA_C_CarryAll final
{
public:
	class ACharacterSCTBP_C*                      CarriedCorpse_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      OwningCharacter_0;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CarryCorpseGA_C_CarryAll) == 0x000008, "Wrong alignment on CarryCorpseGA_C_CarryAll");
static_assert(sizeof(CarryCorpseGA_C_CarryAll) == 0x000010, "Wrong size on CarryCorpseGA_C_CarryAll");
static_assert(offsetof(CarryCorpseGA_C_CarryAll, CarriedCorpse_0) == 0x000000, "Member 'CarryCorpseGA_C_CarryAll::CarriedCorpse_0' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_CarryAll, OwningCharacter_0) == 0x000008, "Member 'CarryCorpseGA_C_CarryAll::OwningCharacter_0' has a wrong offset!");

// Function CarryCorpseGA.CarryCorpseGA_C.NetQuantizeVector
// 0x0030 (0x0030 - 0x0000)
struct CarryCorpseGA_C_NetQuantizeVector final
{
public:
	struct FVector                                Vector;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    QuantizedVector;                                   // 0x000C(0x000C)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_MakeStruct_Vector_NetQuantize;              // 0x0024(0x000C)(NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(CarryCorpseGA_C_NetQuantizeVector) == 0x000004, "Wrong alignment on CarryCorpseGA_C_NetQuantizeVector");
static_assert(sizeof(CarryCorpseGA_C_NetQuantizeVector) == 0x000030, "Wrong size on CarryCorpseGA_C_NetQuantizeVector");
static_assert(offsetof(CarryCorpseGA_C_NetQuantizeVector, Vector) == 0x000000, "Member 'CarryCorpseGA_C_NetQuantizeVector::Vector' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_NetQuantizeVector, QuantizedVector) == 0x00000C, "Member 'CarryCorpseGA_C_NetQuantizeVector::QuantizedVector' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_NetQuantizeVector, CallFunc_BreakVector_X) == 0x000018, "Member 'CarryCorpseGA_C_NetQuantizeVector::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_NetQuantizeVector, CallFunc_BreakVector_Y) == 0x00001C, "Member 'CarryCorpseGA_C_NetQuantizeVector::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_NetQuantizeVector, CallFunc_BreakVector_Z) == 0x000020, "Member 'CarryCorpseGA_C_NetQuantizeVector::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(CarryCorpseGA_C_NetQuantizeVector, K2Node_MakeStruct_Vector_NetQuantize) == 0x000024, "Member 'CarryCorpseGA_C_NetQuantizeVector::K2Node_MakeStruct_Vector_NetQuantize' has a wrong offset!");

// Function CarryCorpseGA.CarryCorpseGA_C.RagdollWhenNot
// 0x0001 (0x0001 - 0x0000)
struct CarryCorpseGA_C_RagdollWhenNot final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarryCorpseGA_C_RagdollWhenNot) == 0x000001, "Wrong alignment on CarryCorpseGA_C_RagdollWhenNot");
static_assert(sizeof(CarryCorpseGA_C_RagdollWhenNot) == 0x000001, "Wrong size on CarryCorpseGA_C_RagdollWhenNot");
static_assert(offsetof(CarryCorpseGA_C_RagdollWhenNot, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'CarryCorpseGA_C_RagdollWhenNot::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function CarryCorpseGA.CarryCorpseGA_C.GetInactiveContextDescription
// 0x0018 (0x0018 - 0x0000)
struct CarryCorpseGA_C_GetInactiveContextDescription final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(CarryCorpseGA_C_GetInactiveContextDescription) == 0x000008, "Wrong alignment on CarryCorpseGA_C_GetInactiveContextDescription");
static_assert(sizeof(CarryCorpseGA_C_GetInactiveContextDescription) == 0x000018, "Wrong size on CarryCorpseGA_C_GetInactiveContextDescription");
static_assert(offsetof(CarryCorpseGA_C_GetInactiveContextDescription, ReturnValue) == 0x000000, "Member 'CarryCorpseGA_C_GetInactiveContextDescription::ReturnValue' has a wrong offset!");

// Function CarryCorpseGA.CarryCorpseGA_C.ReattachBodyToCapsule
// 0x0001 (0x0001 - 0x0000)
struct CarryCorpseGA_C_ReattachBodyToCapsule final
{
public:
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarryCorpseGA_C_ReattachBodyToCapsule) == 0x000001, "Wrong alignment on CarryCorpseGA_C_ReattachBodyToCapsule");
static_assert(sizeof(CarryCorpseGA_C_ReattachBodyToCapsule) == 0x000001, "Wrong size on CarryCorpseGA_C_ReattachBodyToCapsule");
static_assert(offsetof(CarryCorpseGA_C_ReattachBodyToCapsule, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000000, "Member 'CarryCorpseGA_C_ReattachBodyToCapsule::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

}

