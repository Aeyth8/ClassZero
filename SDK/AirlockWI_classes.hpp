#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AirlockWI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "SCT_classes.hpp"
#include "AkAudio_structs.hpp"
#include "PassengerLogFactType_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AirlockWI.AirlockWI_C
// 0x0138 (0x03B8 - 0x0280)
class UAirlockWI_C final : public UWidgetSCT
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UWidgetAnimation*                       FadeMiddle;                                        // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CrossFade;                                         // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeEntireWidget;                                  // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BackgroundMid;                                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               CountdownBox;                                      // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CountdownText;                                     // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             InfoText;                                          // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             InterviewName;                                     // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LoadingImage;                                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           LoadingScreen;                                     // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPassengerLogDisplayWI_C*               PassengerLogDisplayWI;                             // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         PassengerLogEntriesBox;                            // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PassengerLogOwner;                                 // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        StageSwitcher;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              TrustVoteNo;                                       // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              TrustVoteYes;                                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         VoteEntries;                                       // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         VotesGiven;                                        // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VotesGivenContainer;                               // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcherAirlock;                             // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class ACharacter*>                     Characters;                                        // 0x0328(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class UAirlockVoteEntryWI_C*>          VoteEntriesArray;                                  // 0x0338(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         Countdown;                                         // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 AirlockActor;                                      // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          InfoTextPlayingForward;                            // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     TempCharacters;                                    // 0x0360(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         CountdownForVote;                                  // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempWidgetIndex;                                   // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UVoteGivenWI_C*>                 VoteGivenArray;                                    // 0x0378(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         VotesEntered;                                      // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TempInfoText;                                      // 0x0390(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         TempVotesExpected;                                 // 0x03A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InitialCountdownMax;                               // 0x03AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           AKWidget;                                          // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AirlockWI(int32 EntryPoint);
	void Construct();
	void Audio_Vote_Button();
	void Audio_Vote_Stage();
	void FadeInterviewInfo(float Duration, class UObject* Character);
	void EndCountdownEvent();
	void SetupCountdownEvent();
	void BndEvt__TrustVoteNo_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__TrustVoteYes_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void FadeDisplay(bool In);
	void PreConstruct(bool IsDesignTime);
	void Type_Text_Announcement(const class FText& Text);
	void AddDeathVoteEntry(class ACharacter* PlayerMonitored);
	void LockAllVoteEntries();
	void CountdownUpdate();
	void SetupDeathVote(class AAirlockVendelboSCT_C* AirlockActor_0, TArray<class ACharacter*>& Characters_0, int32 Countdown_0, int32 ExpectedVotes);
	void AddPassengerLogEntry(class ACharacter* Character);
	void SetupPassengerLogVote(class AActor* AirlockActor_0, TArray<class ACharacter*>& Characters_0, int32 Countdown_0, int32 ExpectedVotes);
	void DisableAllOtherPassengerLogEntries();
	void SetupPassengerLogDisplay(const EPassengerLogFactType FactType, const TArray<struct FPlayerData>& Characters_0, float OptionalDuration, class ACharacter* CharacterWithLog);
	void SetupInterviewUI(class ACharacter* Character, float Duration);
	void SetupDoomedScreen();
	void GetTimeTillFade(const class UWidgetAnimation* InAnimation, float* Output_Get);
	void CreateCountdown(int32 Countdown_0, class UObject* Player);
	void StopCountdown();
	void SetupTrustVote(class AActor* AirlockActor_0, int32 Countdown_0, int32 ExpectedVotes);
	void AddVoteGivenEntry();
	void CreateVoteTracker(int32 VotesExpected);
	void UpdateVoteTracker();
	void SetupInfoUI(const class FText& InText);
	void ChangeWidgetSwitcher(int32 Index_0);
	void UpdateDisplay();
	void RestoreNonInterview();
	void ResetTrustVote();
	void SequenceEvent__ENTRYPOINTAirlockWI_0();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AirlockWI_C">();
	}
	static class UAirlockWI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAirlockWI_C>();
	}
};
static_assert(alignof(UAirlockWI_C) == 0x000008, "Wrong alignment on UAirlockWI_C");
static_assert(sizeof(UAirlockWI_C) == 0x0003B8, "Wrong size on UAirlockWI_C");
static_assert(offsetof(UAirlockWI_C, UberGraphFrame) == 0x000280, "Member 'UAirlockWI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, FadeMiddle) == 0x000288, "Member 'UAirlockWI_C::FadeMiddle' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, CrossFade) == 0x000290, "Member 'UAirlockWI_C::CrossFade' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, FadeEntireWidget) == 0x000298, "Member 'UAirlockWI_C::FadeEntireWidget' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, BackgroundMid) == 0x0002A0, "Member 'UAirlockWI_C::BackgroundMid' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, CountdownBox) == 0x0002A8, "Member 'UAirlockWI_C::CountdownBox' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, CountdownText) == 0x0002B0, "Member 'UAirlockWI_C::CountdownText' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, InfoText) == 0x0002B8, "Member 'UAirlockWI_C::InfoText' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, InterviewName) == 0x0002C0, "Member 'UAirlockWI_C::InterviewName' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, LoadingImage) == 0x0002C8, "Member 'UAirlockWI_C::LoadingImage' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, LoadingScreen) == 0x0002D0, "Member 'UAirlockWI_C::LoadingScreen' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, PassengerLogDisplayWI) == 0x0002D8, "Member 'UAirlockWI_C::PassengerLogDisplayWI' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, PassengerLogEntriesBox) == 0x0002E0, "Member 'UAirlockWI_C::PassengerLogEntriesBox' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, PassengerLogOwner) == 0x0002E8, "Member 'UAirlockWI_C::PassengerLogOwner' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, StageSwitcher) == 0x0002F0, "Member 'UAirlockWI_C::StageSwitcher' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, TrustVoteNo) == 0x0002F8, "Member 'UAirlockWI_C::TrustVoteNo' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, TrustVoteYes) == 0x000300, "Member 'UAirlockWI_C::TrustVoteYes' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, VoteEntries) == 0x000308, "Member 'UAirlockWI_C::VoteEntries' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, VotesGiven) == 0x000310, "Member 'UAirlockWI_C::VotesGiven' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, VotesGivenContainer) == 0x000318, "Member 'UAirlockWI_C::VotesGivenContainer' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, WidgetSwitcherAirlock) == 0x000320, "Member 'UAirlockWI_C::WidgetSwitcherAirlock' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, Characters) == 0x000328, "Member 'UAirlockWI_C::Characters' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, VoteEntriesArray) == 0x000338, "Member 'UAirlockWI_C::VoteEntriesArray' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, Countdown) == 0x000348, "Member 'UAirlockWI_C::Countdown' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, AirlockActor) == 0x000350, "Member 'UAirlockWI_C::AirlockActor' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, InfoTextPlayingForward) == 0x000358, "Member 'UAirlockWI_C::InfoTextPlayingForward' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, TempCharacters) == 0x000360, "Member 'UAirlockWI_C::TempCharacters' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, CountdownForVote) == 0x000370, "Member 'UAirlockWI_C::CountdownForVote' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, TempWidgetIndex) == 0x000374, "Member 'UAirlockWI_C::TempWidgetIndex' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, VoteGivenArray) == 0x000378, "Member 'UAirlockWI_C::VoteGivenArray' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, VotesEntered) == 0x000388, "Member 'UAirlockWI_C::VotesEntered' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, TempInfoText) == 0x000390, "Member 'UAirlockWI_C::TempInfoText' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, TempVotesExpected) == 0x0003A8, "Member 'UAirlockWI_C::TempVotesExpected' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, InitialCountdownMax) == 0x0003AC, "Member 'UAirlockWI_C::InitialCountdownMax' has a wrong offset!");
static_assert(offsetof(UAirlockWI_C, AKWidget) == 0x0003B0, "Member 'UAirlockWI_C::AKWidget' has a wrong offset!");

}

