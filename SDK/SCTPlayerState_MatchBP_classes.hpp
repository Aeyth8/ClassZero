#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SCTPlayerState_MatchBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_KeyCardColors_structs.hpp"
#include "SCT_structs.hpp"
#include "SCT_classes.hpp"
#include "E_ScoreCategories_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C
// 0x00A8 (0x0598 - 0x04F0)
class ASCTPlayerState_MatchBP_C final : public ASCTPlayerState_Match
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UThreatLevel_C*                         ThreatLevel;                                       // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         EndScenario;                                       // 0x0508(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Progression;                                       // 0x050C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Deception;                                         // 0x0510(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Sabotage;                                          // 0x0514(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Deduction;                                         // 0x0518(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Collaboration;                                     // 0x051C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScoreTotalPersonoid;                               // 0x0520(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScoreTotalResident;                                // 0x0524(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasBeenWelcomed;                                   // 0x0528(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_529[0x3];                                      // 0x0529(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PersonoidScoreOptions;                             // 0x052C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ResidentScoreOptions;                              // 0x0530(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534[0x4];                                      // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnAgendaDescriptionChanged;                        // 0x0538(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnAgendaProgressionChanged;                        // 0x0548(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnAgendaStateChanged;                              // 0x0558(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UTexture2D*                             Avatar;                                            // 0x0568(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PickedUpAnItem;                                    // 0x0570(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          RedCardHandedIn;                                   // 0x0571(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          BlueCardHandedIn;                                  // 0x0572(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          GreenCardHandedIn;                                 // 0x0573(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	int32                                         PlayersKilledWithSyringe;                          // 0x0574(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	int32                                         GeneratorsSabotaged;                               // 0x0578(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         PersonoidScanTimestamp;                            // 0x057C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         GotScannedTimestamp;                               // 0x0580(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfResidentsInGame;                           // 0x0584(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	class ASCTPlayerState_MatchBP_C*              Last_scanned_player;                               // 0x0588(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          Has_Oxygen_Flasks;                                 // 0x0590(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_591[0x3];                                      // 0x0591(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LevelVote;                                         // 0x0594(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnAgendaDescriptionChanged__DelegateSignature(const class FString& Value);
	void OnAgendaProgressionChanged__DelegateSignature(const class FString& Value);
	void OnAgendaStateChanged__DelegateSignature(EAgendaObjectState State);
	void ExecuteUbergraph_SCTPlayerState_MatchBP(int32 EntryPoint);
	void UpdateStatisticOnClient(const class FString& StatCode, float IncementBy);
	void Add_Level_Vote(int32 Vote);
	void Add_Karma_Poins_Player_State(class FName Data_Table_Row_Name);
	void ReceiveCopyProperties(class APlayerState* NewPlayerState);
	void ReceiveBeginPlay();
	void OnRep_HiddenAgendaState();
	void OnRep_HiddenAgendaDescription();
	void OnRep_HiddenAgendaProgression();
	void Add_Player_State_Score(bool IsEndScenario__IgnoreDataTable_, int32 EndScenarioScore, class FName DataTableRowName);
	void HandleThrownBottlesStatisticPlayerState();
	void HandleITSpecialistAchievementPlayerState();
	void HandleCainIsNot1337Achievement();
	void StartItsAMachineTimer();
	void HandleWelcomeToTheJungleAchievement();
	void OnSuccess_1A41FACC4EF6474DC435089BAD77C3F1(class UFCTAchievement* AchievementInfo, const class FString& Message);
	void OnError_1A41FACC4EF6474DC435089BAD77C3F1(const class FString& Message);
	void OnSuccess_D0B3EE42445B7DFE55751E9F764B1589(int32 CurrentKarma, int32 Code, const class FString& Message);
	void OnError_D0B3EE42445B7DFE55751E9F764B1589(int32 CurrentKarma, int32 Code, const class FString& Message);
	void OnSuccess_1FFFECDE4BB286E7ECD546922419798C(int32 CurrentKarma, int32 Code, const class FString& Message);
	void OnError_1FFFECDE4BB286E7ECD546922419798C(int32 CurrentKarma, int32 Code, const class FString& Message);
	void OnSuccess_89AEAF3B41C45DB713DF14A7E97AFE5C(int32 Code, const class FString& Message);
	void OnError_89AEAF3B41C45DB713DF14A7E97AFE5C(int32 Code, const class FString& Message);
	void OnSuccess_CAC6C5D34CAC2485BB1C4AA3FAABA12B(class UFCTAchievement* AchievementInfo, const class FString& Message);
	void OnError_CAC6C5D34CAC2485BB1C4AA3FAABA12B(const class FString& Message);
	void OnSuccess_34D7F9694DE009FD0F4DA5ABEB750375(class UFCTAchievement* AchievementInfo, const class FString& Message);
	void OnError_34D7F9694DE009FD0F4DA5ABEB750375(const class FString& Message);
	void OnSuccess_1811381D4135F05FFB2E638E3E09B928(class UFCTAchievement* AchievementInfo, const class FString& Message);
	void OnError_1811381D4135F05FFB2E638E3E09B928(const class FString& Message);
	void UserConstructionScript();
	void AddPlayerScore(const struct FS_Score& Score_0, class FName Row_Name);
	void AddPlayerInfoCategoryScore(int32 Score_0, E_ScoreCategories Category);
	void PrintDebugString(const struct FS_Score& Score_0, class FName Row_Name);
	void Query_Valid_Category(const struct FS_Score& Score_0, bool* Is_Valid, E_ScoreCategories* Category);
	void AddProgressionScore(int32 Score_Amount);
	void AddDeceptionScore(int32 Score_Value);
	void AddEndScenarioScore(int32 Amount);
	void AddSabotageScore(int32 Score_Amount);
	void AddDeductionScore(int32 ScoreAmount);
	void AddTotalPersonoidScore(int32 Score_Amount);
	void AddTotalResidentScore(int32 Score_Amount);
	void AddCollaborationScore(int32 ScoreAmount);
	void AddTotalPoints(int32 Score_0);
	bool IsPersonoid_NonConst();
	void KeycardHandin(E_KeyCardColors Keycard_Color);
	void OnRep_RedCardHandedIn();
	void OnRep_BlueCardHandedIn();
	void OnRep_GreenCardHandedIn();
	void HandleImDoingMyPartAchievement();
	void AddPlayerKilledWithSyringe();
	void OnRep_PlayersKilledWithSyringe();
	void Handle_Its_Time_for_Your_Medicine_Achievement();
	void HandleChangingTheAirFilterAchievement();
	void AddGeneratorSabotaged();
	void AddPersonoidScanTimestamp();
	void HandleWellAtLeastITriedAchievement(EFate Fate_0);
	void OnRep_PersonoidScanTimestamp();
	void OnRep_GeneratorsSabotaged();
	void AddGotScannedTimestamp();
	void OnRep_GotScannedTimestamp();
	void Handle_Its_A_Machine_Achievement(class ASCTPlayerState_MatchBP_C* Last_scanned_player_0);
	void OnRep_NumberOfResidentsInGame();
	void OnRep_Last_Scanned_Player();
	void Print_KarmaPointsSuccessMessage(int32 Points);
	void Print_KarmaPointsErrorMessage(const class FString& Message);
	void UpdateKarmaText();

	void GetDebugStringColor(struct FLinearColor* Color) const;
	void GetCategory(const struct FS_Score& Data, E_ScoreCategories* NewParam) const;
	void GetScorePoints(const struct FS_Score& Score_0, int32* Score_Points) const;
	void GetBitMask(int32* Category_Bitmask) const;
	bool IsPersonoid() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SCTPlayerState_MatchBP_C">();
	}
	static class ASCTPlayerState_MatchBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCTPlayerState_MatchBP_C>();
	}
};
static_assert(alignof(ASCTPlayerState_MatchBP_C) == 0x000008, "Wrong alignment on ASCTPlayerState_MatchBP_C");
static_assert(sizeof(ASCTPlayerState_MatchBP_C) == 0x000598, "Wrong size on ASCTPlayerState_MatchBP_C");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, UberGraphFrame) == 0x0004F0, "Member 'ASCTPlayerState_MatchBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, ThreatLevel) == 0x0004F8, "Member 'ASCTPlayerState_MatchBP_C::ThreatLevel' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, DefaultSceneRoot) == 0x000500, "Member 'ASCTPlayerState_MatchBP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, EndScenario) == 0x000508, "Member 'ASCTPlayerState_MatchBP_C::EndScenario' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, Progression) == 0x00050C, "Member 'ASCTPlayerState_MatchBP_C::Progression' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, Deception) == 0x000510, "Member 'ASCTPlayerState_MatchBP_C::Deception' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, Sabotage) == 0x000514, "Member 'ASCTPlayerState_MatchBP_C::Sabotage' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, Deduction) == 0x000518, "Member 'ASCTPlayerState_MatchBP_C::Deduction' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, Collaboration) == 0x00051C, "Member 'ASCTPlayerState_MatchBP_C::Collaboration' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, ScoreTotalPersonoid) == 0x000520, "Member 'ASCTPlayerState_MatchBP_C::ScoreTotalPersonoid' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, ScoreTotalResident) == 0x000524, "Member 'ASCTPlayerState_MatchBP_C::ScoreTotalResident' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, HasBeenWelcomed) == 0x000528, "Member 'ASCTPlayerState_MatchBP_C::HasBeenWelcomed' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, PersonoidScoreOptions) == 0x00052C, "Member 'ASCTPlayerState_MatchBP_C::PersonoidScoreOptions' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, ResidentScoreOptions) == 0x000530, "Member 'ASCTPlayerState_MatchBP_C::ResidentScoreOptions' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, OnAgendaDescriptionChanged) == 0x000538, "Member 'ASCTPlayerState_MatchBP_C::OnAgendaDescriptionChanged' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, OnAgendaProgressionChanged) == 0x000548, "Member 'ASCTPlayerState_MatchBP_C::OnAgendaProgressionChanged' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, OnAgendaStateChanged) == 0x000558, "Member 'ASCTPlayerState_MatchBP_C::OnAgendaStateChanged' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, Avatar) == 0x000568, "Member 'ASCTPlayerState_MatchBP_C::Avatar' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, PickedUpAnItem) == 0x000570, "Member 'ASCTPlayerState_MatchBP_C::PickedUpAnItem' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, RedCardHandedIn) == 0x000571, "Member 'ASCTPlayerState_MatchBP_C::RedCardHandedIn' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, BlueCardHandedIn) == 0x000572, "Member 'ASCTPlayerState_MatchBP_C::BlueCardHandedIn' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, GreenCardHandedIn) == 0x000573, "Member 'ASCTPlayerState_MatchBP_C::GreenCardHandedIn' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, PlayersKilledWithSyringe) == 0x000574, "Member 'ASCTPlayerState_MatchBP_C::PlayersKilledWithSyringe' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, GeneratorsSabotaged) == 0x000578, "Member 'ASCTPlayerState_MatchBP_C::GeneratorsSabotaged' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, PersonoidScanTimestamp) == 0x00057C, "Member 'ASCTPlayerState_MatchBP_C::PersonoidScanTimestamp' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, GotScannedTimestamp) == 0x000580, "Member 'ASCTPlayerState_MatchBP_C::GotScannedTimestamp' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, NumberOfResidentsInGame) == 0x000584, "Member 'ASCTPlayerState_MatchBP_C::NumberOfResidentsInGame' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, Last_scanned_player) == 0x000588, "Member 'ASCTPlayerState_MatchBP_C::Last_scanned_player' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, Has_Oxygen_Flasks) == 0x000590, "Member 'ASCTPlayerState_MatchBP_C::Has_Oxygen_Flasks' has a wrong offset!");
static_assert(offsetof(ASCTPlayerState_MatchBP_C, LevelVote) == 0x000594, "Member 'ASCTPlayerState_MatchBP_C::LevelVote' has a wrong offset!");

}

