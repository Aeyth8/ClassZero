#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OptionsCheckboxWI

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function OptionsCheckboxWI.OptionsCheckboxWI_C.OnCheckStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct OptionsCheckboxWI_C_OnCheckStateChanged__DelegateSignature final
{
public:
	bool                                          IsChecked;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OptionsCheckboxWI_C_OnCheckStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on OptionsCheckboxWI_C_OnCheckStateChanged__DelegateSignature");
static_assert(sizeof(OptionsCheckboxWI_C_OnCheckStateChanged__DelegateSignature) == 0x000001, "Wrong size on OptionsCheckboxWI_C_OnCheckStateChanged__DelegateSignature");
static_assert(offsetof(OptionsCheckboxWI_C_OnCheckStateChanged__DelegateSignature, IsChecked) == 0x000000, "Member 'OptionsCheckboxWI_C_OnCheckStateChanged__DelegateSignature::IsChecked' has a wrong offset!");

// Function OptionsCheckboxWI.OptionsCheckboxWI_C.ExecuteUbergraph_OptionsCheckboxWI
// 0x0018 (0x0018 - 0x0000)
struct OptionsCheckboxWI_C_ExecuteUbergraph_OptionsCheckboxWI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_IsChecked;              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OptionsCheckboxWI_C_ExecuteUbergraph_OptionsCheckboxWI) == 0x000004, "Wrong alignment on OptionsCheckboxWI_C_ExecuteUbergraph_OptionsCheckboxWI");
static_assert(sizeof(OptionsCheckboxWI_C_ExecuteUbergraph_OptionsCheckboxWI) == 0x000018, "Wrong size on OptionsCheckboxWI_C_ExecuteUbergraph_OptionsCheckboxWI");
static_assert(offsetof(OptionsCheckboxWI_C_ExecuteUbergraph_OptionsCheckboxWI, EntryPoint) == 0x000000, "Member 'OptionsCheckboxWI_C_ExecuteUbergraph_OptionsCheckboxWI::EntryPoint' has a wrong offset!");
static_assert(offsetof(OptionsCheckboxWI_C_ExecuteUbergraph_OptionsCheckboxWI, K2Node_MakeStruct_Margin) == 0x000004, "Member 'OptionsCheckboxWI_C_ExecuteUbergraph_OptionsCheckboxWI::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(OptionsCheckboxWI_C_ExecuteUbergraph_OptionsCheckboxWI, K2Node_Event_IsDesignTime) == 0x000014, "Member 'OptionsCheckboxWI_C_ExecuteUbergraph_OptionsCheckboxWI::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(OptionsCheckboxWI_C_ExecuteUbergraph_OptionsCheckboxWI, K2Node_ComponentBoundEvent_IsChecked) == 0x000015, "Member 'OptionsCheckboxWI_C_ExecuteUbergraph_OptionsCheckboxWI::K2Node_ComponentBoundEvent_IsChecked' has a wrong offset!");

// Function OptionsCheckboxWI.OptionsCheckboxWI_C.BndEvt__OptionsCheckboxWI_CheckBoxOpt_K2Node_ComponentBoundEvent_1_StateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct OptionsCheckboxWI_C_BndEvt__OptionsCheckboxWI_CheckBoxOpt_K2Node_ComponentBoundEvent_1_StateChanged__DelegateSignature final
{
public:
	bool                                          IsChecked;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OptionsCheckboxWI_C_BndEvt__OptionsCheckboxWI_CheckBoxOpt_K2Node_ComponentBoundEvent_1_StateChanged__DelegateSignature) == 0x000001, "Wrong alignment on OptionsCheckboxWI_C_BndEvt__OptionsCheckboxWI_CheckBoxOpt_K2Node_ComponentBoundEvent_1_StateChanged__DelegateSignature");
static_assert(sizeof(OptionsCheckboxWI_C_BndEvt__OptionsCheckboxWI_CheckBoxOpt_K2Node_ComponentBoundEvent_1_StateChanged__DelegateSignature) == 0x000001, "Wrong size on OptionsCheckboxWI_C_BndEvt__OptionsCheckboxWI_CheckBoxOpt_K2Node_ComponentBoundEvent_1_StateChanged__DelegateSignature");
static_assert(offsetof(OptionsCheckboxWI_C_BndEvt__OptionsCheckboxWI_CheckBoxOpt_K2Node_ComponentBoundEvent_1_StateChanged__DelegateSignature, IsChecked) == 0x000000, "Member 'OptionsCheckboxWI_C_BndEvt__OptionsCheckboxWI_CheckBoxOpt_K2Node_ComponentBoundEvent_1_StateChanged__DelegateSignature::IsChecked' has a wrong offset!");

// Function OptionsCheckboxWI.OptionsCheckboxWI_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct OptionsCheckboxWI_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OptionsCheckboxWI_C_PreConstruct) == 0x000001, "Wrong alignment on OptionsCheckboxWI_C_PreConstruct");
static_assert(sizeof(OptionsCheckboxWI_C_PreConstruct) == 0x000001, "Wrong size on OptionsCheckboxWI_C_PreConstruct");
static_assert(offsetof(OptionsCheckboxWI_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'OptionsCheckboxWI_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function OptionsCheckboxWI.OptionsCheckboxWI_C.SetCheckedState
// 0x0001 (0x0001 - 0x0000)
struct OptionsCheckboxWI_C_SetCheckedState final
{
public:
	bool                                          InIsChecked;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OptionsCheckboxWI_C_SetCheckedState) == 0x000001, "Wrong alignment on OptionsCheckboxWI_C_SetCheckedState");
static_assert(sizeof(OptionsCheckboxWI_C_SetCheckedState) == 0x000001, "Wrong size on OptionsCheckboxWI_C_SetCheckedState");
static_assert(offsetof(OptionsCheckboxWI_C_SetCheckedState, InIsChecked) == 0x000000, "Member 'OptionsCheckboxWI_C_SetCheckedState::InIsChecked' has a wrong offset!");

}

