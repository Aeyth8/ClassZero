#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OxygenGeneratorBP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "SCT_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.ExecuteUbergraph_OxygenGeneratorBP
// 0x02D8 (0x02D8 - 0x0000)
struct OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0018(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0028(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0038(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_2;                            // 0x0048(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x0058(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            Temp_byte_Variable;                                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3;                          // 0x0070(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_3;                            // 0x0088(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_4;                          // 0x0098(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AB[0x5];                                       // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_4;                            // 0x00B0(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_HasAuthority_ReturnValue_5;               // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x00E8(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCapsuleComponent*                      K2Node_DynamicCast_AsCapsule_Collision;            // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCapsuleComponent*                      K2Node_DynamicCast_AsCapsule_Collision_1;          // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter_1;                  // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_IsOpening;              // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsNoOneInside_NoOneInside;             // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D3[0x1];                                      // 0x01D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_5;                          // 0x01D4(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_5;                            // 0x01E8(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      CallFunc_GetSCT_Player_Character_AsCharacter_SCT;  // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventory*                             CallFunc_GetSCT_Player_Character_CharacterInventory; // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_2;                // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_3;                // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_4;          // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21D[0x3];                                      // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_6;                          // 0x0220(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_5;          // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_6;                            // 0x0238(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_PostAkEvent_ReturnValue_4;                // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_6;          // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue_5;                // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_6;                // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInteractionPayload                    K2Node_ComponentBoundEvent_payload_1;              // 0x0258(0x0030)(ConstParm, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_ComponentBoundEvent_wasCancelled;           // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInteractionPayload                    K2Node_ComponentBoundEvent_payload;                // 0x0290(0x0030)(ConstParm, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_7;          // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP;              // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP) == 0x000008, "Wrong alignment on OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP");
static_assert(sizeof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP) == 0x0002D8, "Wrong size on OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, EntryPoint) == 0x000000, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, Temp_bool_Variable) == 0x000004, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, Temp_struct_Variable) == 0x000008, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, Temp_delegate_Variable) == 0x000018, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, Temp_struct_Variable_1) == 0x000028, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, Temp_delegate_Variable_1) == 0x000038, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, Temp_struct_Variable_2) == 0x000048, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, Temp_delegate_Variable_2) == 0x000058, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, CallFunc_HasAuthority_ReturnValue) == 0x000068, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, Temp_byte_Variable) == 0x000069, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, CallFunc_IsDedicatedServer_ReturnValue) == 0x00006A, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x00006B, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, CallFunc_HasAuthority_ReturnValue_1) == 0x00006C, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, CallFunc_HasAuthority_ReturnValue_2) == 0x00006D, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, Temp_delegate_Variable_3) == 0x000070, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, CallFunc_HasAuthority_ReturnValue_3) == 0x000080, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, Temp_struct_Variable_3) == 0x000088, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, Temp_delegate_Variable_4) == 0x000098, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::Temp_delegate_Variable_4' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x0000A8, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, CallFunc_HasAuthority_ReturnValue_4) == 0x0000A9, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x0000AA, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, Temp_struct_Variable_4) == 0x0000B0, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, CallFunc_HasAuthority_ReturnValue_5) == 0x0000C0, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::CallFunc_HasAuthority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x0000C8, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_ComponentBoundEvent_OtherActor_1) == 0x0000D0, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0000D8, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0000E0, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_ComponentBoundEvent_bFromSweep) == 0x0000E4, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_ComponentBoundEvent_SweepResult) == 0x0000E8, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000178, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_ComponentBoundEvent_OtherActor) == 0x000180, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_ComponentBoundEvent_OtherComp) == 0x000188, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000190, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_DynamicCast_AsCapsule_Collision) == 0x000198, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_DynamicCast_AsCapsule_Collision' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_DynamicCast_bSuccess) == 0x0001A0, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_DynamicCast_AsCapsule_Collision_1) == 0x0001A8, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_DynamicCast_AsCapsule_Collision_1' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_DynamicCast_bSuccess_1) == 0x0001B0, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_DynamicCast_AsCharacter) == 0x0001B8, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_DynamicCast_bSuccess_2) == 0x0001C0, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_DynamicCast_AsCharacter_1) == 0x0001C8, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_DynamicCast_AsCharacter_1' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_DynamicCast_bSuccess_3) == 0x0001D0, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_ComponentBoundEvent_IsOpening) == 0x0001D1, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_ComponentBoundEvent_IsOpening' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, CallFunc_GetIsNoOneInside_NoOneInside) == 0x0001D2, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::CallFunc_GetIsNoOneInside_NoOneInside' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, Temp_delegate_Variable_5) == 0x0001D4, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::Temp_delegate_Variable_5' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, Temp_struct_Variable_5) == 0x0001E8, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, CallFunc_PostAkEvent_ReturnValue) == 0x0001F8, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, CallFunc_GetSCT_Player_Character_AsCharacter_SCT) == 0x000200, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::CallFunc_GetSCT_Player_Character_AsCharacter_SCT' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, CallFunc_GetSCT_Player_Character_CharacterInventory) == 0x000208, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::CallFunc_GetSCT_Player_Character_CharacterInventory' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, CallFunc_PostAkEvent_ReturnValue_1) == 0x000210, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, CallFunc_PostAkEvent_ReturnValue_2) == 0x000214, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::CallFunc_PostAkEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, CallFunc_PostAkEvent_ReturnValue_3) == 0x000218, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::CallFunc_PostAkEvent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, CallFunc_IsDedicatedServer_ReturnValue_4) == 0x00021C, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::CallFunc_IsDedicatedServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, Temp_delegate_Variable_6) == 0x000220, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::Temp_delegate_Variable_6' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, CallFunc_IsDedicatedServer_ReturnValue_5) == 0x000230, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::CallFunc_IsDedicatedServer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, Temp_struct_Variable_6) == 0x000238, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, CallFunc_PostAkEvent_ReturnValue_4) == 0x000248, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::CallFunc_PostAkEvent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, CallFunc_IsDedicatedServer_ReturnValue_6) == 0x00024C, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::CallFunc_IsDedicatedServer_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, CallFunc_PostAkEvent_ReturnValue_5) == 0x000250, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::CallFunc_PostAkEvent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, CallFunc_PostAkEvent_ReturnValue_6) == 0x000254, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::CallFunc_PostAkEvent_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_ComponentBoundEvent_payload_1) == 0x000258, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_ComponentBoundEvent_payload_1' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_ComponentBoundEvent_wasCancelled) == 0x000288, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_ComponentBoundEvent_wasCancelled' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_ComponentBoundEvent_payload) == 0x000290, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_ComponentBoundEvent_payload' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, CallFunc_IsDedicatedServer_ReturnValue_7) == 0x0002C0, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::CallFunc_IsDedicatedServer_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_DynamicCast_AsCharacter_SCTBP) == 0x0002C8, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_DynamicCast_AsCharacter_SCTBP' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_DynamicCast_bSuccess_4) == 0x0002D0, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, Temp_bool_Variable_1) == 0x0002D1, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP, K2Node_Select_Default) == 0x0002D2, "Member 'OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP::K2Node_Select_Default' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct OxygenGeneratorBP_C_BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature final
{
public:
	struct FInteractionPayload                    Payload;                                           // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(OxygenGeneratorBP_C_BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature) == 0x000008, "Wrong alignment on OxygenGeneratorBP_C_BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature");
static_assert(sizeof(OxygenGeneratorBP_C_BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature) == 0x000030, "Wrong size on OxygenGeneratorBP_C_BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature");
static_assert(offsetof(OxygenGeneratorBP_C_BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature, Payload) == 0x000000, "Member 'OxygenGeneratorBP_C_BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature::Payload' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_0_InteractionEndedDelegate__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct OxygenGeneratorBP_C_BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_0_InteractionEndedDelegate__DelegateSignature final
{
public:
	struct FInteractionPayload                    Payload;                                           // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	bool                                          WasCancelled;                                      // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OxygenGeneratorBP_C_BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_0_InteractionEndedDelegate__DelegateSignature) == 0x000008, "Wrong alignment on OxygenGeneratorBP_C_BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_0_InteractionEndedDelegate__DelegateSignature");
static_assert(sizeof(OxygenGeneratorBP_C_BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_0_InteractionEndedDelegate__DelegateSignature) == 0x000038, "Wrong size on OxygenGeneratorBP_C_BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_0_InteractionEndedDelegate__DelegateSignature");
static_assert(offsetof(OxygenGeneratorBP_C_BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_0_InteractionEndedDelegate__DelegateSignature, Payload) == 0x000000, "Member 'OxygenGeneratorBP_C_BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_0_InteractionEndedDelegate__DelegateSignature::Payload' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_0_InteractionEndedDelegate__DelegateSignature, WasCancelled) == 0x000030, "Member 'OxygenGeneratorBP_C_BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_0_InteractionEndedDelegate__DelegateSignature::WasCancelled' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.BndEvt__bpc_ac_Opener_K2Node_ComponentBoundEvent_2_OnOpenStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct OxygenGeneratorBP_C_BndEvt__bpc_ac_Opener_K2Node_ComponentBoundEvent_2_OnOpenStateChanged__DelegateSignature final
{
public:
	bool                                          IsOpening;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OxygenGeneratorBP_C_BndEvt__bpc_ac_Opener_K2Node_ComponentBoundEvent_2_OnOpenStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on OxygenGeneratorBP_C_BndEvt__bpc_ac_Opener_K2Node_ComponentBoundEvent_2_OnOpenStateChanged__DelegateSignature");
static_assert(sizeof(OxygenGeneratorBP_C_BndEvt__bpc_ac_Opener_K2Node_ComponentBoundEvent_2_OnOpenStateChanged__DelegateSignature) == 0x000001, "Wrong size on OxygenGeneratorBP_C_BndEvt__bpc_ac_Opener_K2Node_ComponentBoundEvent_2_OnOpenStateChanged__DelegateSignature");
static_assert(offsetof(OxygenGeneratorBP_C_BndEvt__bpc_ac_Opener_K2Node_ComponentBoundEvent_2_OnOpenStateChanged__DelegateSignature, IsOpening) == 0x000000, "Member 'OxygenGeneratorBP_C_BndEvt__bpc_ac_Opener_K2Node_ComponentBoundEvent_2_OnOpenStateChanged__DelegateSignature::IsOpening' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.BndEvt__Box_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct OxygenGeneratorBP_C_UserConstructionScript final
{
public:
	TScriptInterface<class IInteractionSubComponentInterface> CallFunc_AddSubComponent_component_CastInput;      // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
};
static_assert(alignof(OxygenGeneratorBP_C_UserConstructionScript) == 0x000008, "Wrong alignment on OxygenGeneratorBP_C_UserConstructionScript");
static_assert(sizeof(OxygenGeneratorBP_C_UserConstructionScript) == 0x000010, "Wrong size on OxygenGeneratorBP_C_UserConstructionScript");
static_assert(offsetof(OxygenGeneratorBP_C_UserConstructionScript, CallFunc_AddSubComponent_component_CastInput) == 0x000000, "Member 'OxygenGeneratorBP_C_UserConstructionScript::CallFunc_AddSubComponent_component_CastInput' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.OnRep_bSabotaged
// 0x0001 (0x0001 - 0x0000)
struct OxygenGeneratorBP_C_OnRep_bSabotaged final
{
public:
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OxygenGeneratorBP_C_OnRep_bSabotaged) == 0x000001, "Wrong alignment on OxygenGeneratorBP_C_OnRep_bSabotaged");
static_assert(sizeof(OxygenGeneratorBP_C_OnRep_bSabotaged) == 0x000001, "Wrong size on OxygenGeneratorBP_C_OnRep_bSabotaged");
static_assert(offsetof(OxygenGeneratorBP_C_OnRep_bSabotaged, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000000, "Member 'OxygenGeneratorBP_C_OnRep_bSabotaged::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Set Open
// 0x0001 (0x0001 - 0x0000)
struct OxygenGeneratorBP_C_Set_Open final
{
public:
	bool                                          Open;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OxygenGeneratorBP_C_Set_Open) == 0x000001, "Wrong alignment on OxygenGeneratorBP_C_Set_Open");
static_assert(sizeof(OxygenGeneratorBP_C_Set_Open) == 0x000001, "Wrong size on OxygenGeneratorBP_C_Set_Open");
static_assert(offsetof(OxygenGeneratorBP_C_Set_Open, Open) == 0x000000, "Member 'OxygenGeneratorBP_C_Set_Open::Open' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Event Open Lids
// 0x0001 (0x0001 - 0x0000)
struct OxygenGeneratorBP_C_Event_Open_Lids final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OxygenGeneratorBP_C_Event_Open_Lids) == 0x000001, "Wrong alignment on OxygenGeneratorBP_C_Event_Open_Lids");
static_assert(sizeof(OxygenGeneratorBP_C_Event_Open_Lids) == 0x000001, "Wrong size on OxygenGeneratorBP_C_Event_Open_Lids");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Open_Lids, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'OxygenGeneratorBP_C_Event_Open_Lids::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Event Close Lids
// 0x0001 (0x0001 - 0x0000)
struct OxygenGeneratorBP_C_Event_Close_Lids final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OxygenGeneratorBP_C_Event_Close_Lids) == 0x000001, "Wrong alignment on OxygenGeneratorBP_C_Event_Close_Lids");
static_assert(sizeof(OxygenGeneratorBP_C_Event_Close_Lids) == 0x000001, "Wrong size on OxygenGeneratorBP_C_Event_Close_Lids");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Close_Lids, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'OxygenGeneratorBP_C_Event_Close_Lids::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.MoveLids
// 0x00A0 (0x00A0 - 0x0000)
struct OxygenGeneratorBP_C_MoveLids final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0014(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(OxygenGeneratorBP_C_MoveLids) == 0x000004, "Wrong alignment on OxygenGeneratorBP_C_MoveLids");
static_assert(sizeof(OxygenGeneratorBP_C_MoveLids) == 0x0000A0, "Wrong size on OxygenGeneratorBP_C_MoveLids");
static_assert(offsetof(OxygenGeneratorBP_C_MoveLids, Alpha) == 0x000000, "Member 'OxygenGeneratorBP_C_MoveLids::Alpha' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_MoveLids, CallFunc_Lerp_ReturnValue) == 0x000004, "Member 'OxygenGeneratorBP_C_MoveLids::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_MoveLids, CallFunc_MakeVector_ReturnValue) == 0x000008, "Member 'OxygenGeneratorBP_C_MoveLids::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_MoveLids, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000014, "Member 'OxygenGeneratorBP_C_MoveLids::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Event Sabotaged
// 0x0050 (0x0050 - 0x0000)
struct OxygenGeneratorBP_C_Event_Sabotaged final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomGameSettingsGIS*                 CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetOxygenGeneratorSabotageMultiplier_ReturnValue; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0020(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OxygenGeneratorBP_C_Event_Sabotaged) == 0x000008, "Wrong alignment on OxygenGeneratorBP_C_Event_Sabotaged");
static_assert(sizeof(OxygenGeneratorBP_C_Event_Sabotaged) == 0x000050, "Wrong size on OxygenGeneratorBP_C_Event_Sabotaged");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Sabotaged, Temp_int_Array_Index_Variable) == 0x000000, "Member 'OxygenGeneratorBP_C_Event_Sabotaged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Sabotaged, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'OxygenGeneratorBP_C_Event_Sabotaged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Sabotaged, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'OxygenGeneratorBP_C_Event_Sabotaged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Sabotaged, CallFunc_HasAuthority_ReturnValue) == 0x00000C, "Member 'OxygenGeneratorBP_C_Event_Sabotaged::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Sabotaged, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000010, "Member 'OxygenGeneratorBP_C_Event_Sabotaged::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Sabotaged, CallFunc_GetOxygenGeneratorSabotageMultiplier_ReturnValue) == 0x000018, "Member 'OxygenGeneratorBP_C_Event_Sabotaged::CallFunc_GetOxygenGeneratorSabotageMultiplier_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Sabotaged, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'OxygenGeneratorBP_C_Event_Sabotaged::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Sabotaged, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000020, "Member 'OxygenGeneratorBP_C_Event_Sabotaged::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Sabotaged, CallFunc_Array_Get_Item) == 0x000030, "Member 'OxygenGeneratorBP_C_Event_Sabotaged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Sabotaged, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'OxygenGeneratorBP_C_Event_Sabotaged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Sabotaged, K2Node_DynamicCast_AsCharacter_SCTBP) == 0x000040, "Member 'OxygenGeneratorBP_C_Event_Sabotaged::K2Node_DynamicCast_AsCharacter_SCTBP' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Sabotaged, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'OxygenGeneratorBP_C_Event_Sabotaged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Sabotaged, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'OxygenGeneratorBP_C_Event_Sabotaged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Event Repaired
// 0x0038 (0x0038 - 0x0000)
struct OxygenGeneratorBP_C_Event_Repaired final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomGameSettingsGIS*                 CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetOxygenGeneratorRepairMultiplier_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OxygenGeneratorBP_C_Event_Repaired) == 0x000008, "Wrong alignment on OxygenGeneratorBP_C_Event_Repaired");
static_assert(sizeof(OxygenGeneratorBP_C_Event_Repaired) == 0x000038, "Wrong size on OxygenGeneratorBP_C_Event_Repaired");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Repaired, Temp_int_Array_Index_Variable) == 0x000000, "Member 'OxygenGeneratorBP_C_Event_Repaired::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Repaired, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'OxygenGeneratorBP_C_Event_Repaired::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Repaired, CallFunc_GetOxygenGeneratorRepairMultiplier_ReturnValue) == 0x000010, "Member 'OxygenGeneratorBP_C_Event_Repaired::CallFunc_GetOxygenGeneratorRepairMultiplier_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Repaired, CallFunc_HasAuthority_ReturnValue) == 0x000014, "Member 'OxygenGeneratorBP_C_Event_Repaired::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Repaired, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'OxygenGeneratorBP_C_Event_Repaired::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Repaired, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'OxygenGeneratorBP_C_Event_Repaired::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Repaired, CallFunc_Array_Get_Item) == 0x000020, "Member 'OxygenGeneratorBP_C_Event_Repaired::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Repaired, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'OxygenGeneratorBP_C_Event_Repaired::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Repaired, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'OxygenGeneratorBP_C_Event_Repaired::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Repaired, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000030, "Member 'OxygenGeneratorBP_C_Event_Repaired::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Set Lids
// 0x0010 (0x0010 - 0x0000)
struct OxygenGeneratorBP_C_Set_Lids final
{
public:
	bool                                          Open;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OxygenGeneratorBP_C_Set_Lids) == 0x000004, "Wrong alignment on OxygenGeneratorBP_C_Set_Lids");
static_assert(sizeof(OxygenGeneratorBP_C_Set_Lids) == 0x000010, "Wrong size on OxygenGeneratorBP_C_Set_Lids");
static_assert(offsetof(OxygenGeneratorBP_C_Set_Lids, Open) == 0x000000, "Member 'OxygenGeneratorBP_C_Set_Lids::Open' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Set_Lids, Temp_bool_Variable) == 0x000001, "Member 'OxygenGeneratorBP_C_Set_Lids::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Set_Lids, Temp_float_Variable) == 0x000004, "Member 'OxygenGeneratorBP_C_Set_Lids::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Set_Lids, Temp_float_Variable_1) == 0x000008, "Member 'OxygenGeneratorBP_C_Set_Lids::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Set_Lids, K2Node_Select_Default) == 0x00000C, "Member 'OxygenGeneratorBP_C_Set_Lids::K2Node_Select_Default' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Set Repaired StateCosmetic
// 0x0010 (0x0010 - 0x0000)
struct OxygenGeneratorBP_C_Set_Repaired_StateCosmetic final
{
public:
	bool                                          Repaired_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OxygenGeneratorBP_C_Set_Repaired_StateCosmetic) == 0x000008, "Wrong alignment on OxygenGeneratorBP_C_Set_Repaired_StateCosmetic");
static_assert(sizeof(OxygenGeneratorBP_C_Set_Repaired_StateCosmetic) == 0x000010, "Wrong size on OxygenGeneratorBP_C_Set_Repaired_StateCosmetic");
static_assert(offsetof(OxygenGeneratorBP_C_Set_Repaired_StateCosmetic, Repaired_0) == 0x000000, "Member 'OxygenGeneratorBP_C_Set_Repaired_StateCosmetic::Repaired_0' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Set_Repaired_StateCosmetic, CallFunc_HasAuthority_ReturnValue) == 0x000001, "Member 'OxygenGeneratorBP_C_Set_Repaired_StateCosmetic::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Set_Repaired_StateCosmetic, CallFunc_IsDedicatedServer_ReturnValue) == 0x000002, "Member 'OxygenGeneratorBP_C_Set_Repaired_StateCosmetic::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Set_Repaired_StateCosmetic, Temp_bool_Variable) == 0x000003, "Member 'OxygenGeneratorBP_C_Set_Repaired_StateCosmetic::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Set_Repaired_StateCosmetic, K2Node_Select_Default) == 0x000008, "Member 'OxygenGeneratorBP_C_Set_Repaired_StateCosmetic::K2Node_Select_Default' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Set Sabotaged or Failed State Cosmetic
// 0x0010 (0x0010 - 0x0000)
struct OxygenGeneratorBP_C_Set_Sabotaged_or_Failed_State_Cosmetic final
{
public:
	bool                                          Sabotaged_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SabotagedL;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OxygenGeneratorBP_C_Set_Sabotaged_or_Failed_State_Cosmetic) == 0x000008, "Wrong alignment on OxygenGeneratorBP_C_Set_Sabotaged_or_Failed_State_Cosmetic");
static_assert(sizeof(OxygenGeneratorBP_C_Set_Sabotaged_or_Failed_State_Cosmetic) == 0x000010, "Wrong size on OxygenGeneratorBP_C_Set_Sabotaged_or_Failed_State_Cosmetic");
static_assert(offsetof(OxygenGeneratorBP_C_Set_Sabotaged_or_Failed_State_Cosmetic, Sabotaged_0) == 0x000000, "Member 'OxygenGeneratorBP_C_Set_Sabotaged_or_Failed_State_Cosmetic::Sabotaged_0' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Set_Sabotaged_or_Failed_State_Cosmetic, SabotagedL) == 0x000001, "Member 'OxygenGeneratorBP_C_Set_Sabotaged_or_Failed_State_Cosmetic::SabotagedL' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Set_Sabotaged_or_Failed_State_Cosmetic, CallFunc_HasAuthority_ReturnValue) == 0x000002, "Member 'OxygenGeneratorBP_C_Set_Sabotaged_or_Failed_State_Cosmetic::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Set_Sabotaged_or_Failed_State_Cosmetic, Temp_bool_Variable) == 0x000003, "Member 'OxygenGeneratorBP_C_Set_Sabotaged_or_Failed_State_Cosmetic::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Set_Sabotaged_or_Failed_State_Cosmetic, K2Node_Select_Default) == 0x000008, "Member 'OxygenGeneratorBP_C_Set_Sabotaged_or_Failed_State_Cosmetic::K2Node_Select_Default' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.OnRep_bRepaired
// 0x0001 (0x0001 - 0x0000)
struct OxygenGeneratorBP_C_OnRep_bRepaired final
{
public:
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OxygenGeneratorBP_C_OnRep_bRepaired) == 0x000001, "Wrong alignment on OxygenGeneratorBP_C_OnRep_bRepaired");
static_assert(sizeof(OxygenGeneratorBP_C_OnRep_bRepaired) == 0x000001, "Wrong size on OxygenGeneratorBP_C_OnRep_bRepaired");
static_assert(offsetof(OxygenGeneratorBP_C_OnRep_bRepaired, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000000, "Member 'OxygenGeneratorBP_C_OnRep_bRepaired::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Set Timeline Time
// 0x0010 (0x0010 - 0x0000)
struct OxygenGeneratorBP_C_Set_Timeline_Time final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimelineLength_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OxygenGeneratorBP_C_Set_Timeline_Time) == 0x000004, "Wrong alignment on OxygenGeneratorBP_C_Set_Timeline_Time");
static_assert(sizeof(OxygenGeneratorBP_C_Set_Timeline_Time) == 0x000010, "Wrong size on OxygenGeneratorBP_C_Set_Timeline_Time");
static_assert(offsetof(OxygenGeneratorBP_C_Set_Timeline_Time, Temp_bool_Variable) == 0x000000, "Member 'OxygenGeneratorBP_C_Set_Timeline_Time::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Set_Timeline_Time, Temp_float_Variable) == 0x000004, "Member 'OxygenGeneratorBP_C_Set_Timeline_Time::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Set_Timeline_Time, CallFunc_GetTimelineLength_ReturnValue) == 0x000008, "Member 'OxygenGeneratorBP_C_Set_Timeline_Time::CallFunc_GetTimelineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Set_Timeline_Time, K2Node_Select_Default) == 0x00000C, "Member 'OxygenGeneratorBP_C_Set_Timeline_Time::K2Node_Select_Default' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.GetIsNoOneInside
// 0x0070 (0x0070 - 0x0000)
struct OxygenGeneratorBP_C_GetIsNoOneInside final
{
public:
	bool                                          NoOneInside;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_Count;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            CallFunc_GetOverlappingComponents_OutOverlappingComponents; // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OxygenGeneratorBP_C_GetIsNoOneInside) == 0x000008, "Wrong alignment on OxygenGeneratorBP_C_GetIsNoOneInside");
static_assert(sizeof(OxygenGeneratorBP_C_GetIsNoOneInside) == 0x000070, "Wrong size on OxygenGeneratorBP_C_GetIsNoOneInside");
static_assert(offsetof(OxygenGeneratorBP_C_GetIsNoOneInside, NoOneInside) == 0x000000, "Member 'OxygenGeneratorBP_C_GetIsNoOneInside::NoOneInside' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_GetIsNoOneInside, L_Count) == 0x000004, "Member 'OxygenGeneratorBP_C_GetIsNoOneInside::L_Count' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_GetIsNoOneInside, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'OxygenGeneratorBP_C_GetIsNoOneInside::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_GetIsNoOneInside, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'OxygenGeneratorBP_C_GetIsNoOneInside::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_GetIsNoOneInside, Temp_int_Array_Index_Variable) == 0x000010, "Member 'OxygenGeneratorBP_C_GetIsNoOneInside::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_GetIsNoOneInside, Temp_int_Variable) == 0x000014, "Member 'OxygenGeneratorBP_C_GetIsNoOneInside::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_GetIsNoOneInside, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'OxygenGeneratorBP_C_GetIsNoOneInside::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_GetIsNoOneInside, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'OxygenGeneratorBP_C_GetIsNoOneInside::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_GetIsNoOneInside, CallFunc_GetOverlappingComponents_OutOverlappingComponents) == 0x000020, "Member 'OxygenGeneratorBP_C_GetIsNoOneInside::CallFunc_GetOverlappingComponents_OutOverlappingComponents' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_GetIsNoOneInside, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'OxygenGeneratorBP_C_GetIsNoOneInside::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_GetIsNoOneInside, CallFunc_Array_Get_Item) == 0x000038, "Member 'OxygenGeneratorBP_C_GetIsNoOneInside::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_GetIsNoOneInside, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'OxygenGeneratorBP_C_GetIsNoOneInside::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_GetIsNoOneInside, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000048, "Member 'OxygenGeneratorBP_C_GetIsNoOneInside::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_GetIsNoOneInside, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'OxygenGeneratorBP_C_GetIsNoOneInside::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_GetIsNoOneInside, CallFunc_GetOwner_ReturnValue) == 0x000058, "Member 'OxygenGeneratorBP_C_GetIsNoOneInside::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_GetIsNoOneInside, K2Node_DynamicCast_AsCharacter_SCTBP) == 0x000060, "Member 'OxygenGeneratorBP_C_GetIsNoOneInside::K2Node_DynamicCast_AsCharacter_SCTBP' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_GetIsNoOneInside, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'OxygenGeneratorBP_C_GetIsNoOneInside::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.OnRep_bFailed
// 0x0001 (0x0001 - 0x0000)
struct OxygenGeneratorBP_C_OnRep_bFailed final
{
public:
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OxygenGeneratorBP_C_OnRep_bFailed) == 0x000001, "Wrong alignment on OxygenGeneratorBP_C_OnRep_bFailed");
static_assert(sizeof(OxygenGeneratorBP_C_OnRep_bFailed) == 0x000001, "Wrong size on OxygenGeneratorBP_C_OnRep_bFailed");
static_assert(offsetof(OxygenGeneratorBP_C_OnRep_bFailed, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000000, "Member 'OxygenGeneratorBP_C_OnRep_bFailed::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Display Sabotaged UI
// 0x0001 (0x0001 - 0x0000)
struct OxygenGeneratorBP_C_Display_Sabotaged_UI final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OxygenGeneratorBP_C_Display_Sabotaged_UI) == 0x000001, "Wrong alignment on OxygenGeneratorBP_C_Display_Sabotaged_UI");
static_assert(sizeof(OxygenGeneratorBP_C_Display_Sabotaged_UI) == 0x000001, "Wrong size on OxygenGeneratorBP_C_Display_Sabotaged_UI");
static_assert(offsetof(OxygenGeneratorBP_C_Display_Sabotaged_UI, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'OxygenGeneratorBP_C_Display_Sabotaged_UI::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Make Interactions Unavailable
// 0x0002 (0x0002 - 0x0000)
struct OxygenGeneratorBP_C_Make_Interactions_Unavailable final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OxygenGeneratorBP_C_Make_Interactions_Unavailable) == 0x000001, "Wrong alignment on OxygenGeneratorBP_C_Make_Interactions_Unavailable");
static_assert(sizeof(OxygenGeneratorBP_C_Make_Interactions_Unavailable) == 0x000002, "Wrong size on OxygenGeneratorBP_C_Make_Interactions_Unavailable");
static_assert(offsetof(OxygenGeneratorBP_C_Make_Interactions_Unavailable, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'OxygenGeneratorBP_C_Make_Interactions_Unavailable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Make_Interactions_Unavailable, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'OxygenGeneratorBP_C_Make_Interactions_Unavailable::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Event Failed
// 0x0038 (0x0038 - 0x0000)
struct OxygenGeneratorBP_C_Event_Failed final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomGameSettingsGIS*                 CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetOxygenGeneratorFailedMultiplier_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OxygenGeneratorBP_C_Event_Failed) == 0x000008, "Wrong alignment on OxygenGeneratorBP_C_Event_Failed");
static_assert(sizeof(OxygenGeneratorBP_C_Event_Failed) == 0x000038, "Wrong size on OxygenGeneratorBP_C_Event_Failed");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Failed, Temp_int_Array_Index_Variable) == 0x000000, "Member 'OxygenGeneratorBP_C_Event_Failed::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Failed, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'OxygenGeneratorBP_C_Event_Failed::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Failed, CallFunc_GetOxygenGeneratorFailedMultiplier_ReturnValue) == 0x000010, "Member 'OxygenGeneratorBP_C_Event_Failed::CallFunc_GetOxygenGeneratorFailedMultiplier_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Failed, CallFunc_HasAuthority_ReturnValue) == 0x000014, "Member 'OxygenGeneratorBP_C_Event_Failed::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Failed, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000015, "Member 'OxygenGeneratorBP_C_Event_Failed::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Failed, CallFunc_Array_Get_Item) == 0x000018, "Member 'OxygenGeneratorBP_C_Event_Failed::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Failed, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'OxygenGeneratorBP_C_Event_Failed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Failed, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'OxygenGeneratorBP_C_Event_Failed::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Failed, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'OxygenGeneratorBP_C_Event_Failed::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Failed, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'OxygenGeneratorBP_C_Event_Failed::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Event_Failed, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'OxygenGeneratorBP_C_Event_Failed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Calculate Oxygen Percentage From Seconds
// 0x0010 (0x0010 - 0x0000)
struct OxygenGeneratorBP_C_Calculate_Oxygen_Percentage_From_Seconds final
{
public:
	float                                         Oxygen_Amount_In_Seconds;                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Oxygen_Amount_In_Percentage;                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeUntilFullyDrained_ReturnValue;     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OxygenGeneratorBP_C_Calculate_Oxygen_Percentage_From_Seconds) == 0x000004, "Wrong alignment on OxygenGeneratorBP_C_Calculate_Oxygen_Percentage_From_Seconds");
static_assert(sizeof(OxygenGeneratorBP_C_Calculate_Oxygen_Percentage_From_Seconds) == 0x000010, "Wrong size on OxygenGeneratorBP_C_Calculate_Oxygen_Percentage_From_Seconds");
static_assert(offsetof(OxygenGeneratorBP_C_Calculate_Oxygen_Percentage_From_Seconds, Oxygen_Amount_In_Seconds) == 0x000000, "Member 'OxygenGeneratorBP_C_Calculate_Oxygen_Percentage_From_Seconds::Oxygen_Amount_In_Seconds' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Calculate_Oxygen_Percentage_From_Seconds, Oxygen_Amount_In_Percentage) == 0x000004, "Member 'OxygenGeneratorBP_C_Calculate_Oxygen_Percentage_From_Seconds::Oxygen_Amount_In_Percentage' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Calculate_Oxygen_Percentage_From_Seconds, CallFunc_GetTimeUntilFullyDrained_ReturnValue) == 0x000008, "Member 'OxygenGeneratorBP_C_Calculate_Oxygen_Percentage_From_Seconds::CallFunc_GetTimeUntilFullyDrained_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_Calculate_Oxygen_Percentage_From_Seconds, K2Node_MathExpression_ReturnValue) == 0x00000C, "Member 'OxygenGeneratorBP_C_Calculate_Oxygen_Percentage_From_Seconds::K2Node_MathExpression_ReturnValue' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.PlayerStateAddGeneratorSabotaged
// 0x0018 (0x0018 - 0x0000)
struct OxygenGeneratorBP_C_PlayerStateAddGeneratorSabotaged final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState_MatchBP_C*              K2Node_DynamicCast_AsSCTPlayer_State_Match_BP;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OxygenGeneratorBP_C_PlayerStateAddGeneratorSabotaged) == 0x000008, "Wrong alignment on OxygenGeneratorBP_C_PlayerStateAddGeneratorSabotaged");
static_assert(sizeof(OxygenGeneratorBP_C_PlayerStateAddGeneratorSabotaged) == 0x000018, "Wrong size on OxygenGeneratorBP_C_PlayerStateAddGeneratorSabotaged");
static_assert(offsetof(OxygenGeneratorBP_C_PlayerStateAddGeneratorSabotaged, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'OxygenGeneratorBP_C_PlayerStateAddGeneratorSabotaged::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_PlayerStateAddGeneratorSabotaged, K2Node_DynamicCast_AsSCTPlayer_State_Match_BP) == 0x000008, "Member 'OxygenGeneratorBP_C_PlayerStateAddGeneratorSabotaged::K2Node_DynamicCast_AsSCTPlayer_State_Match_BP' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_PlayerStateAddGeneratorSabotaged, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'OxygenGeneratorBP_C_PlayerStateAddGeneratorSabotaged::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.RenderXray
// 0x0010 (0x0010 - 0x0000)
struct OxygenGeneratorBP_C_RenderXray final
{
public:
	bool                                          On;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OxygenGeneratorBP_C_RenderXray) == 0x000004, "Wrong alignment on OxygenGeneratorBP_C_RenderXray");
static_assert(sizeof(OxygenGeneratorBP_C_RenderXray) == 0x000010, "Wrong size on OxygenGeneratorBP_C_RenderXray");
static_assert(offsetof(OxygenGeneratorBP_C_RenderXray, On) == 0x000000, "Member 'OxygenGeneratorBP_C_RenderXray::On' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_RenderXray, Temp_bool_Variable) == 0x000001, "Member 'OxygenGeneratorBP_C_RenderXray::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_RenderXray, Temp_int_Variable) == 0x000004, "Member 'OxygenGeneratorBP_C_RenderXray::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_RenderXray, Temp_int_Variable_1) == 0x000008, "Member 'OxygenGeneratorBP_C_RenderXray::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(OxygenGeneratorBP_C_RenderXray, K2Node_Select_Default) == 0x00000C, "Member 'OxygenGeneratorBP_C_RenderXray::K2Node_Select_Default' has a wrong offset!");

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.OnRep_bRepairing
// 0x0001 (0x0001 - 0x0000)
struct OxygenGeneratorBP_C_OnRep_bRepairing final
{
public:
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OxygenGeneratorBP_C_OnRep_bRepairing) == 0x000001, "Wrong alignment on OxygenGeneratorBP_C_OnRep_bRepairing");
static_assert(sizeof(OxygenGeneratorBP_C_OnRep_bRepairing) == 0x000001, "Wrong size on OxygenGeneratorBP_C_OnRep_bRepairing");
static_assert(offsetof(OxygenGeneratorBP_C_OnRep_bRepairing, CallFunc_BooleanOR_ReturnValue) == 0x000000, "Member 'OxygenGeneratorBP_C_OnRep_bRepairing::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

