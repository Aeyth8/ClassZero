#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UserInputSettingsBP

#include "Basic.hpp"

#include "UserInputSettingsBP_classes.hpp"
#include "UserInputSettingsBP_parameters.hpp"


namespace SDK
{

// Function UserInputSettingsBP.UserInputSettingsBP_C.Get Invert Scale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EntryName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Output                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUserInputSettingsBP_C::Get_Invert_Scale(class FName EntryName, float* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserInputSettingsBP_C", "Get Invert Scale");

	Params::UserInputSettingsBP_C_Get_Invert_Scale Parms{};

	Parms.EntryName = EntryName;

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function UserInputSettingsBP.UserInputSettingsBP_C.Set Camera Inversion
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CameraInputName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             InversionName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUserInputSettingsBP_C::Set_Camera_Inversion(class FName CameraInputName, class FName InversionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserInputSettingsBP_C", "Set Camera Inversion");

	Params::UserInputSettingsBP_C_Set_Camera_Inversion Parms{};

	Parms.CameraInputName = CameraInputName;
	Parms.InversionName = InversionName;

	UObject::ProcessEvent(Func, &Parms);
}

}

