#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EmergencyEvent_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass EmergencyEvent_Base.EmergencyEvent_Base_C
// 0x0090 (0x02B0 - 0x0220)
class AEmergencyEvent_Base_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UAkComponent*                           Ak;                                                // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene_OffscreenIndicatorLocation;                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget;                                            // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UContextStaticMeshComponent*            ContextStaticMesh;                                 // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractionComponent*                  Interaction_Component;                             // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RepairTimeline_RepairPercentage_F40F8C624921E88D3B7C17A5DF8F6F21; // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            RepairTimeline__Direction_F40F8C624921E88D3B7C17A5DF8F6F21; // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_25D[0x3];                                      // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     RepairTimeline;                                    // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeToComplete;                                    // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         InteractingCharacters;                             // 0x0270(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          Completed;                                         // 0x0280(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 CompleteColor;                                     // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEmergencyEvent_ProgressbarWI_C*        ProgressBarWI;                                     // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsA;                                               // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsB;                                               // 0x0291(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_292[0x6];                                      // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             On_Complete;                                       // 0x0298(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          EmergencyActive;                                   // 0x02A8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AmountHolding;                                     // 0x02AC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)

public:
	void On_Complete__DelegateSignature(class AEmergencyEvent_Base_C* EmergencyBase);
	void ExecuteUbergraph_EmergencyEvent_Base(int32 EntryPoint);
	void Update_Participants_On_Progressbar(int32 LastIndex);
	void Multi_Audio_Stop_Holding();
	void Multi_Audio_Start_Holding();
	void ReceiveBeginPlay();
	void Deactivate_Emergency_Base();
	void Non_Active_Cosmetics();
	void Active_Cosmetics();
	void Activate_Emergency_Base();
	void Complete_Cosmetics();
	void Stop_Checking_Amount_Holding();
	void Start_Holding_With_Amount_Update();
	void BndEvt__Interaction_Component_K2Node_ComponentBoundEvent_1_InteractionEndedDelegate__DelegateSignature(const struct FInteractionPayload& Payload, bool WasCancelled);
	void BndEvt__Interaction_Component_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature(const struct FInteractionPayload& Payload);
	void RepairTimeline__UpdateFunc();
	void RepairTimeline__FinishedFunc();
	void OnRep_Completed();
	void OnRep_EmergencyActive();
	void OnRep_AmountHolding();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EmergencyEvent_Base_C">();
	}
	static class AEmergencyEvent_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEmergencyEvent_Base_C>();
	}
};
static_assert(alignof(AEmergencyEvent_Base_C) == 0x000008, "Wrong alignment on AEmergencyEvent_Base_C");
static_assert(sizeof(AEmergencyEvent_Base_C) == 0x0002B0, "Wrong size on AEmergencyEvent_Base_C");
static_assert(offsetof(AEmergencyEvent_Base_C, UberGraphFrame) == 0x000220, "Member 'AEmergencyEvent_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AEmergencyEvent_Base_C, Ak) == 0x000228, "Member 'AEmergencyEvent_Base_C::Ak' has a wrong offset!");
static_assert(offsetof(AEmergencyEvent_Base_C, Scene_OffscreenIndicatorLocation) == 0x000230, "Member 'AEmergencyEvent_Base_C::Scene_OffscreenIndicatorLocation' has a wrong offset!");
static_assert(offsetof(AEmergencyEvent_Base_C, Widget) == 0x000238, "Member 'AEmergencyEvent_Base_C::Widget' has a wrong offset!");
static_assert(offsetof(AEmergencyEvent_Base_C, ContextStaticMesh) == 0x000240, "Member 'AEmergencyEvent_Base_C::ContextStaticMesh' has a wrong offset!");
static_assert(offsetof(AEmergencyEvent_Base_C, Interaction_Component) == 0x000248, "Member 'AEmergencyEvent_Base_C::Interaction_Component' has a wrong offset!");
static_assert(offsetof(AEmergencyEvent_Base_C, DefaultSceneRoot) == 0x000250, "Member 'AEmergencyEvent_Base_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AEmergencyEvent_Base_C, RepairTimeline_RepairPercentage_F40F8C624921E88D3B7C17A5DF8F6F21) == 0x000258, "Member 'AEmergencyEvent_Base_C::RepairTimeline_RepairPercentage_F40F8C624921E88D3B7C17A5DF8F6F21' has a wrong offset!");
static_assert(offsetof(AEmergencyEvent_Base_C, RepairTimeline__Direction_F40F8C624921E88D3B7C17A5DF8F6F21) == 0x00025C, "Member 'AEmergencyEvent_Base_C::RepairTimeline__Direction_F40F8C624921E88D3B7C17A5DF8F6F21' has a wrong offset!");
static_assert(offsetof(AEmergencyEvent_Base_C, RepairTimeline) == 0x000260, "Member 'AEmergencyEvent_Base_C::RepairTimeline' has a wrong offset!");
static_assert(offsetof(AEmergencyEvent_Base_C, TimeToComplete) == 0x000268, "Member 'AEmergencyEvent_Base_C::TimeToComplete' has a wrong offset!");
static_assert(offsetof(AEmergencyEvent_Base_C, InteractingCharacters) == 0x000270, "Member 'AEmergencyEvent_Base_C::InteractingCharacters' has a wrong offset!");
static_assert(offsetof(AEmergencyEvent_Base_C, Completed) == 0x000280, "Member 'AEmergencyEvent_Base_C::Completed' has a wrong offset!");
static_assert(offsetof(AEmergencyEvent_Base_C, CompleteColor) == 0x000284, "Member 'AEmergencyEvent_Base_C::CompleteColor' has a wrong offset!");
static_assert(offsetof(AEmergencyEvent_Base_C, ProgressBarWI) == 0x000288, "Member 'AEmergencyEvent_Base_C::ProgressBarWI' has a wrong offset!");
static_assert(offsetof(AEmergencyEvent_Base_C, IsA) == 0x000290, "Member 'AEmergencyEvent_Base_C::IsA' has a wrong offset!");
static_assert(offsetof(AEmergencyEvent_Base_C, IsB) == 0x000291, "Member 'AEmergencyEvent_Base_C::IsB' has a wrong offset!");
static_assert(offsetof(AEmergencyEvent_Base_C, On_Complete) == 0x000298, "Member 'AEmergencyEvent_Base_C::On_Complete' has a wrong offset!");
static_assert(offsetof(AEmergencyEvent_Base_C, EmergencyActive) == 0x0002A8, "Member 'AEmergencyEvent_Base_C::EmergencyActive' has a wrong offset!");
static_assert(offsetof(AEmergencyEvent_Base_C, AmountHolding) == 0x0002AC, "Member 'AEmergencyEvent_Base_C::AmountHolding' has a wrong offset!");

}

