#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CM_MatchmakerCountdownWI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AccelByteUe4Sdk_structs.hpp"


namespace SDK::Params
{

// Function CM_MatchmakerCountdownWI.CM_MatchmakerCountdownWI_C.ExecuteUbergraph_CM_MatchmakerCountdownWI
// 0x0178 (0x0178 - 0x0000)
struct CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWinGDKPlatform_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAccelByteModelsInfoPartyResponse      K2Node_CustomEvent_PartyInfo;                      // 0x0008(0x0070)()
	TDelegate<void(const struct FAccelByteModelsInfoPartyResponse& PartyInfo)> K2Node_CreateDelegate_OutputDelegate;              // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	struct FAccelByteModelsInfoPartyResponse      Temp_struct_Variable;                              // 0x0088(0x0070)()
	class UFCTPartyInfoCallbackProxy*             CallFunc_GetPartyInfo_ReturnValue;                 // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0108(0x0018)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAccelByteMatchmakingStatus                   K2Node_CustomEvent_Reason;                         // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0124(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0138(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TickTimer_bExpired;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetUserId_ReturnValue;                    // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x015C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsPS4Platform_ReturnValue;                // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPS5Platform_ReturnValue;                // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x016E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsXboxPlatform_ReturnValue;               // 0x016F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI) == 0x000008, "Wrong alignment on CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI");
static_assert(sizeof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI) == 0x000178, "Wrong size on CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI, EntryPoint) == 0x000000, "Member 'CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI::EntryPoint' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI, CallFunc_IsWinGDKPlatform_ReturnValue) == 0x000004, "Member 'CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI::CallFunc_IsWinGDKPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI, K2Node_CustomEvent_PartyInfo) == 0x000008, "Member 'CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI::K2Node_CustomEvent_PartyInfo' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI, K2Node_CreateDelegate_OutputDelegate) == 0x000078, "Member 'CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI, Temp_struct_Variable) == 0x000088, "Member 'CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI, CallFunc_GetPartyInfo_ReturnValue) == 0x0000F8, "Member 'CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI::CallFunc_GetPartyInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI, CallFunc_Conv_IntToText_ReturnValue) == 0x000108, "Member 'CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI, K2Node_Event_IsDesignTime) == 0x000120, "Member 'CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI, K2Node_CustomEvent_Reason) == 0x000121, "Member 'CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI::K2Node_CustomEvent_Reason' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI, K2Node_SwitchEnum_CmpSuccess) == 0x000122, "Member 'CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI, CallFunc_Not_PreBool_ReturnValue) == 0x000123, "Member 'CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI, K2Node_CreateDelegate_OutputDelegate_1) == 0x000124, "Member 'CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000138, "Member 'CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI, CallFunc_TickTimer_bExpired) == 0x000140, "Member 'CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI::CallFunc_TickTimer_bExpired' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI, CallFunc_GetUserId_ReturnValue) == 0x000148, "Member 'CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI::CallFunc_GetUserId_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000158, "Member 'CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI, K2Node_CreateDelegate_OutputDelegate_2) == 0x00015C, "Member 'CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI, CallFunc_IsPS4Platform_ReturnValue) == 0x00016C, "Member 'CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI::CallFunc_IsPS4Platform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI, CallFunc_IsPS5Platform_ReturnValue) == 0x00016D, "Member 'CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI::CallFunc_IsPS5Platform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI, CallFunc_BooleanOR_ReturnValue) == 0x00016E, "Member 'CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI, CallFunc_IsXboxPlatform_ReturnValue) == 0x00016F, "Member 'CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI::CallFunc_IsXboxPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI, CallFunc_BooleanOR_ReturnValue_1) == 0x000170, "Member 'CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI, CallFunc_BooleanOR_ReturnValue_2) == 0x000171, "Member 'CM_MatchmakerCountdownWI_C_ExecuteUbergraph_CM_MatchmakerCountdownWI::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function CM_MatchmakerCountdownWI.CM_MatchmakerCountdownWI_C.CancelPartyCountdownTimer
// 0x0001 (0x0001 - 0x0000)
struct CM_MatchmakerCountdownWI_C_CancelPartyCountdownTimer final
{
public:
	EAccelByteMatchmakingStatus                   Reason;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CM_MatchmakerCountdownWI_C_CancelPartyCountdownTimer) == 0x000001, "Wrong alignment on CM_MatchmakerCountdownWI_C_CancelPartyCountdownTimer");
static_assert(sizeof(CM_MatchmakerCountdownWI_C_CancelPartyCountdownTimer) == 0x000001, "Wrong size on CM_MatchmakerCountdownWI_C_CancelPartyCountdownTimer");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_CancelPartyCountdownTimer, Reason) == 0x000000, "Member 'CM_MatchmakerCountdownWI_C_CancelPartyCountdownTimer::Reason' has a wrong offset!");

// Function CM_MatchmakerCountdownWI.CM_MatchmakerCountdownWI_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct CM_MatchmakerCountdownWI_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CM_MatchmakerCountdownWI_C_PreConstruct) == 0x000001, "Wrong alignment on CM_MatchmakerCountdownWI_C_PreConstruct");
static_assert(sizeof(CM_MatchmakerCountdownWI_C_PreConstruct) == 0x000001, "Wrong size on CM_MatchmakerCountdownWI_C_PreConstruct");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'CM_MatchmakerCountdownWI_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function CM_MatchmakerCountdownWI.CM_MatchmakerCountdownWI_C.OnSuccess_0E43B9544F03B5B1BEC70FB5BC02A737
// 0x0070 (0x0070 - 0x0000)
struct CM_MatchmakerCountdownWI_C_OnSuccess_0E43B9544F03B5B1BEC70FB5BC02A737 final
{
public:
	struct FAccelByteModelsInfoPartyResponse      PartyInfo;                                         // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(CM_MatchmakerCountdownWI_C_OnSuccess_0E43B9544F03B5B1BEC70FB5BC02A737) == 0x000008, "Wrong alignment on CM_MatchmakerCountdownWI_C_OnSuccess_0E43B9544F03B5B1BEC70FB5BC02A737");
static_assert(sizeof(CM_MatchmakerCountdownWI_C_OnSuccess_0E43B9544F03B5B1BEC70FB5BC02A737) == 0x000070, "Wrong size on CM_MatchmakerCountdownWI_C_OnSuccess_0E43B9544F03B5B1BEC70FB5BC02A737");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_OnSuccess_0E43B9544F03B5B1BEC70FB5BC02A737, PartyInfo) == 0x000000, "Member 'CM_MatchmakerCountdownWI_C_OnSuccess_0E43B9544F03B5B1BEC70FB5BC02A737::PartyInfo' has a wrong offset!");

// Function CM_MatchmakerCountdownWI.CM_MatchmakerCountdownWI_C.TickTimer
// 0x0028 (0x0028 - 0x0000)
struct CM_MatchmakerCountdownWI_C_TickTimer final
{
public:
	bool                                          bExpired;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CM_MatchmakerCountdownWI_C_TickTimer) == 0x000008, "Wrong alignment on CM_MatchmakerCountdownWI_C_TickTimer");
static_assert(sizeof(CM_MatchmakerCountdownWI_C_TickTimer) == 0x000028, "Wrong size on CM_MatchmakerCountdownWI_C_TickTimer");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_TickTimer, bExpired) == 0x000000, "Member 'CM_MatchmakerCountdownWI_C_TickTimer::bExpired' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_TickTimer, CallFunc_Less_IntInt_ReturnValue) == 0x000001, "Member 'CM_MatchmakerCountdownWI_C_TickTimer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_TickTimer, Temp_int_Variable) == 0x000004, "Member 'CM_MatchmakerCountdownWI_C_TickTimer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_TickTimer, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'CM_MatchmakerCountdownWI_C_TickTimer::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_TickTimer, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'CM_MatchmakerCountdownWI_C_TickTimer::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function CM_MatchmakerCountdownWI.CM_MatchmakerCountdownWI_C.ResetCounter
// 0x0018 (0x0018 - 0x0000)
struct CM_MatchmakerCountdownWI_C_ResetCounter final
{
public:
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0000(0x0018)()
};
static_assert(alignof(CM_MatchmakerCountdownWI_C_ResetCounter) == 0x000008, "Wrong alignment on CM_MatchmakerCountdownWI_C_ResetCounter");
static_assert(sizeof(CM_MatchmakerCountdownWI_C_ResetCounter) == 0x000018, "Wrong size on CM_MatchmakerCountdownWI_C_ResetCounter");
static_assert(offsetof(CM_MatchmakerCountdownWI_C_ResetCounter, CallFunc_Conv_IntToText_ReturnValue) == 0x000000, "Member 'CM_MatchmakerCountdownWI_C_ResetCounter::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

}

