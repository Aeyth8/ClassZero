#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KetcherGA

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function KetcherGA.KetcherGA_C.ExecuteUbergraph_KetcherGA
// 0x0080 (0x0080 - 0x0000)
struct KetcherGA_C_ExecuteUbergraph_KetcherGA final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_CalculatePushVelocity_TargetCharacter;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalculatePushVelocity_LaunchVelocity;     // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP_1;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(KetcherGA_C_ExecuteUbergraph_KetcherGA) == 0x000008, "Wrong alignment on KetcherGA_C_ExecuteUbergraph_KetcherGA");
static_assert(sizeof(KetcherGA_C_ExecuteUbergraph_KetcherGA) == 0x000080, "Wrong size on KetcherGA_C_ExecuteUbergraph_KetcherGA");
static_assert(offsetof(KetcherGA_C_ExecuteUbergraph_KetcherGA, EntryPoint) == 0x000000, "Member 'KetcherGA_C_ExecuteUbergraph_KetcherGA::EntryPoint' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_ExecuteUbergraph_KetcherGA, CallFunc_K2_CommitAbility_ReturnValue) == 0x000004, "Member 'KetcherGA_C_ExecuteUbergraph_KetcherGA::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_ExecuteUbergraph_KetcherGA, CallFunc_WaitDelay_ReturnValue) == 0x000008, "Member 'KetcherGA_C_ExecuteUbergraph_KetcherGA::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_ExecuteUbergraph_KetcherGA, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'KetcherGA_C_ExecuteUbergraph_KetcherGA::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_ExecuteUbergraph_KetcherGA, CallFunc_CalculatePushVelocity_TargetCharacter) == 0x000018, "Member 'KetcherGA_C_ExecuteUbergraph_KetcherGA::CallFunc_CalculatePushVelocity_TargetCharacter' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_ExecuteUbergraph_KetcherGA, CallFunc_CalculatePushVelocity_LaunchVelocity) == 0x000020, "Member 'KetcherGA_C_ExecuteUbergraph_KetcherGA::CallFunc_CalculatePushVelocity_LaunchVelocity' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_ExecuteUbergraph_KetcherGA, K2Node_DynamicCast_AsICharacter_SCT) == 0x000030, "Member 'KetcherGA_C_ExecuteUbergraph_KetcherGA::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_ExecuteUbergraph_KetcherGA, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'KetcherGA_C_ExecuteUbergraph_KetcherGA::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_ExecuteUbergraph_KetcherGA, K2Node_DynamicCast_AsCharacter_SCTBP) == 0x000048, "Member 'KetcherGA_C_ExecuteUbergraph_KetcherGA::K2Node_DynamicCast_AsCharacter_SCTBP' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_ExecuteUbergraph_KetcherGA, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'KetcherGA_C_ExecuteUbergraph_KetcherGA::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_ExecuteUbergraph_KetcherGA, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000058, "Member 'KetcherGA_C_ExecuteUbergraph_KetcherGA::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_ExecuteUbergraph_KetcherGA, K2Node_DynamicCast_AsCharacter_SCTBP_1) == 0x000060, "Member 'KetcherGA_C_ExecuteUbergraph_KetcherGA::K2Node_DynamicCast_AsCharacter_SCTBP_1' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_ExecuteUbergraph_KetcherGA, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'KetcherGA_C_ExecuteUbergraph_KetcherGA::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_ExecuteUbergraph_KetcherGA, K2Node_CreateDelegate_OutputDelegate) == 0x00006C, "Member 'KetcherGA_C_ExecuteUbergraph_KetcherGA::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function KetcherGA.KetcherGA_C.RagdollTarget
// 0x0038 (0x0038 - 0x0000)
struct KetcherGA_C_RagdollTarget final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetRagdollImpulse_Impulse;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KetcherGA_C_RagdollTarget) == 0x000008, "Wrong alignment on KetcherGA_C_RagdollTarget");
static_assert(sizeof(KetcherGA_C_RagdollTarget) == 0x000038, "Wrong size on KetcherGA_C_RagdollTarget");
static_assert(offsetof(KetcherGA_C_RagdollTarget, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'KetcherGA_C_RagdollTarget::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_RagdollTarget, CallFunc_GetTargetRagdollImpulse_Impulse) == 0x000008, "Member 'KetcherGA_C_RagdollTarget::CallFunc_GetTargetRagdollImpulse_Impulse' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_RagdollTarget, K2Node_DynamicCast_AsICharacter_SCT) == 0x000018, "Member 'KetcherGA_C_RagdollTarget::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_RagdollTarget, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'KetcherGA_C_RagdollTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_RagdollTarget, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00002C, "Member 'KetcherGA_C_RagdollTarget::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function KetcherGA.KetcherGA_C.ShowBatCosmetic
// 0x0001 (0x0001 - 0x0000)
struct KetcherGA_C_ShowBatCosmetic final
{
public:
	bool                                          Hidden;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KetcherGA_C_ShowBatCosmetic) == 0x000001, "Wrong alignment on KetcherGA_C_ShowBatCosmetic");
static_assert(sizeof(KetcherGA_C_ShowBatCosmetic) == 0x000001, "Wrong size on KetcherGA_C_ShowBatCosmetic");
static_assert(offsetof(KetcherGA_C_ShowBatCosmetic, Hidden) == 0x000000, "Member 'KetcherGA_C_ShowBatCosmetic::Hidden' has a wrong offset!");

// Function KetcherGA.KetcherGA_C.CosmeticsFromEquipablePower
// 0x0010 (0x0010 - 0x0000)
struct KetcherGA_C_CosmeticsFromEquipablePower final
{
public:
	class AEquipablePower_Ketcher_C*              K2Node_DynamicCast_AsEquipable_Power_Ketcher;      // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KetcherGA_C_CosmeticsFromEquipablePower) == 0x000008, "Wrong alignment on KetcherGA_C_CosmeticsFromEquipablePower");
static_assert(sizeof(KetcherGA_C_CosmeticsFromEquipablePower) == 0x000010, "Wrong size on KetcherGA_C_CosmeticsFromEquipablePower");
static_assert(offsetof(KetcherGA_C_CosmeticsFromEquipablePower, K2Node_DynamicCast_AsEquipable_Power_Ketcher) == 0x000000, "Member 'KetcherGA_C_CosmeticsFromEquipablePower::K2Node_DynamicCast_AsEquipable_Power_Ketcher' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_CosmeticsFromEquipablePower, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'KetcherGA_C_CosmeticsFromEquipablePower::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function KetcherGA.KetcherGA_C.CallHitEvent
// 0x0018 (0x0018 - 0x0000)
struct KetcherGA_C_CallHitEvent final
{
public:
	class APlayerController*                      CallFunc_GetTargetController_AsPlayer_Controller;  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwnerController_AsPlayer_Controller;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KetcherGA_C_CallHitEvent) == 0x000008, "Wrong alignment on KetcherGA_C_CallHitEvent");
static_assert(sizeof(KetcherGA_C_CallHitEvent) == 0x000018, "Wrong size on KetcherGA_C_CallHitEvent");
static_assert(offsetof(KetcherGA_C_CallHitEvent, CallFunc_GetTargetController_AsPlayer_Controller) == 0x000000, "Member 'KetcherGA_C_CallHitEvent::CallFunc_GetTargetController_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_CallHitEvent, CallFunc_GetOwnerController_AsPlayer_Controller) == 0x000008, "Member 'KetcherGA_C_CallHitEvent::CallFunc_GetOwnerController_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_CallHitEvent, CallFunc_IsServer_ReturnValue) == 0x000010, "Member 'KetcherGA_C_CallHitEvent::CallFunc_IsServer_ReturnValue' has a wrong offset!");

// Function KetcherGA.KetcherGA_C.CalculatePushVelocity
// 0x0050 (0x0050 - 0x0000)
struct KetcherGA_C_CalculatePushVelocity final
{
public:
	class ACharacter*                             TargetCharacter;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LaunchVelocity;                                    // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      CallFunc_GetCharacterFromActorInfo_Character;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KetcherGA_C_CalculatePushVelocity) == 0x000008, "Wrong alignment on KetcherGA_C_CalculatePushVelocity");
static_assert(sizeof(KetcherGA_C_CalculatePushVelocity) == 0x000050, "Wrong size on KetcherGA_C_CalculatePushVelocity");
static_assert(offsetof(KetcherGA_C_CalculatePushVelocity, TargetCharacter) == 0x000000, "Member 'KetcherGA_C_CalculatePushVelocity::TargetCharacter' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_CalculatePushVelocity, LaunchVelocity) == 0x000008, "Member 'KetcherGA_C_CalculatePushVelocity::LaunchVelocity' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_CalculatePushVelocity, CallFunc_GetCharacterFromActorInfo_Character) == 0x000018, "Member 'KetcherGA_C_CalculatePushVelocity::CallFunc_GetCharacterFromActorInfo_Character' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_CalculatePushVelocity, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'KetcherGA_C_CalculatePushVelocity::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_CalculatePushVelocity, K2Node_DynamicCast_AsCharacter) == 0x000028, "Member 'KetcherGA_C_CalculatePushVelocity::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_CalculatePushVelocity, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'KetcherGA_C_CalculatePushVelocity::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_CalculatePushVelocity, CallFunc_GetForwardVector_ReturnValue) == 0x000034, "Member 'KetcherGA_C_CalculatePushVelocity::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_CalculatePushVelocity, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000040, "Member 'KetcherGA_C_CalculatePushVelocity::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function KetcherGA.KetcherGA_C.GetTargetRagdollImpulse
// 0x0078 (0x0078 - 0x0000)
struct KetcherGA_C_GetTargetRagdollImpulse final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Impulse;                                           // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KetcherGA_C_GetTargetRagdollImpulse) == 0x000008, "Wrong alignment on KetcherGA_C_GetTargetRagdollImpulse");
static_assert(sizeof(KetcherGA_C_GetTargetRagdollImpulse) == 0x000078, "Wrong size on KetcherGA_C_GetTargetRagdollImpulse");
static_assert(offsetof(KetcherGA_C_GetTargetRagdollImpulse, Target) == 0x000000, "Member 'KetcherGA_C_GetTargetRagdollImpulse::Target' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_GetTargetRagdollImpulse, Impulse) == 0x000008, "Member 'KetcherGA_C_GetTargetRagdollImpulse::Impulse' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_GetTargetRagdollImpulse, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000018, "Member 'KetcherGA_C_GetTargetRagdollImpulse::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_GetTargetRagdollImpulse, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'KetcherGA_C_GetTargetRagdollImpulse::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_GetTargetRagdollImpulse, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00002C, "Member 'KetcherGA_C_GetTargetRagdollImpulse::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_GetTargetRagdollImpulse, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000038, "Member 'KetcherGA_C_GetTargetRagdollImpulse::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_GetTargetRagdollImpulse, CallFunc_Normal_ReturnValue) == 0x000044, "Member 'KetcherGA_C_GetTargetRagdollImpulse::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_GetTargetRagdollImpulse, CallFunc_Add_VectorVector_ReturnValue) == 0x000050, "Member 'KetcherGA_C_GetTargetRagdollImpulse::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_GetTargetRagdollImpulse, CallFunc_Normal_ReturnValue_1) == 0x00005C, "Member 'KetcherGA_C_GetTargetRagdollImpulse::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_GetTargetRagdollImpulse, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000068, "Member 'KetcherGA_C_GetTargetRagdollImpulse::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function KetcherGA.KetcherGA_C.GetOwnerController
// 0x0038 (0x0038 - 0x0000)
struct KetcherGA_C_GetOwnerController final
{
public:
	class APlayerController*                      AsPlayer_Controller;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KetcherGA_C_GetOwnerController) == 0x000008, "Wrong alignment on KetcherGA_C_GetOwnerController");
static_assert(sizeof(KetcherGA_C_GetOwnerController) == 0x000038, "Wrong size on KetcherGA_C_GetOwnerController");
static_assert(offsetof(KetcherGA_C_GetOwnerController, AsPlayer_Controller) == 0x000000, "Member 'KetcherGA_C_GetOwnerController::AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_GetOwnerController, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000008, "Member 'KetcherGA_C_GetOwnerController::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_GetOwnerController, K2Node_DynamicCast_AsPawn) == 0x000010, "Member 'KetcherGA_C_GetOwnerController::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_GetOwnerController, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'KetcherGA_C_GetOwnerController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_GetOwnerController, CallFunc_GetController_ReturnValue) == 0x000020, "Member 'KetcherGA_C_GetOwnerController::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_GetOwnerController, K2Node_DynamicCast_AsPlayer_Controller) == 0x000028, "Member 'KetcherGA_C_GetOwnerController::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_GetOwnerController, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'KetcherGA_C_GetOwnerController::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function KetcherGA.KetcherGA_C.GetTargetController
// 0x0038 (0x0038 - 0x0000)
struct KetcherGA_C_GetTargetController final
{
public:
	class APlayerController*                      AsPlayer_Controller;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KetcherGA_C_GetTargetController) == 0x000008, "Wrong alignment on KetcherGA_C_GetTargetController");
static_assert(sizeof(KetcherGA_C_GetTargetController) == 0x000038, "Wrong size on KetcherGA_C_GetTargetController");
static_assert(offsetof(KetcherGA_C_GetTargetController, AsPlayer_Controller) == 0x000000, "Member 'KetcherGA_C_GetTargetController::AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_GetTargetController, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'KetcherGA_C_GetTargetController::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_GetTargetController, K2Node_DynamicCast_AsPawn) == 0x000010, "Member 'KetcherGA_C_GetTargetController::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_GetTargetController, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'KetcherGA_C_GetTargetController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_GetTargetController, CallFunc_GetController_ReturnValue) == 0x000020, "Member 'KetcherGA_C_GetTargetController::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_GetTargetController, K2Node_DynamicCast_AsPlayer_Controller) == 0x000028, "Member 'KetcherGA_C_GetTargetController::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(KetcherGA_C_GetTargetController, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'KetcherGA_C_GetTargetController::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

