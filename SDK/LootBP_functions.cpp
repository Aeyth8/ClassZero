#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LootBP

#include "Basic.hpp"

#include "LootBP_classes.hpp"
#include "LootBP_parameters.hpp"


namespace SDK
{

// Function LootBP.LootBP_C.On_SpawnedLoot__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ALootBP_C::On_SpawnedLoot__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "On_SpawnedLoot__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootBP.LootBP_C.On_Collected__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ALootBP_C::On_Collected__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "On_Collected__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootBP.LootBP_C.ExecuteUbergraph_LootBP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootBP_C::ExecuteUbergraph_LootBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "ExecuteUbergraph_LootBP");

	Params::LootBP_C_ExecuteUbergraph_LootBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootBP.LootBP_C.BndEvt__ContextStaticMesh_K2Node_ComponentBoundEvent_4_ToggleHighlightEffect__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    ShouldShow                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ALootBP_C::BndEvt__ContextStaticMesh_K2Node_ComponentBoundEvent_4_ToggleHighlightEffect__DelegateSignature(bool ShouldShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "BndEvt__ContextStaticMesh_K2Node_ComponentBoundEvent_4_ToggleHighlightEffect__DelegateSignature");

	Params::LootBP_C_BndEvt__ContextStaticMesh_K2Node_ComponentBoundEvent_4_ToggleHighlightEffect__DelegateSignature Parms{};

	Parms.ShouldShow = ShouldShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootBP.LootBP_C.BndEvt__Interaction_K2Node_ComponentBoundEvent_0_InteractionSuccessfulDelegate__DelegateSignature
// (BlueprintEvent)

void ALootBP_C::BndEvt__Interaction_K2Node_ComponentBoundEvent_0_InteractionSuccessfulDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "BndEvt__Interaction_K2Node_ComponentBoundEvent_0_InteractionSuccessfulDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootBP.LootBP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ALootBP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootBP.LootBP_C.Audio Idle
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ALootBP_C::Audio_Idle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "Audio Idle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootBP.LootBP_C.Confirmed Empty Or Item Looted
// (BlueprintCallable, BlueprintEvent)

void ALootBP_C::Confirmed_Empty_Or_Item_Looted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "Confirmed Empty Or Item Looted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootBP.LootBP_C.BndEvt__Interaction_K2Node_ComponentBoundEvent_5_InteractionEndedDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// bool                                    WasCancelled                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ALootBP_C::BndEvt__Interaction_K2Node_ComponentBoundEvent_5_InteractionEndedDelegate__DelegateSignature(const struct FInteractionPayload& Payload, bool WasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "BndEvt__Interaction_K2Node_ComponentBoundEvent_5_InteractionEndedDelegate__DelegateSignature");

	Params::LootBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_5_InteractionEndedDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);
	Parms.WasCancelled = WasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootBP.LootBP_C.Spawn Loot And Save Power To Grant
// (BlueprintCallable, BlueprintEvent)

void ALootBP_C::Spawn_Loot_And_Save_Power_To_Grant()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "Spawn Loot And Save Power To Grant");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootBP.LootBP_C.Attempt Loot
// (BlueprintCallable, BlueprintEvent)

void ALootBP_C::Attempt_Loot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "Attempt Loot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootBP.LootBP_C.BndEvt__Interaction_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void ALootBP_C::BndEvt__Interaction_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature(const struct FInteractionPayload& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "BndEvt__Interaction_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature");

	Params::LootBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootBP.LootBP_C.LootPickedUp_Cosmetic
// (BlueprintCallable, BlueprintEvent)

void ALootBP_C::LootPickedUp_Cosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "LootPickedUp_Cosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootBP.LootBP_C.LootPickedupServer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DestroyedActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootBP_C::LootPickedupServer(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "LootPickedupServer");

	Params::LootBP_C_LootPickedupServer Parms{};

	Parms.DestroyedActor = DestroyedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootBP.LootBP_C.OpenUpdate_Cosmetic
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Alpha                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootBP_C::OpenUpdate_Cosmetic(float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "OpenUpdate_Cosmetic");

	Params::LootBP_C_OpenUpdate_Cosmetic Parms{};

	Parms.Alpha = Alpha;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootBP.LootBP_C.OpenFinished_Cosmetic
// (BlueprintCallable, BlueprintEvent)

void ALootBP_C::OpenFinished_Cosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "OpenFinished_Cosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootBP.LootBP_C.OpenStart_Cosmetic
// (BlueprintCallable, BlueprintEvent)

void ALootBP_C::OpenStart_Cosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "OpenStart_Cosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootBP.LootBP_C.Audio OpenStop
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ALootBP_C::Audio_OpenStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "Audio OpenStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootBP.LootBP_C.Audio OpenStart
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ALootBP_C::Audio_OpenStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "Audio OpenStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootBP.LootBP_C.Audio Released
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ALootBP_C::Audio_Released()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "Audio Released");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootBP.LootBP_C.Audio Pressed
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ALootBP_C::Audio_Pressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "Audio Pressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootBP.LootBP_C.SmoothInSmoothOut__UpdateFunc
// (BlueprintEvent)

void ALootBP_C::SmoothInSmoothOut__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "SmoothInSmoothOut__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootBP.LootBP_C.SmoothInSmoothOut__FinishedFunc
// (BlueprintEvent)

void ALootBP_C::SmoothInSmoothOut__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "SmoothInSmoothOut__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootBP.LootBP_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ALootBP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootBP.LootBP_C.OnRep_IsOpened
// (BlueprintCallable, BlueprintEvent)

void ALootBP_C::OnRep_IsOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "OnRep_IsOpened");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootBP.LootBP_C.OnRep_IsLootPickedUp
// (BlueprintCallable, BlueprintEvent)

void ALootBP_C::OnRep_IsLootPickedUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "OnRep_IsLootPickedUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LootBP.LootBP_C.Spawn Loot
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APickupActor_C*                   Spawned_Pickup                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootBP_C::Spawn_Loot(class APickupActor_C** Spawned_Pickup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "Spawn Loot");

	Params::LootBP_C_Spawn_Loot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Spawned_Pickup != nullptr)
		*Spawned_Pickup = Parms.Spawned_Pickup;
}


// Function LootBP.LootBP_C.GetAutoGrantLoot
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>                   GetGrantedLoot                                         (Parm, OutParm)

void ALootBP_C::GetAutoGrantLoot(TArray<class UClass*>* GetGrantedLoot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "GetAutoGrantLoot");

	Params::LootBP_C_GetAutoGrantLoot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GetGrantedLoot != nullptr)
		*GetGrantedLoot = std::move(Parms.GetGrantedLoot);
}


// Function LootBP.LootBP_C.AutoGrantLoot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInventory*                       Instigator_Inventory                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootBP_C::AutoGrantLoot(class UInventory* Instigator_Inventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "AutoGrantLoot");

	Params::LootBP_C_AutoGrantLoot Parms{};

	Parms.Instigator_Inventory = Instigator_Inventory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LootBP.LootBP_C.GetFirstAutoGrantLoot
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           Power                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALootBP_C::GetFirstAutoGrantLoot(class UClass** Power)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "GetFirstAutoGrantLoot");

	Params::LootBP_C_GetFirstAutoGrantLoot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Power != nullptr)
		*Power = Parms.Power;
}


// Function LootBP.LootBP_C.Can Add Powers
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UInventory*                       Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ALootBP_C::Can_Add_Powers(class UInventory* Inventory, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "Can Add Powers");

	Params::LootBP_C_Can_Add_Powers Parms{};

	Parms.Inventory = Inventory;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function LootBP.LootBP_C.GetIsLootStandAndNotSyringeStand
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsLootStandAndNotSyringeStand                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ALootBP_C::GetIsLootStandAndNotSyringeStand(bool* IsLootStandAndNotSyringeStand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "GetIsLootStandAndNotSyringeStand");

	Params::LootBP_C_GetIsLootStandAndNotSyringeStand Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsLootStandAndNotSyringeStand != nullptr)
		*IsLootStandAndNotSyringeStand = Parms.IsLootStandAndNotSyringeStand;
}


// Function LootBP.LootBP_C.GetOutlineMeshes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UPrimitiveComponent*>      Meshes                                                 (Parm, OutParm, ContainsInstancedReference)

void ALootBP_C::GetOutlineMeshes(TArray<class UPrimitiveComponent*>* Meshes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootBP_C", "GetOutlineMeshes");

	Params::LootBP_C_GetOutlineMeshes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Meshes != nullptr)
		*Meshes = std::move(Parms.Meshes);
}

}

