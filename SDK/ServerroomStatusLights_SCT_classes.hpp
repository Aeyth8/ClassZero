#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ServerroomStatusLights_SCT

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ServerroomStatusLights_SCT.ServerroomStatusLights_SCT_C
// 0x0060 (0x0280 - 0x0220)
class AServerroomStatusLights_SCT_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UStaticMeshComponent*                   SM_DemoPlacement;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAkComponent*                           Ak;                                                // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         TotalServersToSabotage;                            // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AServerRoomManagerSCT_C*                ShowdownManager;                                   // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PipeComponentSpacingTotal;                         // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PipeComponentSpacing;                              // 0x0254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           Pipes;                                             // 0x0258(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UMaterialInterface*                     DefaultMaterial;                                   // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     RepairedMaterial;                                  // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EventNumber;                                       // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ServersFixed;                                      // 0x027C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ServerroomStatusLights_SCT(int32 EntryPoint);
	void ReceiveBeginPlay();
	void Update_Pipe_Materials(int32 ServersFixed_0);
	void UserConstructionScript();
	void OnRep_ServersFixed();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ServerroomStatusLights_SCT_C">();
	}
	static class AServerroomStatusLights_SCT_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AServerroomStatusLights_SCT_C>();
	}
};
static_assert(alignof(AServerroomStatusLights_SCT_C) == 0x000008, "Wrong alignment on AServerroomStatusLights_SCT_C");
static_assert(sizeof(AServerroomStatusLights_SCT_C) == 0x000280, "Wrong size on AServerroomStatusLights_SCT_C");
static_assert(offsetof(AServerroomStatusLights_SCT_C, UberGraphFrame) == 0x000220, "Member 'AServerroomStatusLights_SCT_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AServerroomStatusLights_SCT_C, SM_DemoPlacement) == 0x000228, "Member 'AServerroomStatusLights_SCT_C::SM_DemoPlacement' has a wrong offset!");
static_assert(offsetof(AServerroomStatusLights_SCT_C, Ak) == 0x000230, "Member 'AServerroomStatusLights_SCT_C::Ak' has a wrong offset!");
static_assert(offsetof(AServerroomStatusLights_SCT_C, DefaultSceneRoot) == 0x000238, "Member 'AServerroomStatusLights_SCT_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AServerroomStatusLights_SCT_C, TotalServersToSabotage) == 0x000240, "Member 'AServerroomStatusLights_SCT_C::TotalServersToSabotage' has a wrong offset!");
static_assert(offsetof(AServerroomStatusLights_SCT_C, ShowdownManager) == 0x000248, "Member 'AServerroomStatusLights_SCT_C::ShowdownManager' has a wrong offset!");
static_assert(offsetof(AServerroomStatusLights_SCT_C, PipeComponentSpacingTotal) == 0x000250, "Member 'AServerroomStatusLights_SCT_C::PipeComponentSpacingTotal' has a wrong offset!");
static_assert(offsetof(AServerroomStatusLights_SCT_C, PipeComponentSpacing) == 0x000254, "Member 'AServerroomStatusLights_SCT_C::PipeComponentSpacing' has a wrong offset!");
static_assert(offsetof(AServerroomStatusLights_SCT_C, Pipes) == 0x000258, "Member 'AServerroomStatusLights_SCT_C::Pipes' has a wrong offset!");
static_assert(offsetof(AServerroomStatusLights_SCT_C, DefaultMaterial) == 0x000268, "Member 'AServerroomStatusLights_SCT_C::DefaultMaterial' has a wrong offset!");
static_assert(offsetof(AServerroomStatusLights_SCT_C, RepairedMaterial) == 0x000270, "Member 'AServerroomStatusLights_SCT_C::RepairedMaterial' has a wrong offset!");
static_assert(offsetof(AServerroomStatusLights_SCT_C, EventNumber) == 0x000278, "Member 'AServerroomStatusLights_SCT_C::EventNumber' has a wrong offset!");
static_assert(offsetof(AServerroomStatusLights_SCT_C, ServersFixed) == 0x00027C, "Member 'AServerroomStatusLights_SCT_C::ServersFixed' has a wrong offset!");

}

