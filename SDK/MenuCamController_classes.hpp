#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MenuCamController

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "E_StartScreenTabs_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "SCT_structs.hpp"
#include "CM_E_MenuAreas_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass MenuCamController.MenuCamController_C
// 0x0020 (0x00D0 - 0x00B0)
class UMenuCamController_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class FName                                   CurrentGenderCamName;                              // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak;                                                // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StartScreenTabs                             CurrentCamera;                                     // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoSound;                                           // 0x00C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_MenuCamController(int32 EntryPoint);
	void OnChangeToEmoteCamera();
	void OnChangeToResidentCamera();
	void OnChangeToVruumbaCamera();
	void ChangeMainMenuTab(ECM_E_MenuAreas Tabs);
	void SetCurrentCustomizationCamera(EPlayerCustomizationGender CurrentCustomization);
	void ReceiveBeginPlay();
	void HandleTabChange(E_StartScreenTabs Tabs);
	void Audio_Blend_Camera();
	void HandleZoomInOnCharacter(EPlayerCustomizationGender CustomizationGender, EPlayerCustomizationType CustomizationOption);
	void HandleCustomizationGenderChange(EPlayerCustomizationGender CustomizationGender);
	void InitialBindings_Old(class Ubp_wi_StartScreen_C* StartSCreen);
	void Change_Camera(class FName Tag);
	class FName ZoomInOnCharacter(EPlayerCustomizationGender CustomizationGender, EPlayerCustomizationType CustomizationOption);
	void InitialiBindings(class UCM_MainMenuWI_C* MainMenu);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MenuCamController_C">();
	}
	static class UMenuCamController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMenuCamController_C>();
	}
};
static_assert(alignof(UMenuCamController_C) == 0x000008, "Wrong alignment on UMenuCamController_C");
static_assert(sizeof(UMenuCamController_C) == 0x0000D0, "Wrong size on UMenuCamController_C");
static_assert(offsetof(UMenuCamController_C, UberGraphFrame) == 0x0000B0, "Member 'UMenuCamController_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMenuCamController_C, CurrentGenderCamName) == 0x0000B8, "Member 'UMenuCamController_C::CurrentGenderCamName' has a wrong offset!");
static_assert(offsetof(UMenuCamController_C, Ak) == 0x0000C0, "Member 'UMenuCamController_C::Ak' has a wrong offset!");
static_assert(offsetof(UMenuCamController_C, CurrentCamera) == 0x0000C8, "Member 'UMenuCamController_C::CurrentCamera' has a wrong offset!");
static_assert(offsetof(UMenuCamController_C, NoSound) == 0x0000C9, "Member 'UMenuCamController_C::NoSound' has a wrong offset!");

}

