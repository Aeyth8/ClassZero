#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: bp_wi_OptionsVoice

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass bp_wi_OptionsVoice.bp_wi_OptionsVoice_C
// 0x0110 (0x0370 - 0x0260)
class Ubp_wi_OptionsVoice_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UCanvasPanel*                           CanvasPanel_VoiceFooterline;                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UComboBoxString*                        ComboBoxString_VivoxInputDevices;                  // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UComboBoxString*                        ComboBoxString_VivoxPlaybackDevices;               // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Microphone;                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Speaker;                             // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCM_ComboBoxWI_C*                       Microphone_1;                                      // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOptionsSliderWI_C*                     MicrophoneBoost;                                   // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOptionsSliderWI_C*                     OptionsSliderWI_PlayerVol;                         // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOptionsCheckboxWI_C*                   PushToTalk;                                        // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCM_ComboBoxWI_C*                       Speaker;                                           // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_SoundTab;                              // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsWelcomeScreen;                                   // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class FString>                    AvailableOutputDeviceIndexToId;                    // 0x02C8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class FString>                    AvailableInputDeviceIndexToId;                     // 0x0318(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          LoggedIn;                                          // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LoggingIn;                                         // 0x0369(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_bp_wi_OptionsVoice(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void BndEvt__bp_wi_OptionsVoice_Microphone_1_K2Node_ComponentBoundEvent_7_OnSelectionChanged__DelegateSignature(const class FString& SelectedItem, ESelectInfo SelectionType);
	void BndEvt__bp_wi_OptionsVoice_Microphone_1_K2Node_ComponentBoundEvent_6_OnOpening__DelegateSignature();
	void BndEvt__bp_wi_OptionsVoice_Speaker_K2Node_ComponentBoundEvent_5_OnSelectionChanged__DelegateSignature(const class FString& SelectedItem, ESelectInfo SelectionType);
	void BndEvt__bp_wi_OptionsVoice_Speaker_K2Node_ComponentBoundEvent_4_OnOpening__DelegateSignature();
	void Update_Voice_Boost_Sliders_And_Values();
	void BndEvt__bp_wi_OptionsVoice_OptionsSliderWI_MicVol_K2Node_ComponentBoundEvent_18_OnMouseCaptureEnd__DelegateSignature();
	void BndEvt__bp_wi_OptionsVoice_OptionsSliderWI_PlayerVol_K2Node_ComponentBoundEvent_17_OnControllerCaptureEnd__DelegateSignature();
	void BndEvt__bp_wi_OptionsVoice_OptionsSliderWI_PlayerVol_K2Node_ComponentBoundEvent_16_OnMouseCaptureEnd__DelegateSignature();
	void BndEvt__bp_wi_OptionsVoice_OptionsSliderWI_K2Node_ComponentBoundEvent_10_OnControllerCaptureEnd__DelegateSignature();
	void Update();
	void BndEvt__SetUsePushToTalk_K2Node_ComponentBoundEvent_2_OnCheckStateChanged__DelegateSignature(bool IsChecked);
	void HandleOutputDeviceChanged(const class FString& OutputDeviceId);
	void HandleOutputDeviceRemoved(const class FString& OutputDeviceId);
	void HandleOutputDeviceAdded(const class FString& OutputDeviceId);
	void HandleInputDeviceChanged(const class FString& InputDeviceId);
	void HandleInputDeviceRemoved(const class FString& InputDeviceId);
	void HandleInputDeviceAdded(const class FString& InputDeviceId);
	void OnInitialized();
	void Construct();
	void SetVivoxSelectedInputDevice(const class FString& Option);
	void SetVivoxSelectedOutputDevice(const class FString& Active_Output_Id);
	void Set_Combo_Box_Device_Options(class UComboBoxString* ComboBox, const class FString& Effective_Device_Id, const TMap<class FString, class FString>& AvailableDevicesIdToName, const TMap<int32, class FString>& Out_AvailableDeviceIndexToDeviceId);
	void Apply_Selection(bool IsInputDevice, ESelectInfo Selection_Type, const TMap<int32, class FString>& Available_Device_IndexToId, class UComboBoxString* ComboBox);
	void HideTestButtonIfMatch();
	void UpdateAndSaveInputBoost();
	void GetSpecialOptions(class Ubp_SpecialOptionsSave_C** SpecialOptions);

	void GetVivoxSettings(class ULocalSettings** LocalSettings) const;
	void Get_ActiveVivoxPlaybackDeviceOption(const class FString& Output_Id, bool* Found_Existing, int32* Active_Output_Option_Index) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"bp_wi_OptionsVoice_C">();
	}
	static class Ubp_wi_OptionsVoice_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<Ubp_wi_OptionsVoice_C>();
	}
};
static_assert(alignof(Ubp_wi_OptionsVoice_C) == 0x000008, "Wrong alignment on Ubp_wi_OptionsVoice_C");
static_assert(sizeof(Ubp_wi_OptionsVoice_C) == 0x000370, "Wrong size on Ubp_wi_OptionsVoice_C");
static_assert(offsetof(Ubp_wi_OptionsVoice_C, UberGraphFrame) == 0x000260, "Member 'Ubp_wi_OptionsVoice_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(Ubp_wi_OptionsVoice_C, CanvasPanel_VoiceFooterline) == 0x000268, "Member 'Ubp_wi_OptionsVoice_C::CanvasPanel_VoiceFooterline' has a wrong offset!");
static_assert(offsetof(Ubp_wi_OptionsVoice_C, ComboBoxString_VivoxInputDevices) == 0x000270, "Member 'Ubp_wi_OptionsVoice_C::ComboBoxString_VivoxInputDevices' has a wrong offset!");
static_assert(offsetof(Ubp_wi_OptionsVoice_C, ComboBoxString_VivoxPlaybackDevices) == 0x000278, "Member 'Ubp_wi_OptionsVoice_C::ComboBoxString_VivoxPlaybackDevices' has a wrong offset!");
static_assert(offsetof(Ubp_wi_OptionsVoice_C, HorizontalBox_Microphone) == 0x000280, "Member 'Ubp_wi_OptionsVoice_C::HorizontalBox_Microphone' has a wrong offset!");
static_assert(offsetof(Ubp_wi_OptionsVoice_C, HorizontalBox_Speaker) == 0x000288, "Member 'Ubp_wi_OptionsVoice_C::HorizontalBox_Speaker' has a wrong offset!");
static_assert(offsetof(Ubp_wi_OptionsVoice_C, Microphone_1) == 0x000290, "Member 'Ubp_wi_OptionsVoice_C::Microphone_1' has a wrong offset!");
static_assert(offsetof(Ubp_wi_OptionsVoice_C, MicrophoneBoost) == 0x000298, "Member 'Ubp_wi_OptionsVoice_C::MicrophoneBoost' has a wrong offset!");
static_assert(offsetof(Ubp_wi_OptionsVoice_C, OptionsSliderWI_PlayerVol) == 0x0002A0, "Member 'Ubp_wi_OptionsVoice_C::OptionsSliderWI_PlayerVol' has a wrong offset!");
static_assert(offsetof(Ubp_wi_OptionsVoice_C, PushToTalk) == 0x0002A8, "Member 'Ubp_wi_OptionsVoice_C::PushToTalk' has a wrong offset!");
static_assert(offsetof(Ubp_wi_OptionsVoice_C, Speaker) == 0x0002B0, "Member 'Ubp_wi_OptionsVoice_C::Speaker' has a wrong offset!");
static_assert(offsetof(Ubp_wi_OptionsVoice_C, VerticalBox_SoundTab) == 0x0002B8, "Member 'Ubp_wi_OptionsVoice_C::VerticalBox_SoundTab' has a wrong offset!");
static_assert(offsetof(Ubp_wi_OptionsVoice_C, IsWelcomeScreen) == 0x0002C0, "Member 'Ubp_wi_OptionsVoice_C::IsWelcomeScreen' has a wrong offset!");
static_assert(offsetof(Ubp_wi_OptionsVoice_C, AvailableOutputDeviceIndexToId) == 0x0002C8, "Member 'Ubp_wi_OptionsVoice_C::AvailableOutputDeviceIndexToId' has a wrong offset!");
static_assert(offsetof(Ubp_wi_OptionsVoice_C, AvailableInputDeviceIndexToId) == 0x000318, "Member 'Ubp_wi_OptionsVoice_C::AvailableInputDeviceIndexToId' has a wrong offset!");
static_assert(offsetof(Ubp_wi_OptionsVoice_C, LoggedIn) == 0x000368, "Member 'Ubp_wi_OptionsVoice_C::LoggedIn' has a wrong offset!");
static_assert(offsetof(Ubp_wi_OptionsVoice_C, LoggingIn) == 0x000369, "Member 'Ubp_wi_OptionsVoice_C::LoggingIn' has a wrong offset!");

}

