#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CM_MatchmakerCountdownWI

#include "Basic.hpp"

#include "AccelByteUe4Sdk_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass CM_MatchmakerCountdownWI.CM_MatchmakerCountdownWI_C
// 0x00A0 (0x0300 - 0x0260)
class UCM_MatchmakerCountdownWI_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UHorizontalBox*                         Countdown;                                         // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_28;                                          // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_123;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Root;                                              // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URoundedBGBoxWI_C*                      RoundedBGBoxWI;                                    // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             StatusText;                                        // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        Switcher;                                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TimerText;                                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FTimerHandle                           CountdownTimerHandle;                              // 0x02B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bCountingDown;                                     // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CountdownStartTime;                                // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CountdownCurrentTime;                              // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnCountdownExpired;                                // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnCountdownReset;                                  // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         SonyCountdownTime;                                 // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DesktopCountdownTime;                              // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          AK_FindingMatch;                                   // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          AK_CountdownTick;                                  // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnCountdownExpired__DelegateSignature();
	void OnCountdownReset__DelegateSignature();
	void ExecuteUbergraph_CM_MatchmakerCountdownWI(int32 EntryPoint);
	void OnTickTimer();
	void StartCountdown();
	void CancelPartyCountdownTimer(EAccelByteMatchmakingStatus Reason);
	void PreConstruct(bool IsDesignTime);
	void OnSuccess_0E43B9544F03B5B1BEC70FB5BC02A737(const struct FAccelByteModelsInfoPartyResponse& PartyInfo);
	void OnFail_0E43B9544F03B5B1BEC70FB5BC02A737();
	void TickTimer(bool* bExpired);
	void ResetCounter();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CM_MatchmakerCountdownWI_C">();
	}
	static class UCM_MatchmakerCountdownWI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCM_MatchmakerCountdownWI_C>();
	}
};
static_assert(alignof(UCM_MatchmakerCountdownWI_C) == 0x000008, "Wrong alignment on UCM_MatchmakerCountdownWI_C");
static_assert(sizeof(UCM_MatchmakerCountdownWI_C) == 0x000300, "Wrong size on UCM_MatchmakerCountdownWI_C");
static_assert(offsetof(UCM_MatchmakerCountdownWI_C, UberGraphFrame) == 0x000260, "Member 'UCM_MatchmakerCountdownWI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCM_MatchmakerCountdownWI_C, Countdown) == 0x000268, "Member 'UCM_MatchmakerCountdownWI_C::Countdown' has a wrong offset!");
static_assert(offsetof(UCM_MatchmakerCountdownWI_C, Image_1) == 0x000270, "Member 'UCM_MatchmakerCountdownWI_C::Image_1' has a wrong offset!");
static_assert(offsetof(UCM_MatchmakerCountdownWI_C, Image_28) == 0x000278, "Member 'UCM_MatchmakerCountdownWI_C::Image_28' has a wrong offset!");
static_assert(offsetof(UCM_MatchmakerCountdownWI_C, Image_123) == 0x000280, "Member 'UCM_MatchmakerCountdownWI_C::Image_123' has a wrong offset!");
static_assert(offsetof(UCM_MatchmakerCountdownWI_C, Root) == 0x000288, "Member 'UCM_MatchmakerCountdownWI_C::Root' has a wrong offset!");
static_assert(offsetof(UCM_MatchmakerCountdownWI_C, RoundedBGBoxWI) == 0x000290, "Member 'UCM_MatchmakerCountdownWI_C::RoundedBGBoxWI' has a wrong offset!");
static_assert(offsetof(UCM_MatchmakerCountdownWI_C, StatusText) == 0x000298, "Member 'UCM_MatchmakerCountdownWI_C::StatusText' has a wrong offset!");
static_assert(offsetof(UCM_MatchmakerCountdownWI_C, Switcher) == 0x0002A0, "Member 'UCM_MatchmakerCountdownWI_C::Switcher' has a wrong offset!");
static_assert(offsetof(UCM_MatchmakerCountdownWI_C, TimerText) == 0x0002A8, "Member 'UCM_MatchmakerCountdownWI_C::TimerText' has a wrong offset!");
static_assert(offsetof(UCM_MatchmakerCountdownWI_C, CountdownTimerHandle) == 0x0002B0, "Member 'UCM_MatchmakerCountdownWI_C::CountdownTimerHandle' has a wrong offset!");
static_assert(offsetof(UCM_MatchmakerCountdownWI_C, bCountingDown) == 0x0002B8, "Member 'UCM_MatchmakerCountdownWI_C::bCountingDown' has a wrong offset!");
static_assert(offsetof(UCM_MatchmakerCountdownWI_C, CountdownStartTime) == 0x0002BC, "Member 'UCM_MatchmakerCountdownWI_C::CountdownStartTime' has a wrong offset!");
static_assert(offsetof(UCM_MatchmakerCountdownWI_C, CountdownCurrentTime) == 0x0002C0, "Member 'UCM_MatchmakerCountdownWI_C::CountdownCurrentTime' has a wrong offset!");
static_assert(offsetof(UCM_MatchmakerCountdownWI_C, OnCountdownExpired) == 0x0002C8, "Member 'UCM_MatchmakerCountdownWI_C::OnCountdownExpired' has a wrong offset!");
static_assert(offsetof(UCM_MatchmakerCountdownWI_C, OnCountdownReset) == 0x0002D8, "Member 'UCM_MatchmakerCountdownWI_C::OnCountdownReset' has a wrong offset!");
static_assert(offsetof(UCM_MatchmakerCountdownWI_C, SonyCountdownTime) == 0x0002E8, "Member 'UCM_MatchmakerCountdownWI_C::SonyCountdownTime' has a wrong offset!");
static_assert(offsetof(UCM_MatchmakerCountdownWI_C, DesktopCountdownTime) == 0x0002EC, "Member 'UCM_MatchmakerCountdownWI_C::DesktopCountdownTime' has a wrong offset!");
static_assert(offsetof(UCM_MatchmakerCountdownWI_C, AK_FindingMatch) == 0x0002F0, "Member 'UCM_MatchmakerCountdownWI_C::AK_FindingMatch' has a wrong offset!");
static_assert(offsetof(UCM_MatchmakerCountdownWI_C, AK_CountdownTick) == 0x0002F8, "Member 'UCM_MatchmakerCountdownWI_C::AK_CountdownTick' has a wrong offset!");

}

