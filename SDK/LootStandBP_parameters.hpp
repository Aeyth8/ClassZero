#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LootStandBP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function LootStandBP.LootStandBP_C.ExecuteUbergraph_LootStandBP
// 0x00B0 (0x00B0 - 0x0000)
struct LootStandBP_C_ExecuteUbergraph_LootStandBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Alpha;                                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0024(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(LootStandBP_C_ExecuteUbergraph_LootStandBP) == 0x000004, "Wrong alignment on LootStandBP_C_ExecuteUbergraph_LootStandBP");
static_assert(sizeof(LootStandBP_C_ExecuteUbergraph_LootStandBP) == 0x0000B0, "Wrong size on LootStandBP_C_ExecuteUbergraph_LootStandBP");
static_assert(offsetof(LootStandBP_C_ExecuteUbergraph_LootStandBP, EntryPoint) == 0x000000, "Member 'LootStandBP_C_ExecuteUbergraph_LootStandBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(LootStandBP_C_ExecuteUbergraph_LootStandBP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'LootStandBP_C_ExecuteUbergraph_LootStandBP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStandBP_C_ExecuteUbergraph_LootStandBP, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'LootStandBP_C_ExecuteUbergraph_LootStandBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStandBP_C_ExecuteUbergraph_LootStandBP, K2Node_Event_Alpha) == 0x00000C, "Member 'LootStandBP_C_ExecuteUbergraph_LootStandBP::K2Node_Event_Alpha' has a wrong offset!");
static_assert(offsetof(LootStandBP_C_ExecuteUbergraph_LootStandBP, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'LootStandBP_C_ExecuteUbergraph_LootStandBP::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStandBP_C_ExecuteUbergraph_LootStandBP, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'LootStandBP_C_ExecuteUbergraph_LootStandBP::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStandBP_C_ExecuteUbergraph_LootStandBP, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'LootStandBP_C_ExecuteUbergraph_LootStandBP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStandBP_C_ExecuteUbergraph_LootStandBP, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000024, "Member 'LootStandBP_C_ExecuteUbergraph_LootStandBP::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function LootStandBP.LootStandBP_C.OpenUpdate_Cosmetic
// 0x0004 (0x0004 - 0x0000)
struct LootStandBP_C_OpenUpdate_Cosmetic final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LootStandBP_C_OpenUpdate_Cosmetic) == 0x000004, "Wrong alignment on LootStandBP_C_OpenUpdate_Cosmetic");
static_assert(sizeof(LootStandBP_C_OpenUpdate_Cosmetic) == 0x000004, "Wrong size on LootStandBP_C_OpenUpdate_Cosmetic");
static_assert(offsetof(LootStandBP_C_OpenUpdate_Cosmetic, Alpha) == 0x000000, "Member 'LootStandBP_C_OpenUpdate_Cosmetic::Alpha' has a wrong offset!");

// Function LootStandBP.LootStandBP_C.SetInteractMaterial
// 0x0001 (0x0001 - 0x0000)
struct LootStandBP_C_SetInteractMaterial final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LootStandBP_C_SetInteractMaterial) == 0x000001, "Wrong alignment on LootStandBP_C_SetInteractMaterial");
static_assert(sizeof(LootStandBP_C_SetInteractMaterial) == 0x000001, "Wrong size on LootStandBP_C_SetInteractMaterial");
static_assert(offsetof(LootStandBP_C_SetInteractMaterial, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'LootStandBP_C_SetInteractMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function LootStandBP.LootStandBP_C.Spawn Loot
// 0x0010 (0x0010 - 0x0000)
struct LootStandBP_C_Spawn_Loot final
{
public:
	class APickupActor_C*                         Spawned_Pickup;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APickupActor_C*                         CallFunc_Spawn_Loot_Spawned_Pickup;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LootStandBP_C_Spawn_Loot) == 0x000008, "Wrong alignment on LootStandBP_C_Spawn_Loot");
static_assert(sizeof(LootStandBP_C_Spawn_Loot) == 0x000010, "Wrong size on LootStandBP_C_Spawn_Loot");
static_assert(offsetof(LootStandBP_C_Spawn_Loot, Spawned_Pickup) == 0x000000, "Member 'LootStandBP_C_Spawn_Loot::Spawned_Pickup' has a wrong offset!");
static_assert(offsetof(LootStandBP_C_Spawn_Loot, CallFunc_Spawn_Loot_Spawned_Pickup) == 0x000008, "Member 'LootStandBP_C_Spawn_Loot::CallFunc_Spawn_Loot_Spawned_Pickup' has a wrong offset!");

}

