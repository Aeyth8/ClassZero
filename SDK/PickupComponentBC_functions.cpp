#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PickupComponentBC

#include "Basic.hpp"

#include "PickupComponentBC_classes.hpp"
#include "PickupComponentBC_parameters.hpp"


namespace SDK
{

// Function PickupComponentBC.PickupComponentBC_C.OnGrantedPower__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UPickupComponentBC_C::OnGrantedPower__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponentBC_C", "OnGrantedPower__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PickupComponentBC.PickupComponentBC_C.ExecuteUbergraph_PickupComponentBC
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPickupComponentBC_C::ExecuteUbergraph_PickupComponentBC(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponentBC_C", "ExecuteUbergraph_PickupComponentBC");

	Params::PickupComponentBC_C_ExecuteUbergraph_PickupComponentBC Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PickupComponentBC.PickupComponentBC_C.InteractionStarted
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void UPickupComponentBC_C::InteractionStarted(const struct FInteractionPayload& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponentBC_C", "InteractionStarted");

	Params::PickupComponentBC_C_InteractionStarted Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PickupComponentBC.PickupComponentBC_C.GrantPowers
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)

void UPickupComponentBC_C::GrantPowers(const struct FInteractionPayload& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponentBC_C", "GrantPowers");

	Params::PickupComponentBC_C_GrantPowers Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PickupComponentBC.PickupComponentBC_C.PrintErrorMessageForPower
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Power_Type                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPickupComponentBC_C::PrintErrorMessageForPower(class UClass* Power_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponentBC_C", "PrintErrorMessageForPower");

	Params::PickupComponentBC_C_PrintErrorMessageForPower Parms{};

	Parms.Power_Type = Power_Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PickupComponentBC.PickupComponentBC_C.CacheRuntimeData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPowerRuntimeData                RuntimeData_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPickupComponentBC_C::CacheRuntimeData(const struct FPowerRuntimeData& RuntimeData_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponentBC_C", "CacheRuntimeData");

	Params::PickupComponentBC_C_CacheRuntimeData Parms{};

	Parms.RuntimeData_0 = std::move(RuntimeData_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PickupComponentBC.PickupComponentBC_C.CanActivate
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UPickupComponentBC_C::CanActivate(const struct FInteractionPayload& Payload) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponentBC_C", "CanActivate");

	Params::PickupComponentBC_C_CanActivate Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PickupComponentBC.PickupComponentBC_C.GetInactiveContextDescription
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UPickupComponentBC_C::GetInactiveContextDescription(const struct FInteractionPayload& Payload) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponentBC_C", "GetInactiveContextDescription");

	Params::PickupComponentBC_C_GetInactiveContextDescription Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PickupComponentBC.PickupComponentBC_C.PrintNoPowersWarning
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent, Const)

void UPickupComponentBC_C::PrintNoPowersWarning() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponentBC_C", "PrintNoPowersWarning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PickupComponentBC.PickupComponentBC_C.GetDropLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          WorldPosition                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPickupComponentBC_C::GetDropLocation(struct FVector* WorldPosition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PickupComponentBC_C", "GetDropLocation");

	Params::PickupComponentBC_C_GetDropLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WorldPosition != nullptr)
		*WorldPosition = std::move(Parms.WorldPosition);
}

}

