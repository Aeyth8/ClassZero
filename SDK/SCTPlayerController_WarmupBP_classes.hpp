#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SCTPlayerController_WarmupBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SCT_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SCTPlayerController_WarmupBP.SCTPlayerController_WarmupBP_C
// 0x0090 (0x06B8 - 0x0628)
class ASCTPlayerController_WarmupBP_C final : public ASCTPlayerController_Warmup
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0628(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UPlayerHapticsComponent*                PlayerHaptics;                                     // 0x0630(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextChatComponent_C*                   TextChatComponent;                                 // 0x0638(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnGetUserCustomization;                            // 0x0640(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UFCTGameInstanceBP_C*                   GameInstance;                                      // 0x0650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATextChatActorObject_C*                 TextChatActorObject;                               // 0x0658(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPlayerStateAvailableOnClient;                   // 0x0660(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_661[0x7];                                      // 0x0661(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             On_RightTriggerPressed;                            // 0x0668(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             On_LeftTriggerPressed;                             // 0x0678(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             On_RightFaceButtonPressed;                         // 0x0688(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             On_TopFaceButtonPressed;                           // 0x0698(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             On_LeftFaceButtonPressed;                          // 0x06A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnGetUserCustomization__DelegateSignature(const class FString& AccelByteId);
	void On_RightTriggerPressed__DelegateSignature();
	void On_LeftTriggerPressed__DelegateSignature();
	void On_RightFaceButtonPressed__DelegateSignature();
	void On_TopFaceButtonPressed__DelegateSignature();
	void On_LeftFaceButtonPressed__DelegateSignature();
	void ExecuteUbergraph_SCTPlayerController_WarmupBP(int32 EntryPoint);
	void OnXboxUserLogOut();
	void OnConsoleLaunchMultiplayerIntent();
	void OnConsoleLaunchIntent();
	void OnAcceptConsoleInvite();
	void BindWaitForClientPlayerStateSync();
	void PlayerStateReceivedOnClient(class ASCTPlayerState* PlayerState_0);
	void ReceivePossess(class APawn* PossessedPawn);
	void K2_OnGrantedPassengerLogInformation(const struct FPassengerLogInformation& LogInformation);
	void ReceiveBeginPlay();
	void InpActEvt_Gamepad_FaceButton_Left_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_Gamepad_FaceButton_Right_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_Gamepad_FaceButton_Top_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_3(const struct FKey& Key);
	void InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_4(const struct FKey& Key);
	void InpActEvt_EscapeAMenu_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_ToggleAllChat_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_AnyKey_K2Node_InputKeyEvent_5(const struct FKey& Key);
	void OnSuccess_3829012A40D2A536CF369CB4866BD682();
	void OnFail_3829012A40D2A536CF369CB4866BD682();
	void OnSuccess_3829012A40D2A536CF369CB418061E94();
	void OnFail_3829012A40D2A536CF369CB418061E94();
	void OnSuccess_8F3745264A88E933AFF02986D5EE6F45();
	void OnFail_8F3745264A88E933AFF02986D5EE6F45();
	void OnSuccess_8F3745264A88E933AFF0298630127A71();
	void OnFail_8F3745264A88E933AFF0298630127A71();
	void OnSuccess_8F3745264A88E933AFF02986097AF462();
	void OnFail_8F3745264A88E933AFF02986097AF462();
	void SetGameInstanceReference();
	void SpawnAndSetTextChatActorObject();
	void OnRep_bIsPlayerStateAvailableOnClient();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SCTPlayerController_WarmupBP_C">();
	}
	static class ASCTPlayerController_WarmupBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASCTPlayerController_WarmupBP_C>();
	}
};
static_assert(alignof(ASCTPlayerController_WarmupBP_C) == 0x000008, "Wrong alignment on ASCTPlayerController_WarmupBP_C");
static_assert(sizeof(ASCTPlayerController_WarmupBP_C) == 0x0006B8, "Wrong size on ASCTPlayerController_WarmupBP_C");
static_assert(offsetof(ASCTPlayerController_WarmupBP_C, UberGraphFrame) == 0x000628, "Member 'ASCTPlayerController_WarmupBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASCTPlayerController_WarmupBP_C, PlayerHaptics) == 0x000630, "Member 'ASCTPlayerController_WarmupBP_C::PlayerHaptics' has a wrong offset!");
static_assert(offsetof(ASCTPlayerController_WarmupBP_C, TextChatComponent) == 0x000638, "Member 'ASCTPlayerController_WarmupBP_C::TextChatComponent' has a wrong offset!");
static_assert(offsetof(ASCTPlayerController_WarmupBP_C, OnGetUserCustomization) == 0x000640, "Member 'ASCTPlayerController_WarmupBP_C::OnGetUserCustomization' has a wrong offset!");
static_assert(offsetof(ASCTPlayerController_WarmupBP_C, GameInstance) == 0x000650, "Member 'ASCTPlayerController_WarmupBP_C::GameInstance' has a wrong offset!");
static_assert(offsetof(ASCTPlayerController_WarmupBP_C, TextChatActorObject) == 0x000658, "Member 'ASCTPlayerController_WarmupBP_C::TextChatActorObject' has a wrong offset!");
static_assert(offsetof(ASCTPlayerController_WarmupBP_C, bIsPlayerStateAvailableOnClient) == 0x000660, "Member 'ASCTPlayerController_WarmupBP_C::bIsPlayerStateAvailableOnClient' has a wrong offset!");
static_assert(offsetof(ASCTPlayerController_WarmupBP_C, On_RightTriggerPressed) == 0x000668, "Member 'ASCTPlayerController_WarmupBP_C::On_RightTriggerPressed' has a wrong offset!");
static_assert(offsetof(ASCTPlayerController_WarmupBP_C, On_LeftTriggerPressed) == 0x000678, "Member 'ASCTPlayerController_WarmupBP_C::On_LeftTriggerPressed' has a wrong offset!");
static_assert(offsetof(ASCTPlayerController_WarmupBP_C, On_RightFaceButtonPressed) == 0x000688, "Member 'ASCTPlayerController_WarmupBP_C::On_RightFaceButtonPressed' has a wrong offset!");
static_assert(offsetof(ASCTPlayerController_WarmupBP_C, On_TopFaceButtonPressed) == 0x000698, "Member 'ASCTPlayerController_WarmupBP_C::On_TopFaceButtonPressed' has a wrong offset!");
static_assert(offsetof(ASCTPlayerController_WarmupBP_C, On_LeftFaceButtonPressed) == 0x0006A8, "Member 'ASCTPlayerController_WarmupBP_C::On_LeftFaceButtonPressed' has a wrong offset!");

}

