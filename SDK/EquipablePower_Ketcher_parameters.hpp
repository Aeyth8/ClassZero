#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EquipablePower_Ketcher

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "E_ItemAnimation_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function EquipablePower_Ketcher.EquipablePower_Ketcher_C.ExecuteUbergraph_EquipablePower_Ketcher
// 0x00B8 (0x00B8 - 0x0000)
struct EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0008(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0018(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x003C(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ItemAnimation                               K2Node_CustomEvent_ItemAnimation;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x00A0(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher) == 0x000008, "Wrong alignment on EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher");
static_assert(sizeof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher) == 0x0000B8, "Wrong size on EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher");
static_assert(offsetof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher, EntryPoint) == 0x000000, "Member 'EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher::EntryPoint' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher, Temp_bool_IsClosed_Variable_1) == 0x000006, "Member 'EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher, Temp_bool_Has_Been_Initd_Variable) == 0x000007, "Member 'EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher, Temp_delegate_Variable) == 0x000008, "Member 'EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher, Temp_struct_Variable) == 0x000018, "Member 'EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher, CallFunc_HasAuthority_ReturnValue_1) == 0x000028, "Member 'EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00002C, "Member 'EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher, CallFunc_IsDedicatedServer_ReturnValue) == 0x000038, "Member 'EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher, Temp_delegate_Variable_1) == 0x00003C, "Member 'EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher, Temp_bool_Has_Been_Initd_Variable_1) == 0x00004C, "Member 'EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher, CallFunc_PostAkEvent_ReturnValue) == 0x000050, "Member 'EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000054, "Member 'EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000058, "Member 'EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000068, "Member 'EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher, CallFunc_GetOwner_ReturnValue) == 0x000070, "Member 'EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher, K2Node_CustomEvent_ItemAnimation) == 0x000078, "Member 'EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher::K2Node_CustomEvent_ItemAnimation' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher, K2Node_DynamicCast_AsCharacter) == 0x000080, "Member 'EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher, K2Node_DynamicCast_AsCharacter_SCTBP) == 0x000090, "Member 'EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher::K2Node_DynamicCast_AsCharacter_SCTBP' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher, Temp_struct_Variable_1) == 0x0000A0, "Member 'EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher, CallFunc_PostAkEvent_ReturnValue_1) == 0x0000B0, "Member 'EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");

// Function EquipablePower_Ketcher.EquipablePower_Ketcher_C.ItemAnimation
// 0x0001 (0x0001 - 0x0000)
struct EquipablePower_Ketcher_C_ItemAnimation final
{
public:
	E_ItemAnimation                               ItemAnimation_0;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EquipablePower_Ketcher_C_ItemAnimation) == 0x000001, "Wrong alignment on EquipablePower_Ketcher_C_ItemAnimation");
static_assert(sizeof(EquipablePower_Ketcher_C_ItemAnimation) == 0x000001, "Wrong size on EquipablePower_Ketcher_C_ItemAnimation");
static_assert(offsetof(EquipablePower_Ketcher_C_ItemAnimation, ItemAnimation_0) == 0x000000, "Member 'EquipablePower_Ketcher_C_ItemAnimation::ItemAnimation_0' has a wrong offset!");

// Function EquipablePower_Ketcher.EquipablePower_Ketcher_C.CalculateThrowTargets
// 0x0248 (0x0248 - 0x0000)
struct EquipablePower_Ketcher_C_CalculateThrowTargets final
{
public:
	class ACharacter*                             Target;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Closest;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacter*>                     Players;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x00A0(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x00C0(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter_1;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0130(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x01C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EquipablePower_Ketcher_C_CalculateThrowTargets) == 0x000008, "Wrong alignment on EquipablePower_Ketcher_C_CalculateThrowTargets");
static_assert(sizeof(EquipablePower_Ketcher_C_CalculateThrowTargets) == 0x000248, "Wrong size on EquipablePower_Ketcher_C_CalculateThrowTargets");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, Target) == 0x000000, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::Target' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, Closest) == 0x000008, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::Closest' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, Players) == 0x000010, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::Players' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, Temp_int_Array_Index_Variable) == 0x000020, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000030, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_GetCameraLocation_ReturnValue) == 0x000040, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, K2Node_DynamicCast_AsCharacter) == 0x000050, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_GetCameraRotation_ReturnValue) == 0x00005C, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, K2Node_MakeArray_Array) == 0x000068, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_GetForwardVector_ReturnValue) == 0x000078, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000084, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_GetSocketLocation_ReturnValue) == 0x000090, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, K2Node_MakeArray_Array_1) == 0x0000A0, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B0, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_SphereOverlapActors_OutActors) == 0x0000C0, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_SphereOverlapActors_ReturnValue) == 0x0000D0, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_Array_Length_ReturnValue) == 0x0000D4, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_Less_IntInt_ReturnValue) == 0x0000D8, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000E8, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, K2Node_DynamicCast_AsCharacter_1) == 0x0000F8, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::K2Node_DynamicCast_AsCharacter_1' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, K2Node_DynamicCast_bSuccess_1) == 0x000100, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000104, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_Normal_ReturnValue) == 0x000110, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_Dot_VectorVector_ReturnValue) == 0x00011C, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000120, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_Add_FloatFloat_ReturnValue) == 0x00012C, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_LineTraceSingle_OutHit) == 0x000130, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_LineTraceSingle_ReturnValue) == 0x0001BC, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001C0, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001C4, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0001C5, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_BreakHitResult_bBlockingHit) == 0x0001C6, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001C7, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_BreakHitResult_Time) == 0x0001C8, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_BreakHitResult_Distance) == 0x0001CC, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_BreakHitResult_Location) == 0x0001D0, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_BreakHitResult_ImpactPoint) == 0x0001DC, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_BreakHitResult_Normal) == 0x0001E8, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_BreakHitResult_ImpactNormal) == 0x0001F4, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_BreakHitResult_PhysMat) == 0x000200, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_BreakHitResult_HitActor) == 0x000208, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_BreakHitResult_HitComponent) == 0x000210, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_BreakHitResult_HitBoneName) == 0x000218, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_BreakHitResult_HitItem) == 0x000220, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_BreakHitResult_FaceIndex) == 0x000224, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_BreakHitResult_TraceStart) == 0x000228, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_BreakHitResult_TraceEnd) == 0x000234, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_BooleanAND_ReturnValue) == 0x000240, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_CalculateThrowTargets, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000241, "Member 'EquipablePower_Ketcher_C_CalculateThrowTargets::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function EquipablePower_Ketcher.EquipablePower_Ketcher_C.GetSpawnPoint
// 0x0024 (0x0024 - 0x0000)
struct EquipablePower_Ketcher_C_GetSpawnPoint final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EquipablePower_Ketcher_C_GetSpawnPoint) == 0x000004, "Wrong alignment on EquipablePower_Ketcher_C_GetSpawnPoint");
static_assert(sizeof(EquipablePower_Ketcher_C_GetSpawnPoint) == 0x000024, "Wrong size on EquipablePower_Ketcher_C_GetSpawnPoint");
static_assert(offsetof(EquipablePower_Ketcher_C_GetSpawnPoint, ReturnValue) == 0x000000, "Member 'EquipablePower_Ketcher_C_GetSpawnPoint::ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_GetSpawnPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'EquipablePower_Ketcher_C_GetSpawnPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_GetSpawnPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x000018, "Member 'EquipablePower_Ketcher_C_GetSpawnPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function EquipablePower_Ketcher.EquipablePower_Ketcher_C.InterpReticleLocation
// 0x0034 (0x0034 - 0x0000)
struct EquipablePower_Ketcher_C_InterpReticleLocation final
{
public:
	struct FVector                                Target;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EquipablePower_Ketcher_C_InterpReticleLocation) == 0x000004, "Wrong alignment on EquipablePower_Ketcher_C_InterpReticleLocation");
static_assert(sizeof(EquipablePower_Ketcher_C_InterpReticleLocation) == 0x000034, "Wrong size on EquipablePower_Ketcher_C_InterpReticleLocation");
static_assert(offsetof(EquipablePower_Ketcher_C_InterpReticleLocation, Target) == 0x000000, "Member 'EquipablePower_Ketcher_C_InterpReticleLocation::Target' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_InterpReticleLocation, ReturnValue) == 0x00000C, "Member 'EquipablePower_Ketcher_C_InterpReticleLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_InterpReticleLocation, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000018, "Member 'EquipablePower_Ketcher_C_InterpReticleLocation::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_InterpReticleLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00001C, "Member 'EquipablePower_Ketcher_C_InterpReticleLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_InterpReticleLocation, CallFunc_VInterpTo_ReturnValue) == 0x000028, "Member 'EquipablePower_Ketcher_C_InterpReticleLocation::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");

// Function EquipablePower_Ketcher.EquipablePower_Ketcher_C.BreakBottle
// 0x0020 (0x0020 - 0x0000)
struct EquipablePower_Ketcher_C_BreakBottle final
{
public:
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_1;     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EquipablePower_Ketcher_C_BreakBottle) == 0x000008, "Wrong alignment on EquipablePower_Ketcher_C_BreakBottle");
static_assert(sizeof(EquipablePower_Ketcher_C_BreakBottle) == 0x000020, "Wrong size on EquipablePower_Ketcher_C_BreakBottle");
static_assert(offsetof(EquipablePower_Ketcher_C_BreakBottle, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000000, "Member 'EquipablePower_Ketcher_C_BreakBottle::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_BreakBottle, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000010, "Member 'EquipablePower_Ketcher_C_BreakBottle::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipablePower_Ketcher_C_BreakBottle, CallFunc_SpawnEmitterAtLocation_ReturnValue_1) == 0x000018, "Member 'EquipablePower_Ketcher_C_BreakBottle::CallFunc_SpawnEmitterAtLocation_ReturnValue_1' has a wrong offset!");

}

