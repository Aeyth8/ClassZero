#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CM_DLCGridPanel

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function CM_DLCGridPanel.CM_DLCGridPanel_C.ExecuteUbergraph_CM_DLCGridPanel
// 0x0028 (0x0028 - 0x0000)
struct CM_DLCGridPanel_C_ExecuteUbergraph_CM_DLCGridPanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAccelByteGIS*                          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x0014(0x0008)(NoDestructor)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x001C(0x0008)(NoDestructor)
};
static_assert(alignof(CM_DLCGridPanel_C_ExecuteUbergraph_CM_DLCGridPanel) == 0x000008, "Wrong alignment on CM_DLCGridPanel_C_ExecuteUbergraph_CM_DLCGridPanel");
static_assert(sizeof(CM_DLCGridPanel_C_ExecuteUbergraph_CM_DLCGridPanel) == 0x000028, "Wrong size on CM_DLCGridPanel_C_ExecuteUbergraph_CM_DLCGridPanel");
static_assert(offsetof(CM_DLCGridPanel_C_ExecuteUbergraph_CM_DLCGridPanel, EntryPoint) == 0x000000, "Member 'CM_DLCGridPanel_C_ExecuteUbergraph_CM_DLCGridPanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(CM_DLCGridPanel_C_ExecuteUbergraph_CM_DLCGridPanel, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'CM_DLCGridPanel_C_ExecuteUbergraph_CM_DLCGridPanel::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_DLCGridPanel_C_ExecuteUbergraph_CM_DLCGridPanel, K2Node_Event_IsDesignTime) == 0x000010, "Member 'CM_DLCGridPanel_C_ExecuteUbergraph_CM_DLCGridPanel::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(CM_DLCGridPanel_C_ExecuteUbergraph_CM_DLCGridPanel, K2Node_Event_InFocusEvent_1) == 0x000014, "Member 'CM_DLCGridPanel_C_ExecuteUbergraph_CM_DLCGridPanel::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(CM_DLCGridPanel_C_ExecuteUbergraph_CM_DLCGridPanel, K2Node_Event_InFocusEvent) == 0x00001C, "Member 'CM_DLCGridPanel_C_ExecuteUbergraph_CM_DLCGridPanel::K2Node_Event_InFocusEvent' has a wrong offset!");

// Function CM_DLCGridPanel.CM_DLCGridPanel_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct CM_DLCGridPanel_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(CM_DLCGridPanel_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on CM_DLCGridPanel_C_OnRemovedFromFocusPath");
static_assert(sizeof(CM_DLCGridPanel_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on CM_DLCGridPanel_C_OnRemovedFromFocusPath");
static_assert(offsetof(CM_DLCGridPanel_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'CM_DLCGridPanel_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function CM_DLCGridPanel.CM_DLCGridPanel_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct CM_DLCGridPanel_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(CM_DLCGridPanel_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on CM_DLCGridPanel_C_OnAddedToFocusPath");
static_assert(sizeof(CM_DLCGridPanel_C_OnAddedToFocusPath) == 0x000008, "Wrong size on CM_DLCGridPanel_C_OnAddedToFocusPath");
static_assert(offsetof(CM_DLCGridPanel_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'CM_DLCGridPanel_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function CM_DLCGridPanel.CM_DLCGridPanel_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct CM_DLCGridPanel_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CM_DLCGridPanel_C_PreConstruct) == 0x000001, "Wrong alignment on CM_DLCGridPanel_C_PreConstruct");
static_assert(sizeof(CM_DLCGridPanel_C_PreConstruct) == 0x000001, "Wrong size on CM_DLCGridPanel_C_PreConstruct");
static_assert(offsetof(CM_DLCGridPanel_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'CM_DLCGridPanel_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function CM_DLCGridPanel.CM_DLCGridPanel_C.SetDiscountUI
// 0x0028 (0x0028 - 0x0000)
struct CM_DLCGridPanel_C_SetDiscountUI final
{
public:
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0008(0x0018)()
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CM_DLCGridPanel_C_SetDiscountUI) == 0x000008, "Wrong alignment on CM_DLCGridPanel_C_SetDiscountUI");
static_assert(sizeof(CM_DLCGridPanel_C_SetDiscountUI) == 0x000028, "Wrong size on CM_DLCGridPanel_C_SetDiscountUI");
static_assert(offsetof(CM_DLCGridPanel_C_SetDiscountUI, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000000, "Member 'CM_DLCGridPanel_C_SetDiscountUI::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_DLCGridPanel_C_SetDiscountUI, CallFunc_Conv_FloatToText_ReturnValue) == 0x000008, "Member 'CM_DLCGridPanel_C_SetDiscountUI::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_DLCGridPanel_C_SetDiscountUI, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'CM_DLCGridPanel_C_SetDiscountUI::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function CM_DLCGridPanel.CM_DLCGridPanel_C.SetImage
// 0x0001 (0x0001 - 0x0000)
struct CM_DLCGridPanel_C_SetImage final
{
public:
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CM_DLCGridPanel_C_SetImage) == 0x000001, "Wrong alignment on CM_DLCGridPanel_C_SetImage");
static_assert(sizeof(CM_DLCGridPanel_C_SetImage) == 0x000001, "Wrong size on CM_DLCGridPanel_C_SetImage");
static_assert(offsetof(CM_DLCGridPanel_C_SetImage, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000000, "Member 'CM_DLCGridPanel_C_SetImage::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function CM_DLCGridPanel.CM_DLCGridPanel_C.SetPanelSize
// 0x0038 (0x0038 - 0x0000)
struct CM_DLCGridPanel_C_SetPanelSize final
{
public:
	float                                         Multiplier;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PanelSize;                                         // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CM_DLCGridPanel_C_SetPanelSize) == 0x000004, "Wrong alignment on CM_DLCGridPanel_C_SetPanelSize");
static_assert(sizeof(CM_DLCGridPanel_C_SetPanelSize) == 0x000038, "Wrong size on CM_DLCGridPanel_C_SetPanelSize");
static_assert(offsetof(CM_DLCGridPanel_C_SetPanelSize, Multiplier) == 0x000000, "Member 'CM_DLCGridPanel_C_SetPanelSize::Multiplier' has a wrong offset!");
static_assert(offsetof(CM_DLCGridPanel_C_SetPanelSize, PanelSize) == 0x000004, "Member 'CM_DLCGridPanel_C_SetPanelSize::PanelSize' has a wrong offset!");
static_assert(offsetof(CM_DLCGridPanel_C_SetPanelSize, CallFunc_BreakVector2D_X) == 0x00000C, "Member 'CM_DLCGridPanel_C_SetPanelSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(CM_DLCGridPanel_C_SetPanelSize, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'CM_DLCGridPanel_C_SetPanelSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(CM_DLCGridPanel_C_SetPanelSize, CallFunc_MakeVector2D_ReturnValue) == 0x000014, "Member 'CM_DLCGridPanel_C_SetPanelSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_DLCGridPanel_C_SetPanelSize, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x00001C, "Member 'CM_DLCGridPanel_C_SetPanelSize::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_DLCGridPanel_C_SetPanelSize, CallFunc_BreakVector2D_X_1) == 0x000024, "Member 'CM_DLCGridPanel_C_SetPanelSize::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(CM_DLCGridPanel_C_SetPanelSize, CallFunc_BreakVector2D_Y_1) == 0x000028, "Member 'CM_DLCGridPanel_C_SetPanelSize::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(CM_DLCGridPanel_C_SetPanelSize, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'CM_DLCGridPanel_C_SetPanelSize::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_DLCGridPanel_C_SetPanelSize, CallFunc_MakeVector2D_ReturnValue_1) == 0x000030, "Member 'CM_DLCGridPanel_C_SetPanelSize::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");

}

