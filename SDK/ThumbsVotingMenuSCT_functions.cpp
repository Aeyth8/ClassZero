#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ThumbsVotingMenuSCT

#include "Basic.hpp"

#include "ThumbsVotingMenuSCT_classes.hpp"
#include "ThumbsVotingMenuSCT_parameters.hpp"


namespace SDK
{

// Function ThumbsVotingMenuSCT.ThumbsVotingMenuSCT_C.ExecuteUbergraph_ThumbsVotingMenuSCT
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UThumbsVotingMenuSCT_C::ExecuteUbergraph_ThumbsVotingMenuSCT(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThumbsVotingMenuSCT_C", "ExecuteUbergraph_ThumbsVotingMenuSCT");

	Params::ThumbsVotingMenuSCT_C_ExecuteUbergraph_ThumbsVotingMenuSCT Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ThumbsVotingMenuSCT.ThumbsVotingMenuSCT_C.OnVoteMenuMute
// (BlueprintCallable, BlueprintEvent)

void UThumbsVotingMenuSCT_C::OnVoteMenuMute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThumbsVotingMenuSCT_C", "OnVoteMenuMute");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ThumbsVotingMenuSCT.ThumbsVotingMenuSCT_C.OnSCTControllerTypeChanged
// (BlueprintCallable, BlueprintEvent)

void UThumbsVotingMenuSCT_C::OnSCTControllerTypeChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThumbsVotingMenuSCT_C", "OnSCTControllerTypeChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ThumbsVotingMenuSCT.ThumbsVotingMenuSCT_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UThumbsVotingMenuSCT_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThumbsVotingMenuSCT_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ThumbsVotingMenuSCT.ThumbsVotingMenuSCT_C.OnVoteMenuReport
// (BlueprintCallable, BlueprintEvent)

void UThumbsVotingMenuSCT_C::OnVoteMenuReport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThumbsVotingMenuSCT_C", "OnVoteMenuReport");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ThumbsVotingMenuSCT.ThumbsVotingMenuSCT_C.OnVoteMenuShowProfile
// (BlueprintCallable, BlueprintEvent)

void UThumbsVotingMenuSCT_C::OnVoteMenuShowProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThumbsVotingMenuSCT_C", "OnVoteMenuShowProfile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ThumbsVotingMenuSCT.ThumbsVotingMenuSCT_C.OnVotemenuDownVote
// (BlueprintCallable, BlueprintEvent)

void UThumbsVotingMenuSCT_C::OnVotemenuDownVote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThumbsVotingMenuSCT_C", "OnVotemenuDownVote");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ThumbsVotingMenuSCT.ThumbsVotingMenuSCT_C.OnVoteMenuUpVote
// (BlueprintCallable, BlueprintEvent)

void UThumbsVotingMenuSCT_C::OnVoteMenuUpVote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThumbsVotingMenuSCT_C", "OnVoteMenuUpVote");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ThumbsVotingMenuSCT.ThumbsVotingMenuSCT_C.OnVoteMenuRight
// (BlueprintCallable, BlueprintEvent)

void UThumbsVotingMenuSCT_C::OnVoteMenuRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThumbsVotingMenuSCT_C", "OnVoteMenuRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ThumbsVotingMenuSCT.ThumbsVotingMenuSCT_C.OnVoteMenuLeft
// (BlueprintCallable, BlueprintEvent)

void UThumbsVotingMenuSCT_C::OnVoteMenuLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThumbsVotingMenuSCT_C", "OnVoteMenuLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ThumbsVotingMenuSCT.ThumbsVotingMenuSCT_C.BndEvt__ReportButton_K2Node_ComponentBoundEvent_0_Pressed__DelegateSignature
// (BlueprintEvent)

void UThumbsVotingMenuSCT_C::BndEvt__ReportButton_K2Node_ComponentBoundEvent_0_Pressed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThumbsVotingMenuSCT_C", "BndEvt__ReportButton_K2Node_ComponentBoundEvent_0_Pressed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ThumbsVotingMenuSCT.ThumbsVotingMenuSCT_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UThumbsVotingMenuSCT_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThumbsVotingMenuSCT_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ThumbsVotingMenuSCT.ThumbsVotingMenuSCT_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UThumbsVotingMenuSCT_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThumbsVotingMenuSCT_C", "PreConstruct");

	Params::ThumbsVotingMenuSCT_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ThumbsVotingMenuSCT.ThumbsVotingMenuSCT_C.SetPlayerFaction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UThumbsVotingMenuSCT_C::SetPlayerFaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThumbsVotingMenuSCT_C", "SetPlayerFaction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ThumbsVotingMenuSCT.ThumbsVotingMenuSCT_C.DoDesignTime
// (Public, BlueprintCallable, BlueprintEvent)

void UThumbsVotingMenuSCT_C::DoDesignTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThumbsVotingMenuSCT_C", "DoDesignTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ThumbsVotingMenuSCT.ThumbsVotingMenuSCT_C.GetPlayerColorFromInfoComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UThumbsVoteInfoComponent*         ThumbsVoteEntry                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       Portrait                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UThumbsVotingMenuSCT_C::GetPlayerColorFromInfoComponent(class UThumbsVoteInfoComponent* ThumbsVoteEntry, struct FLinearColor* Color, class UTexture2D** Portrait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThumbsVotingMenuSCT_C", "GetPlayerColorFromInfoComponent");

	Params::ThumbsVotingMenuSCT_C_GetPlayerColorFromInfoComponent Parms{};

	Parms.ThumbsVoteEntry = ThumbsVoteEntry;

	UObject::ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);

	if (Portrait != nullptr)
		*Portrait = Parms.Portrait;
}


// Function ThumbsVotingMenuSCT.ThumbsVotingMenuSCT_C.NavigatePlayers
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldNavigateRight                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UThumbsVotingMenuSCT_C::NavigatePlayers(bool ShouldNavigateRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThumbsVotingMenuSCT_C", "NavigatePlayers");

	Params::ThumbsVotingMenuSCT_C_NavigatePlayers Parms{};

	Parms.ShouldNavigateRight = ShouldNavigateRight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ThumbsVotingMenuSCT.ThumbsVotingMenuSCT_C.VoteCurrentPlayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldVoteDown                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UThumbsVotingMenuSCT_C::VoteCurrentPlayer(bool ShouldVoteDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThumbsVotingMenuSCT_C", "VoteCurrentPlayer");

	Params::ThumbsVotingMenuSCT_C_VoteCurrentPlayer Parms{};

	Parms.ShouldVoteDown = ShouldVoteDown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ThumbsVotingMenuSCT.ThumbsVotingMenuSCT_C.ShowCurrentPlayerSystemProfile
// (Public, BlueprintCallable, BlueprintEvent)

void UThumbsVotingMenuSCT_C::ShowCurrentPlayerSystemProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThumbsVotingMenuSCT_C", "ShowCurrentPlayerSystemProfile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ThumbsVotingMenuSCT.ThumbsVotingMenuSCT_C.RefreshGamepadButtonsDisplay
// (Private, BlueprintCallable, BlueprintEvent)

void UThumbsVotingMenuSCT_C::RefreshGamepadButtonsDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThumbsVotingMenuSCT_C", "RefreshGamepadButtonsDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ThumbsVotingMenuSCT.ThumbsVotingMenuSCT_C.ToggleCurrentPlayerMute
// (Private, BlueprintCallable, BlueprintEvent)

void UThumbsVotingMenuSCT_C::ToggleCurrentPlayerMute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThumbsVotingMenuSCT_C", "ToggleCurrentPlayerMute");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ThumbsVotingMenuSCT.ThumbsVotingMenuSCT_C.ReportCurrentPlayer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UThumbsVotingMenuSCT_C::ReportCurrentPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThumbsVotingMenuSCT_C", "ReportCurrentPlayer");

	UObject::ProcessEvent(Func, nullptr);
}

}

