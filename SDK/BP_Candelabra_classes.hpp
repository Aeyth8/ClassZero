#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Candelabra

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Candelabra.BP_Candelabra_C
// 0x0058 (0x0278 - 0x0220)
class ABP_Candelabra_C final : public AActor
{
public:
	class UStaticMeshComponent*                   StaticMeshComponent3;                              // 0x0220(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPointLightComponent*                   LightComponent2;                                   // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPointLightComponent*                   LightComponent1;                                   // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPointLightComponent*                   LightComponent0;                                   // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystemComponent2;                          // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystemComponent1;                          // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystemComponent0;                          // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMeshComponent2;                              // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMeshComponent1;                              // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMeshComponent0;                              // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class USceneComponent*                        SharedRoot;                                        // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Candelabra_C">();
	}
	static class ABP_Candelabra_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Candelabra_C>();
	}
};
static_assert(alignof(ABP_Candelabra_C) == 0x000008, "Wrong alignment on ABP_Candelabra_C");
static_assert(sizeof(ABP_Candelabra_C) == 0x000278, "Wrong size on ABP_Candelabra_C");
static_assert(offsetof(ABP_Candelabra_C, StaticMeshComponent3) == 0x000220, "Member 'ABP_Candelabra_C::StaticMeshComponent3' has a wrong offset!");
static_assert(offsetof(ABP_Candelabra_C, LightComponent2) == 0x000228, "Member 'ABP_Candelabra_C::LightComponent2' has a wrong offset!");
static_assert(offsetof(ABP_Candelabra_C, LightComponent1) == 0x000230, "Member 'ABP_Candelabra_C::LightComponent1' has a wrong offset!");
static_assert(offsetof(ABP_Candelabra_C, LightComponent0) == 0x000238, "Member 'ABP_Candelabra_C::LightComponent0' has a wrong offset!");
static_assert(offsetof(ABP_Candelabra_C, ParticleSystemComponent2) == 0x000240, "Member 'ABP_Candelabra_C::ParticleSystemComponent2' has a wrong offset!");
static_assert(offsetof(ABP_Candelabra_C, ParticleSystemComponent1) == 0x000248, "Member 'ABP_Candelabra_C::ParticleSystemComponent1' has a wrong offset!");
static_assert(offsetof(ABP_Candelabra_C, ParticleSystemComponent0) == 0x000250, "Member 'ABP_Candelabra_C::ParticleSystemComponent0' has a wrong offset!");
static_assert(offsetof(ABP_Candelabra_C, StaticMeshComponent2) == 0x000258, "Member 'ABP_Candelabra_C::StaticMeshComponent2' has a wrong offset!");
static_assert(offsetof(ABP_Candelabra_C, StaticMeshComponent1) == 0x000260, "Member 'ABP_Candelabra_C::StaticMeshComponent1' has a wrong offset!");
static_assert(offsetof(ABP_Candelabra_C, StaticMeshComponent0) == 0x000268, "Member 'ABP_Candelabra_C::StaticMeshComponent0' has a wrong offset!");
static_assert(offsetof(ABP_Candelabra_C, SharedRoot) == 0x000270, "Member 'ABP_Candelabra_C::SharedRoot' has a wrong offset!");

}

