#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RadialProgressBar

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function RadialProgressBar.RadialProgressBar_C.ExecuteUbergraph_RadialProgressBar
// 0x0018 (0x0018 - 0x0000)
struct RadialProgressBar_C_ExecuteUbergraph_RadialProgressBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetMaterial_Material;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RadialProgressBar_C_ExecuteUbergraph_RadialProgressBar) == 0x000008, "Wrong alignment on RadialProgressBar_C_ExecuteUbergraph_RadialProgressBar");
static_assert(sizeof(RadialProgressBar_C_ExecuteUbergraph_RadialProgressBar) == 0x000018, "Wrong size on RadialProgressBar_C_ExecuteUbergraph_RadialProgressBar");
static_assert(offsetof(RadialProgressBar_C_ExecuteUbergraph_RadialProgressBar, EntryPoint) == 0x000000, "Member 'RadialProgressBar_C_ExecuteUbergraph_RadialProgressBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(RadialProgressBar_C_ExecuteUbergraph_RadialProgressBar, CallFunc_GetMaterial_Material) == 0x000008, "Member 'RadialProgressBar_C_ExecuteUbergraph_RadialProgressBar::CallFunc_GetMaterial_Material' has a wrong offset!");
static_assert(offsetof(RadialProgressBar_C_ExecuteUbergraph_RadialProgressBar, K2Node_Event_IsDesignTime) == 0x000010, "Member 'RadialProgressBar_C_ExecuteUbergraph_RadialProgressBar::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function RadialProgressBar.RadialProgressBar_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct RadialProgressBar_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RadialProgressBar_C_PreConstruct) == 0x000001, "Wrong alignment on RadialProgressBar_C_PreConstruct");
static_assert(sizeof(RadialProgressBar_C_PreConstruct) == 0x000001, "Wrong size on RadialProgressBar_C_PreConstruct");
static_assert(offsetof(RadialProgressBar_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'RadialProgressBar_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function RadialProgressBar.RadialProgressBar_C.SetPercentage
// 0x0010 (0x0010 - 0x0000)
struct RadialProgressBar_C_SetPercentage final
{
public:
	float                                         Percentage_0;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetMaterial_Material;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RadialProgressBar_C_SetPercentage) == 0x000008, "Wrong alignment on RadialProgressBar_C_SetPercentage");
static_assert(sizeof(RadialProgressBar_C_SetPercentage) == 0x000010, "Wrong size on RadialProgressBar_C_SetPercentage");
static_assert(offsetof(RadialProgressBar_C_SetPercentage, Percentage_0) == 0x000000, "Member 'RadialProgressBar_C_SetPercentage::Percentage_0' has a wrong offset!");
static_assert(offsetof(RadialProgressBar_C_SetPercentage, CallFunc_FClamp_ReturnValue) == 0x000004, "Member 'RadialProgressBar_C_SetPercentage::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(RadialProgressBar_C_SetPercentage, CallFunc_GetMaterial_Material) == 0x000008, "Member 'RadialProgressBar_C_SetPercentage::CallFunc_GetMaterial_Material' has a wrong offset!");

// Function RadialProgressBar.RadialProgressBar_C.SetBackgroundColor
// 0x0030 (0x0030 - 0x0000)
struct RadialProgressBar_C_SetBackgroundColor final
{
public:
	struct FSlateColor                            Color;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UMaterialInstanceDynamic*               CallFunc_GetMaterial_Material;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RadialProgressBar_C_SetBackgroundColor) == 0x000008, "Wrong alignment on RadialProgressBar_C_SetBackgroundColor");
static_assert(sizeof(RadialProgressBar_C_SetBackgroundColor) == 0x000030, "Wrong size on RadialProgressBar_C_SetBackgroundColor");
static_assert(offsetof(RadialProgressBar_C_SetBackgroundColor, Color) == 0x000000, "Member 'RadialProgressBar_C_SetBackgroundColor::Color' has a wrong offset!");
static_assert(offsetof(RadialProgressBar_C_SetBackgroundColor, CallFunc_GetMaterial_Material) == 0x000028, "Member 'RadialProgressBar_C_SetBackgroundColor::CallFunc_GetMaterial_Material' has a wrong offset!");

// Function RadialProgressBar.RadialProgressBar_C.CreateMaterial
// 0x0008 (0x0008 - 0x0000)
struct RadialProgressBar_C_CreateMaterial final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RadialProgressBar_C_CreateMaterial) == 0x000008, "Wrong alignment on RadialProgressBar_C_CreateMaterial");
static_assert(sizeof(RadialProgressBar_C_CreateMaterial) == 0x000008, "Wrong size on RadialProgressBar_C_CreateMaterial");
static_assert(offsetof(RadialProgressBar_C_CreateMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'RadialProgressBar_C_CreateMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function RadialProgressBar.RadialProgressBar_C.SetPrimaryColor
// 0x0030 (0x0030 - 0x0000)
struct RadialProgressBar_C_SetPrimaryColor final
{
public:
	struct FSlateColor                            Color;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UMaterialInstanceDynamic*               CallFunc_GetMaterial_Material;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RadialProgressBar_C_SetPrimaryColor) == 0x000008, "Wrong alignment on RadialProgressBar_C_SetPrimaryColor");
static_assert(sizeof(RadialProgressBar_C_SetPrimaryColor) == 0x000030, "Wrong size on RadialProgressBar_C_SetPrimaryColor");
static_assert(offsetof(RadialProgressBar_C_SetPrimaryColor, Color) == 0x000000, "Member 'RadialProgressBar_C_SetPrimaryColor::Color' has a wrong offset!");
static_assert(offsetof(RadialProgressBar_C_SetPrimaryColor, CallFunc_GetMaterial_Material) == 0x000028, "Member 'RadialProgressBar_C_SetPrimaryColor::CallFunc_GetMaterial_Material' has a wrong offset!");

// Function RadialProgressBar.RadialProgressBar_C.GetMaterial
// 0x0010 (0x0010 - 0x0000)
struct RadialProgressBar_C_GetMaterial final
{
public:
	class UMaterialInstanceDynamic*               Material_0;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RadialProgressBar_C_GetMaterial) == 0x000008, "Wrong alignment on RadialProgressBar_C_GetMaterial");
static_assert(sizeof(RadialProgressBar_C_GetMaterial) == 0x000010, "Wrong size on RadialProgressBar_C_GetMaterial");
static_assert(offsetof(RadialProgressBar_C_GetMaterial, Material_0) == 0x000000, "Member 'RadialProgressBar_C_GetMaterial::Material_0' has a wrong offset!");
static_assert(offsetof(RadialProgressBar_C_GetMaterial, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'RadialProgressBar_C_GetMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function RadialProgressBar.RadialProgressBar_C.GetBackgroundColor
// 0x0028 (0x0028 - 0x0000)
struct RadialProgressBar_C_GetBackgroundColor final
{
public:
	struct FSlateColor                            Color;                                             // 0x0000(0x0028)(Parm, OutParm)
};
static_assert(alignof(RadialProgressBar_C_GetBackgroundColor) == 0x000008, "Wrong alignment on RadialProgressBar_C_GetBackgroundColor");
static_assert(sizeof(RadialProgressBar_C_GetBackgroundColor) == 0x000028, "Wrong size on RadialProgressBar_C_GetBackgroundColor");
static_assert(offsetof(RadialProgressBar_C_GetBackgroundColor, Color) == 0x000000, "Member 'RadialProgressBar_C_GetBackgroundColor::Color' has a wrong offset!");

// Function RadialProgressBar.RadialProgressBar_C.GetPrimaryColor
// 0x0028 (0x0028 - 0x0000)
struct RadialProgressBar_C_GetPrimaryColor final
{
public:
	struct FSlateColor                            Color;                                             // 0x0000(0x0028)(Parm, OutParm)
};
static_assert(alignof(RadialProgressBar_C_GetPrimaryColor) == 0x000008, "Wrong alignment on RadialProgressBar_C_GetPrimaryColor");
static_assert(sizeof(RadialProgressBar_C_GetPrimaryColor) == 0x000028, "Wrong size on RadialProgressBar_C_GetPrimaryColor");
static_assert(offsetof(RadialProgressBar_C_GetPrimaryColor, Color) == 0x000000, "Member 'RadialProgressBar_C_GetPrimaryColor::Color' has a wrong offset!");

}

