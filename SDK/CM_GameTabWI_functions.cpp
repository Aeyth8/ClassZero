#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CM_GameTabWI

#include "Basic.hpp"

#include "CM_GameTabWI_classes.hpp"
#include "CM_GameTabWI_parameters.hpp"


namespace SDK
{

// Function CM_GameTabWI.CM_GameTabWI_C.ExecuteUbergraph_CM_GameTabWI
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCM_GameTabWI_C::ExecuteUbergraph_CM_GameTabWI(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CM_GameTabWI_C", "ExecuteUbergraph_CM_GameTabWI");

	Params::CM_GameTabWI_C_ExecuteUbergraph_CM_GameTabWI Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CM_GameTabWI.CM_GameTabWI_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCM_GameTabWI_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CM_GameTabWI_C", "Tick");

	Params::CM_GameTabWI_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CM_GameTabWI.CM_GameTabWI_C.BndEvt__CM_GameTabWI_CM_CheckboxWI_K2Node_ComponentBoundEvent_0_StateChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    IsChecked                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCM_GameTabWI_C::BndEvt__CM_GameTabWI_CM_CheckboxWI_K2Node_ComponentBoundEvent_0_StateChanged__DelegateSignature(bool IsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CM_GameTabWI_C", "BndEvt__CM_GameTabWI_CM_CheckboxWI_K2Node_ComponentBoundEvent_0_StateChanged__DelegateSignature");

	Params::CM_GameTabWI_C_BndEvt__CM_GameTabWI_CM_CheckboxWI_K2Node_ComponentBoundEvent_0_StateChanged__DelegateSignature Parms{};

	Parms.IsChecked = IsChecked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CM_GameTabWI.CM_GameTabWI_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UCM_GameTabWI_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CM_GameTabWI_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CM_GameTabWI.CM_GameTabWI_C.Update Cross Play Checkbox
// (BlueprintCallable, BlueprintEvent)

void UCM_GameTabWI_C::Update_Cross_Play_Checkbox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CM_GameTabWI_C", "Update Cross Play Checkbox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CM_GameTabWI.CM_GameTabWI_C.BndEvt__CM_GameTabWI_CM_CheckboxWI_CrossPlay_K2Node_ComponentBoundEvent_2_StateChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    IsChecked                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCM_GameTabWI_C::BndEvt__CM_GameTabWI_CM_CheckboxWI_CrossPlay_K2Node_ComponentBoundEvent_2_StateChanged__DelegateSignature(bool IsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CM_GameTabWI_C", "BndEvt__CM_GameTabWI_CM_CheckboxWI_CrossPlay_K2Node_ComponentBoundEvent_2_StateChanged__DelegateSignature");

	Params::CM_GameTabWI_C_BndEvt__CM_GameTabWI_CM_CheckboxWI_CrossPlay_K2Node_ComponentBoundEvent_2_StateChanged__DelegateSignature Parms{};

	Parms.IsChecked = IsChecked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CM_GameTabWI.CM_GameTabWI_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCM_GameTabWI_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CM_GameTabWI_C", "PreConstruct");

	Params::CM_GameTabWI_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CM_GameTabWI.CM_GameTabWI_C.Set Gamepad Focus
// (BlueprintCallable, BlueprintEvent)

void UCM_GameTabWI_C::Set_Gamepad_Focus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CM_GameTabWI_C", "Set Gamepad Focus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CM_GameTabWI.CM_GameTabWI_C.Update Values
// (BlueprintCallable, BlueprintEvent)

void UCM_GameTabWI_C::Update_Values()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CM_GameTabWI_C", "Update Values");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CM_GameTabWI.CM_GameTabWI_C.BndEvt__CM_GameTabWI_CM_ClickableSubTitleWI_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature
// (BlueprintEvent)

void UCM_GameTabWI_C::BndEvt__CM_GameTabWI_CM_ClickableSubTitleWI_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CM_GameTabWI_C", "BndEvt__CM_GameTabWI_CM_ClickableSubTitleWI_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CM_GameTabWI.CM_GameTabWI_C.Update Tool Tips Checkbox
// (BlueprintCallable, BlueprintEvent)

void UCM_GameTabWI_C::Update_Tool_Tips_Checkbox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CM_GameTabWI_C", "Update Tool Tips Checkbox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CM_GameTabWI.CM_GameTabWI_C.UpdateAndSaveToolTips
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DisableTooltips                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class Ubp_SpecialOptionsSave_C*         SpecialOptions                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCM_GameTabWI_C::UpdateAndSaveToolTips(bool DisableTooltips, class Ubp_SpecialOptionsSave_C* SpecialOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CM_GameTabWI_C", "UpdateAndSaveToolTips");

	Params::CM_GameTabWI_C_UpdateAndSaveToolTips Parms{};

	Parms.DisableTooltips = DisableTooltips;
	Parms.SpecialOptions = SpecialOptions;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CM_GameTabWI.CM_GameTabWI_C.UpdateAndSaveCrossPlayOption
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AllowCrossPlatformPlay                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class Ubp_SpecialOptionsSave_C*         SpecialOptions                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCM_GameTabWI_C::UpdateAndSaveCrossPlayOption(bool AllowCrossPlatformPlay, class Ubp_SpecialOptionsSave_C* SpecialOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CM_GameTabWI_C", "UpdateAndSaveCrossPlayOption");

	Params::CM_GameTabWI_C_UpdateAndSaveCrossPlayOption Parms{};

	Parms.AllowCrossPlatformPlay = AllowCrossPlatformPlay;
	Parms.SpecialOptions = SpecialOptions;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CM_GameTabWI.CM_GameTabWI_C.RecreateGameTabContent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          InFirstRowContent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCM_GameTabWI_C::RecreateGameTabContent(class UWidget* InFirstRowContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CM_GameTabWI_C", "RecreateGameTabContent");

	Params::CM_GameTabWI_C_RecreateGameTabContent Parms{};

	Parms.InFirstRowContent = InFirstRowContent;

	UObject::ProcessEvent(Func, &Parms);
}

}

