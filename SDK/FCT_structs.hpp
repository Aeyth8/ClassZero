#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FCT

#include "Basic.hpp"


namespace SDK
{

// Enum FCT.EInteractionEventLocal
// NumValues: 0x0008
enum class EInteractionEventLocal : uint8
{
	Neutral                                  = 0,
	Clicked                                  = 1,
	Pressed                                  = 2,
	Released                                 = 3,
	Completed                                = 4,
	AbortPress                               = 5,
	AbortRelease                             = 6,
	EInteractionEventLocal_MAX               = 7,
};

// Enum FCT.EInteractionEvent
// NumValues: 0x0006
enum class EInteractionEvent : uint8
{
	Neutral                                  = 0,
	Clicked                                  = 1,
	Pressed                                  = 2,
	Released                                 = 3,
	Completed                                = 4,
	EInteractionEvent_MAX                    = 5,
};

// Enum FCT.EDoorUnlockMode
// NumValues: 0x0005
enum class EDoorUnlockMode : uint8
{
	UnlockByClick                            = 0,
	UnlockByTiming                           = 1,
	UnlockBySequence                         = 2,
	UnlockByKeyCard                          = 3,
	EDoorUnlockMode_MAX                      = 4,
};

// Enum FCT.EMenuWidgetCheckFocusAllowedResult
// NumValues: 0x0004
enum class EMenuWidgetCheckFocusAllowedResult : uint8
{
	NotFound                                 = 0,
	FoundNotAllowed                          = 1,
	FoundAllowed                             = 2,
	EMenuWidgetCheckFocusAllowedResult_MAX   = 3,
};

// Enum FCT.ESonyRegion
// NumValues: 0x0004
enum class ESonyRegion : uint8
{
	NorthAmerica                             = 0,
	Europe                                   = 1,
	Japan                                    = 2,
	ESonyRegion_MAX                          = 3,
};

// Enum FCT.EInteractiveEvent
// NumValues: 0x0004
enum class EInteractiveEvent : uint8
{
	PressReleaseComplete                     = 0,
	ClickedOnly                              = 1,
	PressReleaseOnly                         = 2,
	EInteractiveEvent_MAX                    = 3,
};

// ScriptStruct FCT.LanguageDatum
// 0x0020 (0x0020 - 0x0000)
struct FLanguageDatum final
{
public:
	class FText                                   DisplayName;                                       // 0x0000(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bIsAutoLanguage;                                   // 0x0018(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Order;                                             // 0x001C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLanguageDatum) == 0x000008, "Wrong alignment on FLanguageDatum");
static_assert(sizeof(FLanguageDatum) == 0x000020, "Wrong size on FLanguageDatum");
static_assert(offsetof(FLanguageDatum, DisplayName) == 0x000000, "Member 'FLanguageDatum::DisplayName' has a wrong offset!");
static_assert(offsetof(FLanguageDatum, bIsAutoLanguage) == 0x000018, "Member 'FLanguageDatum::bIsAutoLanguage' has a wrong offset!");
static_assert(offsetof(FLanguageDatum, Order) == 0x00001C, "Member 'FLanguageDatum::Order' has a wrong offset!");

}

