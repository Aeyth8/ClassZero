#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: bp_wi_SymbolEntry

#include "Basic.hpp"

#include "bp_wi_SymbolEntry_classes.hpp"
#include "bp_wi_SymbolEntry_parameters.hpp"


namespace SDK
{

// Function bp_wi_SymbolEntry.bp_wi_SymbolEntry_C.OnSymbolClicked__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CorrectSymbolClicked_0                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void Ubp_wi_SymbolEntry_C::OnSymbolClicked__DelegateSignature(bool CorrectSymbolClicked_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_SymbolEntry_C", "OnSymbolClicked__DelegateSignature");

	Params::bp_wi_SymbolEntry_C_OnSymbolClicked__DelegateSignature Parms{};

	Parms.CorrectSymbolClicked_0 = CorrectSymbolClicked_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_wi_SymbolEntry.bp_wi_SymbolEntry_C.ExecuteUbergraph_bp_wi_SymbolEntry
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Ubp_wi_SymbolEntry_C::ExecuteUbergraph_bp_wi_SymbolEntry(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_SymbolEntry_C", "ExecuteUbergraph_bp_wi_SymbolEntry");

	Params::bp_wi_SymbolEntry_C_ExecuteUbergraph_bp_wi_SymbolEntry Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_wi_SymbolEntry.bp_wi_SymbolEntry_C.BndEvt__ButtonSymbol_K2Node_ComponentBoundEvent_3_OnHovered__DelegateSignature
// (BlueprintEvent)

void Ubp_wi_SymbolEntry_C::BndEvt__ButtonSymbol_K2Node_ComponentBoundEvent_3_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_SymbolEntry_C", "BndEvt__ButtonSymbol_K2Node_ComponentBoundEvent_3_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_wi_SymbolEntry.bp_wi_SymbolEntry_C.BndEvt__ButtonSymbol_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature
// (BlueprintEvent)

void Ubp_wi_SymbolEntry_C::BndEvt__ButtonSymbol_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_SymbolEntry_C", "BndEvt__ButtonSymbol_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_wi_SymbolEntry.bp_wi_SymbolEntry_C.IncorrectSymbolClicked
// (BlueprintCallable, BlueprintEvent)

void Ubp_wi_SymbolEntry_C::IncorrectSymbolClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_SymbolEntry_C", "IncorrectSymbolClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_wi_SymbolEntry.bp_wi_SymbolEntry_C.CorrectSymbolClicked
// (BlueprintCallable, BlueprintEvent)

void Ubp_wi_SymbolEntry_C::CorrectSymbolClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_SymbolEntry_C", "CorrectSymbolClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_wi_SymbolEntry.bp_wi_SymbolEntry_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void Ubp_wi_SymbolEntry_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_wi_SymbolEntry_C", "PreConstruct");

	Params::bp_wi_SymbolEntry_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

