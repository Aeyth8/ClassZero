#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TextChatComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function TextChatComponent.TextChatComponent_C.ExecuteUbergraph_TextChatComponent
// 0x00F0 (0x00F0 - 0x0000)
struct TextChatComponent_C_ExecuteUbergraph_TextChatComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_CustomEvent_Controller;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_Channel_1;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Message_1;                      // 0x0018(0x0018)()
	uint8                                         K2Node_CustomEvent_Channel;                        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState*                        K2Node_CustomEvent_Player_State;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Message;                        // 0x0040(0x0018)()
	class ASCTPlayerState*                        K2Node_DynamicCast_AsSCTPlayer_State;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState*                        K2Node_DynamicCast_AsSCTPlayer_State_1;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASCTPlayerController*>           CallFunc_GetAllActorsOfClass_OutActors;            // 0x0088(0x0010)(ReferenceParm)
	class ASCTPlayerController*                   CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerController_MatchBP_C*         K2Node_DynamicCast_AsSCTPlayer_Controller_Match_BP; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerController_WarmupBP_C*        K2Node_DynamicCast_AsSCTPlayer_Controller_Warmup_BP; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UTextChatWindowWI_C*>            CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x00C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextChatWindowWI_C*                    CallFunc_Array_Get_Item_1;                         // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent) == 0x000008, "Wrong alignment on TextChatComponent_C_ExecuteUbergraph_TextChatComponent");
static_assert(sizeof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent) == 0x0000F0, "Wrong size on TextChatComponent_C_ExecuteUbergraph_TextChatComponent");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, EntryPoint) == 0x000000, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, K2Node_CustomEvent_Controller) == 0x000008, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::K2Node_CustomEvent_Controller' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, K2Node_CustomEvent_Channel_1) == 0x000010, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::K2Node_CustomEvent_Channel_1' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, K2Node_CustomEvent_Message_1) == 0x000018, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::K2Node_CustomEvent_Message_1' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, K2Node_CustomEvent_Channel) == 0x000030, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::K2Node_CustomEvent_Channel' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, K2Node_CustomEvent_Player_State) == 0x000038, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::K2Node_CustomEvent_Player_State' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, K2Node_CustomEvent_Message) == 0x000040, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::K2Node_CustomEvent_Message' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, K2Node_DynamicCast_AsSCTPlayer_State) == 0x000058, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::K2Node_DynamicCast_AsSCTPlayer_State' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, CallFunc_IsValid_ReturnValue_1) == 0x000061, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000064, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, K2Node_SwitchInteger_CmpSuccess) == 0x000068, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, K2Node_DynamicCast_AsSCTPlayer_State_1) == 0x000070, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::K2Node_DynamicCast_AsSCTPlayer_State_1' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, CallFunc_GetAllActorsOfClass_OutActors) == 0x000088, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, CallFunc_Array_Get_Item) == 0x000098, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, K2Node_DynamicCast_AsSCTPlayer_Controller_Match_BP) == 0x0000A8, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::K2Node_DynamicCast_AsSCTPlayer_Controller_Match_BP' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, CallFunc_Less_IntInt_ReturnValue) == 0x0000B1, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, K2Node_DynamicCast_AsSCTPlayer_Controller_Warmup_BP) == 0x0000B8, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::K2Node_DynamicCast_AsSCTPlayer_Controller_Warmup_BP' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, K2Node_DynamicCast_bSuccess_3) == 0x0000C0, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x0000C8, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, CallFunc_GetPlayerController_ReturnValue) == 0x0000D8, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, CallFunc_Array_Get_Item_1) == 0x0000E0, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, CallFunc_IsLocalPlayerController_ReturnValue) == 0x0000E8, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ExecuteUbergraph_TextChatComponent, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000E9, "Member 'TextChatComponent_C_ExecuteUbergraph_TextChatComponent::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function TextChatComponent.TextChatComponent_C.ReceiveMessageMulticast
// 0x0028 (0x0028 - 0x0000)
struct TextChatComponent_C_ReceiveMessageMulticast final
{
public:
	uint8                                         Channel;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState*                        Player_State;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Message;                                           // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(TextChatComponent_C_ReceiveMessageMulticast) == 0x000008, "Wrong alignment on TextChatComponent_C_ReceiveMessageMulticast");
static_assert(sizeof(TextChatComponent_C_ReceiveMessageMulticast) == 0x000028, "Wrong size on TextChatComponent_C_ReceiveMessageMulticast");
static_assert(offsetof(TextChatComponent_C_ReceiveMessageMulticast, Channel) == 0x000000, "Member 'TextChatComponent_C_ReceiveMessageMulticast::Channel' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ReceiveMessageMulticast, Player_State) == 0x000008, "Member 'TextChatComponent_C_ReceiveMessageMulticast::Player_State' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_ReceiveMessageMulticast, Message) == 0x000010, "Member 'TextChatComponent_C_ReceiveMessageMulticast::Message' has a wrong offset!");

// Function TextChatComponent.TextChatComponent_C.SendMessageServer
// 0x0028 (0x0028 - 0x0000)
struct TextChatComponent_C_SendMessageServer final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Channel;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Message;                                           // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(TextChatComponent_C_SendMessageServer) == 0x000008, "Wrong alignment on TextChatComponent_C_SendMessageServer");
static_assert(sizeof(TextChatComponent_C_SendMessageServer) == 0x000028, "Wrong size on TextChatComponent_C_SendMessageServer");
static_assert(offsetof(TextChatComponent_C_SendMessageServer, Controller) == 0x000000, "Member 'TextChatComponent_C_SendMessageServer::Controller' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_SendMessageServer, Channel) == 0x000008, "Member 'TextChatComponent_C_SendMessageServer::Channel' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_SendMessageServer, Message) == 0x000010, "Member 'TextChatComponent_C_SendMessageServer::Message' has a wrong offset!");

// Function TextChatComponent.TextChatComponent_C.Try All Message
// 0x0080 (0x0080 - 0x0000)
struct TextChatComponent_C_Try_All_Message final
{
public:
	class UTextChatWindowWI_C*                    ChatWidget_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCTPlayerState*                        Player_State;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   TextMessage;                                       // 0x0010(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	uint8                                         Channel;                                           // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Construct_Text_Message_ReturnValue;       // 0x0038(0x0018)()
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT_1;             // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerWithinTextingRange_ReturnValue;   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerBlocked_Blocked;                  // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerConsoleCommunicationBlocked_Blocked; // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TextChatComponent_C_Try_All_Message) == 0x000008, "Wrong alignment on TextChatComponent_C_Try_All_Message");
static_assert(sizeof(TextChatComponent_C_Try_All_Message) == 0x000080, "Wrong size on TextChatComponent_C_Try_All_Message");
static_assert(offsetof(TextChatComponent_C_Try_All_Message, ChatWidget_0) == 0x000000, "Member 'TextChatComponent_C_Try_All_Message::ChatWidget_0' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Try_All_Message, Player_State) == 0x000008, "Member 'TextChatComponent_C_Try_All_Message::Player_State' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Try_All_Message, TextMessage) == 0x000010, "Member 'TextChatComponent_C_Try_All_Message::TextMessage' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Try_All_Message, Channel) == 0x000028, "Member 'TextChatComponent_C_Try_All_Message::Channel' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Try_All_Message, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000030, "Member 'TextChatComponent_C_Try_All_Message::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Try_All_Message, CallFunc_Construct_Text_Message_ReturnValue) == 0x000038, "Member 'TextChatComponent_C_Try_All_Message::CallFunc_Construct_Text_Message_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Try_All_Message, K2Node_DynamicCast_AsICharacter_SCT) == 0x000050, "Member 'TextChatComponent_C_Try_All_Message::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Try_All_Message, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'TextChatComponent_C_Try_All_Message::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Try_All_Message, K2Node_DynamicCast_AsICharacter_SCT_1) == 0x000068, "Member 'TextChatComponent_C_Try_All_Message::K2Node_DynamicCast_AsICharacter_SCT_1' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Try_All_Message, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'TextChatComponent_C_Try_All_Message::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Try_All_Message, CallFunc_IsPlayerWithinTextingRange_ReturnValue) == 0x000079, "Member 'TextChatComponent_C_Try_All_Message::CallFunc_IsPlayerWithinTextingRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Try_All_Message, CallFunc_IsPlayerBlocked_Blocked) == 0x00007A, "Member 'TextChatComponent_C_Try_All_Message::CallFunc_IsPlayerBlocked_Blocked' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Try_All_Message, CallFunc_IsPlayerConsoleCommunicationBlocked_Blocked) == 0x00007B, "Member 'TextChatComponent_C_Try_All_Message::CallFunc_IsPlayerConsoleCommunicationBlocked_Blocked' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Try_All_Message, CallFunc_BooleanOR_ReturnValue) == 0x00007C, "Member 'TextChatComponent_C_Try_All_Message::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Try_All_Message, CallFunc_Not_PreBool_ReturnValue) == 0x00007D, "Member 'TextChatComponent_C_Try_All_Message::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function TextChatComponent.TextChatComponent_C.TryPersonoidMessage
// 0x00C0 (0x00C0 - 0x0000)
struct TextChatComponent_C_TryPersonoidMessage final
{
public:
	class UTextChatWindowWI_C*                    ChatWidget_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCTPlayerState*                        Player_State;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   TextMessage;                                       // 0x0010(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	uint8                                         Channel;                                           // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState_Match*                  K2Node_DynamicCast_AsSCTPlayer_State_Match;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Construct_Text_Message_ReturnValue;       // 0x0040(0x0018)()
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT_1;             // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerConsoleCommunicationBlocked_Blocked; // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerBlocked_Blocked;                  // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT_2;             // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAliveBPI_Alive;                         // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3[0x5];                                       // 0x00A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT_3;             // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPersonoidBPI_IsPersonoid;               // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TextChatComponent_C_TryPersonoidMessage) == 0x000008, "Wrong alignment on TextChatComponent_C_TryPersonoidMessage");
static_assert(sizeof(TextChatComponent_C_TryPersonoidMessage) == 0x0000C0, "Wrong size on TextChatComponent_C_TryPersonoidMessage");
static_assert(offsetof(TextChatComponent_C_TryPersonoidMessage, ChatWidget_0) == 0x000000, "Member 'TextChatComponent_C_TryPersonoidMessage::ChatWidget_0' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryPersonoidMessage, Player_State) == 0x000008, "Member 'TextChatComponent_C_TryPersonoidMessage::Player_State' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryPersonoidMessage, TextMessage) == 0x000010, "Member 'TextChatComponent_C_TryPersonoidMessage::TextMessage' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryPersonoidMessage, Channel) == 0x000028, "Member 'TextChatComponent_C_TryPersonoidMessage::Channel' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryPersonoidMessage, K2Node_DynamicCast_AsSCTPlayer_State_Match) == 0x000030, "Member 'TextChatComponent_C_TryPersonoidMessage::K2Node_DynamicCast_AsSCTPlayer_State_Match' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryPersonoidMessage, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'TextChatComponent_C_TryPersonoidMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryPersonoidMessage, CallFunc_Construct_Text_Message_ReturnValue) == 0x000040, "Member 'TextChatComponent_C_TryPersonoidMessage::CallFunc_Construct_Text_Message_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryPersonoidMessage, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000058, "Member 'TextChatComponent_C_TryPersonoidMessage::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryPersonoidMessage, K2Node_DynamicCast_AsICharacter_SCT) == 0x000060, "Member 'TextChatComponent_C_TryPersonoidMessage::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryPersonoidMessage, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'TextChatComponent_C_TryPersonoidMessage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryPersonoidMessage, K2Node_DynamicCast_AsICharacter_SCT_1) == 0x000078, "Member 'TextChatComponent_C_TryPersonoidMessage::K2Node_DynamicCast_AsICharacter_SCT_1' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryPersonoidMessage, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'TextChatComponent_C_TryPersonoidMessage::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryPersonoidMessage, CallFunc_IsPlayerConsoleCommunicationBlocked_Blocked) == 0x000089, "Member 'TextChatComponent_C_TryPersonoidMessage::CallFunc_IsPlayerConsoleCommunicationBlocked_Blocked' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryPersonoidMessage, CallFunc_IsPlayerBlocked_Blocked) == 0x00008A, "Member 'TextChatComponent_C_TryPersonoidMessage::CallFunc_IsPlayerBlocked_Blocked' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryPersonoidMessage, CallFunc_BooleanOR_ReturnValue) == 0x00008B, "Member 'TextChatComponent_C_TryPersonoidMessage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryPersonoidMessage, K2Node_DynamicCast_AsICharacter_SCT_2) == 0x000090, "Member 'TextChatComponent_C_TryPersonoidMessage::K2Node_DynamicCast_AsICharacter_SCT_2' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryPersonoidMessage, K2Node_DynamicCast_bSuccess_3) == 0x0000A0, "Member 'TextChatComponent_C_TryPersonoidMessage::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryPersonoidMessage, CallFunc_Not_PreBool_ReturnValue) == 0x0000A1, "Member 'TextChatComponent_C_TryPersonoidMessage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryPersonoidMessage, CallFunc_IsAliveBPI_Alive) == 0x0000A2, "Member 'TextChatComponent_C_TryPersonoidMessage::CallFunc_IsAliveBPI_Alive' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryPersonoidMessage, K2Node_DynamicCast_AsICharacter_SCT_3) == 0x0000A8, "Member 'TextChatComponent_C_TryPersonoidMessage::K2Node_DynamicCast_AsICharacter_SCT_3' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryPersonoidMessage, K2Node_DynamicCast_bSuccess_4) == 0x0000B8, "Member 'TextChatComponent_C_TryPersonoidMessage::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryPersonoidMessage, CallFunc_IsPersonoidBPI_IsPersonoid) == 0x0000B9, "Member 'TextChatComponent_C_TryPersonoidMessage::CallFunc_IsPersonoidBPI_IsPersonoid' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryPersonoidMessage, CallFunc_BooleanAND_ReturnValue) == 0x0000BA, "Member 'TextChatComponent_C_TryPersonoidMessage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryPersonoidMessage, CallFunc_BooleanAND_ReturnValue_1) == 0x0000BB, "Member 'TextChatComponent_C_TryPersonoidMessage::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function TextChatComponent.TextChatComponent_C.TryRoombaMessage
// 0x0090 (0x0090 - 0x0000)
struct TextChatComponent_C_TryRoombaMessage final
{
public:
	class UTextChatWindowWI_C*                    ChatWidget_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCTPlayerState*                        Player_State;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   TextMessage;                                       // 0x0010(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	uint8                                         Channel;                                           // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState_Match*                  K2Node_DynamicCast_AsSCTPlayer_State_Match;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Construct_Text_Message_ReturnValue;       // 0x0048(0x0018)()
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT_1;             // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerAlive_ReturnValue;                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerBlocked_Blocked;                  // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerConsoleCommunicationBlocked_Blocked; // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TextChatComponent_C_TryRoombaMessage) == 0x000008, "Wrong alignment on TextChatComponent_C_TryRoombaMessage");
static_assert(sizeof(TextChatComponent_C_TryRoombaMessage) == 0x000090, "Wrong size on TextChatComponent_C_TryRoombaMessage");
static_assert(offsetof(TextChatComponent_C_TryRoombaMessage, ChatWidget_0) == 0x000000, "Member 'TextChatComponent_C_TryRoombaMessage::ChatWidget_0' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryRoombaMessage, Player_State) == 0x000008, "Member 'TextChatComponent_C_TryRoombaMessage::Player_State' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryRoombaMessage, TextMessage) == 0x000010, "Member 'TextChatComponent_C_TryRoombaMessage::TextMessage' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryRoombaMessage, Channel) == 0x000028, "Member 'TextChatComponent_C_TryRoombaMessage::Channel' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryRoombaMessage, K2Node_DynamicCast_AsSCTPlayer_State_Match) == 0x000030, "Member 'TextChatComponent_C_TryRoombaMessage::K2Node_DynamicCast_AsSCTPlayer_State_Match' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryRoombaMessage, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'TextChatComponent_C_TryRoombaMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryRoombaMessage, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000040, "Member 'TextChatComponent_C_TryRoombaMessage::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryRoombaMessage, CallFunc_Construct_Text_Message_ReturnValue) == 0x000048, "Member 'TextChatComponent_C_TryRoombaMessage::CallFunc_Construct_Text_Message_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryRoombaMessage, K2Node_DynamicCast_AsICharacter_SCT) == 0x000060, "Member 'TextChatComponent_C_TryRoombaMessage::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryRoombaMessage, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'TextChatComponent_C_TryRoombaMessage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryRoombaMessage, K2Node_DynamicCast_AsICharacter_SCT_1) == 0x000078, "Member 'TextChatComponent_C_TryRoombaMessage::K2Node_DynamicCast_AsICharacter_SCT_1' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryRoombaMessage, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'TextChatComponent_C_TryRoombaMessage::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryRoombaMessage, CallFunc_IsPlayerAlive_ReturnValue) == 0x000089, "Member 'TextChatComponent_C_TryRoombaMessage::CallFunc_IsPlayerAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryRoombaMessage, CallFunc_IsPlayerBlocked_Blocked) == 0x00008A, "Member 'TextChatComponent_C_TryRoombaMessage::CallFunc_IsPlayerBlocked_Blocked' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryRoombaMessage, CallFunc_IsPlayerConsoleCommunicationBlocked_Blocked) == 0x00008B, "Member 'TextChatComponent_C_TryRoombaMessage::CallFunc_IsPlayerConsoleCommunicationBlocked_Blocked' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryRoombaMessage, CallFunc_BooleanOR_ReturnValue) == 0x00008C, "Member 'TextChatComponent_C_TryRoombaMessage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryRoombaMessage, CallFunc_Not_PreBool_ReturnValue) == 0x00008D, "Member 'TextChatComponent_C_TryRoombaMessage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function TextChatComponent.TextChatComponent_C.TryEndgameMessage
// 0x0080 (0x0080 - 0x0000)
struct TextChatComponent_C_TryEndgameMessage final
{
public:
	class UTextChatWindowWI_C*                    ChatWidget_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCTPlayerState*                        Player_State;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   TextMessage;                                       // 0x0010(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	uint8                                         Channel;                                           // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Construct_Text_Message_ReturnValue;       // 0x0030(0x0018)()
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT_1;             // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerBlocked_Blocked;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerConsoleCommunicationBlocked_Blocked; // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TextChatComponent_C_TryEndgameMessage) == 0x000008, "Wrong alignment on TextChatComponent_C_TryEndgameMessage");
static_assert(sizeof(TextChatComponent_C_TryEndgameMessage) == 0x000080, "Wrong size on TextChatComponent_C_TryEndgameMessage");
static_assert(offsetof(TextChatComponent_C_TryEndgameMessage, ChatWidget_0) == 0x000000, "Member 'TextChatComponent_C_TryEndgameMessage::ChatWidget_0' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryEndgameMessage, Player_State) == 0x000008, "Member 'TextChatComponent_C_TryEndgameMessage::Player_State' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryEndgameMessage, TextMessage) == 0x000010, "Member 'TextChatComponent_C_TryEndgameMessage::TextMessage' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryEndgameMessage, Channel) == 0x000028, "Member 'TextChatComponent_C_TryEndgameMessage::Channel' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryEndgameMessage, CallFunc_Construct_Text_Message_ReturnValue) == 0x000030, "Member 'TextChatComponent_C_TryEndgameMessage::CallFunc_Construct_Text_Message_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryEndgameMessage, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000048, "Member 'TextChatComponent_C_TryEndgameMessage::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryEndgameMessage, K2Node_DynamicCast_AsICharacter_SCT) == 0x000050, "Member 'TextChatComponent_C_TryEndgameMessage::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryEndgameMessage, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'TextChatComponent_C_TryEndgameMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryEndgameMessage, K2Node_DynamicCast_AsICharacter_SCT_1) == 0x000068, "Member 'TextChatComponent_C_TryEndgameMessage::K2Node_DynamicCast_AsICharacter_SCT_1' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryEndgameMessage, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'TextChatComponent_C_TryEndgameMessage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryEndgameMessage, CallFunc_IsPlayerBlocked_Blocked) == 0x000079, "Member 'TextChatComponent_C_TryEndgameMessage::CallFunc_IsPlayerBlocked_Blocked' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryEndgameMessage, CallFunc_IsPlayerConsoleCommunicationBlocked_Blocked) == 0x00007A, "Member 'TextChatComponent_C_TryEndgameMessage::CallFunc_IsPlayerConsoleCommunicationBlocked_Blocked' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryEndgameMessage, CallFunc_BooleanOR_ReturnValue) == 0x00007B, "Member 'TextChatComponent_C_TryEndgameMessage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_TryEndgameMessage, CallFunc_Not_PreBool_ReturnValue) == 0x00007C, "Member 'TextChatComponent_C_TryEndgameMessage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function TextChatComponent.TextChatComponent_C.AddTextChatWindowWidgetToUI
// 0x0010 (0x0010 - 0x0000)
struct TextChatComponent_C_AddTextChatWindowWidgetToUI final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextChatWindowWI_C*                    CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextChatComponent_C_AddTextChatWindowWidgetToUI) == 0x000008, "Wrong alignment on TextChatComponent_C_AddTextChatWindowWidgetToUI");
static_assert(sizeof(TextChatComponent_C_AddTextChatWindowWidgetToUI) == 0x000010, "Wrong size on TextChatComponent_C_AddTextChatWindowWidgetToUI");
static_assert(offsetof(TextChatComponent_C_AddTextChatWindowWidgetToUI, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'TextChatComponent_C_AddTextChatWindowWidgetToUI::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_AddTextChatWindowWidgetToUI, CallFunc_Create_ReturnValue) == 0x000008, "Member 'TextChatComponent_C_AddTextChatWindowWidgetToUI::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function TextChatComponent.TextChatComponent_C.CreateTextChatWindowIfNoneExists
// 0x0040 (0x0040 - 0x0000)
struct TextChatComponent_C_CreateTextChatWindowIfNoneExists final
{
public:
	class UScrollBox*                             ChatLogBackup;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTextChatWindowWI_C*>            CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UTextChatWindowWI_C*                    CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TextChatComponent_C_CreateTextChatWindowIfNoneExists) == 0x000008, "Wrong alignment on TextChatComponent_C_CreateTextChatWindowIfNoneExists");
static_assert(sizeof(TextChatComponent_C_CreateTextChatWindowIfNoneExists) == 0x000040, "Wrong size on TextChatComponent_C_CreateTextChatWindowIfNoneExists");
static_assert(offsetof(TextChatComponent_C_CreateTextChatWindowIfNoneExists, ChatLogBackup) == 0x000000, "Member 'TextChatComponent_C_CreateTextChatWindowIfNoneExists::ChatLogBackup' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_CreateTextChatWindowIfNoneExists, CallFunc_IsDedicatedServer_ReturnValue) == 0x000008, "Member 'TextChatComponent_C_CreateTextChatWindowIfNoneExists::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_CreateTextChatWindowIfNoneExists, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000010, "Member 'TextChatComponent_C_CreateTextChatWindowIfNoneExists::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_CreateTextChatWindowIfNoneExists, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000020, "Member 'TextChatComponent_C_CreateTextChatWindowIfNoneExists::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_CreateTextChatWindowIfNoneExists, CallFunc_Array_Get_Item) == 0x000030, "Member 'TextChatComponent_C_CreateTextChatWindowIfNoneExists::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_CreateTextChatWindowIfNoneExists, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000038, "Member 'TextChatComponent_C_CreateTextChatWindowIfNoneExists::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_CreateTextChatWindowIfNoneExists, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000039, "Member 'TextChatComponent_C_CreateTextChatWindowIfNoneExists::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_CreateTextChatWindowIfNoneExists, CallFunc_IsValid_ReturnValue) == 0x00003A, "Member 'TextChatComponent_C_CreateTextChatWindowIfNoneExists::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function TextChatComponent.TextChatComponent_C.IsPlayerWithinTextingRange
// 0x0048 (0x0048 - 0x0000)
struct TextChatComponent_C_IsPlayerWithinTextingRange final
{
public:
	class APlayerState*                           Player_State;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TextChatComponent_C_IsPlayerWithinTextingRange) == 0x000008, "Wrong alignment on TextChatComponent_C_IsPlayerWithinTextingRange");
static_assert(sizeof(TextChatComponent_C_IsPlayerWithinTextingRange) == 0x000048, "Wrong size on TextChatComponent_C_IsPlayerWithinTextingRange");
static_assert(offsetof(TextChatComponent_C_IsPlayerWithinTextingRange, Player_State) == 0x000000, "Member 'TextChatComponent_C_IsPlayerWithinTextingRange::Player_State' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_IsPlayerWithinTextingRange, ReturnValue) == 0x000008, "Member 'TextChatComponent_C_IsPlayerWithinTextingRange::ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_IsPlayerWithinTextingRange, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000010, "Member 'TextChatComponent_C_IsPlayerWithinTextingRange::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_IsPlayerWithinTextingRange, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'TextChatComponent_C_IsPlayerWithinTextingRange::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_IsPlayerWithinTextingRange, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000024, "Member 'TextChatComponent_C_IsPlayerWithinTextingRange::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_IsPlayerWithinTextingRange, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'TextChatComponent_C_IsPlayerWithinTextingRange::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_IsPlayerWithinTextingRange, CallFunc_VSize_ReturnValue) == 0x00003C, "Member 'TextChatComponent_C_IsPlayerWithinTextingRange::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_IsPlayerWithinTextingRange, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000040, "Member 'TextChatComponent_C_IsPlayerWithinTextingRange::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function TextChatComponent.TextChatComponent_C.IsPlayerAlive
// 0x0030 (0x0030 - 0x0000)
struct TextChatComponent_C_IsPlayerAlive final
{
public:
	class ASCTPlayerState*                        PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAliveBPI_Alive;                         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TextChatComponent_C_IsPlayerAlive) == 0x000008, "Wrong alignment on TextChatComponent_C_IsPlayerAlive");
static_assert(sizeof(TextChatComponent_C_IsPlayerAlive) == 0x000030, "Wrong size on TextChatComponent_C_IsPlayerAlive");
static_assert(offsetof(TextChatComponent_C_IsPlayerAlive, PlayerState) == 0x000000, "Member 'TextChatComponent_C_IsPlayerAlive::PlayerState' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_IsPlayerAlive, ReturnValue) == 0x000008, "Member 'TextChatComponent_C_IsPlayerAlive::ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_IsPlayerAlive, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000010, "Member 'TextChatComponent_C_IsPlayerAlive::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_IsPlayerAlive, K2Node_DynamicCast_AsICharacter_SCT) == 0x000018, "Member 'TextChatComponent_C_IsPlayerAlive::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_IsPlayerAlive, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'TextChatComponent_C_IsPlayerAlive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_IsPlayerAlive, CallFunc_IsAliveBPI_Alive) == 0x000029, "Member 'TextChatComponent_C_IsPlayerAlive::CallFunc_IsAliveBPI_Alive' has a wrong offset!");

// Function TextChatComponent.TextChatComponent_C.Construct Text Message
// 0x0138 (0x0138 - 0x0000)
struct TextChatComponent_C_Construct_Text_Message final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   MessageText;                                       // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	uint8                                         Channel;                                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0028(0x0018)(Parm, OutParm, ReturnParm)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_1;          // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00D0(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00E8(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0120(0x0018)()
};
static_assert(alignof(TextChatComponent_C_Construct_Text_Message) == 0x000008, "Wrong alignment on TextChatComponent_C_Construct_Text_Message");
static_assert(sizeof(TextChatComponent_C_Construct_Text_Message) == 0x000138, "Wrong size on TextChatComponent_C_Construct_Text_Message");
static_assert(offsetof(TextChatComponent_C_Construct_Text_Message, PlayerState) == 0x000000, "Member 'TextChatComponent_C_Construct_Text_Message::PlayerState' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Construct_Text_Message, MessageText) == 0x000008, "Member 'TextChatComponent_C_Construct_Text_Message::MessageText' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Construct_Text_Message, Channel) == 0x000020, "Member 'TextChatComponent_C_Construct_Text_Message::Channel' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Construct_Text_Message, ReturnValue) == 0x000028, "Member 'TextChatComponent_C_Construct_Text_Message::ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Construct_Text_Message, CallFunc_MakeLiteralString_ReturnValue) == 0x000040, "Member 'TextChatComponent_C_Construct_Text_Message::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Construct_Text_Message, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000050, "Member 'TextChatComponent_C_Construct_Text_Message::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Construct_Text_Message, CallFunc_Conv_TextToString_ReturnValue) == 0x000058, "Member 'TextChatComponent_C_Construct_Text_Message::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Construct_Text_Message, K2Node_SwitchInteger_CmpSuccess) == 0x000068, "Member 'TextChatComponent_C_Construct_Text_Message::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Construct_Text_Message, CallFunc_GetPlayerName_ReturnValue) == 0x000070, "Member 'TextChatComponent_C_Construct_Text_Message::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Construct_Text_Message, CallFunc_MakeLiteralString_ReturnValue_1) == 0x000080, "Member 'TextChatComponent_C_Construct_Text_Message::CallFunc_MakeLiteralString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Construct_Text_Message, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'TextChatComponent_C_Construct_Text_Message::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Construct_Text_Message, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A0, "Member 'TextChatComponent_C_Construct_Text_Message::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Construct_Text_Message, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B0, "Member 'TextChatComponent_C_Construct_Text_Message::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Construct_Text_Message, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000C0, "Member 'TextChatComponent_C_Construct_Text_Message::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Construct_Text_Message, CallFunc_Conv_StringToText_ReturnValue) == 0x0000D0, "Member 'TextChatComponent_C_Construct_Text_Message::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Construct_Text_Message, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000E8, "Member 'TextChatComponent_C_Construct_Text_Message::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Construct_Text_Message, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000100, "Member 'TextChatComponent_C_Construct_Text_Message::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Construct_Text_Message, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000110, "Member 'TextChatComponent_C_Construct_Text_Message::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TextChatComponent_C_Construct_Text_Message, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000120, "Member 'TextChatComponent_C_Construct_Text_Message::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");

}

