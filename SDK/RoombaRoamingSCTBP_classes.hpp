#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RoombaRoamingSCTBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass RoombaRoamingSCTBP.RoombaRoamingSCTBP_C
// 0x00A8 (0x02C8 - 0x0220)
class ARoombaRoamingSCTBP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class USkeletalMeshComponent*                 Antenna;                                           // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak;                                                // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             FanRotatingMovement;                               // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RotationMovement_Percent_784AFF22498D3C304E55029FA84FBD01; // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            RotationMovement__Direction_784AFF22498D3C304E55029FA84FBD01; // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     RotationMovement;                                  // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementTimeline_RTPC_A673051947033D3076DBDF9694C569E5; // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementTimeline_Percent_A673051947033D3076DBDF9694C569E5; // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            MovementTimeline__Direction_A673051947033D3076DBDF9694C569E5; // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     MovementTimeline;                                  // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Destinations;                                      // 0x0278(0x0010)(Edit, BlueprintVisible)
	int32                                         CurrentDestination;                                // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartLocation;                                     // 0x028C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0298(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               StartRotation;                                     // 0x02A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               TargetRotation;                                    // 0x02B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         MovementSpeed;                                     // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoSound;                                           // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsCustomVruumba;                                   // 0x02C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_RoombaRoamingSCTBP(int32 EntryPoint);
	void OnClientLoggedIn();
	void EndRotating();
	void StartRotating();
	void ReceiveBeginPlay();
	void OnSuccess_711655824DB10DC7EA8A4A94806BFE22(const struct FFCTCloudCustomizationVruumba& Payload, int32 Code, const class FString& Message);
	void OnError_711655824DB10DC7EA8A4A94806BFE22(const struct FFCTCloudCustomizationVruumba& Payload, int32 Code, const class FString& Message);
	void RotationMovement__UpdateFunc();
	void RotationMovement__FinishedFunc();
	void MovementTimeline__UpdateFunc();
	void MovementTimeline__FinishedFunc();
	void UpdateTimelineDuration(class UTimelineComponent* Timeline, float Duration);
	void UpdateTargetLocation();
	void UpdateTargetRotation();
	void UpdateDestination();
	void SetAntenna(const class FString& AntennaName);
	void SetBody(const class FString& BodyName);
	void UpdateVruumbaCustomization(const class FString& BodyName, const class FString& AntennaName);
	void SetVisibility(bool bVisibility);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RoombaRoamingSCTBP_C">();
	}
	static class ARoombaRoamingSCTBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARoombaRoamingSCTBP_C>();
	}
};
static_assert(alignof(ARoombaRoamingSCTBP_C) == 0x000008, "Wrong alignment on ARoombaRoamingSCTBP_C");
static_assert(sizeof(ARoombaRoamingSCTBP_C) == 0x0002C8, "Wrong size on ARoombaRoamingSCTBP_C");
static_assert(offsetof(ARoombaRoamingSCTBP_C, UberGraphFrame) == 0x000220, "Member 'ARoombaRoamingSCTBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ARoombaRoamingSCTBP_C, Antenna) == 0x000228, "Member 'ARoombaRoamingSCTBP_C::Antenna' has a wrong offset!");
static_assert(offsetof(ARoombaRoamingSCTBP_C, SkeletalMesh) == 0x000230, "Member 'ARoombaRoamingSCTBP_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ARoombaRoamingSCTBP_C, Root) == 0x000238, "Member 'ARoombaRoamingSCTBP_C::Root' has a wrong offset!");
static_assert(offsetof(ARoombaRoamingSCTBP_C, Ak) == 0x000240, "Member 'ARoombaRoamingSCTBP_C::Ak' has a wrong offset!");
static_assert(offsetof(ARoombaRoamingSCTBP_C, FanRotatingMovement) == 0x000248, "Member 'ARoombaRoamingSCTBP_C::FanRotatingMovement' has a wrong offset!");
static_assert(offsetof(ARoombaRoamingSCTBP_C, RotationMovement_Percent_784AFF22498D3C304E55029FA84FBD01) == 0x000250, "Member 'ARoombaRoamingSCTBP_C::RotationMovement_Percent_784AFF22498D3C304E55029FA84FBD01' has a wrong offset!");
static_assert(offsetof(ARoombaRoamingSCTBP_C, RotationMovement__Direction_784AFF22498D3C304E55029FA84FBD01) == 0x000254, "Member 'ARoombaRoamingSCTBP_C::RotationMovement__Direction_784AFF22498D3C304E55029FA84FBD01' has a wrong offset!");
static_assert(offsetof(ARoombaRoamingSCTBP_C, RotationMovement) == 0x000258, "Member 'ARoombaRoamingSCTBP_C::RotationMovement' has a wrong offset!");
static_assert(offsetof(ARoombaRoamingSCTBP_C, MovementTimeline_RTPC_A673051947033D3076DBDF9694C569E5) == 0x000260, "Member 'ARoombaRoamingSCTBP_C::MovementTimeline_RTPC_A673051947033D3076DBDF9694C569E5' has a wrong offset!");
static_assert(offsetof(ARoombaRoamingSCTBP_C, MovementTimeline_Percent_A673051947033D3076DBDF9694C569E5) == 0x000264, "Member 'ARoombaRoamingSCTBP_C::MovementTimeline_Percent_A673051947033D3076DBDF9694C569E5' has a wrong offset!");
static_assert(offsetof(ARoombaRoamingSCTBP_C, MovementTimeline__Direction_A673051947033D3076DBDF9694C569E5) == 0x000268, "Member 'ARoombaRoamingSCTBP_C::MovementTimeline__Direction_A673051947033D3076DBDF9694C569E5' has a wrong offset!");
static_assert(offsetof(ARoombaRoamingSCTBP_C, MovementTimeline) == 0x000270, "Member 'ARoombaRoamingSCTBP_C::MovementTimeline' has a wrong offset!");
static_assert(offsetof(ARoombaRoamingSCTBP_C, Destinations) == 0x000278, "Member 'ARoombaRoamingSCTBP_C::Destinations' has a wrong offset!");
static_assert(offsetof(ARoombaRoamingSCTBP_C, CurrentDestination) == 0x000288, "Member 'ARoombaRoamingSCTBP_C::CurrentDestination' has a wrong offset!");
static_assert(offsetof(ARoombaRoamingSCTBP_C, StartLocation) == 0x00028C, "Member 'ARoombaRoamingSCTBP_C::StartLocation' has a wrong offset!");
static_assert(offsetof(ARoombaRoamingSCTBP_C, TargetLocation) == 0x000298, "Member 'ARoombaRoamingSCTBP_C::TargetLocation' has a wrong offset!");
static_assert(offsetof(ARoombaRoamingSCTBP_C, StartRotation) == 0x0002A4, "Member 'ARoombaRoamingSCTBP_C::StartRotation' has a wrong offset!");
static_assert(offsetof(ARoombaRoamingSCTBP_C, TargetRotation) == 0x0002B0, "Member 'ARoombaRoamingSCTBP_C::TargetRotation' has a wrong offset!");
static_assert(offsetof(ARoombaRoamingSCTBP_C, MovementSpeed) == 0x0002BC, "Member 'ARoombaRoamingSCTBP_C::MovementSpeed' has a wrong offset!");
static_assert(offsetof(ARoombaRoamingSCTBP_C, NoSound) == 0x0002C0, "Member 'ARoombaRoamingSCTBP_C::NoSound' has a wrong offset!");
static_assert(offsetof(ARoombaRoamingSCTBP_C, IsCustomVruumba) == 0x0002C1, "Member 'ARoombaRoamingSCTBP_C::IsCustomVruumba' has a wrong offset!");

}

