#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VivoxImpl

#include "Basic.hpp"

#include "VivoxImpl_classes.hpp"
#include "VivoxImpl_parameters.hpp"


namespace SDK
{

// Function VivoxImpl.LocalSettings.SetInputDevice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           NewInputDeviceID                                       (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULocalSettings::SetInputDevice(const class FString& NewInputDeviceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalSettings", "SetInputDevice");

	Params::LocalSettings_SetInputDevice Parms{};

	Parms.NewInputDeviceID = std::move(NewInputDeviceID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VivoxImpl.LocalSettings.SetInputVolumeGain
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewVolume                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULocalSettings::SetInputVolumeGain(int32 NewVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalSettings", "SetInputVolumeGain");

	Params::LocalSettings_SetInputVolumeGain Parms{};

	Parms.NewVolume = NewVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VivoxImpl.LocalSettings.SetOutputDevice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           NewOutputDeviceID                                      (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULocalSettings::SetOutputDevice(const class FString& NewOutputDeviceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalSettings", "SetOutputDevice");

	Params::LocalSettings_SetOutputDevice Parms{};

	Parms.NewOutputDeviceID = std::move(NewOutputDeviceID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VivoxImpl.LocalSettings.SetOutputGain
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewVolume                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULocalSettings::SetOutputGain(int32 NewVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalSettings", "SetOutputGain");

	Params::LocalSettings_SetOutputGain Parms{};

	Parms.NewVolume = NewVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VivoxImpl.LocalSettings.SetPushToTalk
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    UsePushToTalk                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULocalSettings::SetPushToTalk(bool UsePushToTalk)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalSettings", "SetPushToTalk");

	Params::LocalSettings_SetPushToTalk Parms{};

	Parms.UsePushToTalk = UsePushToTalk;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VivoxImpl.LocalSettings.SetShowVoiceSettingWelcomeMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Show                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULocalSettings::SetShowVoiceSettingWelcomeMessage(const bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalSettings", "SetShowVoiceSettingWelcomeMessage");

	Params::LocalSettings_SetShowVoiceSettingWelcomeMessage Parms{};

	Parms.Show = Show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VivoxImpl.LocalSettings.VivoxStatus
// (Final, Exec, Native, Public)

void ULocalSettings::VivoxStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalSettings", "VivoxStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VivoxImpl.LocalSettings.GetAvailableInputDevices
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TMap<class FString, class FString>      DeviceidToName                                         (Parm, OutParm, NativeAccessSpecifierPublic)

void ULocalSettings::GetAvailableInputDevices(TMap<class FString, class FString>* DeviceidToName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalSettings", "GetAvailableInputDevices");

	Params::LocalSettings_GetAvailableInputDevices Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (DeviceidToName != nullptr)
		*DeviceidToName = std::move(Parms.DeviceidToName);
}


// Function VivoxImpl.LocalSettings.GetAvailableOutputDevices
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TMap<class FString, class FString>      DeviceidToName                                         (Parm, OutParm, NativeAccessSpecifierPublic)

void ULocalSettings::GetAvailableOutputDevices(TMap<class FString, class FString>* DeviceidToName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalSettings", "GetAvailableOutputDevices");

	Params::LocalSettings_GetAvailableOutputDevices Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (DeviceidToName != nullptr)
		*DeviceidToName = std::move(Parms.DeviceidToName);
}


// Function VivoxImpl.LocalSettings.GetEffectiveInputDeviceId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULocalSettings::GetEffectiveInputDeviceId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalSettings", "GetEffectiveInputDeviceId");

	Params::LocalSettings_GetEffectiveInputDeviceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VivoxImpl.LocalSettings.GetEffectiveOutputDeviceId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULocalSettings::GetEffectiveOutputDeviceId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalSettings", "GetEffectiveOutputDeviceId");

	Params::LocalSettings_GetEffectiveOutputDeviceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VivoxImpl.LocalSettings.GetInputVolumeGain
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULocalSettings::GetInputVolumeGain() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalSettings", "GetInputVolumeGain");

	Params::LocalSettings_GetInputVolumeGain Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VivoxImpl.LocalSettings.GetOutputGain
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULocalSettings::GetOutputGain() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalSettings", "GetOutputGain");

	Params::LocalSettings_GetOutputGain Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VivoxImpl.LocalSettings.GetPushToTalk
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULocalSettings::GetPushToTalk() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalSettings", "GetPushToTalk");

	Params::LocalSettings_GetPushToTalk Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VivoxImpl.LocalSettings.GetShowVoiceSettingWelcomeMessage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULocalSettings::GetShowVoiceSettingWelcomeMessage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalSettings", "GetShowVoiceSettingWelcomeMessage");

	Params::LocalSettings_GetShowVoiceSettingWelcomeMessage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VivoxImpl.VivoxLocalPlayer.BlockParticipant
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ParticipantID                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVivoxLocalPlayer::BlockParticipant(const class FString& ParticipantID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxLocalPlayer", "BlockParticipant");

	Params::VivoxLocalPlayer_BlockParticipant Parms{};

	Parms.ParticipantID = std::move(ParticipantID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VivoxImpl.VivoxLocalPlayer.IsParticipantBlocked
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ParticipantID                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVivoxLocalPlayer::IsParticipantBlocked(const class FString& ParticipantID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxLocalPlayer", "IsParticipantBlocked");

	Params::VivoxLocalPlayer_IsParticipantBlocked Parms{};

	Parms.ParticipantID = std::move(ParticipantID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VivoxImpl.VivoxLocalPlayer.IsParticipantMuted
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ParticipantID                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVivoxLocalPlayer::IsParticipantMuted(const class FString& ParticipantID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxLocalPlayer", "IsParticipantMuted");

	Params::VivoxLocalPlayer_IsParticipantMuted Parms{};

	Parms.ParticipantID = std::move(ParticipantID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VivoxImpl.VivoxLocalPlayer.MuteParticipant
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ParticipantID                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVivoxLocalPlayer::MuteParticipant(const class FString& ParticipantID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxLocalPlayer", "MuteParticipant");

	Params::VivoxLocalPlayer_MuteParticipant Parms{};

	Parms.ParticipantID = std::move(ParticipantID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VivoxImpl.VivoxLocalPlayer.ResetParticipantMutes
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)

void UVivoxLocalPlayer::ResetParticipantMutes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxLocalPlayer", "ResetParticipantMutes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VivoxImpl.VivoxLocalPlayer.SetIsCommunicationDisabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsCommunicationDisabled                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVivoxLocalPlayer::SetIsCommunicationDisabled(bool bInIsCommunicationDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxLocalPlayer", "SetIsCommunicationDisabled");

	Params::VivoxLocalPlayer_SetIsCommunicationDisabled Parms{};

	Parms.bInIsCommunicationDisabled = bInIsCommunicationDisabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VivoxImpl.VivoxLocalPlayer.UnBlockParticipant
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ParticipantID                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVivoxLocalPlayer::UnBlockParticipant(const class FString& ParticipantID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxLocalPlayer", "UnBlockParticipant");

	Params::VivoxLocalPlayer_UnBlockParticipant Parms{};

	Parms.ParticipantID = std::move(ParticipantID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VivoxImpl.VivoxLocalPlayer.UnmuteParticipant
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ParticipantID                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVivoxLocalPlayer::UnmuteParticipant(const class FString& ParticipantID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxLocalPlayer", "UnmuteParticipant");

	Params::VivoxLocalPlayer_UnmuteParticipant Parms{};

	Parms.ParticipantID = std::move(ParticipantID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VivoxImpl.VivoxLocalPlayer.GetIsMutedMic
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVivoxLocalPlayer::GetIsMutedMic() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxLocalPlayer", "GetIsMutedMic");

	Params::VivoxLocalPlayer_GetIsMutedMic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VivoxImpl.VivoxLocalPlayer.GetRegisteredVivoxTalkerComponents
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AGameStateBase*                   GameStateBase                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UVivoxTalkerComponent*>    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UVivoxTalkerComponent*> UVivoxLocalPlayer::GetRegisteredVivoxTalkerComponents(const class AGameStateBase* GameStateBase) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxLocalPlayer", "GetRegisteredVivoxTalkerComponents");

	Params::VivoxLocalPlayer_GetRegisteredVivoxTalkerComponents Parms{};

	Parms.GameStateBase = GameStateBase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VivoxImpl.VivoxInputComponent.PushToTalkPersonoidPressed
// (Final, Native, Public)
// Parameters:
// bool                                    IgnorePTTSetting                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVivoxInputComponent::PushToTalkPersonoidPressed(bool IgnorePTTSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxInputComponent", "PushToTalkPersonoidPressed");

	Params::VivoxInputComponent_PushToTalkPersonoidPressed Parms{};

	Parms.IgnorePTTSetting = IgnorePTTSetting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VivoxImpl.VivoxInputComponent.PushToTalkPersonoidReleased
// (Final, Native, Public)
// Parameters:
// bool                                    IgnorePTTSetting                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVivoxInputComponent::PushToTalkPersonoidReleased(bool IgnorePTTSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxInputComponent", "PushToTalkPersonoidReleased");

	Params::VivoxInputComponent_PushToTalkPersonoidReleased Parms{};

	Parms.IgnorePTTSetting = IgnorePTTSetting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VivoxImpl.VivoxInputComponent.PushToTalkSharedChannelPressed
// (Final, Native, Public, BlueprintCallable)

void UVivoxInputComponent::PushToTalkSharedChannelPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxInputComponent", "PushToTalkSharedChannelPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VivoxImpl.VivoxInputComponent.PushToTalkSharedChannelReleased
// (Final, Native, Public, BlueprintCallable)

void UVivoxInputComponent::PushToTalkSharedChannelReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxInputComponent", "PushToTalkSharedChannelReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VivoxImpl.VivoxInputComponent.ToggleAllChannelsMuted
// (Final, Native, Public)

void UVivoxInputComponent::ToggleAllChannelsMuted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxInputComponent", "ToggleAllChannelsMuted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VivoxImpl.VivoxMuteUserWidget.IsMuted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVivoxMuteUserWidget::IsMuted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxMuteUserWidget", "IsMuted");

	Params::VivoxMuteUserWidget_IsMuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VivoxImpl.VivoxMuteUserWidget.OnMuteChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsMuted                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVivoxMuteUserWidget::OnMuteChanged(bool IsMuted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxMuteUserWidget", "OnMuteChanged");

	Params::VivoxMuteUserWidget_OnMuteChanged Parms{};

	Parms.IsMuted = IsMuted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VivoxImpl.VivoxMuteUserWidget.ToggleMuted
// (Final, Native, Public, BlueprintCallable)

void UVivoxMuteUserWidget::ToggleMuted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxMuteUserWidget", "ToggleMuted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VivoxImpl.VivoxNetworkComponent.JoinSpectatorChannel
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UVivoxNetworkComponent::JoinSpectatorChannel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxNetworkComponent", "JoinSpectatorChannel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VivoxImpl.VivoxNetworkComponent.JoinStageMicChannel
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UVivoxNetworkComponent::JoinStageMicChannel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxNetworkComponent", "JoinStageMicChannel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VivoxImpl.VivoxNetworkComponent.LeaveSpectatorChannel
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UVivoxNetworkComponent::LeaveSpectatorChannel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxNetworkComponent", "LeaveSpectatorChannel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VivoxImpl.VivoxNetworkComponent.LeaveStageMicChannel
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UVivoxNetworkComponent::LeaveStageMicChannel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxNetworkComponent", "LeaveStageMicChannel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VivoxImpl.VivoxNetworkComponent.OnMatchEnd
// (Final, Native, Public)

void UVivoxNetworkComponent::OnMatchEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxNetworkComponent", "OnMatchEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VivoxImpl.VivoxNetworkComponent.OnRep_LocalChannelGuid
// (Final, Native, Private)

void UVivoxNetworkComponent::OnRep_LocalChannelGuid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxNetworkComponent", "OnRep_LocalChannelGuid");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VivoxImpl.VivoxNetworkComponent.OnRep_PersonoidChannelGuid
// (Final, Native, Private)

void UVivoxNetworkComponent::OnRep_PersonoidChannelGuid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxNetworkComponent", "OnRep_PersonoidChannelGuid");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VivoxImpl.VivoxNetworkComponent.OnRep_SpectatorChannelGuid
// (Final, Native, Private)

void UVivoxNetworkComponent::OnRep_SpectatorChannelGuid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxNetworkComponent", "OnRep_SpectatorChannelGuid");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VivoxImpl.VivoxNetworkComponent.OnRep_StageMicChannelGuid
// (Final, Native, Private)

void UVivoxNetworkComponent::OnRep_StageMicChannelGuid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxNetworkComponent", "OnRep_StageMicChannelGuid");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VivoxImpl.VivoxTalkerComponent.HandleTalkingLocalEvent
// (Final, Native, Public)
// Parameters:
// bool                                    IsTalking                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLocallyControlled                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVivoxTalkerComponent::HandleTalkingLocalEvent(bool IsTalking, bool IsLocallyControlled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxTalkerComponent", "HandleTalkingLocalEvent");

	Params::VivoxTalkerComponent_HandleTalkingLocalEvent Parms{};

	Parms.IsTalking = IsTalking;
	Parms.IsLocallyControlled = IsLocallyControlled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VivoxImpl.VivoxTalkerComponent.HandleTalkingPersonoidEvent
// (Final, Native, Public)
// Parameters:
// bool                                    IsTalking                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLocallyControlled                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVivoxTalkerComponent::HandleTalkingPersonoidEvent(bool IsTalking, bool IsLocallyControlled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxTalkerComponent", "HandleTalkingPersonoidEvent");

	Params::VivoxTalkerComponent_HandleTalkingPersonoidEvent Parms{};

	Parms.IsTalking = IsTalking;
	Parms.IsLocallyControlled = IsLocallyControlled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VivoxImpl.VivoxTalkerComponent.HandleTalkingSpectatorEvent
// (Final, Native, Public)
// Parameters:
// bool                                    IsTalking                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLocallyControlled                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVivoxTalkerComponent::HandleTalkingSpectatorEvent(bool IsTalking, bool IsLocallyControlled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxTalkerComponent", "HandleTalkingSpectatorEvent");

	Params::VivoxTalkerComponent_HandleTalkingSpectatorEvent Parms{};

	Parms.IsTalking = IsTalking;
	Parms.IsLocallyControlled = IsLocallyControlled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VivoxImpl.VivoxTalkerComponent.K2_TalkingLocalEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsTalking                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLocallyControlled                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVivoxTalkerComponent::K2_TalkingLocalEvent(bool IsTalking, bool IsLocallyControlled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxTalkerComponent", "K2_TalkingLocalEvent");

	Params::VivoxTalkerComponent_K2_TalkingLocalEvent Parms{};

	Parms.IsTalking = IsTalking;
	Parms.IsLocallyControlled = IsLocallyControlled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VivoxImpl.VivoxTalkerComponent.K2_TalkingPersonoidEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsTalking                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLocallyControlled                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVivoxTalkerComponent::K2_TalkingPersonoidEvent(bool IsTalking, bool IsLocallyControlled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxTalkerComponent", "K2_TalkingPersonoidEvent");

	Params::VivoxTalkerComponent_K2_TalkingPersonoidEvent Parms{};

	Parms.IsTalking = IsTalking;
	Parms.IsLocallyControlled = IsLocallyControlled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VivoxImpl.VivoxTalkerComponent.K2_TalkingSpectatorEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsTalking                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLocallyControlled                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVivoxTalkerComponent::K2_TalkingSpectatorEvent(bool IsTalking, bool IsLocallyControlled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VivoxTalkerComponent", "K2_TalkingSpectatorEvent");

	Params::VivoxTalkerComponent_K2_TalkingSpectatorEvent Parms{};

	Parms.IsTalking = IsTalking;
	Parms.IsLocallyControlled = IsLocallyControlled;

	UObject::ProcessEvent(Func, &Parms);
}

}

