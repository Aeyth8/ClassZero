#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MenuListBanner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "ETitleStyle_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_MenuListBanner.BP_MenuListBanner_C
// 0x00A0 (0x0300 - 0x0260)
class UBP_MenuListBanner_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class USpacer*                                BottomPadding;                                     // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCM_ClickableSubTitleWI_C*              CM_ClickableSubTitleWI;                            // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftLine;                                          // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                LeftPadding;                                       // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightLine;                                         // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                RightPadding;                                      // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                TopPadding;                                        // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ETitleStyle                                   Style;                                             // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           BackgroundColor;                                   // 0x02A4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           TextColor;                                         // 0x02B4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TitleText;                                         // 0x02C8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	float                                         LineWidth;                                         // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Height;                                            // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         TextSize;                                          // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         HorizontalPadding;                                 // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         TextPadding;                                       // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bManualSetup;                                      // 0x02F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2F5[0x3];                                      // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VerticalPadding;                                   // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_MenuListBanner(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetupUI();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MenuListBanner_C">();
	}
	static class UBP_MenuListBanner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_MenuListBanner_C>();
	}
};
static_assert(alignof(UBP_MenuListBanner_C) == 0x000008, "Wrong alignment on UBP_MenuListBanner_C");
static_assert(sizeof(UBP_MenuListBanner_C) == 0x000300, "Wrong size on UBP_MenuListBanner_C");
static_assert(offsetof(UBP_MenuListBanner_C, UberGraphFrame) == 0x000260, "Member 'UBP_MenuListBanner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_MenuListBanner_C, BottomPadding) == 0x000268, "Member 'UBP_MenuListBanner_C::BottomPadding' has a wrong offset!");
static_assert(offsetof(UBP_MenuListBanner_C, CM_ClickableSubTitleWI) == 0x000270, "Member 'UBP_MenuListBanner_C::CM_ClickableSubTitleWI' has a wrong offset!");
static_assert(offsetof(UBP_MenuListBanner_C, LeftLine) == 0x000278, "Member 'UBP_MenuListBanner_C::LeftLine' has a wrong offset!");
static_assert(offsetof(UBP_MenuListBanner_C, LeftPadding) == 0x000280, "Member 'UBP_MenuListBanner_C::LeftPadding' has a wrong offset!");
static_assert(offsetof(UBP_MenuListBanner_C, RightLine) == 0x000288, "Member 'UBP_MenuListBanner_C::RightLine' has a wrong offset!");
static_assert(offsetof(UBP_MenuListBanner_C, RightPadding) == 0x000290, "Member 'UBP_MenuListBanner_C::RightPadding' has a wrong offset!");
static_assert(offsetof(UBP_MenuListBanner_C, TopPadding) == 0x000298, "Member 'UBP_MenuListBanner_C::TopPadding' has a wrong offset!");
static_assert(offsetof(UBP_MenuListBanner_C, Style) == 0x0002A0, "Member 'UBP_MenuListBanner_C::Style' has a wrong offset!");
static_assert(offsetof(UBP_MenuListBanner_C, BackgroundColor) == 0x0002A4, "Member 'UBP_MenuListBanner_C::BackgroundColor' has a wrong offset!");
static_assert(offsetof(UBP_MenuListBanner_C, TextColor) == 0x0002B4, "Member 'UBP_MenuListBanner_C::TextColor' has a wrong offset!");
static_assert(offsetof(UBP_MenuListBanner_C, TitleText) == 0x0002C8, "Member 'UBP_MenuListBanner_C::TitleText' has a wrong offset!");
static_assert(offsetof(UBP_MenuListBanner_C, LineWidth) == 0x0002E0, "Member 'UBP_MenuListBanner_C::LineWidth' has a wrong offset!");
static_assert(offsetof(UBP_MenuListBanner_C, Height) == 0x0002E4, "Member 'UBP_MenuListBanner_C::Height' has a wrong offset!");
static_assert(offsetof(UBP_MenuListBanner_C, TextSize) == 0x0002E8, "Member 'UBP_MenuListBanner_C::TextSize' has a wrong offset!");
static_assert(offsetof(UBP_MenuListBanner_C, HorizontalPadding) == 0x0002EC, "Member 'UBP_MenuListBanner_C::HorizontalPadding' has a wrong offset!");
static_assert(offsetof(UBP_MenuListBanner_C, TextPadding) == 0x0002F0, "Member 'UBP_MenuListBanner_C::TextPadding' has a wrong offset!");
static_assert(offsetof(UBP_MenuListBanner_C, bManualSetup) == 0x0002F4, "Member 'UBP_MenuListBanner_C::bManualSetup' has a wrong offset!");
static_assert(offsetof(UBP_MenuListBanner_C, VerticalPadding) == 0x0002F8, "Member 'UBP_MenuListBanner_C::VerticalPadding' has a wrong offset!");

}

