#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CAINServer

#include "Basic.hpp"

#include "CAINServer_classes.hpp"
#include "CAINServer_parameters.hpp"


namespace SDK
{

// Function CAINServer.CAINServer_C.ExecuteUbergraph_CAINServer
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACAINServer_C::ExecuteUbergraph_CAINServer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "ExecuteUbergraph_CAINServer");

	Params::CAINServer_C_ExecuteUbergraph_CAINServer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CAINServer.CAINServer_C.HandleITSpecialistAchievement
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ACAINServer_C::HandleITSpecialistAchievement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "HandleITSpecialistAchievement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.BndEvt__CAINServer_InteractionSabotage_K2Node_ComponentBoundEvent_1_InteractionEndedDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// bool                                    WasCancelled                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACAINServer_C::BndEvt__CAINServer_InteractionSabotage_K2Node_ComponentBoundEvent_1_InteractionEndedDelegate__DelegateSignature(const struct FInteractionPayload& Payload, bool WasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "BndEvt__CAINServer_InteractionSabotage_K2Node_ComponentBoundEvent_1_InteractionEndedDelegate__DelegateSignature");

	Params::CAINServer_C_BndEvt__CAINServer_InteractionSabotage_K2Node_ComponentBoundEvent_1_InteractionEndedDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);
	Parms.WasCancelled = WasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CAINServer.CAINServer_C.Blow up
// (BlueprintCallable, BlueprintEvent)

void ACAINServer_C::Blow_up()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "Blow up");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.Show Failed Skillcheck
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACAINServer_C::Show_Failed_Skillcheck(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "Show Failed Skillcheck");

	Params::CAINServer_C_Show_Failed_Skillcheck Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CAINServer.CAINServer_C.Audio Fail
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ACAINServer_C::Audio_Fail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "Audio Fail");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_6_InteractionDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void ACAINServer_C::BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_6_InteractionDelegate__DelegateSignature(const struct FInteractionPayload& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_6_InteractionDelegate__DelegateSignature");

	Params::CAINServer_C_BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_6_InteractionDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CAINServer.CAINServer_C.BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_5_InteractionDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void ACAINServer_C::BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_5_InteractionDelegate__DelegateSignature(const struct FInteractionPayload& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_5_InteractionDelegate__DelegateSignature");

	Params::CAINServer_C_BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_5_InteractionDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CAINServer.CAINServer_C.BndEvt__Interaction_K2Node_ComponentBoundEvent_3_InteractionDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void ACAINServer_C::BndEvt__Interaction_K2Node_ComponentBoundEvent_3_InteractionDelegate__DelegateSignature(const struct FInteractionPayload& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "BndEvt__Interaction_K2Node_ComponentBoundEvent_3_InteractionDelegate__DelegateSignature");

	Params::CAINServer_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_3_InteractionDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CAINServer.CAINServer_C.BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_2_InteractionSuccessfulDelegate__DelegateSignature
// (BlueprintEvent)

void ACAINServer_C::BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_2_InteractionSuccessfulDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_2_InteractionSuccessfulDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.Audio Hold Stop
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ACAINServer_C::Audio_Hold_Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "Audio Hold Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.Audio Hold Start
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ACAINServer_C::Audio_Hold_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "Audio Hold Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.Audio Fix
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ACAINServer_C::Audio_Fix()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "Audio Fix");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.Audio Sabotage
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ACAINServer_C::Audio_Sabotage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "Audio Sabotage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.Perma Repaired Cosmetics
// (BlueprintCallable, BlueprintEvent)

void ACAINServer_C::Perma_Repaired_Cosmetics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "Perma Repaired Cosmetics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.Perma Repair
// (BlueprintCallable, BlueprintEvent)

void ACAINServer_C::Perma_Repair()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "Perma Repair");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.BndEvt__Interaction_K2Node_ComponentBoundEvent_0_InteractionEndedDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// bool                                    WasCancelled                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACAINServer_C::BndEvt__Interaction_K2Node_ComponentBoundEvent_0_InteractionEndedDelegate__DelegateSignature(const struct FInteractionPayload& Payload, bool WasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "BndEvt__Interaction_K2Node_ComponentBoundEvent_0_InteractionEndedDelegate__DelegateSignature");

	Params::CAINServer_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_0_InteractionEndedDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);
	Parms.WasCancelled = WasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CAINServer.CAINServer_C.Sabotage
// (BlueprintCallable, BlueprintEvent)

void ACAINServer_C::Sabotage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "Sabotage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.Repair
// (BlueprintCallable, BlueprintEvent)

void ACAINServer_C::Repair()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "Repair");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.Completed Skillcheck
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ACAINServer_C::Completed_Skillcheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "Completed Skillcheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.Proxy_CompletedOneshot
// (BlueprintCallable, BlueprintEvent)

void ACAINServer_C::Proxy_CompletedOneshot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "Proxy_CompletedOneshot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.Failed Skillcheck
// (BlueprintCallable, BlueprintEvent)

void ACAINServer_C::Failed_Skillcheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "Failed Skillcheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.Proxy_FailedSkillcheck
// (BlueprintCallable, BlueprintEvent)

void ACAINServer_C::Proxy_FailedSkillcheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "Proxy_FailedSkillcheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.Lid__UpdateFunc
// (BlueprintEvent)

void ACAINServer_C::Lid__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "Lid__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.Lid__FinishedFunc
// (BlueprintEvent)

void ACAINServer_C::Lid__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "Lid__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.OnRep_Sabotaged
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ACAINServer_C::OnRep_Sabotaged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "OnRep_Sabotaged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.OnRep_PermaRepaired
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ACAINServer_C::OnRep_PermaRepaired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "OnRep_PermaRepaired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.ScoreForServerRepair
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Repair                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACAINServer_C::ScoreForServerRepair(bool Repair)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "ScoreForServerRepair");

	Params::CAINServer_C_ScoreForServerRepair Parms{};

	Parms.Repair = Repair;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CAINServer.CAINServer_C.Start text Cooldown
// (BlueprintCallable, BlueprintEvent)

void ACAINServer_C::Start_text_Cooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "Start text Cooldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.Set Cooldown Text
// (BlueprintCallable, BlueprintEvent)

void ACAINServer_C::Set_Cooldown_Text()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "Set Cooldown Text");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ACAINServer_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.BndEvt__Interaction_K2Node_ComponentBoundEvent_4_InteractionDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void ACAINServer_C::BndEvt__Interaction_K2Node_ComponentBoundEvent_4_InteractionDelegate__DelegateSignature(const struct FInteractionPayload& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "BndEvt__Interaction_K2Node_ComponentBoundEvent_4_InteractionDelegate__DelegateSignature");

	Params::CAINServer_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_4_InteractionDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CAINServer.CAINServer_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ACAINServer_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.MakeTextEnabled
// (Public, BlueprintCallable, BlueprintEvent)

void ACAINServer_C::MakeTextEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "MakeTextEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CAINServer.CAINServer_C.MakeTextDisabled
// (Public, BlueprintCallable, BlueprintEvent)

void ACAINServer_C::MakeTextDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CAINServer_C", "MakeTextDisabled");

	UObject::ProcessEvent(Func, nullptr);
}

}

