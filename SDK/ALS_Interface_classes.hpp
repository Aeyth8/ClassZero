#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ALS_Interface

#include "Basic.hpp"

#include "ALS_MovementMode_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "ALS_ViewMode_structs.hpp"
#include "ALS_Gait_structs.hpp"
#include "IdleEntryState_structs.hpp"
#include "ALS_RotationMode_structs.hpp"
#include "ALS_Stance_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ALS_Interface.ALS_Interface_C
// 0x0000 (0x0028 - 0x0028)
class IALS_Interface_C final : public IInterface
{
public:
	void Set_ALS_Gait_BPI(EALS_Gait ALS_Gait);
	void Set_ALS_Stance_BPI(EALS_Stance ALS_Stance);
	void Set_ALS_RotationMode_BPI(EALS_RotationMode ALS_RotationMode_BPI);
	void Set_ALS_MovementMode_BPI(EALS_MovementMode ALS_MovementMode);
	void AnimNotify_Pivot_BPI(const struct FPivotParams& PivotParams);
	void AnimNotify_TurningInPlace_BPI(class UAnimMontage* TurnInPlaceMontage, bool ShouldTurnInPlace, bool TurningInPlace, bool TurningRight);
	void AnimNotify_IdleEntryState_BPI(EIdleEntryState IdleEntryState);
	void Set_ALS_Aiming_BPI(bool Aiming);
	void Play_GetUp_Anim_BPI(bool FaceDown);
	void SavePoseSnapshot_BPI(class FName PoseName);
	void AddCharacterRotation_BPI(const struct FRotator& AddAmount);
	void Set_ALS_ViewMode_BPI(EALS_ViewMode ViewMode);
	void ShowTraces_BPI(bool ShowTraces);
	void Set_WalkingSpeed_BPI(float WalkingSpeed);
	void Set_RunningSpeed_BPI(float RunningSpeed);
	void Set_SprintingSpeed_BPI(float SprintingSpeed);
	void Set_CrouchingSpeed_BPI(float CrouchingSpeed);
	void CameraShake_BPI(class UClass* ShakeClass, float Scale);
	void Set_RF_BPI(bool RF);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ALS_Interface_C">();
	}
	static class IALS_Interface_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IALS_Interface_C>();
	}
};
static_assert(alignof(IALS_Interface_C) == 0x000008, "Wrong alignment on IALS_Interface_C");
static_assert(sizeof(IALS_Interface_C) == 0x000028, "Wrong size on IALS_Interface_C");

}

