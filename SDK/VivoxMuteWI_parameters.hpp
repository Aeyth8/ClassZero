#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VivoxMuteWI

#include "Basic.hpp"


namespace SDK::Params
{

// Function VivoxMuteWI.VivoxMuteWI_C.ExecuteUbergraph_VivoxMuteWI
// 0x0030 (0x0030 - 0x0000)
struct VivoxMuteWI_C_ExecuteUbergraph_VivoxMuteWI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMuted_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsMuted;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState*                        K2Node_DynamicCast_AsSCTPlayer_State;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VivoxMuteWI_C_ExecuteUbergraph_VivoxMuteWI) == 0x000008, "Wrong alignment on VivoxMuteWI_C_ExecuteUbergraph_VivoxMuteWI");
static_assert(sizeof(VivoxMuteWI_C_ExecuteUbergraph_VivoxMuteWI) == 0x000030, "Wrong size on VivoxMuteWI_C_ExecuteUbergraph_VivoxMuteWI");
static_assert(offsetof(VivoxMuteWI_C_ExecuteUbergraph_VivoxMuteWI, EntryPoint) == 0x000000, "Member 'VivoxMuteWI_C_ExecuteUbergraph_VivoxMuteWI::EntryPoint' has a wrong offset!");
static_assert(offsetof(VivoxMuteWI_C_ExecuteUbergraph_VivoxMuteWI, CallFunc_IsMuted_ReturnValue) == 0x000004, "Member 'VivoxMuteWI_C_ExecuteUbergraph_VivoxMuteWI::CallFunc_IsMuted_ReturnValue' has a wrong offset!");
static_assert(offsetof(VivoxMuteWI_C_ExecuteUbergraph_VivoxMuteWI, CallFunc_Concat_StrStr_ReturnValue) == 0x000008, "Member 'VivoxMuteWI_C_ExecuteUbergraph_VivoxMuteWI::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(VivoxMuteWI_C_ExecuteUbergraph_VivoxMuteWI, K2Node_Event_IsDesignTime) == 0x000018, "Member 'VivoxMuteWI_C_ExecuteUbergraph_VivoxMuteWI::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(VivoxMuteWI_C_ExecuteUbergraph_VivoxMuteWI, K2Node_Event_IsMuted) == 0x000019, "Member 'VivoxMuteWI_C_ExecuteUbergraph_VivoxMuteWI::K2Node_Event_IsMuted' has a wrong offset!");
static_assert(offsetof(VivoxMuteWI_C_ExecuteUbergraph_VivoxMuteWI, K2Node_DynamicCast_AsSCTPlayer_State) == 0x000020, "Member 'VivoxMuteWI_C_ExecuteUbergraph_VivoxMuteWI::K2Node_DynamicCast_AsSCTPlayer_State' has a wrong offset!");
static_assert(offsetof(VivoxMuteWI_C_ExecuteUbergraph_VivoxMuteWI, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'VivoxMuteWI_C_ExecuteUbergraph_VivoxMuteWI::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function VivoxMuteWI.VivoxMuteWI_C.OnMuteChanged
// 0x0001 (0x0001 - 0x0000)
struct VivoxMuteWI_C_OnMuteChanged final
{
public:
	bool                                          IsMuted_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VivoxMuteWI_C_OnMuteChanged) == 0x000001, "Wrong alignment on VivoxMuteWI_C_OnMuteChanged");
static_assert(sizeof(VivoxMuteWI_C_OnMuteChanged) == 0x000001, "Wrong size on VivoxMuteWI_C_OnMuteChanged");
static_assert(offsetof(VivoxMuteWI_C_OnMuteChanged, IsMuted_0) == 0x000000, "Member 'VivoxMuteWI_C_OnMuteChanged::IsMuted_0' has a wrong offset!");

// Function VivoxMuteWI.VivoxMuteWI_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct VivoxMuteWI_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VivoxMuteWI_C_PreConstruct) == 0x000001, "Wrong alignment on VivoxMuteWI_C_PreConstruct");
static_assert(sizeof(VivoxMuteWI_C_PreConstruct) == 0x000001, "Wrong size on VivoxMuteWI_C_PreConstruct");
static_assert(offsetof(VivoxMuteWI_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'VivoxMuteWI_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function VivoxMuteWI.VivoxMuteWI_C.SetButtonImage
// 0x0010 (0x0010 - 0x0000)
struct VivoxMuteWI_C_SetButtonImage final
{
public:
	bool                                          IsMuted_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VivoxMuteWI_C_SetButtonImage) == 0x000008, "Wrong alignment on VivoxMuteWI_C_SetButtonImage");
static_assert(sizeof(VivoxMuteWI_C_SetButtonImage) == 0x000010, "Wrong size on VivoxMuteWI_C_SetButtonImage");
static_assert(offsetof(VivoxMuteWI_C_SetButtonImage, IsMuted_0) == 0x000000, "Member 'VivoxMuteWI_C_SetButtonImage::IsMuted_0' has a wrong offset!");
static_assert(offsetof(VivoxMuteWI_C_SetButtonImage, Temp_bool_Variable) == 0x000001, "Member 'VivoxMuteWI_C_SetButtonImage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(VivoxMuteWI_C_SetButtonImage, K2Node_Select_Default) == 0x000008, "Member 'VivoxMuteWI_C_SetButtonImage::K2Node_Select_Default' has a wrong offset!");

// Function VivoxMuteWI.VivoxMuteWI_C.GetMuteImage
// 0x0020 (0x0020 - 0x0000)
struct VivoxMuteWI_C_GetMuteImage final
{
public:
	bool                                          IsMuted_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Return;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VivoxMuteWI_C_GetMuteImage) == 0x000008, "Wrong alignment on VivoxMuteWI_C_GetMuteImage");
static_assert(sizeof(VivoxMuteWI_C_GetMuteImage) == 0x000020, "Wrong size on VivoxMuteWI_C_GetMuteImage");
static_assert(offsetof(VivoxMuteWI_C_GetMuteImage, IsMuted_0) == 0x000000, "Member 'VivoxMuteWI_C_GetMuteImage::IsMuted_0' has a wrong offset!");
static_assert(offsetof(VivoxMuteWI_C_GetMuteImage, Return) == 0x000008, "Member 'VivoxMuteWI_C_GetMuteImage::Return' has a wrong offset!");
static_assert(offsetof(VivoxMuteWI_C_GetMuteImage, Temp_bool_Variable) == 0x000010, "Member 'VivoxMuteWI_C_GetMuteImage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(VivoxMuteWI_C_GetMuteImage, K2Node_Select_Default) == 0x000018, "Member 'VivoxMuteWI_C_GetMuteImage::K2Node_Select_Default' has a wrong offset!");

}

