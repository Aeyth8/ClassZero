#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EquipablePower_Ketcher

#include "Basic.hpp"

#include "EquipablePower_Ketcher_classes.hpp"
#include "EquipablePower_Ketcher_parameters.hpp"


namespace SDK
{

// Function EquipablePower_Ketcher.EquipablePower_Ketcher_C.ExecuteUbergraph_EquipablePower_Ketcher
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEquipablePower_Ketcher_C::ExecuteUbergraph_EquipablePower_Ketcher(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EquipablePower_Ketcher_C", "ExecuteUbergraph_EquipablePower_Ketcher");

	Params::EquipablePower_Ketcher_C_ExecuteUbergraph_EquipablePower_Ketcher Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EquipablePower_Ketcher.EquipablePower_Ketcher_C.ItemAnimation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ItemAnimation                         ItemAnimation_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEquipablePower_Ketcher_C::ItemAnimation(E_ItemAnimation ItemAnimation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EquipablePower_Ketcher_C", "ItemAnimation");

	Params::EquipablePower_Ketcher_C_ItemAnimation Parms{};

	Parms.ItemAnimation_0 = ItemAnimation_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EquipablePower_Ketcher.EquipablePower_Ketcher_C.Initialize
// (Event, Protected, BlueprintEvent)

void AEquipablePower_Ketcher_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EquipablePower_Ketcher_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EquipablePower_Ketcher.EquipablePower_Ketcher_C.Ketcher_Particle_effect
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AEquipablePower_Ketcher_C::Ketcher_Particle_effect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EquipablePower_Ketcher_C", "Ketcher_Particle_effect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EquipablePower_Ketcher.EquipablePower_Ketcher_C.Audio Bat Impact
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AEquipablePower_Ketcher_C::Audio_Bat_Impact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EquipablePower_Ketcher_C", "Audio Bat Impact");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EquipablePower_Ketcher.EquipablePower_Ketcher_C.Audio Swing Bat
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AEquipablePower_Ketcher_C::Audio_Swing_Bat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EquipablePower_Ketcher_C", "Audio Swing Bat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EquipablePower_Ketcher.EquipablePower_Ketcher_C.Impact
// (BlueprintCallable, BlueprintEvent)

void AEquipablePower_Ketcher_C::Impact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EquipablePower_Ketcher_C", "Impact");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EquipablePower_Ketcher.EquipablePower_Ketcher_C.CalculateThrowTargets
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AEquipablePower_Ketcher_C::CalculateThrowTargets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EquipablePower_Ketcher_C", "CalculateThrowTargets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EquipablePower_Ketcher.EquipablePower_Ketcher_C.GetSpawnPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector AEquipablePower_Ketcher_C::GetSpawnPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EquipablePower_Ketcher_C", "GetSpawnPoint");

	Params::EquipablePower_Ketcher_C_GetSpawnPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function EquipablePower_Ketcher.EquipablePower_Ketcher_C.InterpReticleLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector AEquipablePower_Ketcher_C::InterpReticleLocation(const struct FVector& Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EquipablePower_Ketcher_C", "InterpReticleLocation");

	Params::EquipablePower_Ketcher_C_InterpReticleLocation Parms{};

	Parms.Target = std::move(Target);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function EquipablePower_Ketcher.EquipablePower_Ketcher_C.BreakBottle
// (Public, BlueprintCallable, BlueprintEvent)

void AEquipablePower_Ketcher_C::BreakBottle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EquipablePower_Ketcher_C", "BreakBottle");

	UObject::ProcessEvent(Func, nullptr);
}

}

