#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GamepadCompatibleCheckbox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass GamepadCompatibleCheckbox.GamepadCompatibleCheckbox_C
// 0x05E8 (0x0848 - 0x0260)
class UGamepadCompatibleCheckbox_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UCheckBox*                              GamepadCheckBox;                                   // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_94;                                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_0;                                  // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnCheckStateChanged;                               // 0x0280(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          OneTimeClickable;                                  // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ClickingRemovesFocus;                              // 0x0291(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_292[0x6];                                      // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                WidgetToFocusOnClick;                              // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MoveMouseToGamepadFocus;                           // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	ECheckBoxState                                CheckedState;                                      // 0x02A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A2[0x6];                                      // 0x02A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCheckBoxStyle                         Style;                                             // 0x02A8(0x0580)(Edit, BlueprintVisible)
	FMulticastInlineDelegateProperty_             OnHovered;                                         // 0x0828(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnUnhovered;                                       // 0x0838(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnCheckStateChanged__DelegateSignature(bool IsChecked);
	void OnHovered__DelegateSignature();
	void OnUnhovered__DelegateSignature();
	void ExecuteUbergraph_GamepadCompatibleCheckbox(int32 EntryPoint);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	void PreConstruct(bool IsDesignTime);
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void BndEvt__GamepadCheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void SetMouseToFocus();
	void DisableButton();
	void EnableButton();
	void UpdateFocusHandler();
	void ChangeToImage();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GamepadCompatibleCheckbox_C">();
	}
	static class UGamepadCompatibleCheckbox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGamepadCompatibleCheckbox_C>();
	}
};
static_assert(alignof(UGamepadCompatibleCheckbox_C) == 0x000008, "Wrong alignment on UGamepadCompatibleCheckbox_C");
static_assert(sizeof(UGamepadCompatibleCheckbox_C) == 0x000848, "Wrong size on UGamepadCompatibleCheckbox_C");
static_assert(offsetof(UGamepadCompatibleCheckbox_C, UberGraphFrame) == 0x000260, "Member 'UGamepadCompatibleCheckbox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGamepadCompatibleCheckbox_C, GamepadCheckBox) == 0x000268, "Member 'UGamepadCompatibleCheckbox_C::GamepadCheckBox' has a wrong offset!");
static_assert(offsetof(UGamepadCompatibleCheckbox_C, Image_94) == 0x000270, "Member 'UGamepadCompatibleCheckbox_C::Image_94' has a wrong offset!");
static_assert(offsetof(UGamepadCompatibleCheckbox_C, WidgetSwitcher_0) == 0x000278, "Member 'UGamepadCompatibleCheckbox_C::WidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UGamepadCompatibleCheckbox_C, OnCheckStateChanged) == 0x000280, "Member 'UGamepadCompatibleCheckbox_C::OnCheckStateChanged' has a wrong offset!");
static_assert(offsetof(UGamepadCompatibleCheckbox_C, OneTimeClickable) == 0x000290, "Member 'UGamepadCompatibleCheckbox_C::OneTimeClickable' has a wrong offset!");
static_assert(offsetof(UGamepadCompatibleCheckbox_C, ClickingRemovesFocus) == 0x000291, "Member 'UGamepadCompatibleCheckbox_C::ClickingRemovesFocus' has a wrong offset!");
static_assert(offsetof(UGamepadCompatibleCheckbox_C, WidgetToFocusOnClick) == 0x000298, "Member 'UGamepadCompatibleCheckbox_C::WidgetToFocusOnClick' has a wrong offset!");
static_assert(offsetof(UGamepadCompatibleCheckbox_C, MoveMouseToGamepadFocus) == 0x0002A0, "Member 'UGamepadCompatibleCheckbox_C::MoveMouseToGamepadFocus' has a wrong offset!");
static_assert(offsetof(UGamepadCompatibleCheckbox_C, CheckedState) == 0x0002A1, "Member 'UGamepadCompatibleCheckbox_C::CheckedState' has a wrong offset!");
static_assert(offsetof(UGamepadCompatibleCheckbox_C, Style) == 0x0002A8, "Member 'UGamepadCompatibleCheckbox_C::Style' has a wrong offset!");
static_assert(offsetof(UGamepadCompatibleCheckbox_C, OnHovered) == 0x000828, "Member 'UGamepadCompatibleCheckbox_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UGamepadCompatibleCheckbox_C, OnUnhovered) == 0x000838, "Member 'UGamepadCompatibleCheckbox_C::OnUnhovered' has a wrong offset!");

}

