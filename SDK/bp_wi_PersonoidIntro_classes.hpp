#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: bp_wi_PersonoidIntro

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass bp_wi_PersonoidIntro.bp_wi_PersonoidIntro_C
// 0x00F8 (0x0358 - 0x0260)
class Ubp_wi_PersonoidIntro_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UWidgetAnimation*                       AgendaAnim;                                        // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       IntroAnim;                                         // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BoxBG;                                             // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHiddenAgendaWI_C*                      HiddenAgendaWI;                                    // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Linebottom;                                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LineMiddle;                                        // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Linetop;                                           // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ObjectiveText;                                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOtherPersonoidsList_C*                 OtherPersonoidsList;                               // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text;                                              // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsResident;                                        // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   PersonoidText;                                     // 0x02C0(0x0018)(Edit, BlueprintVisible)
	class FText                                   ResidentText;                                      // 0x02D8(0x0018)(Edit, BlueprintVisible)
	struct FLinearColor                           ResidentColor;                                     // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           PersonoidColor;                                    // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ResidentObjective;                                 // 0x0310(0x0018)(Edit, BlueprintVisible)
	class FText                                   PersonoidObjective;                                // 0x0328(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UUserWidget*>                    AllOtherWidgets;                                   // 0x0340(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	float                                         CurrentOpacity;                                    // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetOpacity;                                     // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_bp_wi_PersonoidIntro(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void Finished_4D7C77CF4590CD46C2889590CF691749();
	void Finished_1CF2A7554FA3937CF0CD6E9724BC67C9();
	void SetupPlayerText();
	void PlaySoundEffect();
	void SetTargetOpacity();
	void SequenceEvent__ENTRYPOINTbp_wi_PersonoidIntro_0();
	void SequenceEvent__ENTRYPOINTbp_wi_PersonoidIntro_1();

	bool HasPassengerLog() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"bp_wi_PersonoidIntro_C">();
	}
	static class Ubp_wi_PersonoidIntro_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<Ubp_wi_PersonoidIntro_C>();
	}
};
static_assert(alignof(Ubp_wi_PersonoidIntro_C) == 0x000008, "Wrong alignment on Ubp_wi_PersonoidIntro_C");
static_assert(sizeof(Ubp_wi_PersonoidIntro_C) == 0x000358, "Wrong size on Ubp_wi_PersonoidIntro_C");
static_assert(offsetof(Ubp_wi_PersonoidIntro_C, UberGraphFrame) == 0x000260, "Member 'Ubp_wi_PersonoidIntro_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(Ubp_wi_PersonoidIntro_C, AgendaAnim) == 0x000268, "Member 'Ubp_wi_PersonoidIntro_C::AgendaAnim' has a wrong offset!");
static_assert(offsetof(Ubp_wi_PersonoidIntro_C, IntroAnim) == 0x000270, "Member 'Ubp_wi_PersonoidIntro_C::IntroAnim' has a wrong offset!");
static_assert(offsetof(Ubp_wi_PersonoidIntro_C, BoxBG) == 0x000278, "Member 'Ubp_wi_PersonoidIntro_C::BoxBG' has a wrong offset!");
static_assert(offsetof(Ubp_wi_PersonoidIntro_C, HiddenAgendaWI) == 0x000280, "Member 'Ubp_wi_PersonoidIntro_C::HiddenAgendaWI' has a wrong offset!");
static_assert(offsetof(Ubp_wi_PersonoidIntro_C, Linebottom) == 0x000288, "Member 'Ubp_wi_PersonoidIntro_C::Linebottom' has a wrong offset!");
static_assert(offsetof(Ubp_wi_PersonoidIntro_C, LineMiddle) == 0x000290, "Member 'Ubp_wi_PersonoidIntro_C::LineMiddle' has a wrong offset!");
static_assert(offsetof(Ubp_wi_PersonoidIntro_C, Linetop) == 0x000298, "Member 'Ubp_wi_PersonoidIntro_C::Linetop' has a wrong offset!");
static_assert(offsetof(Ubp_wi_PersonoidIntro_C, ObjectiveText) == 0x0002A0, "Member 'Ubp_wi_PersonoidIntro_C::ObjectiveText' has a wrong offset!");
static_assert(offsetof(Ubp_wi_PersonoidIntro_C, OtherPersonoidsList) == 0x0002A8, "Member 'Ubp_wi_PersonoidIntro_C::OtherPersonoidsList' has a wrong offset!");
static_assert(offsetof(Ubp_wi_PersonoidIntro_C, Text) == 0x0002B0, "Member 'Ubp_wi_PersonoidIntro_C::Text' has a wrong offset!");
static_assert(offsetof(Ubp_wi_PersonoidIntro_C, IsResident) == 0x0002B8, "Member 'Ubp_wi_PersonoidIntro_C::IsResident' has a wrong offset!");
static_assert(offsetof(Ubp_wi_PersonoidIntro_C, PersonoidText) == 0x0002C0, "Member 'Ubp_wi_PersonoidIntro_C::PersonoidText' has a wrong offset!");
static_assert(offsetof(Ubp_wi_PersonoidIntro_C, ResidentText) == 0x0002D8, "Member 'Ubp_wi_PersonoidIntro_C::ResidentText' has a wrong offset!");
static_assert(offsetof(Ubp_wi_PersonoidIntro_C, ResidentColor) == 0x0002F0, "Member 'Ubp_wi_PersonoidIntro_C::ResidentColor' has a wrong offset!");
static_assert(offsetof(Ubp_wi_PersonoidIntro_C, PersonoidColor) == 0x000300, "Member 'Ubp_wi_PersonoidIntro_C::PersonoidColor' has a wrong offset!");
static_assert(offsetof(Ubp_wi_PersonoidIntro_C, ResidentObjective) == 0x000310, "Member 'Ubp_wi_PersonoidIntro_C::ResidentObjective' has a wrong offset!");
static_assert(offsetof(Ubp_wi_PersonoidIntro_C, PersonoidObjective) == 0x000328, "Member 'Ubp_wi_PersonoidIntro_C::PersonoidObjective' has a wrong offset!");
static_assert(offsetof(Ubp_wi_PersonoidIntro_C, AllOtherWidgets) == 0x000340, "Member 'Ubp_wi_PersonoidIntro_C::AllOtherWidgets' has a wrong offset!");
static_assert(offsetof(Ubp_wi_PersonoidIntro_C, CurrentOpacity) == 0x000350, "Member 'Ubp_wi_PersonoidIntro_C::CurrentOpacity' has a wrong offset!");
static_assert(offsetof(Ubp_wi_PersonoidIntro_C, TargetOpacity) == 0x000354, "Member 'Ubp_wi_PersonoidIntro_C::TargetOpacity' has a wrong offset!");

}

