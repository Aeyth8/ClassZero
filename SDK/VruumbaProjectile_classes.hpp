#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VruumbaProjectile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass VruumbaProjectile.VruumbaProjectile_C
// 0x0040 (0x0260 - 0x0220)
class AVruumbaProjectile_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UAkComponent*                           Ak;                                                // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Utensils_06c;                                   // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UProjectileMovementComponent*           ProjectileMovement;                                // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         LaunchForce;                                       // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARoombaCharacter*                       Target_Hit;                                        // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_VruumbaProjectile(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void Audio_Impact(class AActor* Actor, class UActorComponent* Component);
	void ReceiveBeginPlay();
	void BndEvt__ProjectileMovement_K2Node_ComponentBoundEvent_0_OnProjectileStopDelegate__DelegateSignature(const struct FHitResult& ImpactResult);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"VruumbaProjectile_C">();
	}
	static class AVruumbaProjectile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AVruumbaProjectile_C>();
	}
};
static_assert(alignof(AVruumbaProjectile_C) == 0x000008, "Wrong alignment on AVruumbaProjectile_C");
static_assert(sizeof(AVruumbaProjectile_C) == 0x000260, "Wrong size on AVruumbaProjectile_C");
static_assert(offsetof(AVruumbaProjectile_C, UberGraphFrame) == 0x000220, "Member 'AVruumbaProjectile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AVruumbaProjectile_C, Ak) == 0x000228, "Member 'AVruumbaProjectile_C::Ak' has a wrong offset!");
static_assert(offsetof(AVruumbaProjectile_C, SM_Utensils_06c) == 0x000230, "Member 'AVruumbaProjectile_C::SM_Utensils_06c' has a wrong offset!");
static_assert(offsetof(AVruumbaProjectile_C, Box) == 0x000238, "Member 'AVruumbaProjectile_C::Box' has a wrong offset!");
static_assert(offsetof(AVruumbaProjectile_C, ParticleSystem) == 0x000240, "Member 'AVruumbaProjectile_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AVruumbaProjectile_C, ProjectileMovement) == 0x000248, "Member 'AVruumbaProjectile_C::ProjectileMovement' has a wrong offset!");
static_assert(offsetof(AVruumbaProjectile_C, LaunchForce) == 0x000250, "Member 'AVruumbaProjectile_C::LaunchForce' has a wrong offset!");
static_assert(offsetof(AVruumbaProjectile_C, Target_Hit) == 0x000258, "Member 'AVruumbaProjectile_C::Target_Hit' has a wrong offset!");

}

