#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CM_TabTitle

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function CM_TabTitle.CM_TabTitle_C.ExecuteUbergraph_CM_TabTitle
// 0x0030 (0x0030 - 0x0000)
struct CM_TabTitle_C_ExecuteUbergraph_CM_TabTitle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_In_Size_Y;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CM_TabTitle_C_ExecuteUbergraph_CM_TabTitle) == 0x000008, "Wrong alignment on CM_TabTitle_C_ExecuteUbergraph_CM_TabTitle");
static_assert(sizeof(CM_TabTitle_C_ExecuteUbergraph_CM_TabTitle) == 0x000030, "Wrong size on CM_TabTitle_C_ExecuteUbergraph_CM_TabTitle");
static_assert(offsetof(CM_TabTitle_C_ExecuteUbergraph_CM_TabTitle, EntryPoint) == 0x000000, "Member 'CM_TabTitle_C_ExecuteUbergraph_CM_TabTitle::EntryPoint' has a wrong offset!");
static_assert(offsetof(CM_TabTitle_C_ExecuteUbergraph_CM_TabTitle, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'CM_TabTitle_C_ExecuteUbergraph_CM_TabTitle::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_TabTitle_C_ExecuteUbergraph_CM_TabTitle, K2Node_Event_IsDesignTime) == 0x000010, "Member 'CM_TabTitle_C_ExecuteUbergraph_CM_TabTitle::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(CM_TabTitle_C_ExecuteUbergraph_CM_TabTitle, CallFunc_MakeVector2D_ReturnValue) == 0x000014, "Member 'CM_TabTitle_C_ExecuteUbergraph_CM_TabTitle::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_TabTitle_C_ExecuteUbergraph_CM_TabTitle, K2Node_CustomEvent_In_Size_Y) == 0x00001C, "Member 'CM_TabTitle_C_ExecuteUbergraph_CM_TabTitle::K2Node_CustomEvent_In_Size_Y' has a wrong offset!");
static_assert(offsetof(CM_TabTitle_C_ExecuteUbergraph_CM_TabTitle, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000020, "Member 'CM_TabTitle_C_ExecuteUbergraph_CM_TabTitle::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CM_TabTitle_C_ExecuteUbergraph_CM_TabTitle, CallFunc_MakeVector2D_ReturnValue_1) == 0x000028, "Member 'CM_TabTitle_C_ExecuteUbergraph_CM_TabTitle::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");

// Function CM_TabTitle.CM_TabTitle_C.Set Bottom Border Padding
// 0x0004 (0x0004 - 0x0000)
struct CM_TabTitle_C_Set_Bottom_Border_Padding final
{
public:
	float                                         In_Size_Y;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CM_TabTitle_C_Set_Bottom_Border_Padding) == 0x000004, "Wrong alignment on CM_TabTitle_C_Set_Bottom_Border_Padding");
static_assert(sizeof(CM_TabTitle_C_Set_Bottom_Border_Padding) == 0x000004, "Wrong size on CM_TabTitle_C_Set_Bottom_Border_Padding");
static_assert(offsetof(CM_TabTitle_C_Set_Bottom_Border_Padding, In_Size_Y) == 0x000000, "Member 'CM_TabTitle_C_Set_Bottom_Border_Padding::In_Size_Y' has a wrong offset!");

// Function CM_TabTitle.CM_TabTitle_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct CM_TabTitle_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CM_TabTitle_C_PreConstruct) == 0x000001, "Wrong alignment on CM_TabTitle_C_PreConstruct");
static_assert(sizeof(CM_TabTitle_C_PreConstruct) == 0x000001, "Wrong size on CM_TabTitle_C_PreConstruct");
static_assert(offsetof(CM_TabTitle_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'CM_TabTitle_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

