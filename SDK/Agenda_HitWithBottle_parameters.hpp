#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Agenda_HitWithBottle

#include "Basic.hpp"

#include "SCT_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Agenda_HitWithBottle.Agenda_HitWithBottle_C.ExecuteUbergraph_Agenda_HitWithBottle
// 0x0014 (0x0014 - 0x0000)
struct Agenda_HitWithBottle_C_ExecuteUbergraph_Agenda_HitWithBottle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APlayerController* InstigatorController, class APlayerController* TargetController, TSubclassOf<class UPower> PowerType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(Agenda_HitWithBottle_C_ExecuteUbergraph_Agenda_HitWithBottle) == 0x000004, "Wrong alignment on Agenda_HitWithBottle_C_ExecuteUbergraph_Agenda_HitWithBottle");
static_assert(sizeof(Agenda_HitWithBottle_C_ExecuteUbergraph_Agenda_HitWithBottle) == 0x000014, "Wrong size on Agenda_HitWithBottle_C_ExecuteUbergraph_Agenda_HitWithBottle");
static_assert(offsetof(Agenda_HitWithBottle_C_ExecuteUbergraph_Agenda_HitWithBottle, EntryPoint) == 0x000000, "Member 'Agenda_HitWithBottle_C_ExecuteUbergraph_Agenda_HitWithBottle::EntryPoint' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_ExecuteUbergraph_Agenda_HitWithBottle, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Agenda_HitWithBottle_C_ExecuteUbergraph_Agenda_HitWithBottle::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function Agenda_HitWithBottle.Agenda_HitWithBottle_C.OnHitEventRaised
// 0x0020 (0x0020 - 0x0000)
struct Agenda_HitWithBottle_C_OnHitEventRaised final
{
public:
	class APlayerController*                      Instigator;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Power;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Agenda_HitWithBottle_C_OnHitEventRaised) == 0x000008, "Wrong alignment on Agenda_HitWithBottle_C_OnHitEventRaised");
static_assert(sizeof(Agenda_HitWithBottle_C_OnHitEventRaised) == 0x000020, "Wrong size on Agenda_HitWithBottle_C_OnHitEventRaised");
static_assert(offsetof(Agenda_HitWithBottle_C_OnHitEventRaised, Instigator) == 0x000000, "Member 'Agenda_HitWithBottle_C_OnHitEventRaised::Instigator' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_OnHitEventRaised, Target) == 0x000008, "Member 'Agenda_HitWithBottle_C_OnHitEventRaised::Target' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_OnHitEventRaised, Power) == 0x000010, "Member 'Agenda_HitWithBottle_C_OnHitEventRaised::Power' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_OnHitEventRaised, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Agenda_HitWithBottle_C_OnHitEventRaised::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Agenda_HitWithBottle.Agenda_HitWithBottle_C.IncrementHit
// 0x0014 (0x0014 - 0x0000)
struct Agenda_HitWithBottle_C_IncrementHit final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAgendaObjectState                            Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAgendaObjectState                            Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAgendaObjectState                            K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Agenda_HitWithBottle_C_IncrementHit) == 0x000004, "Wrong alignment on Agenda_HitWithBottle_C_IncrementHit");
static_assert(sizeof(Agenda_HitWithBottle_C_IncrementHit) == 0x000014, "Wrong size on Agenda_HitWithBottle_C_IncrementHit");
static_assert(offsetof(Agenda_HitWithBottle_C_IncrementHit, Temp_int_Variable) == 0x000000, "Member 'Agenda_HitWithBottle_C_IncrementHit::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_IncrementHit, Temp_byte_Variable) == 0x000004, "Member 'Agenda_HitWithBottle_C_IncrementHit::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_IncrementHit, Temp_byte_Variable_1) == 0x000005, "Member 'Agenda_HitWithBottle_C_IncrementHit::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_IncrementHit, Temp_bool_Variable) == 0x000006, "Member 'Agenda_HitWithBottle_C_IncrementHit::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_IncrementHit, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000007, "Member 'Agenda_HitWithBottle_C_IncrementHit::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_IncrementHit, CallFunc_Clamp_ReturnValue) == 0x000008, "Member 'Agenda_HitWithBottle_C_IncrementHit::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_IncrementHit, K2Node_Select_Default) == 0x00000C, "Member 'Agenda_HitWithBottle_C_IncrementHit::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_IncrementHit, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Agenda_HitWithBottle_C_IncrementHit::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function Agenda_HitWithBottle.Agenda_HitWithBottle_C.GetDescription
// 0x00E0 (0x00E0 - 0x0000)
struct Agenda_HitWithBottle_C_GetDescription final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0068(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Agenda_HitWithBottle_C_GetDescription) == 0x000008, "Wrong alignment on Agenda_HitWithBottle_C_GetDescription");
static_assert(sizeof(Agenda_HitWithBottle_C_GetDescription) == 0x0000E0, "Wrong size on Agenda_HitWithBottle_C_GetDescription");
static_assert(offsetof(Agenda_HitWithBottle_C_GetDescription, ReturnValue) == 0x000000, "Member 'Agenda_HitWithBottle_C_GetDescription::ReturnValue' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_GetDescription, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'Agenda_HitWithBottle_C_GetDescription::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_GetDescription, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'Agenda_HitWithBottle_C_GetDescription::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_GetDescription, K2Node_MakeStruct_FormatArgumentData_1) == 0x000068, "Member 'Agenda_HitWithBottle_C_GetDescription::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_GetDescription, K2Node_MakeArray_Array) == 0x0000A8, "Member 'Agenda_HitWithBottle_C_GetDescription::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_GetDescription, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'Agenda_HitWithBottle_C_GetDescription::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_GetDescription, CallFunc_Conv_TextToString_ReturnValue) == 0x0000D0, "Member 'Agenda_HitWithBottle_C_GetDescription::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function Agenda_HitWithBottle.Agenda_HitWithBottle_C.GetProgression
// 0x00C8 (0x00C8 - 0x0000)
struct Agenda_HitWithBottle_C_GetProgression final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0050(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Agenda_HitWithBottle_C_GetProgression) == 0x000008, "Wrong alignment on Agenda_HitWithBottle_C_GetProgression");
static_assert(sizeof(Agenda_HitWithBottle_C_GetProgression) == 0x0000C8, "Wrong size on Agenda_HitWithBottle_C_GetProgression");
static_assert(offsetof(Agenda_HitWithBottle_C_GetProgression, ReturnValue) == 0x000000, "Member 'Agenda_HitWithBottle_C_GetProgression::ReturnValue' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_GetProgression, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'Agenda_HitWithBottle_C_GetProgression::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_GetProgression, K2Node_MakeStruct_FormatArgumentData_1) == 0x000050, "Member 'Agenda_HitWithBottle_C_GetProgression::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_GetProgression, K2Node_MakeArray_Array) == 0x000090, "Member 'Agenda_HitWithBottle_C_GetProgression::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_GetProgression, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'Agenda_HitWithBottle_C_GetProgression::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_GetProgression, CallFunc_Conv_TextToString_ReturnValue) == 0x0000B8, "Member 'Agenda_HitWithBottle_C_GetProgression::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function Agenda_HitWithBottle.Agenda_HitWithBottle_C.IsValid
// 0x0018 (0x0018 - 0x0000)
struct Agenda_HitWithBottle_C_IsValid final
{
public:
	class APlayerController*                      Instigator;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Power;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsControllerSelf_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Agenda_HitWithBottle_C_IsValid) == 0x000008, "Wrong alignment on Agenda_HitWithBottle_C_IsValid");
static_assert(sizeof(Agenda_HitWithBottle_C_IsValid) == 0x000018, "Wrong size on Agenda_HitWithBottle_C_IsValid");
static_assert(offsetof(Agenda_HitWithBottle_C_IsValid, Instigator) == 0x000000, "Member 'Agenda_HitWithBottle_C_IsValid::Instigator' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_IsValid, Power) == 0x000008, "Member 'Agenda_HitWithBottle_C_IsValid::Power' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_IsValid, ReturnValue) == 0x000010, "Member 'Agenda_HitWithBottle_C_IsValid::ReturnValue' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_IsValid, CallFunc_IsControllerSelf_ReturnValue) == 0x000011, "Member 'Agenda_HitWithBottle_C_IsValid::CallFunc_IsControllerSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_IsValid, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000012, "Member 'Agenda_HitWithBottle_C_IsValid::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Agenda_HitWithBottle_C_IsValid, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'Agenda_HitWithBottle_C_IsValid::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

