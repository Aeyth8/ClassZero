#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerPortrait

#include "Basic.hpp"

#include "PlayerPortrait_classes.hpp"
#include "PlayerPortrait_parameters.hpp"


namespace SDK
{

// Function PlayerPortrait.PlayerPortrait_C.ExecuteUbergraph_PlayerPortrait
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerPortrait_C::ExecuteUbergraph_PlayerPortrait(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPortrait_C", "ExecuteUbergraph_PlayerPortrait");

	Params::PlayerPortrait_C_ExecuteUbergraph_PlayerPortrait Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPortrait.PlayerPortrait_C.OnUpdateAvatarAsync
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           AccelByteId_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UPlayerPortrait_C::OnUpdateAvatarAsync(const class FString& AccelByteId_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPortrait_C", "OnUpdateAvatarAsync");

	Params::PlayerPortrait_C_OnUpdateAvatarAsync Parms{};

	Parms.AccelByteId_0 = std::move(AccelByteId_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPortrait.PlayerPortrait_C.OnRetrieved_2CFA8F5F48B364BE270840A2EFA76E67
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           AccelByteId_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UTexture2DDynamic*                AvatarTexture                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerPortrait_C::OnRetrieved_2CFA8F5F48B364BE270840A2EFA76E67(const class FString& AccelByteId_0, class UTexture2DDynamic* AvatarTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPortrait_C", "OnRetrieved_2CFA8F5F48B364BE270840A2EFA76E67");

	Params::PlayerPortrait_C_OnRetrieved_2CFA8F5F48B364BE270840A2EFA76E67 Parms{};

	Parms.AccelByteId_0 = std::move(AccelByteId_0);
	Parms.AvatarTexture = AvatarTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPortrait.PlayerPortrait_C.SetPortraitAvatar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       Portrait                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerPortrait_C::SetPortraitAvatar(class UTexture2D* Portrait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPortrait_C", "SetPortraitAvatar");

	Params::PlayerPortrait_C_SetPortraitAvatar Parms{};

	Parms.Portrait = Portrait;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPortrait.PlayerPortrait_C.InitWithRawData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           SteamID_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UPlayerPortrait_C::InitWithRawData(int32 PlayerId, const class FString& SteamID_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPortrait_C", "InitWithRawData");

	Params::PlayerPortrait_C_InitWithRawData Parms{};

	Parms.PlayerId = PlayerId;
	Parms.SteamID_0 = std::move(SteamID_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPortrait.PlayerPortrait_C.SetupEventBindings
// (Public, BlueprintCallable, BlueprintEvent)

void UPlayerPortrait_C::SetupEventBindings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPortrait_C", "SetupEventBindings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPortrait.PlayerPortrait_C.Set Avatar from Steam ID
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UPlayerPortrait_C::Set_Avatar_from_Steam_ID(const class FString& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPortrait_C", "Set Avatar from Steam ID");

	Params::PlayerPortrait_C_Set_Avatar_from_Steam_ID Parms{};

	Parms.ID = std::move(ID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPortrait.PlayerPortrait_C.OnSteamIDChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SteamID_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerPortrait_C::OnSteamIDChanged(const class FString& SteamID_0, int32 PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPortrait_C", "OnSteamIDChanged");

	Params::PlayerPortrait_C_OnSteamIDChanged Parms{};

	Parms.SteamID_0 = std::move(SteamID_0);
	Parms.PlayerId = PlayerId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPortrait.PlayerPortrait_C.Set Avatar From PlayerID
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerPortrait_C::Set_Avatar_From_PlayerID(int32 PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPortrait_C", "Set Avatar From PlayerID");

	Params::PlayerPortrait_C_Set_Avatar_From_PlayerID Parms{};

	Parms.PlayerId = PlayerId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPortrait.PlayerPortrait_C.SetBorderColorFromPlayerID
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UPlayerPortrait_C::SetBorderColorFromPlayerID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPortrait_C", "SetBorderColorFromPlayerID");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPortrait.PlayerPortrait_C.OnIdentificationColorChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerPortrait_C::OnIdentificationColorChanged(class APlayerState* PlayerState, const struct FLinearColor& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPortrait_C", "OnIdentificationColorChanged");

	Params::PlayerPortrait_C_OnIdentificationColorChanged Parms{};

	Parms.PlayerState = PlayerState;
	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPortrait.PlayerPortrait_C.UpdateAppearance
// (Public, BlueprintCallable, BlueprintEvent)

void UPlayerPortrait_C::UpdateAppearance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPortrait_C", "UpdateAppearance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPortrait.PlayerPortrait_C.InitWithEndData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayerEndData                   PlayerEndData                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void UPlayerPortrait_C::InitWithEndData(const struct FPlayerEndData& PlayerEndData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPortrait_C", "InitWithEndData");

	Params::PlayerPortrait_C_InitWithEndData Parms{};

	Parms.PlayerEndData = std::move(PlayerEndData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPortrait.PlayerPortrait_C.InitWithPlayerState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASCTPlayerState*                  PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerPortrait_C::InitWithPlayerState(class ASCTPlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPortrait_C", "InitWithPlayerState");

	Params::PlayerPortrait_C_InitWithPlayerState Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPortrait.PlayerPortrait_C.CheckPlayerID
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UPlayerPortrait_C::CheckPlayerID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPortrait_C", "CheckPlayerID");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPortrait.PlayerPortrait_C.CheckSteamID
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UPlayerPortrait_C::CheckSteamID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPortrait_C", "CheckSteamID");

	UObject::ProcessEvent(Func, nullptr);
}

}

