#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GamepadCompatibleButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass GamepadCompatibleButton.GamepadCompatibleButton_C
// 0x0300 (0x0560 - 0x0260)
class UGamepadCompatibleButton_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UButton*                                GamepadButton;                                     // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnClicked;                                         // 0x0270(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnPressed;                                         // 0x0280(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnReleased;                                        // 0x0290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnHovered;                                         // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnUnhovered;                                       // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          MoveMouseToGamepadFocus;                           // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FButtonStyle                           Style;                                             // 0x02C8(0x0278)(Edit, BlueprintVisible)
	struct FLinearColor                           ColourAndOpacity;                                  // 0x0540(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BackgroundColor;                                   // 0x0550(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnClicked__DelegateSignature();
	void OnPressed__DelegateSignature();
	void OnReleased__DelegateSignature();
	void OnHovered__DelegateSignature();
	void OnUnhovered__DelegateSignature();
	void ExecuteUbergraph_GamepadCompatibleButton(int32 EntryPoint);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	void PreConstruct(bool IsDesignTime);
	void BndEvt__GamepadButton_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__GamepadButton_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__GamepadButton_K2Node_ComponentBoundEvent_2_OnButtonReleasedEvent__DelegateSignature();
	void BndEvt__GamepadButton_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__GamepadButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void SetMouseToFocus();
	void UpdateFocusHandler();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GamepadCompatibleButton_C">();
	}
	static class UGamepadCompatibleButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGamepadCompatibleButton_C>();
	}
};
static_assert(alignof(UGamepadCompatibleButton_C) == 0x000008, "Wrong alignment on UGamepadCompatibleButton_C");
static_assert(sizeof(UGamepadCompatibleButton_C) == 0x000560, "Wrong size on UGamepadCompatibleButton_C");
static_assert(offsetof(UGamepadCompatibleButton_C, UberGraphFrame) == 0x000260, "Member 'UGamepadCompatibleButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGamepadCompatibleButton_C, GamepadButton) == 0x000268, "Member 'UGamepadCompatibleButton_C::GamepadButton' has a wrong offset!");
static_assert(offsetof(UGamepadCompatibleButton_C, OnClicked) == 0x000270, "Member 'UGamepadCompatibleButton_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UGamepadCompatibleButton_C, OnPressed) == 0x000280, "Member 'UGamepadCompatibleButton_C::OnPressed' has a wrong offset!");
static_assert(offsetof(UGamepadCompatibleButton_C, OnReleased) == 0x000290, "Member 'UGamepadCompatibleButton_C::OnReleased' has a wrong offset!");
static_assert(offsetof(UGamepadCompatibleButton_C, OnHovered) == 0x0002A0, "Member 'UGamepadCompatibleButton_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UGamepadCompatibleButton_C, OnUnhovered) == 0x0002B0, "Member 'UGamepadCompatibleButton_C::OnUnhovered' has a wrong offset!");
static_assert(offsetof(UGamepadCompatibleButton_C, MoveMouseToGamepadFocus) == 0x0002C0, "Member 'UGamepadCompatibleButton_C::MoveMouseToGamepadFocus' has a wrong offset!");
static_assert(offsetof(UGamepadCompatibleButton_C, Style) == 0x0002C8, "Member 'UGamepadCompatibleButton_C::Style' has a wrong offset!");
static_assert(offsetof(UGamepadCompatibleButton_C, ColourAndOpacity) == 0x000540, "Member 'UGamepadCompatibleButton_C::ColourAndOpacity' has a wrong offset!");
static_assert(offsetof(UGamepadCompatibleButton_C, BackgroundColor) == 0x000550, "Member 'UGamepadCompatibleButton_C::BackgroundColor' has a wrong offset!");

}

