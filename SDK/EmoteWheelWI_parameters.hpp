#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EmoteWheelWI

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "S_Emote_structs.hpp"
#include "SCT_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function EmoteWheelWI.EmoteWheelWI_C.ExecuteUbergraph_EmoteWheelWI
// 0x0548 (0x0548 - 0x0000)
struct EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code_1;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Message_1;                      // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(int32 Code, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	struct FFCTCloudCustomizationPayload          K2Node_CustomEvent_Payload;                        // 0x0028(0x01A8)()
	int32                                         K2Node_CustomEvent_Code;                           // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Message;                        // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const struct FFCTCloudCustomizationPayload& Payload, int32 Code, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x01E8(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 Temp_string_Variable;                              // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFCTCloudCustomizationPayload          Temp_struct_Variable;                              // 0x0210(0x01A8)()
	class UFCTAccelByteCustomizationPayloadCallbackProxy* CallFunc_GetUserCustomizationPayload_ReturnValue;  // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x03C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x03C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x03C4(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0400(0x0010)(ZeroConstructor, NoDestructor)
	class ACharacterSCTBP_C*                      CallFunc_GetSCT_Player_Character_AsCharacter_SCT;  // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventory*                             CallFunc_GetSCT_Player_Character_CharacterInventory; // 0x0418(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVisibleEmotesAmount_ReturnValue;       // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVisibleEmotesAmount_ReturnValue_1;     // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterWI_C*                         CallFunc_GetSCT_CharacterWidget_CharacterWI;       // 0x0440(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      CallFunc_GetSCT_Player_Character_AsCharacter_SCT_1; // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventory*                             CallFunc_GetSCT_Player_Character_CharacterInventory_1; // 0x0458(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      CallFunc_GetSCT_Player_Character_AsCharacter_SCT_2; // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventory*                             CallFunc_GetSCT_Player_Character_CharacterInventory_2; // 0x0470(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x047C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0484(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_485[0x3];                                      // 0x0485(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetRotated2D_ReturnValue;                 // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetRotated2D_ReturnValue_1;               // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue_1;                   // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PiePermutation_Return;                    // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      CallFunc_GetSCT_Player_Character_AsCharacter_SCT_3; // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventory*                             CallFunc_GetSCT_Player_Character_CharacterInventory_3; // 0x04D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x04E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E3[0x5];                                      // 0x04E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFCTGameInstanceBP_C*                   K2Node_DynamicCast_AsFCTGame_Instance_BP;          // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_501[0x3];                                      // 0x0501(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0504(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_SetCanvasNoItemVisibility_NoItems;        // 0x0514(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_515[0x3];                                      // 0x0515(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_Emote>                       CallFunc_GetCharacterEmotes_PlayerEmotes;          // 0x0518(0x0010)(ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0528(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0539(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x053A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53B[0x1];                                      // 0x053B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize2DSquared_ReturnValue;               // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI) == 0x000008, "Wrong alignment on EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI");
static_assert(sizeof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI) == 0x000548, "Wrong size on EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, EntryPoint) == 0x000000, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::EntryPoint' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, K2Node_CustomEvent_Code_1) == 0x000004, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::K2Node_CustomEvent_Code_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, K2Node_CustomEvent_Message_1) == 0x000008, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::K2Node_CustomEvent_Message_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, K2Node_CustomEvent_Payload) == 0x000028, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, K2Node_CustomEvent_Code) == 0x0001D0, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::K2Node_CustomEvent_Code' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, K2Node_CustomEvent_Message) == 0x0001D8, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::K2Node_CustomEvent_Message' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001E8, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, Temp_string_Variable) == 0x0001F8, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, Temp_int_Variable) == 0x000208, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, Temp_struct_Variable) == 0x000210, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetUserCustomizationPayload_ReturnValue) == 0x0003B8, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetUserCustomizationPayload_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_IsValid_ReturnValue) == 0x0003C0, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, Temp_bool_IsClosed_Variable) == 0x0003C1, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, Temp_bool_Has_Been_Initd_Variable) == 0x0003C2, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, K2Node_Event_IsDesignTime) == 0x0003C3, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, K2Node_Event_MyGeometry) == 0x0003C4, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, K2Node_Event_InDeltaTime) == 0x0003FC, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, K2Node_CreateDelegate_OutputDelegate_2) == 0x000400, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetSCT_Player_Character_AsCharacter_SCT) == 0x000410, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetSCT_Player_Character_AsCharacter_SCT' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetSCT_Player_Character_CharacterInventory) == 0x000418, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetSCT_Player_Character_CharacterInventory' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetVisibleEmotesAmount_ReturnValue) == 0x000420, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetVisibleEmotesAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetVisibleEmotesAmount_ReturnValue_1) == 0x000424, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetVisibleEmotesAmount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000428, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00042C, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000430, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000434, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Add_FloatFloat_ReturnValue) == 0x000438, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetSCT_CharacterWidget_CharacterWI) == 0x000440, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetSCT_CharacterWidget_CharacterWI' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_PlayAnimation_ReturnValue) == 0x000448, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetSCT_Player_Character_AsCharacter_SCT_1) == 0x000450, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetSCT_Player_Character_AsCharacter_SCT_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetSCT_Player_Character_CharacterInventory_1) == 0x000458, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetSCT_Player_Character_CharacterInventory_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_IsLocallyControlled_ReturnValue) == 0x000460, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetSCT_Player_Character_AsCharacter_SCT_2) == 0x000468, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetSCT_Player_Character_AsCharacter_SCT_2' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetSCT_Player_Character_CharacterInventory_2) == 0x000470, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetSCT_Player_Character_CharacterInventory_2' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_VSize2D_ReturnValue) == 0x000478, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Normal2D_ReturnValue) == 0x00047C, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000484, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetRotated2D_ReturnValue) == 0x000488, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetRotated2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_BreakVector2D_X) == 0x000490, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_BreakVector2D_Y) == 0x000494, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetRotated2D_ReturnValue_1) == 0x000498, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetRotated2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_DegAtan2_ReturnValue) == 0x0004A0, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_BreakVector2D_X_1) == 0x0004A4, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_BreakVector2D_Y_1) == 0x0004A8, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0004AC, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_DegAtan2_ReturnValue_1) == 0x0004B0, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_DegAtan2_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0004B4, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0004B8, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0004BC, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_FFloor_ReturnValue) == 0x0004C0, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_PiePermutation_Return) == 0x0004C4, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_PiePermutation_Return' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0004C8, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetSCT_Player_Character_AsCharacter_SCT_3) == 0x0004D0, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetSCT_Player_Character_AsCharacter_SCT_3' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetSCT_Player_Character_CharacterInventory_3) == 0x0004D8, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetSCT_Player_Character_CharacterInventory_3' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Not_PreBool_ReturnValue) == 0x0004E0, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Not_PreBool_ReturnValue_1) == 0x0004E1, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Not_PreBool_ReturnValue_2) == 0x0004E2, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetGameInstance_ReturnValue) == 0x0004E8, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Not_PreBool_ReturnValue_3) == 0x0004F0, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, K2Node_DynamicCast_AsFCTGame_Instance_BP) == 0x0004F8, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::K2Node_DynamicCast_AsFCTGame_Instance_BP' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, K2Node_DynamicCast_bSuccess) == 0x000500, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, K2Node_CreateDelegate_OutputDelegate_3) == 0x000504, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_SetCanvasNoItemVisibility_NoItems) == 0x000514, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_SetCanvasNoItemVisibility_NoItems' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_GetCharacterEmotes_PlayerEmotes) == 0x000518, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_GetCharacterEmotes_PlayerEmotes' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, K2Node_CreateDelegate_OutputDelegate_4) == 0x000528, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Not_PreBool_ReturnValue_4) == 0x000538, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, Temp_bool_Has_Been_Initd_Variable_1) == 0x000539, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, Temp_bool_IsClosed_Variable_1) == 0x00053A, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_VSize2DSquared_ReturnValue) == 0x00053C, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_VSize2DSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000540, "Member 'EmoteWheelWI_C_ExecuteUbergraph_EmoteWheelWI::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function EmoteWheelWI.EmoteWheelWI_C.Tick
// 0x003C (0x003C - 0x0000)
struct EmoteWheelWI_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EmoteWheelWI_C_Tick) == 0x000004, "Wrong alignment on EmoteWheelWI_C_Tick");
static_assert(sizeof(EmoteWheelWI_C_Tick) == 0x00003C, "Wrong size on EmoteWheelWI_C_Tick");
static_assert(offsetof(EmoteWheelWI_C_Tick, MyGeometry) == 0x000000, "Member 'EmoteWheelWI_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_Tick, InDeltaTime) == 0x000038, "Member 'EmoteWheelWI_C_Tick::InDeltaTime' has a wrong offset!");

// Function EmoteWheelWI.EmoteWheelWI_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct EmoteWheelWI_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EmoteWheelWI_C_PreConstruct) == 0x000001, "Wrong alignment on EmoteWheelWI_C_PreConstruct");
static_assert(sizeof(EmoteWheelWI_C_PreConstruct) == 0x000001, "Wrong size on EmoteWheelWI_C_PreConstruct");
static_assert(offsetof(EmoteWheelWI_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'EmoteWheelWI_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function EmoteWheelWI.EmoteWheelWI_C.OnSuccess_F99502DC445644C7591DDEA58A6C9C13
// 0x01C0 (0x01C0 - 0x0000)
struct EmoteWheelWI_C_OnSuccess_F99502DC445644C7591DDEA58A6C9C13 final
{
public:
	struct FFCTCloudCustomizationPayload          Payload;                                           // 0x0000(0x01A8)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Code;                                              // 0x01A8(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x01B0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(EmoteWheelWI_C_OnSuccess_F99502DC445644C7591DDEA58A6C9C13) == 0x000008, "Wrong alignment on EmoteWheelWI_C_OnSuccess_F99502DC445644C7591DDEA58A6C9C13");
static_assert(sizeof(EmoteWheelWI_C_OnSuccess_F99502DC445644C7591DDEA58A6C9C13) == 0x0001C0, "Wrong size on EmoteWheelWI_C_OnSuccess_F99502DC445644C7591DDEA58A6C9C13");
static_assert(offsetof(EmoteWheelWI_C_OnSuccess_F99502DC445644C7591DDEA58A6C9C13, Payload) == 0x000000, "Member 'EmoteWheelWI_C_OnSuccess_F99502DC445644C7591DDEA58A6C9C13::Payload' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_OnSuccess_F99502DC445644C7591DDEA58A6C9C13, Code) == 0x0001A8, "Member 'EmoteWheelWI_C_OnSuccess_F99502DC445644C7591DDEA58A6C9C13::Code' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_OnSuccess_F99502DC445644C7591DDEA58A6C9C13, Message) == 0x0001B0, "Member 'EmoteWheelWI_C_OnSuccess_F99502DC445644C7591DDEA58A6C9C13::Message' has a wrong offset!");

// Function EmoteWheelWI.EmoteWheelWI_C.OnError_F99502DC445644C7591DDEA58A6C9C13
// 0x0018 (0x0018 - 0x0000)
struct EmoteWheelWI_C_OnError_F99502DC445644C7591DDEA58A6C9C13 final
{
public:
	int32                                         Code;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(EmoteWheelWI_C_OnError_F99502DC445644C7591DDEA58A6C9C13) == 0x000008, "Wrong alignment on EmoteWheelWI_C_OnError_F99502DC445644C7591DDEA58A6C9C13");
static_assert(sizeof(EmoteWheelWI_C_OnError_F99502DC445644C7591DDEA58A6C9C13) == 0x000018, "Wrong size on EmoteWheelWI_C_OnError_F99502DC445644C7591DDEA58A6C9C13");
static_assert(offsetof(EmoteWheelWI_C_OnError_F99502DC445644C7591DDEA58A6C9C13, Code) == 0x000000, "Member 'EmoteWheelWI_C_OnError_F99502DC445644C7591DDEA58A6C9C13::Code' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_OnError_F99502DC445644C7591DDEA58A6C9C13, Message) == 0x000008, "Member 'EmoteWheelWI_C_OnError_F99502DC445644C7591DDEA58A6C9C13::Message' has a wrong offset!");

// Function EmoteWheelWI.EmoteWheelWI_C.PiePermutation
// 0x0010 (0x0010 - 0x0000)
struct EmoteWheelWI_C_PiePermutation final
{
public:
	float                                         DistanceFromCenter;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Return;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EmoteWheelWI_C_PiePermutation) == 0x000004, "Wrong alignment on EmoteWheelWI_C_PiePermutation");
static_assert(sizeof(EmoteWheelWI_C_PiePermutation) == 0x000010, "Wrong size on EmoteWheelWI_C_PiePermutation");
static_assert(offsetof(EmoteWheelWI_C_PiePermutation, DistanceFromCenter) == 0x000000, "Member 'EmoteWheelWI_C_PiePermutation::DistanceFromCenter' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_PiePermutation, Index_0) == 0x000004, "Member 'EmoteWheelWI_C_PiePermutation::Index_0' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_PiePermutation, Return) == 0x000008, "Member 'EmoteWheelWI_C_PiePermutation::Return' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_PiePermutation, CallFunc_Less_FloatFloat_ReturnValue) == 0x00000C, "Member 'EmoteWheelWI_C_PiePermutation::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function EmoteWheelWI.EmoteWheelWI_C.UnhoverCurrentEntrySelection
// 0x0010 (0x0010 - 0x0000)
struct EmoteWheelWI_C_UnhoverCurrentEntrySelection final
{
public:
	int32                                         EntryIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UEmoteWheelV2EntryWI_C*                 CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EmoteWheelWI_C_UnhoverCurrentEntrySelection) == 0x000008, "Wrong alignment on EmoteWheelWI_C_UnhoverCurrentEntrySelection");
static_assert(sizeof(EmoteWheelWI_C_UnhoverCurrentEntrySelection) == 0x000010, "Wrong size on EmoteWheelWI_C_UnhoverCurrentEntrySelection");
static_assert(offsetof(EmoteWheelWI_C_UnhoverCurrentEntrySelection, EntryIndex) == 0x000000, "Member 'EmoteWheelWI_C_UnhoverCurrentEntrySelection::EntryIndex' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_UnhoverCurrentEntrySelection, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'EmoteWheelWI_C_UnhoverCurrentEntrySelection::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_UnhoverCurrentEntrySelection, CallFunc_Array_Get_Item) == 0x000008, "Member 'EmoteWheelWI_C_UnhoverCurrentEntrySelection::CallFunc_Array_Get_Item' has a wrong offset!");

// Function EmoteWheelWI.EmoteWheelWI_C.HoverCurrentEntrySelection
// 0x0010 (0x0010 - 0x0000)
struct EmoteWheelWI_C_HoverCurrentEntrySelection final
{
public:
	int32                                         EntryIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UEmoteWheelV2EntryWI_C*                 CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EmoteWheelWI_C_HoverCurrentEntrySelection) == 0x000008, "Wrong alignment on EmoteWheelWI_C_HoverCurrentEntrySelection");
static_assert(sizeof(EmoteWheelWI_C_HoverCurrentEntrySelection) == 0x000010, "Wrong size on EmoteWheelWI_C_HoverCurrentEntrySelection");
static_assert(offsetof(EmoteWheelWI_C_HoverCurrentEntrySelection, EntryIndex) == 0x000000, "Member 'EmoteWheelWI_C_HoverCurrentEntrySelection::EntryIndex' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_HoverCurrentEntrySelection, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'EmoteWheelWI_C_HoverCurrentEntrySelection::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_HoverCurrentEntrySelection, CallFunc_Array_Get_Item) == 0x000008, "Member 'EmoteWheelWI_C_HoverCurrentEntrySelection::CallFunc_Array_Get_Item' has a wrong offset!");

// Function EmoteWheelWI.EmoteWheelWI_C.GetCharacterVisibleItems
// 0x0020 (0x0020 - 0x0000)
struct EmoteWheelWI_C_GetCharacterVisibleItems final
{
public:
	TArray<struct FItemDetails>                   Return;                                            // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FItemDetails>                   L_ItemDetails;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(EmoteWheelWI_C_GetCharacterVisibleItems) == 0x000008, "Wrong alignment on EmoteWheelWI_C_GetCharacterVisibleItems");
static_assert(sizeof(EmoteWheelWI_C_GetCharacterVisibleItems) == 0x000020, "Wrong size on EmoteWheelWI_C_GetCharacterVisibleItems");
static_assert(offsetof(EmoteWheelWI_C_GetCharacterVisibleItems, Return) == 0x000000, "Member 'EmoteWheelWI_C_GetCharacterVisibleItems::Return' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetCharacterVisibleItems, L_ItemDetails) == 0x000010, "Member 'EmoteWheelWI_C_GetCharacterVisibleItems::L_ItemDetails' has a wrong offset!");

// Function EmoteWheelWI.EmoteWheelWI_C.GetVisibleEmotesAmount
// 0x0008 (0x0008 - 0x0000)
struct EmoteWheelWI_C_GetVisibleEmotesAmount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EmoteWheelWI_C_GetVisibleEmotesAmount) == 0x000004, "Wrong alignment on EmoteWheelWI_C_GetVisibleEmotesAmount");
static_assert(sizeof(EmoteWheelWI_C_GetVisibleEmotesAmount) == 0x000008, "Wrong size on EmoteWheelWI_C_GetVisibleEmotesAmount");
static_assert(offsetof(EmoteWheelWI_C_GetVisibleEmotesAmount, ReturnValue) == 0x000000, "Member 'EmoteWheelWI_C_GetVisibleEmotesAmount::ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetVisibleEmotesAmount, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'EmoteWheelWI_C_GetVisibleEmotesAmount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function EmoteWheelWI.EmoteWheelWI_C.CalculateAngle
// 0x0028 (0x0028 - 0x0000)
struct EmoteWheelWI_C_CalculateAngle final
{
public:
	int32                                         A;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_Emote>                       CallFunc_GetCharacterEmotes_PlayerEmotes;          // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EmoteWheelWI_C_CalculateAngle) == 0x000008, "Wrong alignment on EmoteWheelWI_C_CalculateAngle");
static_assert(sizeof(EmoteWheelWI_C_CalculateAngle) == 0x000028, "Wrong size on EmoteWheelWI_C_CalculateAngle");
static_assert(offsetof(EmoteWheelWI_C_CalculateAngle, A) == 0x000000, "Member 'EmoteWheelWI_C_CalculateAngle::A' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_CalculateAngle, ReturnValue) == 0x000004, "Member 'EmoteWheelWI_C_CalculateAngle::ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_CalculateAngle, CallFunc_GetCharacterEmotes_PlayerEmotes) == 0x000008, "Member 'EmoteWheelWI_C_CalculateAngle::CallFunc_GetCharacterEmotes_PlayerEmotes' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_CalculateAngle, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'EmoteWheelWI_C_CalculateAngle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_CalculateAngle, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00001C, "Member 'EmoteWheelWI_C_CalculateAngle::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_CalculateAngle, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'EmoteWheelWI_C_CalculateAngle::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_CalculateAngle, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000024, "Member 'EmoteWheelWI_C_CalculateAngle::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");

// Function EmoteWheelWI.EmoteWheelWI_C.SetCanvasNoItemVisibility
// 0x0020 (0x0020 - 0x0000)
struct EmoteWheelWI_C_SetCanvasNoItemVisibility final
{
public:
	bool                                          NoItems;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_Emote>                       CallFunc_GetCharacterEmotes_PlayerEmotes;          // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EmoteWheelWI_C_SetCanvasNoItemVisibility) == 0x000008, "Wrong alignment on EmoteWheelWI_C_SetCanvasNoItemVisibility");
static_assert(sizeof(EmoteWheelWI_C_SetCanvasNoItemVisibility) == 0x000020, "Wrong size on EmoteWheelWI_C_SetCanvasNoItemVisibility");
static_assert(offsetof(EmoteWheelWI_C_SetCanvasNoItemVisibility, NoItems) == 0x000000, "Member 'EmoteWheelWI_C_SetCanvasNoItemVisibility::NoItems' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetCanvasNoItemVisibility, Temp_bool_Variable) == 0x000001, "Member 'EmoteWheelWI_C_SetCanvasNoItemVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetCanvasNoItemVisibility, Temp_byte_Variable) == 0x000002, "Member 'EmoteWheelWI_C_SetCanvasNoItemVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetCanvasNoItemVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'EmoteWheelWI_C_SetCanvasNoItemVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetCanvasNoItemVisibility, CallFunc_GetCharacterEmotes_PlayerEmotes) == 0x000008, "Member 'EmoteWheelWI_C_SetCanvasNoItemVisibility::CallFunc_GetCharacterEmotes_PlayerEmotes' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetCanvasNoItemVisibility, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'EmoteWheelWI_C_SetCanvasNoItemVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetCanvasNoItemVisibility, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'EmoteWheelWI_C_SetCanvasNoItemVisibility::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetCanvasNoItemVisibility, K2Node_Select_Default) == 0x00001D, "Member 'EmoteWheelWI_C_SetCanvasNoItemVisibility::K2Node_Select_Default' has a wrong offset!");

// Function EmoteWheelWI.EmoteWheelWI_C.GetCursorOutOfAngle
// 0x0008 (0x0008 - 0x0000)
struct EmoteWheelWI_C_GetCursorOutOfAngle final
{
public:
	float                                         Degree;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EmoteWheelWI_C_GetCursorOutOfAngle) == 0x000004, "Wrong alignment on EmoteWheelWI_C_GetCursorOutOfAngle");
static_assert(sizeof(EmoteWheelWI_C_GetCursorOutOfAngle) == 0x000008, "Wrong size on EmoteWheelWI_C_GetCursorOutOfAngle");
static_assert(offsetof(EmoteWheelWI_C_GetCursorOutOfAngle, Degree) == 0x000000, "Member 'EmoteWheelWI_C_GetCursorOutOfAngle::Degree' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetCursorOutOfAngle, ReturnValue) == 0x000004, "Member 'EmoteWheelWI_C_GetCursorOutOfAngle::ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetCursorOutOfAngle, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000005, "Member 'EmoteWheelWI_C_GetCursorOutOfAngle::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetCursorOutOfAngle, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'EmoteWheelWI_C_GetCursorOutOfAngle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function EmoteWheelWI.EmoteWheelWI_C.SetupPieParameters
// 0x00F8 (0x00F8 - 0x0000)
struct EmoteWheelWI_C_SetupPieParameters final
{
public:
	TArray<struct FS_Emote>                       TargetArray;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         FontSize;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              TextPosition;                                      // 0x0014(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              IconScale;                                         // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateAngle_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_Emote>                       CallFunc_GetCharacterEmotes_PlayerEmotes;          // 0x0048(0x0010)(ReferenceParm)
	struct FS_Emote                               CallFunc_Array_Get_Item;                           // 0x0058(0x0060)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEmoteWheelV2EntryWI_C*                 CallFunc_Create_ReturnValue;                       // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EmoteWheelWI_C_SetupPieParameters) == 0x000008, "Wrong alignment on EmoteWheelWI_C_SetupPieParameters");
static_assert(sizeof(EmoteWheelWI_C_SetupPieParameters) == 0x0000F8, "Wrong size on EmoteWheelWI_C_SetupPieParameters");
static_assert(offsetof(EmoteWheelWI_C_SetupPieParameters, TargetArray) == 0x000000, "Member 'EmoteWheelWI_C_SetupPieParameters::TargetArray' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetupPieParameters, FontSize) == 0x000010, "Member 'EmoteWheelWI_C_SetupPieParameters::FontSize' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetupPieParameters, TextPosition) == 0x000014, "Member 'EmoteWheelWI_C_SetupPieParameters::TextPosition' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetupPieParameters, IconScale) == 0x00001C, "Member 'EmoteWheelWI_C_SetupPieParameters::IconScale' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetupPieParameters, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'EmoteWheelWI_C_SetupPieParameters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetupPieParameters, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'EmoteWheelWI_C_SetupPieParameters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetupPieParameters, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00002C, "Member 'EmoteWheelWI_C_SetupPieParameters::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetupPieParameters, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'EmoteWheelWI_C_SetupPieParameters::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetupPieParameters, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000034, "Member 'EmoteWheelWI_C_SetupPieParameters::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetupPieParameters, Temp_int_Array_Index_Variable) == 0x000038, "Member 'EmoteWheelWI_C_SetupPieParameters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetupPieParameters, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'EmoteWheelWI_C_SetupPieParameters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetupPieParameters, CallFunc_CalculateAngle_ReturnValue) == 0x000040, "Member 'EmoteWheelWI_C_SetupPieParameters::CallFunc_CalculateAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetupPieParameters, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'EmoteWheelWI_C_SetupPieParameters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetupPieParameters, CallFunc_GetCharacterEmotes_PlayerEmotes) == 0x000048, "Member 'EmoteWheelWI_C_SetupPieParameters::CallFunc_GetCharacterEmotes_PlayerEmotes' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetupPieParameters, CallFunc_Array_Get_Item) == 0x000058, "Member 'EmoteWheelWI_C_SetupPieParameters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetupPieParameters, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'EmoteWheelWI_C_SetupPieParameters::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetupPieParameters, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'EmoteWheelWI_C_SetupPieParameters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetupPieParameters, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000C0, "Member 'EmoteWheelWI_C_SetupPieParameters::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetupPieParameters, CallFunc_GetPlayerController_ReturnValue) == 0x0000C8, "Member 'EmoteWheelWI_C_SetupPieParameters::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetupPieParameters, CallFunc_Create_ReturnValue) == 0x0000D0, "Member 'EmoteWheelWI_C_SetupPieParameters::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetupPieParameters, CallFunc_Array_Add_ReturnValue) == 0x0000D8, "Member 'EmoteWheelWI_C_SetupPieParameters::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetupPieParameters, CallFunc_Conv_IntToString_ReturnValue) == 0x0000E0, "Member 'EmoteWheelWI_C_SetupPieParameters::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetupPieParameters, CallFunc_AddChildToCanvas_ReturnValue) == 0x0000F0, "Member 'EmoteWheelWI_C_SetupPieParameters::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");

// Function EmoteWheelWI.EmoteWheelWI_C.GetCharacterEmotes
// 0x0060 (0x0060 - 0x0000)
struct EmoteWheelWI_C_GetCharacterEmotes final
{
public:
	TArray<struct FS_Emote>                       PlayerEmotes;                                      // 0x0000(0x0010)(Parm, OutParm)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFCTGameInstanceBP_C*                   K2Node_DynamicCast_AsFCTGame_Instance_BP;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(EmoteWheelWI_C_GetCharacterEmotes) == 0x000008, "Wrong alignment on EmoteWheelWI_C_GetCharacterEmotes");
static_assert(sizeof(EmoteWheelWI_C_GetCharacterEmotes) == 0x000060, "Wrong size on EmoteWheelWI_C_GetCharacterEmotes");
static_assert(offsetof(EmoteWheelWI_C_GetCharacterEmotes, PlayerEmotes) == 0x000000, "Member 'EmoteWheelWI_C_GetCharacterEmotes::PlayerEmotes' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetCharacterEmotes, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000010, "Member 'EmoteWheelWI_C_GetCharacterEmotes::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetCharacterEmotes, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'EmoteWheelWI_C_GetCharacterEmotes::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetCharacterEmotes, K2Node_DynamicCast_AsCharacter_SCTBP) == 0x000020, "Member 'EmoteWheelWI_C_GetCharacterEmotes::K2Node_DynamicCast_AsCharacter_SCTBP' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetCharacterEmotes, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'EmoteWheelWI_C_GetCharacterEmotes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetCharacterEmotes, K2Node_DynamicCast_AsFCTGame_Instance_BP) == 0x000030, "Member 'EmoteWheelWI_C_GetCharacterEmotes::K2Node_DynamicCast_AsFCTGame_Instance_BP' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetCharacterEmotes, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'EmoteWheelWI_C_GetCharacterEmotes::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetCharacterEmotes, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'EmoteWheelWI_C_GetCharacterEmotes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetCharacterEmotes, CallFunc_Conv_IntToString_ReturnValue) == 0x000040, "Member 'EmoteWheelWI_C_GetCharacterEmotes::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetCharacterEmotes, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'EmoteWheelWI_C_GetCharacterEmotes::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function EmoteWheelWI.EmoteWheelWI_C.GetOnly1PieEntry
// 0x000C (0x000C - 0x0000)
struct EmoteWheelWI_C_GetOnly1PieEntry final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EmoteWheelWI_C_GetOnly1PieEntry) == 0x000004, "Wrong alignment on EmoteWheelWI_C_GetOnly1PieEntry");
static_assert(sizeof(EmoteWheelWI_C_GetOnly1PieEntry) == 0x00000C, "Wrong size on EmoteWheelWI_C_GetOnly1PieEntry");
static_assert(offsetof(EmoteWheelWI_C_GetOnly1PieEntry, ReturnValue) == 0x000000, "Member 'EmoteWheelWI_C_GetOnly1PieEntry::ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetOnly1PieEntry, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'EmoteWheelWI_C_GetOnly1PieEntry::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetOnly1PieEntry, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'EmoteWheelWI_C_GetOnly1PieEntry::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function EmoteWheelWI.EmoteWheelWI_C.TryGetPowerInSlot
// 0x0038 (0x0038 - 0x0000)
struct EmoteWheelWI_C_TryGetPowerInSlot final
{
public:
	bool                                          Slot1Empty;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPower*                                 Power;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPower*                                 CallFunc_TryGetPowerInSlot_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EmoteWheelWI_C_TryGetPowerInSlot) == 0x000008, "Wrong alignment on EmoteWheelWI_C_TryGetPowerInSlot");
static_assert(sizeof(EmoteWheelWI_C_TryGetPowerInSlot) == 0x000038, "Wrong size on EmoteWheelWI_C_TryGetPowerInSlot");
static_assert(offsetof(EmoteWheelWI_C_TryGetPowerInSlot, Slot1Empty) == 0x000000, "Member 'EmoteWheelWI_C_TryGetPowerInSlot::Slot1Empty' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_TryGetPowerInSlot, Power) == 0x000008, "Member 'EmoteWheelWI_C_TryGetPowerInSlot::Power' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_TryGetPowerInSlot, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000010, "Member 'EmoteWheelWI_C_TryGetPowerInSlot::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_TryGetPowerInSlot, K2Node_DynamicCast_AsCharacter_SCTBP) == 0x000018, "Member 'EmoteWheelWI_C_TryGetPowerInSlot::K2Node_DynamicCast_AsCharacter_SCTBP' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_TryGetPowerInSlot, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'EmoteWheelWI_C_TryGetPowerInSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_TryGetPowerInSlot, CallFunc_TryGetPowerInSlot_ReturnValue) == 0x000028, "Member 'EmoteWheelWI_C_TryGetPowerInSlot::CallFunc_TryGetPowerInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_TryGetPowerInSlot, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000030, "Member 'EmoteWheelWI_C_TryGetPowerInSlot::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function EmoteWheelWI.EmoteWheelWI_C.UpdateMousePositionForPreviewer
// 0x0008 (0x0008 - 0x0000)
struct EmoteWheelWI_C_UpdateMousePositionForPreviewer final
{
public:
	struct FVector2D                              CallFunc_GetMousePosition_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EmoteWheelWI_C_UpdateMousePositionForPreviewer) == 0x000004, "Wrong alignment on EmoteWheelWI_C_UpdateMousePositionForPreviewer");
static_assert(sizeof(EmoteWheelWI_C_UpdateMousePositionForPreviewer) == 0x000008, "Wrong size on EmoteWheelWI_C_UpdateMousePositionForPreviewer");
static_assert(offsetof(EmoteWheelWI_C_UpdateMousePositionForPreviewer, CallFunc_GetMousePosition_ReturnValue) == 0x000000, "Member 'EmoteWheelWI_C_UpdateMousePositionForPreviewer::CallFunc_GetMousePosition_ReturnValue' has a wrong offset!");

// Function EmoteWheelWI.EmoteWheelWI_C.GetHoveredEmoteCustomizationData
// 0x0088 (0x0088 - 0x0000)
struct EmoteWheelWI_C_GetHoveredEmoteCustomizationData final
{
public:
	int32                                         SelectedIndex;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Emote                               Details;                                           // 0x0008(0x0060)(Parm, OutParm, HasGetValueTypeHash)
	struct FVector2D                              Position;                                          // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEmoteWheelV2EntryWI_C*                 CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EmoteWheelWI_C_GetHoveredEmoteCustomizationData) == 0x000008, "Wrong alignment on EmoteWheelWI_C_GetHoveredEmoteCustomizationData");
static_assert(sizeof(EmoteWheelWI_C_GetHoveredEmoteCustomizationData) == 0x000088, "Wrong size on EmoteWheelWI_C_GetHoveredEmoteCustomizationData");
static_assert(offsetof(EmoteWheelWI_C_GetHoveredEmoteCustomizationData, SelectedIndex) == 0x000000, "Member 'EmoteWheelWI_C_GetHoveredEmoteCustomizationData::SelectedIndex' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetHoveredEmoteCustomizationData, Details) == 0x000008, "Member 'EmoteWheelWI_C_GetHoveredEmoteCustomizationData::Details' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetHoveredEmoteCustomizationData, Position) == 0x000068, "Member 'EmoteWheelWI_C_GetHoveredEmoteCustomizationData::Position' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetHoveredEmoteCustomizationData, CallFunc_Array_Get_Item) == 0x000070, "Member 'EmoteWheelWI_C_GetHoveredEmoteCustomizationData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetHoveredEmoteCustomizationData, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000078, "Member 'EmoteWheelWI_C_GetHoveredEmoteCustomizationData::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_GetHoveredEmoteCustomizationData, CallFunc_GetPosition_ReturnValue) == 0x000080, "Member 'EmoteWheelWI_C_GetHoveredEmoteCustomizationData::CallFunc_GetPosition_ReturnValue' has a wrong offset!");

// Function EmoteWheelWI.EmoteWheelWI_C.SetPreviewerByTag
// 0x0050 (0x0050 - 0x0000)
struct EmoteWheelWI_C_SetPreviewerByTag final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharacterPreviewerSCTBP_C*>     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterPreviewerSCTBP_C*             CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EmoteWheelWI_C_SetPreviewerByTag) == 0x000008, "Wrong alignment on EmoteWheelWI_C_SetPreviewerByTag");
static_assert(sizeof(EmoteWheelWI_C_SetPreviewerByTag) == 0x000050, "Wrong size on EmoteWheelWI_C_SetPreviewerByTag");
static_assert(offsetof(EmoteWheelWI_C_SetPreviewerByTag, Tag) == 0x000000, "Member 'EmoteWheelWI_C_SetPreviewerByTag::Tag' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetPreviewerByTag, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'EmoteWheelWI_C_SetPreviewerByTag::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetPreviewerByTag, CallFunc_MakeLiteralName_ReturnValue) == 0x00000C, "Member 'EmoteWheelWI_C_SetPreviewerByTag::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetPreviewerByTag, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'EmoteWheelWI_C_SetPreviewerByTag::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetPreviewerByTag, Temp_int_Array_Index_Variable) == 0x000018, "Member 'EmoteWheelWI_C_SetPreviewerByTag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetPreviewerByTag, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'EmoteWheelWI_C_SetPreviewerByTag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetPreviewerByTag, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'EmoteWheelWI_C_SetPreviewerByTag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetPreviewerByTag, CallFunc_GetAllActorsOfClass_OutActors) == 0x000028, "Member 'EmoteWheelWI_C_SetPreviewerByTag::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetPreviewerByTag, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'EmoteWheelWI_C_SetPreviewerByTag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetPreviewerByTag, CallFunc_Array_Get_Item) == 0x000040, "Member 'EmoteWheelWI_C_SetPreviewerByTag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetPreviewerByTag, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'EmoteWheelWI_C_SetPreviewerByTag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetPreviewerByTag, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'EmoteWheelWI_C_SetPreviewerByTag::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteWheelWI_C_SetPreviewerByTag, CallFunc_ActorHasTag_ReturnValue) == 0x00004A, "Member 'EmoteWheelWI_C_SetPreviewerByTag::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");

}

