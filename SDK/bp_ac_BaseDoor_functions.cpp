#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: bp_ac_BaseDoor

#include "Basic.hpp"

#include "bp_ac_BaseDoor_classes.hpp"
#include "bp_ac_BaseDoor_parameters.hpp"


namespace SDK
{

// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.ExecuteUbergraph_bp_ac_BaseDoor
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Abp_ac_BaseDoor_C::ExecuteUbergraph_bp_ac_BaseDoor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "ExecuteUbergraph_bp_ac_BaseDoor");

	Params::bp_ac_BaseDoor_C_ExecuteUbergraph_bp_ac_BaseDoor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.Wrench It
// (BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::Wrench_It()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "Wrench It");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.Open And Stay Open
// (BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::Open_And_Stay_Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "Open And Stay Open");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.BndEvt__ForceOpenIntaractionComponent_K2Node_ComponentBoundEvent_7_InteractionEndedDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// bool                                    WasCancelled                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void Abp_ac_BaseDoor_C::BndEvt__ForceOpenIntaractionComponent_K2Node_ComponentBoundEvent_7_InteractionEndedDelegate__DelegateSignature(const struct FInteractionPayload& Payload, bool WasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "BndEvt__ForceOpenIntaractionComponent_K2Node_ComponentBoundEvent_7_InteractionEndedDelegate__DelegateSignature");

	Params::bp_ac_BaseDoor_C_BndEvt__ForceOpenIntaractionComponent_K2Node_ComponentBoundEvent_7_InteractionEndedDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);
	Parms.WasCancelled = WasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.BndEvt__ForceOpenIntaractionComponent_K2Node_ComponentBoundEvent_6_InteractionDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void Abp_ac_BaseDoor_C::BndEvt__ForceOpenIntaractionComponent_K2Node_ComponentBoundEvent_6_InteractionDelegate__DelegateSignature(const struct FInteractionPayload& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "BndEvt__ForceOpenIntaractionComponent_K2Node_ComponentBoundEvent_6_InteractionDelegate__DelegateSignature");

	Params::bp_ac_BaseDoor_C_BndEvt__ForceOpenIntaractionComponent_K2Node_ComponentBoundEvent_6_InteractionDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.BndEvt__ForceOpenIntaractionComponent_K2Node_ComponentBoundEvent_0_InteractionSuccessfulDelegate__DelegateSignature
// (BlueprintEvent)

void Abp_ac_BaseDoor_C::BndEvt__ForceOpenIntaractionComponent_K2Node_ComponentBoundEvent_0_InteractionSuccessfulDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "BndEvt__ForceOpenIntaractionComponent_K2Node_ComponentBoundEvent_0_InteractionSuccessfulDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.BndEvt__Force Open Interaction_K2Node_ComponentBoundEvent_3_InteractionDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void Abp_ac_BaseDoor_C::BndEvt__Force_Open_Interaction_K2Node_ComponentBoundEvent_3_InteractionDelegate__DelegateSignature(const struct FInteractionPayload& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "BndEvt__Force Open Interaction_K2Node_ComponentBoundEvent_3_InteractionDelegate__DelegateSignature");

	Params::bp_ac_BaseDoor_C_BndEvt__Force_Open_Interaction_K2Node_ComponentBoundEvent_3_InteractionDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.BndEvt__Opener Door_K2Node_ComponentBoundEvent_5_OnOpenStateChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    IsOpening                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void Abp_ac_BaseDoor_C::BndEvt__Opener_Door_K2Node_ComponentBoundEvent_5_OnOpenStateChanged__DelegateSignature(bool IsOpening)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "BndEvt__Opener Door_K2Node_ComponentBoundEvent_5_OnOpenStateChanged__DelegateSignature");

	Params::bp_ac_BaseDoor_C_BndEvt__Opener_Door_K2Node_ComponentBoundEvent_5_OnOpenStateChanged__DelegateSignature Parms{};

	Parms.IsOpening = IsOpening;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C. Closed
// (BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::_Closed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", " Closed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.Disable Personoid Forcing
// (BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::Disable_Personoid_Forcing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "Disable Personoid Forcing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.Set Neutral Light
// (BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::Set_Neutral_Light()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "Set Neutral Light");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.Set Reparing Light
// (BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::Set_Reparing_Light()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "Set Reparing Light");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.Set Repaired Light
// (BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::Set_Repaired_Light()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "Set Repaired Light");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.Close After Force Open
// (BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::Close_After_Force_Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "Close After Force Open");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.Server_Remove Force Open Tag
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::Server_Remove_Force_Open_Tag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "Server_Remove Force Open Tag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.IncorrectlySolved
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     SolvingPlayerPlayerState                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Abp_ac_BaseDoor_C::IncorrectlySolved(class APlayerState* SolvingPlayerPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "IncorrectlySolved");

	Params::bp_ac_BaseDoor_C_IncorrectlySolved Parms{};

	Parms.SolvingPlayerPlayerState = SolvingPlayerPlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.CorrectlySolved
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     SolvingPlayerPlayerState                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Abp_ac_BaseDoor_C::CorrectlySolved(class APlayerState* SolvingPlayerPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "CorrectlySolved");

	Params::bp_ac_BaseDoor_C_CorrectlySolved Parms{};

	Parms.SolvingPlayerPlayerState = SolvingPlayerPlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.HandleHackingStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHacked                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void Abp_ac_BaseDoor_C::HandleHackingStateChanged(bool IsHacked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "HandleHackingStateChanged");

	Params::bp_ac_BaseDoor_C_HandleHackingStateChanged Parms{};

	Parms.IsHacked = IsHacked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.HandleDoorOpenStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsOpened                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void Abp_ac_BaseDoor_C::HandleDoorOpenStateChanged(bool IsOpened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "HandleDoorOpenStateChanged");

	Params::bp_ac_BaseDoor_C_HandleDoorOpenStateChanged Parms{};

	Parms.IsOpened = IsOpened;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Abp_ac_BaseDoor_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "ReceiveTick");

	Params::bp_ac_BaseDoor_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.HandleAutoCloseServer
// (BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::HandleAutoCloseServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "HandleAutoCloseServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.HandleFailCooldownUpdate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CooldownRemaining                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Abp_ac_BaseDoor_C::HandleFailCooldownUpdate(float CooldownRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "HandleFailCooldownUpdate");

	Params::bp_ac_BaseDoor_C_HandleFailCooldownUpdate Parms{};

	Parms.CooldownRemaining = CooldownRemaining;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.InitDoor
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Buttons_attached_by_last_index                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Abp_ac_BaseDoor_C::InitDoor(int32 Buttons_attached_by_last_index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "InitDoor");

	Params::bp_ac_BaseDoor_C_InitDoor Parms{};

	Parms.Buttons_attached_by_last_index = Buttons_attached_by_last_index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.DoorButtonPressedServer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ButtonID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           PressingPawn                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Abp_ac_BaseDoor_C::DoorButtonPressedServer(int32 ButtonID, class AActor* PressingPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "DoorButtonPressedServer");

	Params::bp_ac_BaseDoor_C_DoorButtonPressedServer Parms{};

	Parms.ButtonID = ButtonID;
	Parms.PressingPawn = PressingPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.HandleLockedStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsLocked                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsOnCooldown                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void Abp_ac_BaseDoor_C::HandleLockedStateChanged(bool IsLocked, bool IsOnCooldown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "HandleLockedStateChanged");

	Params::bp_ac_BaseDoor_C_HandleLockedStateChanged Parms{};

	Parms.IsLocked = IsLocked;
	Parms.IsOnCooldown = IsOnCooldown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.HandleSabotageCooldownUpdate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CooldownLeft                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Abp_ac_BaseDoor_C::HandleSabotageCooldownUpdate(float CooldownLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "HandleSabotageCooldownUpdate");

	Params::bp_ac_BaseDoor_C_HandleSabotageCooldownUpdate Parms{};

	Parms.CooldownLeft = CooldownLeft;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.HandleSabotageStateChange
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSabotaged                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void Abp_ac_BaseDoor_C::HandleSabotageStateChange(bool IsSabotaged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "HandleSabotageStateChange");

	Params::bp_ac_BaseDoor_C_HandleSabotageStateChange Parms{};

	Parms.IsSabotaged = IsSabotaged;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.Audio Closed
// (BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::Audio_Closed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "Audio Closed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.Audio Opened
// (BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::Audio_Opened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "Audio Opened");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.Audio Open
// (BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::Audio_Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "Audio Open");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.Audio Close
// (BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::Audio_Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "Audio Close");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.Door Closed
// (BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::Door_Closed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "Door Closed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.Door Opened
// (BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::Door_Opened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "Door Opened");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.Door Close Cosmetic
// (BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::Door_Close_Cosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "Door Close Cosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.Door Open Cosmetic
// (BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::Door_Open_Cosmetic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "Door Open Cosmetic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.BndEvt__ProximityCollider_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Abp_ac_BaseDoor_C::BndEvt__ProximityCollider_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "BndEvt__ProximityCollider_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature");

	Params::bp_ac_BaseDoor_C_BndEvt__ProximityCollider_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.BndEvt__ProximityCollider_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void Abp_ac_BaseDoor_C::BndEvt__ProximityCollider_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "BndEvt__ProximityCollider_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");

	Params::bp_ac_BaseDoor_C_BndEvt__ProximityCollider_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void Abp_ac_BaseDoor_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.AnyCharacterWithinTrigger
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CharacerFound                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void Abp_ac_BaseDoor_C::AnyCharacterWithinTrigger(bool* CharacerFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "AnyCharacterWithinTrigger");

	Params::bp_ac_BaseDoor_C_AnyCharacterWithinTrigger Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CharacerFound != nullptr)
		*CharacerFound = Parms.CharacerFound;
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.BindToSabotageComponentEvents
// (Public, BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::BindToSabotageComponentEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "BindToSabotageComponentEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.BindToDoorLockComponentEvents
// (Public, BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::BindToDoorLockComponentEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "BindToDoorLockComponentEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.PressedUnlockByTiming
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ButtonID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Unlocked                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void Abp_ac_BaseDoor_C::PressedUnlockByTiming(int32 ButtonID, bool* Unlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "PressedUnlockByTiming");

	Params::bp_ac_BaseDoor_C_PressedUnlockByTiming Parms{};

	Parms.ButtonID = ButtonID;

	UObject::ProcessEvent(Func, &Parms);

	if (Unlocked != nullptr)
		*Unlocked = Parms.Unlocked;
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.FailedUnlockByTiming
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::FailedUnlockByTiming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "FailedUnlockByTiming");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.PressedUnlockBySequence
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ButtonID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Unlocked                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void Abp_ac_BaseDoor_C::PressedUnlockBySequence(int32 ButtonID, bool* Unlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "PressedUnlockBySequence");

	Params::bp_ac_BaseDoor_C_PressedUnlockBySequence Parms{};

	Parms.ButtonID = ButtonID;

	UObject::ProcessEvent(Func, &Parms);

	if (Unlocked != nullptr)
		*Unlocked = Parms.Unlocked;
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.FailedUnlockBySequence
// (Public, BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::FailedUnlockBySequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "FailedUnlockBySequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.KeyCardInserted
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ButtonID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Unlocked                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void Abp_ac_BaseDoor_C::KeyCardInserted(int32 ButtonID, bool* Unlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "KeyCardInserted");

	Params::bp_ac_BaseDoor_C_KeyCardInserted Parms{};

	Parms.ButtonID = ButtonID;

	UObject::ProcessEvent(Func, &Parms);

	if (Unlocked != nullptr)
		*Unlocked = Parms.Unlocked;
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.CalculateDoorPosition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Open                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CurvedOpenAmount                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Abp_ac_BaseDoor_C::CalculateDoorPosition(bool Open, float* CurvedOpenAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "CalculateDoorPosition");

	Params::bp_ac_BaseDoor_C_CalculateDoorPosition Parms{};

	Parms.Open = Open;

	UObject::ProcessEvent(Func, &Parms);

	if (CurvedOpenAmount != nullptr)
		*CurvedOpenAmount = Parms.CurvedOpenAmount;
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.MoveDoors
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurvedMovePositionNormalized                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Abp_ac_BaseDoor_C::MoveDoors(float CurvedMovePositionNormalized)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "MoveDoors");

	Params::bp_ac_BaseDoor_C_MoveDoors Parms{};

	Parms.CurvedMovePositionNormalized = CurvedMovePositionNormalized;

	UObject::ProcessEvent(Func, &Parms);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.DoProximityCanOpenServer
// (Public, BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::DoProximityCanOpenServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "DoProximityCanOpenServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.BindToDoorOpenerComponentEvents
// (Public, BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::BindToDoorOpenerComponentEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "BindToDoorOpenerComponentEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.BindToHackingComponentEvents
// (Public, BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::BindToHackingComponentEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "BindToHackingComponentEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.OnRep_Repaired
// (BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::OnRep_Repaired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "OnRep_Repaired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.OnRep_Reparing
// (BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::OnRep_Reparing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "OnRep_Reparing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.OnRep_Neutral
// (BlueprintCallable, BlueprintEvent)

void Abp_ac_BaseDoor_C::OnRep_Neutral()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "OnRep_Neutral");

	UObject::ProcessEvent(Func, nullptr);
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.IsACharacterOverlapping
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<class UPrimitiveComponent*>      OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void Abp_ac_BaseDoor_C::IsACharacterOverlapping(TArray<class UPrimitiveComponent*>& OtherComp, bool* Return_Value) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "IsACharacterOverlapping");

	Params::bp_ac_BaseDoor_C_IsACharacterOverlapping Parms{};

	Parms.OtherComp = std::move(OtherComp);

	UObject::ProcessEvent(Func, &Parms);

	OtherComp = std::move(Parms.OtherComp);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.CanAutoClose
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool Abp_ac_BaseDoor_C::CanAutoClose() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "CanAutoClose");

	Params::bp_ac_BaseDoor_C_CanAutoClose Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.GetKeyCardSlotsCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 Abp_ac_BaseDoor_C::GetKeyCardSlotsCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "GetKeyCardSlotsCount");

	Params::bp_ac_BaseDoor_C_GetKeyCardSlotsCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function bp_ac_BaseDoor.bp_ac_BaseDoor_C.IsOpenedWithKeyCards
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void Abp_ac_BaseDoor_C::IsOpenedWithKeyCards(bool* Return_Value) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("bp_ac_BaseDoor_C", "IsOpenedWithKeyCards");

	Params::bp_ac_BaseDoor_C_IsOpenedWithKeyCards Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}

}

