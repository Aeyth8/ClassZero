#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Emote_Cigarette

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function Emote_Cigarette.Emote_Cigarette_C.ExecuteUbergraph_Emote_Cigarette
// 0x0290 (0x0290 - 0x0000)
struct Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x007C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x0094(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_1;                              // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALighter_C*                             CallFunc_FinishSpawningActor_ReturnValue;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USCT_AnimBpSCT_C*                       K2Node_DynamicCast_AsSCT_Anim_Bp_SCT;              // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0xE];                                      // 0x0112(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0120(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      K2Node_CustomEvent_OtherCharacterSCTBP_1;          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterColliderBP_Cigarette_C*       CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      K2Node_CustomEvent_Character_1;                    // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      K2Node_CustomEvent_OtherCharacterSCTBP;            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      K2Node_CustomEvent_Character;                      // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18A[0x2];                                      // 0x018A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ACharacterSCTBP_C* Character)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x018C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x01A8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x01BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x01D4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x01E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x01EC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x01FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x0204(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USCT_AnimBpSCT_C*                       K2Node_DynamicCast_AsSCT_Anim_Bp_SCT_1;            // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x022C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0240(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ACharacterSCTBP_C* Character)> K2Node_CreateDelegate_OutputDelegate_12;           // 0x0274(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette) == 0x000010, "Wrong alignment on Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette");
static_assert(sizeof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette) == 0x000290, "Wrong size on Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, EntryPoint) == 0x000000, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::EntryPoint' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CustomEvent_NotifyName_6) == 0x000004, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CustomEvent_NotifyName_5) == 0x00000C, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, Temp_name_Variable) == 0x000024, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CustomEvent_NotifyName_4) == 0x00002C, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CreateDelegate_OutputDelegate_1) == 0x000034, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CustomEvent_NotifyName_3) == 0x000044, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CreateDelegate_OutputDelegate_2) == 0x00004C, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CustomEvent_NotifyName_2) == 0x00005C, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CreateDelegate_OutputDelegate_3) == 0x000064, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CustomEvent_NotifyName_1) == 0x000074, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CreateDelegate_OutputDelegate_4) == 0x00007C, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CustomEvent_NotifyName) == 0x00008C, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CreateDelegate_OutputDelegate_5) == 0x000094, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, Temp_name_Variable_1) == 0x0000A4, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000AC, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, CallFunc_MakeTransform_ReturnValue) == 0x0000C0, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000F0, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, CallFunc_GetAnimInstance_ReturnValue) == 0x0000F8, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, CallFunc_FinishSpawningActor_ReturnValue) == 0x000100, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_DynamicCast_AsSCT_Anim_Bp_SCT) == 0x000108, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_DynamicCast_AsSCT_Anim_Bp_SCT' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, Temp_bool_Has_Been_Initd_Variable) == 0x000111, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, CallFunc_GetTransform_ReturnValue) == 0x000120, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000150, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CustomEvent_OtherCharacterSCTBP_1) == 0x000158, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CustomEvent_OtherCharacterSCTBP_1' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000160, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CustomEvent_Character_1) == 0x000168, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CustomEvent_Character_1' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CustomEvent_OtherCharacterSCTBP) == 0x000170, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CustomEvent_OtherCharacterSCTBP' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000178, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CustomEvent_Character) == 0x000180, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, Temp_bool_IsClosed_Variable) == 0x000188, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000189, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CreateDelegate_OutputDelegate_6) == 0x00018C, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0001A0, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CreateDelegate_OutputDelegate_7) == 0x0001A8, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, CallFunc_IsValid_ReturnValue) == 0x0001B8, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CustomEvent_NotifyName_7) == 0x0001BC, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x0001C8, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, CallFunc_IsValid_ReturnValue_1) == 0x0001D0, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CreateDelegate_OutputDelegate_8) == 0x0001D4, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CustomEvent_NotifyName_8) == 0x0001E4, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CreateDelegate_OutputDelegate_9) == 0x0001EC, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CustomEvent_NotifyName_9) == 0x0001FC, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CreateDelegate_OutputDelegate_10) == 0x000204, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000214, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000218, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_DynamicCast_AsSCT_Anim_Bp_SCT_1) == 0x000220, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_DynamicCast_AsSCT_Anim_Bp_SCT_1' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_DynamicCast_bSuccess_1) == 0x000228, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CreateDelegate_OutputDelegate_11) == 0x00022C, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000240, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000260, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000270, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette, K2Node_CreateDelegate_OutputDelegate_12) == 0x000274, "Member 'Emote_Cigarette_C_ExecuteUbergraph_Emote_Cigarette::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");

// Function Emote_Cigarette.Emote_Cigarette_C.On Character Exit
// 0x0008 (0x0008 - 0x0000)
struct Emote_Cigarette_C_On_Character_Exit final
{
public:
	class ACharacterSCTBP_C*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Emote_Cigarette_C_On_Character_Exit) == 0x000008, "Wrong alignment on Emote_Cigarette_C_On_Character_Exit");
static_assert(sizeof(Emote_Cigarette_C_On_Character_Exit) == 0x000008, "Wrong size on Emote_Cigarette_C_On_Character_Exit");
static_assert(offsetof(Emote_Cigarette_C_On_Character_Exit, Character) == 0x000000, "Member 'Emote_Cigarette_C_On_Character_Exit::Character' has a wrong offset!");

// Function Emote_Cigarette.Emote_Cigarette_C.Other Character Exited
// 0x0008 (0x0008 - 0x0000)
struct Emote_Cigarette_C_Other_Character_Exited final
{
public:
	class ACharacterSCTBP_C*                      OtherCharacterSCTBP;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Emote_Cigarette_C_Other_Character_Exited) == 0x000008, "Wrong alignment on Emote_Cigarette_C_Other_Character_Exited");
static_assert(sizeof(Emote_Cigarette_C_Other_Character_Exited) == 0x000008, "Wrong size on Emote_Cigarette_C_Other_Character_Exited");
static_assert(offsetof(Emote_Cigarette_C_Other_Character_Exited, OtherCharacterSCTBP) == 0x000000, "Member 'Emote_Cigarette_C_Other_Character_Exited::OtherCharacterSCTBP' has a wrong offset!");

// Function Emote_Cigarette.Emote_Cigarette_C.On Character Enter
// 0x0008 (0x0008 - 0x0000)
struct Emote_Cigarette_C_On_Character_Enter final
{
public:
	class ACharacterSCTBP_C*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Emote_Cigarette_C_On_Character_Enter) == 0x000008, "Wrong alignment on Emote_Cigarette_C_On_Character_Enter");
static_assert(sizeof(Emote_Cigarette_C_On_Character_Enter) == 0x000008, "Wrong size on Emote_Cigarette_C_On_Character_Enter");
static_assert(offsetof(Emote_Cigarette_C_On_Character_Enter, Character) == 0x000000, "Member 'Emote_Cigarette_C_On_Character_Enter::Character' has a wrong offset!");

// Function Emote_Cigarette.Emote_Cigarette_C.Other Character Entered
// 0x0008 (0x0008 - 0x0000)
struct Emote_Cigarette_C_Other_Character_Entered final
{
public:
	class ACharacterSCTBP_C*                      OtherCharacterSCTBP;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Emote_Cigarette_C_Other_Character_Entered) == 0x000008, "Wrong alignment on Emote_Cigarette_C_Other_Character_Entered");
static_assert(sizeof(Emote_Cigarette_C_Other_Character_Entered) == 0x000008, "Wrong size on Emote_Cigarette_C_Other_Character_Entered");
static_assert(offsetof(Emote_Cigarette_C_Other_Character_Entered, OtherCharacterSCTBP) == 0x000000, "Member 'Emote_Cigarette_C_Other_Character_Entered::OtherCharacterSCTBP' has a wrong offset!");

// Function Emote_Cigarette.Emote_Cigarette_C.OnCompleted_5CDCE3A544035EA2C1443CA083485F1C
// 0x0008 (0x0008 - 0x0000)
struct Emote_Cigarette_C_OnCompleted_5CDCE3A544035EA2C1443CA083485F1C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Emote_Cigarette_C_OnCompleted_5CDCE3A544035EA2C1443CA083485F1C) == 0x000004, "Wrong alignment on Emote_Cigarette_C_OnCompleted_5CDCE3A544035EA2C1443CA083485F1C");
static_assert(sizeof(Emote_Cigarette_C_OnCompleted_5CDCE3A544035EA2C1443CA083485F1C) == 0x000008, "Wrong size on Emote_Cigarette_C_OnCompleted_5CDCE3A544035EA2C1443CA083485F1C");
static_assert(offsetof(Emote_Cigarette_C_OnCompleted_5CDCE3A544035EA2C1443CA083485F1C, NotifyName) == 0x000000, "Member 'Emote_Cigarette_C_OnCompleted_5CDCE3A544035EA2C1443CA083485F1C::NotifyName' has a wrong offset!");

// Function Emote_Cigarette.Emote_Cigarette_C.OnBlendOut_5CDCE3A544035EA2C1443CA083485F1C
// 0x0008 (0x0008 - 0x0000)
struct Emote_Cigarette_C_OnBlendOut_5CDCE3A544035EA2C1443CA083485F1C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Emote_Cigarette_C_OnBlendOut_5CDCE3A544035EA2C1443CA083485F1C) == 0x000004, "Wrong alignment on Emote_Cigarette_C_OnBlendOut_5CDCE3A544035EA2C1443CA083485F1C");
static_assert(sizeof(Emote_Cigarette_C_OnBlendOut_5CDCE3A544035EA2C1443CA083485F1C) == 0x000008, "Wrong size on Emote_Cigarette_C_OnBlendOut_5CDCE3A544035EA2C1443CA083485F1C");
static_assert(offsetof(Emote_Cigarette_C_OnBlendOut_5CDCE3A544035EA2C1443CA083485F1C, NotifyName) == 0x000000, "Member 'Emote_Cigarette_C_OnBlendOut_5CDCE3A544035EA2C1443CA083485F1C::NotifyName' has a wrong offset!");

// Function Emote_Cigarette.Emote_Cigarette_C.OnInterrupted_5CDCE3A544035EA2C1443CA083485F1C
// 0x0008 (0x0008 - 0x0000)
struct Emote_Cigarette_C_OnInterrupted_5CDCE3A544035EA2C1443CA083485F1C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Emote_Cigarette_C_OnInterrupted_5CDCE3A544035EA2C1443CA083485F1C) == 0x000004, "Wrong alignment on Emote_Cigarette_C_OnInterrupted_5CDCE3A544035EA2C1443CA083485F1C");
static_assert(sizeof(Emote_Cigarette_C_OnInterrupted_5CDCE3A544035EA2C1443CA083485F1C) == 0x000008, "Wrong size on Emote_Cigarette_C_OnInterrupted_5CDCE3A544035EA2C1443CA083485F1C");
static_assert(offsetof(Emote_Cigarette_C_OnInterrupted_5CDCE3A544035EA2C1443CA083485F1C, NotifyName) == 0x000000, "Member 'Emote_Cigarette_C_OnInterrupted_5CDCE3A544035EA2C1443CA083485F1C::NotifyName' has a wrong offset!");

// Function Emote_Cigarette.Emote_Cigarette_C.OnNotifyBegin_5CDCE3A544035EA2C1443CA083485F1C
// 0x0008 (0x0008 - 0x0000)
struct Emote_Cigarette_C_OnNotifyBegin_5CDCE3A544035EA2C1443CA083485F1C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Emote_Cigarette_C_OnNotifyBegin_5CDCE3A544035EA2C1443CA083485F1C) == 0x000004, "Wrong alignment on Emote_Cigarette_C_OnNotifyBegin_5CDCE3A544035EA2C1443CA083485F1C");
static_assert(sizeof(Emote_Cigarette_C_OnNotifyBegin_5CDCE3A544035EA2C1443CA083485F1C) == 0x000008, "Wrong size on Emote_Cigarette_C_OnNotifyBegin_5CDCE3A544035EA2C1443CA083485F1C");
static_assert(offsetof(Emote_Cigarette_C_OnNotifyBegin_5CDCE3A544035EA2C1443CA083485F1C, NotifyName) == 0x000000, "Member 'Emote_Cigarette_C_OnNotifyBegin_5CDCE3A544035EA2C1443CA083485F1C::NotifyName' has a wrong offset!");

// Function Emote_Cigarette.Emote_Cigarette_C.OnNotifyEnd_5CDCE3A544035EA2C1443CA083485F1C
// 0x0008 (0x0008 - 0x0000)
struct Emote_Cigarette_C_OnNotifyEnd_5CDCE3A544035EA2C1443CA083485F1C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Emote_Cigarette_C_OnNotifyEnd_5CDCE3A544035EA2C1443CA083485F1C) == 0x000004, "Wrong alignment on Emote_Cigarette_C_OnNotifyEnd_5CDCE3A544035EA2C1443CA083485F1C");
static_assert(sizeof(Emote_Cigarette_C_OnNotifyEnd_5CDCE3A544035EA2C1443CA083485F1C) == 0x000008, "Wrong size on Emote_Cigarette_C_OnNotifyEnd_5CDCE3A544035EA2C1443CA083485F1C");
static_assert(offsetof(Emote_Cigarette_C_OnNotifyEnd_5CDCE3A544035EA2C1443CA083485F1C, NotifyName) == 0x000000, "Member 'Emote_Cigarette_C_OnNotifyEnd_5CDCE3A544035EA2C1443CA083485F1C::NotifyName' has a wrong offset!");

// Function Emote_Cigarette.Emote_Cigarette_C.OnCompleted_C4AB4D9F4AA59DC347F51FBD7AEC7F3B
// 0x0008 (0x0008 - 0x0000)
struct Emote_Cigarette_C_OnCompleted_C4AB4D9F4AA59DC347F51FBD7AEC7F3B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Emote_Cigarette_C_OnCompleted_C4AB4D9F4AA59DC347F51FBD7AEC7F3B) == 0x000004, "Wrong alignment on Emote_Cigarette_C_OnCompleted_C4AB4D9F4AA59DC347F51FBD7AEC7F3B");
static_assert(sizeof(Emote_Cigarette_C_OnCompleted_C4AB4D9F4AA59DC347F51FBD7AEC7F3B) == 0x000008, "Wrong size on Emote_Cigarette_C_OnCompleted_C4AB4D9F4AA59DC347F51FBD7AEC7F3B");
static_assert(offsetof(Emote_Cigarette_C_OnCompleted_C4AB4D9F4AA59DC347F51FBD7AEC7F3B, NotifyName) == 0x000000, "Member 'Emote_Cigarette_C_OnCompleted_C4AB4D9F4AA59DC347F51FBD7AEC7F3B::NotifyName' has a wrong offset!");

// Function Emote_Cigarette.Emote_Cigarette_C.OnBlendOut_C4AB4D9F4AA59DC347F51FBD7AEC7F3B
// 0x0008 (0x0008 - 0x0000)
struct Emote_Cigarette_C_OnBlendOut_C4AB4D9F4AA59DC347F51FBD7AEC7F3B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Emote_Cigarette_C_OnBlendOut_C4AB4D9F4AA59DC347F51FBD7AEC7F3B) == 0x000004, "Wrong alignment on Emote_Cigarette_C_OnBlendOut_C4AB4D9F4AA59DC347F51FBD7AEC7F3B");
static_assert(sizeof(Emote_Cigarette_C_OnBlendOut_C4AB4D9F4AA59DC347F51FBD7AEC7F3B) == 0x000008, "Wrong size on Emote_Cigarette_C_OnBlendOut_C4AB4D9F4AA59DC347F51FBD7AEC7F3B");
static_assert(offsetof(Emote_Cigarette_C_OnBlendOut_C4AB4D9F4AA59DC347F51FBD7AEC7F3B, NotifyName) == 0x000000, "Member 'Emote_Cigarette_C_OnBlendOut_C4AB4D9F4AA59DC347F51FBD7AEC7F3B::NotifyName' has a wrong offset!");

// Function Emote_Cigarette.Emote_Cigarette_C.OnInterrupted_C4AB4D9F4AA59DC347F51FBD7AEC7F3B
// 0x0008 (0x0008 - 0x0000)
struct Emote_Cigarette_C_OnInterrupted_C4AB4D9F4AA59DC347F51FBD7AEC7F3B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Emote_Cigarette_C_OnInterrupted_C4AB4D9F4AA59DC347F51FBD7AEC7F3B) == 0x000004, "Wrong alignment on Emote_Cigarette_C_OnInterrupted_C4AB4D9F4AA59DC347F51FBD7AEC7F3B");
static_assert(sizeof(Emote_Cigarette_C_OnInterrupted_C4AB4D9F4AA59DC347F51FBD7AEC7F3B) == 0x000008, "Wrong size on Emote_Cigarette_C_OnInterrupted_C4AB4D9F4AA59DC347F51FBD7AEC7F3B");
static_assert(offsetof(Emote_Cigarette_C_OnInterrupted_C4AB4D9F4AA59DC347F51FBD7AEC7F3B, NotifyName) == 0x000000, "Member 'Emote_Cigarette_C_OnInterrupted_C4AB4D9F4AA59DC347F51FBD7AEC7F3B::NotifyName' has a wrong offset!");

// Function Emote_Cigarette.Emote_Cigarette_C.OnNotifyBegin_C4AB4D9F4AA59DC347F51FBD7AEC7F3B
// 0x0008 (0x0008 - 0x0000)
struct Emote_Cigarette_C_OnNotifyBegin_C4AB4D9F4AA59DC347F51FBD7AEC7F3B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Emote_Cigarette_C_OnNotifyBegin_C4AB4D9F4AA59DC347F51FBD7AEC7F3B) == 0x000004, "Wrong alignment on Emote_Cigarette_C_OnNotifyBegin_C4AB4D9F4AA59DC347F51FBD7AEC7F3B");
static_assert(sizeof(Emote_Cigarette_C_OnNotifyBegin_C4AB4D9F4AA59DC347F51FBD7AEC7F3B) == 0x000008, "Wrong size on Emote_Cigarette_C_OnNotifyBegin_C4AB4D9F4AA59DC347F51FBD7AEC7F3B");
static_assert(offsetof(Emote_Cigarette_C_OnNotifyBegin_C4AB4D9F4AA59DC347F51FBD7AEC7F3B, NotifyName) == 0x000000, "Member 'Emote_Cigarette_C_OnNotifyBegin_C4AB4D9F4AA59DC347F51FBD7AEC7F3B::NotifyName' has a wrong offset!");

// Function Emote_Cigarette.Emote_Cigarette_C.OnNotifyEnd_C4AB4D9F4AA59DC347F51FBD7AEC7F3B
// 0x0008 (0x0008 - 0x0000)
struct Emote_Cigarette_C_OnNotifyEnd_C4AB4D9F4AA59DC347F51FBD7AEC7F3B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Emote_Cigarette_C_OnNotifyEnd_C4AB4D9F4AA59DC347F51FBD7AEC7F3B) == 0x000004, "Wrong alignment on Emote_Cigarette_C_OnNotifyEnd_C4AB4D9F4AA59DC347F51FBD7AEC7F3B");
static_assert(sizeof(Emote_Cigarette_C_OnNotifyEnd_C4AB4D9F4AA59DC347F51FBD7AEC7F3B) == 0x000008, "Wrong size on Emote_Cigarette_C_OnNotifyEnd_C4AB4D9F4AA59DC347F51FBD7AEC7F3B");
static_assert(offsetof(Emote_Cigarette_C_OnNotifyEnd_C4AB4D9F4AA59DC347F51FBD7AEC7F3B, NotifyName) == 0x000000, "Member 'Emote_Cigarette_C_OnNotifyEnd_C4AB4D9F4AA59DC347F51FBD7AEC7F3B::NotifyName' has a wrong offset!");

// Function Emote_Cigarette.Emote_Cigarette_C.Spawn and Attach Cigaret
// 0x0070 (0x0070 - 0x0000)
struct Emote_Cigarette_C_Spawn_and_Attach_Cigaret final
{
public:
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCigaretteRigAnim_AnimBp_C*             K2Node_DynamicCast_AsCigarette_Rig_Anim_Anim_Bp;   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0xF];                                       // 0x0021(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACigarette_C*                           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Emote_Cigarette_C_Spawn_and_Attach_Cigaret) == 0x000010, "Wrong alignment on Emote_Cigarette_C_Spawn_and_Attach_Cigaret");
static_assert(sizeof(Emote_Cigarette_C_Spawn_and_Attach_Cigaret) == 0x000070, "Wrong size on Emote_Cigarette_C_Spawn_and_Attach_Cigaret");
static_assert(offsetof(Emote_Cigarette_C_Spawn_and_Attach_Cigaret, CallFunc_GetAnimInstance_ReturnValue) == 0x000000, "Member 'Emote_Cigarette_C_Spawn_and_Attach_Cigaret::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_Spawn_and_Attach_Cigaret, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'Emote_Cigarette_C_Spawn_and_Attach_Cigaret::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_Spawn_and_Attach_Cigaret, K2Node_DynamicCast_AsCigarette_Rig_Anim_Anim_Bp) == 0x000018, "Member 'Emote_Cigarette_C_Spawn_and_Attach_Cigaret::K2Node_DynamicCast_AsCigarette_Rig_Anim_Anim_Bp' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_Spawn_and_Attach_Cigaret, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Emote_Cigarette_C_Spawn_and_Attach_Cigaret::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_Spawn_and_Attach_Cigaret, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'Emote_Cigarette_C_Spawn_and_Attach_Cigaret::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_Spawn_and_Attach_Cigaret, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000060, "Member 'Emote_Cigarette_C_Spawn_and_Attach_Cigaret::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Emote_Cigarette_C_Spawn_and_Attach_Cigaret, CallFunc_FinishSpawningActor_ReturnValue) == 0x000068, "Member 'Emote_Cigarette_C_Spawn_and_Attach_Cigaret::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

}

