#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AccelByteUe4SdkCustomization

#include "Basic.hpp"

#include "AccelByteUe4Sdk_structs.hpp"


namespace SDK
{

// ScriptStruct AccelByteUe4SdkCustomization.BaseUserData
// 0x0058 (0x0058 - 0x0000)
struct FBaseUserData final
{
public:
	class FString                                 DisplayName;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserId;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAvailability                                 Availability;                                      // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Activity;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Namespace;                                         // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LastSeenAt;                                        // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBaseUserData) == 0x000008, "Wrong alignment on FBaseUserData");
static_assert(sizeof(FBaseUserData) == 0x000058, "Wrong size on FBaseUserData");
static_assert(offsetof(FBaseUserData, DisplayName) == 0x000000, "Member 'FBaseUserData::DisplayName' has a wrong offset!");
static_assert(offsetof(FBaseUserData, UserId) == 0x000010, "Member 'FBaseUserData::UserId' has a wrong offset!");
static_assert(offsetof(FBaseUserData, Availability) == 0x000020, "Member 'FBaseUserData::Availability' has a wrong offset!");
static_assert(offsetof(FBaseUserData, Activity) == 0x000028, "Member 'FBaseUserData::Activity' has a wrong offset!");
static_assert(offsetof(FBaseUserData, Namespace) == 0x000038, "Member 'FBaseUserData::Namespace' has a wrong offset!");
static_assert(offsetof(FBaseUserData, LastSeenAt) == 0x000048, "Member 'FBaseUserData::LastSeenAt' has a wrong offset!");

// ScriptStruct AccelByteUe4SdkCustomization.ListBulkUserData
// 0x0020 (0x0020 - 0x0000)
struct FListBulkUserData final
{
public:
	TArray<struct FBaseUserData>                  Data;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         Online;                                            // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Busy;                                              // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Invisible;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Offline;                                           // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FListBulkUserData) == 0x000008, "Wrong alignment on FListBulkUserData");
static_assert(sizeof(FListBulkUserData) == 0x000020, "Wrong size on FListBulkUserData");
static_assert(offsetof(FListBulkUserData, Data) == 0x000000, "Member 'FListBulkUserData::Data' has a wrong offset!");
static_assert(offsetof(FListBulkUserData, Online) == 0x000010, "Member 'FListBulkUserData::Online' has a wrong offset!");
static_assert(offsetof(FListBulkUserData, Busy) == 0x000014, "Member 'FListBulkUserData::Busy' has a wrong offset!");
static_assert(offsetof(FListBulkUserData, Invisible) == 0x000018, "Member 'FListBulkUserData::Invisible' has a wrong offset!");
static_assert(offsetof(FListBulkUserData, Offline) == 0x00001C, "Member 'FListBulkUserData::Offline' has a wrong offset!");

}

