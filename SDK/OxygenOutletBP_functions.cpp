#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OxygenOutletBP

#include "Basic.hpp"

#include "OxygenOutletBP_classes.hpp"
#include "OxygenOutletBP_parameters.hpp"


namespace SDK
{

// Function OxygenOutletBP.OxygenOutletBP_C.ExecuteUbergraph_OxygenOutletBP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOxygenOutletBP_C::ExecuteUbergraph_OxygenOutletBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "ExecuteUbergraph_OxygenOutletBP");

	Params::OxygenOutletBP_C_ExecuteUbergraph_OxygenOutletBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenOutletBP.OxygenOutletBP_C.BndEvt__ContextStaticMeshRefill_K2Node_ComponentBoundEvent_9_ToggleHighlightEffect__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    ShouldShow                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AOxygenOutletBP_C::BndEvt__ContextStaticMeshRefill_K2Node_ComponentBoundEvent_9_ToggleHighlightEffect__DelegateSignature(bool ShouldShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "BndEvt__ContextStaticMeshRefill_K2Node_ComponentBoundEvent_9_ToggleHighlightEffect__DelegateSignature");

	Params::OxygenOutletBP_C_BndEvt__ContextStaticMeshRefill_K2Node_ComponentBoundEvent_9_ToggleHighlightEffect__DelegateSignature Parms{};

	Parms.ShouldShow = ShouldShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Check For Global Oxygen
// (BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::Check_For_Global_Oxygen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Check For Global Oxygen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Audio Succes
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::Audio_Succes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Audio Succes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Oxygen Flask Change Visibility
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsVisible                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AOxygenOutletBP_C::Oxygen_Flask_Change_Visibility(bool IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Oxygen Flask Change Visibility");

	Params::OxygenOutletBP_C_Oxygen_Flask_Change_Visibility Parms{};

	Parms.IsVisible = IsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenOutletBP.OxygenOutletBP_C.BndEvt__OxygenFlaskInteractionComponentRefill_K2Node_ComponentBoundEvent_8_InteractionDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void AOxygenOutletBP_C::BndEvt__OxygenFlaskInteractionComponentRefill_K2Node_ComponentBoundEvent_8_InteractionDelegate__DelegateSignature(const struct FInteractionPayload& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "BndEvt__OxygenFlaskInteractionComponentRefill_K2Node_ComponentBoundEvent_8_InteractionDelegate__DelegateSignature");

	Params::OxygenOutletBP_C_BndEvt__OxygenFlaskInteractionComponentRefill_K2Node_ComponentBoundEvent_8_InteractionDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Show Message To All Players
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Transfer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AOxygenOutletBP_C::Show_Message_To_All_Players(const class FText& Message, bool Transfer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Show Message To All Players");

	Params::OxygenOutletBP_C_Show_Message_To_All_Players Parms{};

	Parms.Message = std::move(Message);
	Parms.Transfer = Transfer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Show Failed Message Activating Player
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void AOxygenOutletBP_C::Show_Failed_Message_Activating_Player(const class FText& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Show Failed Message Activating Player");

	Params::OxygenOutletBP_C_Show_Failed_Message_Activating_Player Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenOutletBP.OxygenOutletBP_C.BndEvt__OxygenPotionInteractionComponent_K2Node_ComponentBoundEvent_4_InteractionSuccessfulDelegate__DelegateSignature
// (BlueprintEvent)

void AOxygenOutletBP_C::BndEvt__OxygenPotionInteractionComponent_K2Node_ComponentBoundEvent_4_InteractionSuccessfulDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "BndEvt__OxygenPotionInteractionComponent_K2Node_ComponentBoundEvent_4_InteractionSuccessfulDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.BndEvt__OxygenPotionInteractionComponent_K2Node_ComponentBoundEvent_3_InteractionEndedDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// bool                                    WasCancelled                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AOxygenOutletBP_C::BndEvt__OxygenPotionInteractionComponent_K2Node_ComponentBoundEvent_3_InteractionEndedDelegate__DelegateSignature(const struct FInteractionPayload& Payload, bool WasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "BndEvt__OxygenPotionInteractionComponent_K2Node_ComponentBoundEvent_3_InteractionEndedDelegate__DelegateSignature");

	Params::OxygenOutletBP_C_BndEvt__OxygenPotionInteractionComponent_K2Node_ComponentBoundEvent_3_InteractionEndedDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);
	Parms.WasCancelled = WasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenOutletBP.OxygenOutletBP_C.BndEvt__OxygenPotionInteractionComponent_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void AOxygenOutletBP_C::BndEvt__OxygenPotionInteractionComponent_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature(const struct FInteractionPayload& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "BndEvt__OxygenPotionInteractionComponent_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature");

	Params::OxygenOutletBP_C_BndEvt__OxygenPotionInteractionComponent_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Add Score Give Oxygen
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Character                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOxygenOutletBP_C::Add_Score_Give_Oxygen(const class AActor* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Add Score Give Oxygen");

	Params::OxygenOutletBP_C_Add_Score_Give_Oxygen Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenOutletBP.OxygenOutletBP_C.BndEvt__Interaction Component_K2Node_ComponentBoundEvent_10_InteractionSuccessfulDelegate__DelegateSignature
// (BlueprintEvent)

void AOxygenOutletBP_C::BndEvt__Interaction_Component_K2Node_ComponentBoundEvent_10_InteractionSuccessfulDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "BndEvt__Interaction Component_K2Node_ComponentBoundEvent_10_InteractionSuccessfulDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.SaveSnapshot
// (BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::SaveSnapshot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "SaveSnapshot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Close Lid
// (BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::Close_Lid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Close Lid");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Open Lid
// (BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::Open_Lid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Open Lid");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.BndEvt__Box_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOxygenOutletBP_C::BndEvt__Box_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "BndEvt__Box_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature");

	Params::OxygenOutletBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenOutletBP.OxygenOutletBP_C.BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AOxygenOutletBP_C::BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature");

	Params::OxygenOutletBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Audio Start Sabotage
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::Audio_Start_Sabotage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Audio Start Sabotage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Audio Stop Sabotage
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::Audio_Stop_Sabotage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Audio Stop Sabotage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Sabotage
// (BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::Sabotage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Sabotage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Add Score Sabotage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOxygenOutletBP_C::Add_Score_Sabotage(class AActor* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Add Score Sabotage");

	Params::OxygenOutletBP_C_Add_Score_Sabotage Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenOutletBP.OxygenOutletBP_C.BndEvt__Interaction Component_K2Node_ComponentBoundEvent_3_InteractionDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// bool                                    WasCancelled                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AOxygenOutletBP_C::BndEvt__Interaction_Component_K2Node_ComponentBoundEvent_3_InteractionDelegate__DelegateSignature(const struct FInteractionPayload& Payload, bool WasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "BndEvt__Interaction Component_K2Node_ComponentBoundEvent_3_InteractionDelegate__DelegateSignature");

	Params::OxygenOutletBP_C_BndEvt__Interaction_Component_K2Node_ComponentBoundEvent_3_InteractionDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);
	Parms.WasCancelled = WasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenOutletBP.OxygenOutletBP_C.BndEvt__Interaction Component_K2Node_ComponentBoundEvent_5_InteractionDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void AOxygenOutletBP_C::BndEvt__Interaction_Component_K2Node_ComponentBoundEvent_5_InteractionDelegate__DelegateSignature(const struct FInteractionPayload& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "BndEvt__Interaction Component_K2Node_ComponentBoundEvent_5_InteractionDelegate__DelegateSignature");

	Params::OxygenOutletBP_C_BndEvt__Interaction_Component_K2Node_ComponentBoundEvent_5_InteractionDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenOutletBP.OxygenOutletBP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AOxygenOutletBP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.K2_OnReset
// (Event, Public, BlueprintEvent)

void AOxygenOutletBP_C::K2_OnReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "K2_OnReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Audio Stop Drain
// (BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::Audio_Stop_Drain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Audio Stop Drain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Audio Start Drain
// (BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::Audio_Start_Drain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Audio Start Drain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Lid__UpdateFunc
// (BlueprintEvent)

void AOxygenOutletBP_C::Lid__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Lid__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Lid__FinishedFunc
// (BlueprintEvent)

void AOxygenOutletBP_C::Lid__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Lid__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.TimelineLightAnimation__UpdateFunc
// (BlueprintEvent)

void AOxygenOutletBP_C::TimelineLightAnimation__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "TimelineLightAnimation__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.TimelineLightAnimation__FinishedFunc
// (BlueprintEvent)

void AOxygenOutletBP_C::TimelineLightAnimation__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "TimelineLightAnimation__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Event Start Drain
// (Public, BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::Event_Start_Drain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Event Start Drain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Event Stop Drain
// (Public, BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::Event_Stop_Drain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Event Stop Drain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Init
// (Public, BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.SetupMiniPostProcessTransform
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::SetupMiniPostProcessTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "SetupMiniPostProcessTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.OnRep_Sabotaged
// (BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::OnRep_Sabotaged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "OnRep_Sabotaged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.SetSabotaged
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSabotaged                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AOxygenOutletBP_C::SetSabotaged(bool IsSabotaged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "SetSabotaged");

	Params::OxygenOutletBP_C_SetSabotaged Parms{};

	Parms.IsSabotaged = IsSabotaged;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenOutletBP.OxygenOutletBP_C.GetIsNoOneInside
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoOneInside                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AOxygenOutletBP_C::GetIsNoOneInside(bool* NoOneInside)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "GetIsNoOneInside");

	Params::OxygenOutletBP_C_GetIsNoOneInside Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoOneInside != nullptr)
		*NoOneInside = Parms.NoOneInside;
}


// Function OxygenOutletBP.OxygenOutletBP_C.OnRep_Open
// (BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::OnRep_Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "OnRep_Open");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Add Score
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Data_Table_Row_Name                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACharacterSCTBP_C*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOxygenOutletBP_C::Add_Score(const class FName Data_Table_Row_Name, class ACharacterSCTBP_C* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Add Score");

	Params::OxygenOutletBP_C_Add_Score Parms{};

	Parms.Data_Table_Row_Name = Data_Table_Row_Name;
	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenOutletBP.OxygenOutletBP_C.OnRep_Sabotage Start Timestamp
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::OnRep_Sabotage_Start_Timestamp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "OnRep_Sabotage Start Timestamp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.UI Update Repair Timer Text
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::UI_Update_Repair_Timer_Text()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "UI Update Repair Timer Text");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Server Set Sabotaged State
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sabotaged_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AOxygenOutletBP_C::Server_Set_Sabotaged_State(bool Sabotaged_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Server Set Sabotaged State");

	Params::OxygenOutletBP_C_Server_Set_Sabotaged_State Parms{};

	Parms.Sabotaged_0 = Sabotaged_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Become Sabotaged
// (Public, BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::Become_Sabotaged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Become Sabotaged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Become Repaired
// (Public, BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::Become_Repaired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Become Repaired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Remove OxygenPotion Stacks
// (Public, BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::Remove_OxygenPotion_Stacks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Remove OxygenPotion Stacks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Set ActivatingActor and Inventory from Payload
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              InteractionPayload                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void AOxygenOutletBP_C::Set_ActivatingActor_and_Inventory_from_Payload(const struct FInteractionPayload& InteractionPayload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Set ActivatingActor and Inventory from Payload");

	Params::OxygenOutletBP_C_Set_ActivatingActor_and_Inventory_from_Payload Parms{};

	Parms.InteractionPayload = std::move(InteractionPayload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenOutletBP.OxygenOutletBP_C.Get Oxygen Amount To Add From Power Percent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Amount                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOxygenOutletBP_C::Get_Oxygen_Amount_To_Add_From_Power_Percent(float* Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Get Oxygen Amount To Add From Power Percent");

	Params::OxygenOutletBP_C_Get_Oxygen_Amount_To_Add_From_Power_Percent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Amount != nullptr)
		*Amount = Parms.Amount;
}


// Function OxygenOutletBP.OxygenOutletBP_C.Get Oxygen Amount to Add from Power Seconds
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Amount                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOxygenOutletBP_C::Get_Oxygen_Amount_to_Add_from_Power_Seconds(float* Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Get Oxygen Amount to Add from Power Seconds");

	Params::OxygenOutletBP_C_Get_Oxygen_Amount_to_Add_from_Power_Seconds Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Amount != nullptr)
		*Amount = Parms.Amount;
}


// Function OxygenOutletBP.OxygenOutletBP_C.Oxygen Flask Fail Refill
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::Oxygen_Flask_Fail_Refill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "Oxygen Flask Fail Refill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.AnimateWorldOxygen
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Transfer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AOxygenOutletBP_C::AnimateWorldOxygen(bool Transfer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "AnimateWorldOxygen");

	Params::OxygenOutletBP_C_AnimateWorldOxygen Parms{};

	Parms.Transfer = Transfer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenOutletBP.OxygenOutletBP_C.ShowPOIIfLowOxygen
// (Public, BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::ShowPOIIfLowOxygen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "ShowPOIIfLowOxygen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenOutletBP.OxygenOutletBP_C.AddExtenders
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Up                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AOxygenOutletBP_C::AddExtenders(bool Up)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "AddExtenders");

	Params::OxygenOutletBP_C_AddExtenders Parms{};

	Parms.Up = Up;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenOutletBP.OxygenOutletBP_C.OnRep_Held
// (BlueprintCallable, BlueprintEvent)

void AOxygenOutletBP_C::OnRep_Held()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenOutletBP_C", "OnRep_Held");

	UObject::ProcessEvent(Func, nullptr);
}

}

