#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VruumbaRaceWI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass VruumbaRaceWI.VruumbaRaceWI_C
// 0x0088 (0x02E8 - 0x0260)
class UVruumbaRaceWI_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UWidgetAnimation*                       NewGlobalBest;                                     // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       NewBest;                                           // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BackgroundGradient;                                // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             BestTime;                                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CurrentTime;                                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FlagIcon;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             LeadingPlayer;                                     // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             LeadingPlayerTime;                                 // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AVruumbaRace_C*                         Race;                                              // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         High_Score;                                        // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AVruumbaSCTBP_C*                        HighScorePlayer;                                   // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 HighScorePlayerName;                               // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FText                                   HighScoreText;                                     // 0x02D0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_VruumbaRaceWI(int32 EntryPoint);
	void OnInitialized();
	void Start_timer(const class FText& RaceTime);
	void Player_Best_Time(const class FText& PlayerBestTime);
	void NewHighestScore(const class FText& NewGlobalLead, const class FString& RacerName, const struct FLinearColor& RaceColor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"VruumbaRaceWI_C">();
	}
	static class UVruumbaRaceWI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVruumbaRaceWI_C>();
	}
};
static_assert(alignof(UVruumbaRaceWI_C) == 0x000008, "Wrong alignment on UVruumbaRaceWI_C");
static_assert(sizeof(UVruumbaRaceWI_C) == 0x0002E8, "Wrong size on UVruumbaRaceWI_C");
static_assert(offsetof(UVruumbaRaceWI_C, UberGraphFrame) == 0x000260, "Member 'UVruumbaRaceWI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UVruumbaRaceWI_C, NewGlobalBest) == 0x000268, "Member 'UVruumbaRaceWI_C::NewGlobalBest' has a wrong offset!");
static_assert(offsetof(UVruumbaRaceWI_C, NewBest) == 0x000270, "Member 'UVruumbaRaceWI_C::NewBest' has a wrong offset!");
static_assert(offsetof(UVruumbaRaceWI_C, BackgroundGradient) == 0x000278, "Member 'UVruumbaRaceWI_C::BackgroundGradient' has a wrong offset!");
static_assert(offsetof(UVruumbaRaceWI_C, BestTime) == 0x000280, "Member 'UVruumbaRaceWI_C::BestTime' has a wrong offset!");
static_assert(offsetof(UVruumbaRaceWI_C, CurrentTime) == 0x000288, "Member 'UVruumbaRaceWI_C::CurrentTime' has a wrong offset!");
static_assert(offsetof(UVruumbaRaceWI_C, FlagIcon) == 0x000290, "Member 'UVruumbaRaceWI_C::FlagIcon' has a wrong offset!");
static_assert(offsetof(UVruumbaRaceWI_C, LeadingPlayer) == 0x000298, "Member 'UVruumbaRaceWI_C::LeadingPlayer' has a wrong offset!");
static_assert(offsetof(UVruumbaRaceWI_C, LeadingPlayerTime) == 0x0002A0, "Member 'UVruumbaRaceWI_C::LeadingPlayerTime' has a wrong offset!");
static_assert(offsetof(UVruumbaRaceWI_C, Race) == 0x0002A8, "Member 'UVruumbaRaceWI_C::Race' has a wrong offset!");
static_assert(offsetof(UVruumbaRaceWI_C, High_Score) == 0x0002B0, "Member 'UVruumbaRaceWI_C::High_Score' has a wrong offset!");
static_assert(offsetof(UVruumbaRaceWI_C, HighScorePlayer) == 0x0002B8, "Member 'UVruumbaRaceWI_C::HighScorePlayer' has a wrong offset!");
static_assert(offsetof(UVruumbaRaceWI_C, HighScorePlayerName) == 0x0002C0, "Member 'UVruumbaRaceWI_C::HighScorePlayerName' has a wrong offset!");
static_assert(offsetof(UVruumbaRaceWI_C, HighScoreText) == 0x0002D0, "Member 'UVruumbaRaceWI_C::HighScoreText' has a wrong offset!");

}

