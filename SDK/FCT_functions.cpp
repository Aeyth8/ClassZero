#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FCT

#include "Basic.hpp"

#include "FCT_classes.hpp"
#include "FCT_parameters.hpp"


namespace SDK
{

// Function FCT.ClientEntryPC.K2_OnApplicationResume
// (Event, Public, BlueprintEvent)

void AClientEntryPC::K2_OnApplicationResume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClientEntryPC", "K2_OnApplicationResume");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FCT.ClientEntryPC.RegionSelectionAllowed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AClientEntryPC::RegionSelectionAllowed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClientEntryPC", "RegionSelectionAllowed");

	Params::ClientEntryPC_RegionSelectionAllowed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.ClientEntryPC.SetDesiredRegion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InChinaRegion                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AClientEntryPC::SetDesiredRegion(const bool InChinaRegion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClientEntryPC", "SetDesiredRegion");

	Params::ClientEntryPC_SetDesiredRegion Parms{};

	Parms.InChinaRegion = InChinaRegion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.ClientEntryPC.SetUseAWSLocal
// (Exec, Native, Public)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AClientEntryPC::SetUseAWSLocal(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClientEntryPC", "SetUseAWSLocal");

	Params::ClientEntryPC_SetUseAWSLocal Parms{};

	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.FCTGameplayStatics.PlayMenuApplyChangeSound
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFCTGameplayStatics::PlayMenuApplyChangeSound(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FCTGameplayStatics", "PlayMenuApplyChangeSound");

	Params::FCTGameplayStatics_PlayMenuApplyChangeSound Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.FCTGameplayStatics.PlayMenuClickSound
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFCTGameplayStatics::PlayMenuClickSound(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FCTGameplayStatics", "PlayMenuClickSound");

	Params::FCTGameplayStatics_PlayMenuClickSound Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.FCTGameplayStatics.PlayMenuHoveredSound
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFCTGameplayStatics::PlayMenuHoveredSound(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FCTGameplayStatics", "PlayMenuHoveredSound");

	Params::FCTGameplayStatics_PlayMenuHoveredSound Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.FCTGameplayStatics.PlayMenuPressedSound
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFCTGameplayStatics::PlayMenuPressedSound(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FCTGameplayStatics", "PlayMenuPressedSound");

	Params::FCTGameplayStatics_PlayMenuPressedSound Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.FCTGameplayStatics.PlayMenuReleasedSound
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFCTGameplayStatics::PlayMenuReleasedSound(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FCTGameplayStatics", "PlayMenuReleasedSound");

	Params::FCTGameplayStatics_PlayMenuReleasedSound Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.FCTGameplayStatics.PlayMenuTypeLetterDudSound
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFCTGameplayStatics::PlayMenuTypeLetterDudSound(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FCTGameplayStatics", "PlayMenuTypeLetterDudSound");

	Params::FCTGameplayStatics_PlayMenuTypeLetterDudSound Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.FCTGameplayStatics.PlayMenuTypeLetterSound
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFCTGameplayStatics::PlayMenuTypeLetterSound(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FCTGameplayStatics", "PlayMenuTypeLetterSound");

	Params::FCTGameplayStatics_PlayMenuTypeLetterSound Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.FCTGameplayStatics.PlayMenuUnhoveredSound
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFCTGameplayStatics::PlayMenuUnhoveredSound(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FCTGameplayStatics", "PlayMenuUnhoveredSound");

	Params::FCTGameplayStatics_PlayMenuUnhoveredSound Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.FCTInputKeySelector.ActionMappingsByName
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FInputActionKeyMapping>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FInputActionKeyMapping> UFCTInputKeySelector::ActionMappingsByName(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FCTInputKeySelector", "ActionMappingsByName");

	Params::FCTInputKeySelector_ActionMappingsByName Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.FCTInputKeySelector.AxisMappingsByName
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FInputAxisKeyMapping>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FInputAxisKeyMapping> UFCTInputKeySelector::AxisMappingsByName(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FCTInputKeySelector", "AxisMappingsByName");

	Params::FCTInputKeySelector_AxisMappingsByName Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.FCTInputKeySelector.Hovered
// (Final, Native, Private)

void UFCTInputKeySelector::Hovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FCTInputKeySelector", "Hovered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FCT.FCTInputKeySelector.KeySelectingChanged
// (Final, Native, Private)

void UFCTInputKeySelector::KeySelectingChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FCTInputKeySelector", "KeySelectingChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FCT.FCTInputKeySelector.LoadPlayerInputConfig
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFCTInputKeySelector::LoadPlayerInputConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FCTInputKeySelector", "LoadPlayerInputConfig");

	Params::FCTInputKeySelector_LoadPlayerInputConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.FCTInputKeySelector.MyKeySelected
// (Final, Native, Private)
// Parameters:
// struct FInputChord                      Key                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFCTInputKeySelector::MyKeySelected(const struct FInputChord& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FCTInputKeySelector", "MyKeySelected");

	Params::FCTInputKeySelector_MyKeySelected Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FCT.FCTInputKeySelector.OnIKSHoveredEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFCTInputKeySelector::OnIKSHoveredEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FCTInputKeySelector", "OnIKSHoveredEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FCT.FCTInputKeySelector.OnIKSPressedEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFCTInputKeySelector::OnIKSPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FCTInputKeySelector", "OnIKSPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FCT.FCTInputKeySelector.OnIKSReleasedEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFCTInputKeySelector::OnIKSReleasedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FCTInputKeySelector", "OnIKSReleasedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FCT.FCTInputKeySelector.OnIKSUnhoveredEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFCTInputKeySelector::OnIKSUnhoveredEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FCTInputKeySelector", "OnIKSUnhoveredEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FCT.FCTInputKeySelector.Pressed
// (Final, Native, Private)

void UFCTInputKeySelector::Pressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FCTInputKeySelector", "Pressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FCT.FCTInputKeySelector.Released
// (Final, Native, Private)

void UFCTInputKeySelector::Released()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FCTInputKeySelector", "Released");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FCT.FCTInputKeySelector.SetActionInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FInputActionKeyMapping           OldMapping                                             (Parm, NativeAccessSpecifierPublic)
// struct FInputChord                      Key                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFCTInputKeySelector::SetActionInput(const struct FInputActionKeyMapping& OldMapping, const struct FInputChord& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FCTInputKeySelector", "SetActionInput");

	Params::FCTInputKeySelector_SetActionInput Parms{};

	Parms.OldMapping = std::move(OldMapping);
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.FCTInputKeySelector.SetAxisInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FInputAxisKeyMapping             OldMapping                                             (Parm, NativeAccessSpecifierPublic)
// struct FInputChord                      Key                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFCTInputKeySelector::SetAxisInput(const struct FInputAxisKeyMapping& OldMapping, const struct FInputChord& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FCTInputKeySelector", "SetAxisInput");

	Params::FCTInputKeySelector_SetAxisInput Parms{};

	Parms.OldMapping = std::move(OldMapping);
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.FCTInputKeySelector.Unhovered
// (Final, Native, Private)

void UFCTInputKeySelector::Unhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FCTInputKeySelector", "Unhovered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FCT.FCT_GIS.GetInstallID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFCT_GIS::GetInstallID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FCT_GIS", "GetInstallID");

	Params::FCT_GIS_GetInstallID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.GamepadScrollUtility.OnGamepadScroll
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   ScrollValue                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGamepadScrollUtility::OnGamepadScroll(float ScrollValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadScrollUtility", "OnGamepadScroll");

	Params::GamepadScrollUtility_OnGamepadScroll Parms{};

	Parms.ScrollValue = ScrollValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FCT.StaticInteractableMesh.AbortPressByServerLocal
// (Final, Native, Public, BlueprintCallable)

void AStaticInteractableMesh::AbortPressByServerLocal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "AbortPressByServerLocal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FCT.StaticInteractableMesh.Calculate
// (Final, Native, Public)

void AStaticInteractableMesh::Calculate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "Calculate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FCT.StaticInteractableMesh.ClickedServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                            PressingPawn                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStaticInteractableMesh::ClickedServer(class APawn* PressingPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "ClickedServer");

	Params::StaticInteractableMesh_ClickedServer Parms{};

	Parms.PressingPawn = PressingPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.StaticInteractableMesh.ClickLocal
// (Final, Native, Public, BlueprintCallable)

void AStaticInteractableMesh::ClickLocal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "ClickLocal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FCT.StaticInteractableMesh.K2_AbortPressLocal
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AStaticInteractableMesh::K2_AbortPressLocal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "K2_AbortPressLocal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FCT.StaticInteractableMesh.K2_AbortReleaseLocal
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AStaticInteractableMesh::K2_AbortReleaseLocal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "K2_AbortReleaseLocal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FCT.StaticInteractableMesh.K2_Calculate
// (Native, Event, Public, BlueprintEvent)

void AStaticInteractableMesh::K2_Calculate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "K2_Calculate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FCT.StaticInteractableMesh.K2_ClickedLocal
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AStaticInteractableMesh::K2_ClickedLocal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "K2_ClickedLocal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FCT.StaticInteractableMesh.K2_ClickedOther
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            PerformingPawn                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStaticInteractableMesh::K2_ClickedOther(class APawn* PerformingPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "K2_ClickedOther");

	Params::StaticInteractableMesh_K2_ClickedOther Parms{};

	Parms.PerformingPawn = PerformingPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FCT.StaticInteractableMesh.K2_ClickedServer
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            PerformingPawn                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStaticInteractableMesh::K2_ClickedServer(class APawn* PerformingPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "K2_ClickedServer");

	Params::StaticInteractableMesh_K2_ClickedServer Parms{};

	Parms.PerformingPawn = PerformingPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FCT.StaticInteractableMesh.K2_HoldCompleteLocal
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            PerformingPawn                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStaticInteractableMesh::K2_HoldCompleteLocal(class APawn* PerformingPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "K2_HoldCompleteLocal");

	Params::StaticInteractableMesh_K2_HoldCompleteLocal Parms{};

	Parms.PerformingPawn = PerformingPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FCT.StaticInteractableMesh.K2_HoldCompleteOther
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            PerformingPawn                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStaticInteractableMesh::K2_HoldCompleteOther(class APawn* PerformingPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "K2_HoldCompleteOther");

	Params::StaticInteractableMesh_K2_HoldCompleteOther Parms{};

	Parms.PerformingPawn = PerformingPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FCT.StaticInteractableMesh.K2_HoldCompleteServer
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            PerformingPawn                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStaticInteractableMesh::K2_HoldCompleteServer(class APawn* PerformingPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "K2_HoldCompleteServer");

	Params::StaticInteractableMesh_K2_HoldCompleteServer Parms{};

	Parms.PerformingPawn = PerformingPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FCT.StaticInteractableMesh.K2_OnRep_SetIsAvailable
// (Event, Public, BlueprintEvent)

void AStaticInteractableMesh::K2_OnRep_SetIsAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "K2_OnRep_SetIsAvailable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FCT.StaticInteractableMesh.K2_PressedLocal
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AStaticInteractableMesh::K2_PressedLocal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "K2_PressedLocal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FCT.StaticInteractableMesh.K2_PressedOther
// (Event, Public, BlueprintEvent)

void AStaticInteractableMesh::K2_PressedOther()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "K2_PressedOther");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FCT.StaticInteractableMesh.K2_PressedServer
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            PerformingPawn                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStaticInteractableMesh::K2_PressedServer(class APawn* PerformingPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "K2_PressedServer");

	Params::StaticInteractableMesh_K2_PressedServer Parms{};

	Parms.PerformingPawn = PerformingPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FCT.StaticInteractableMesh.K2_ReleasedLocal
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// float                                   TargetCenterNormalized                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStaticInteractableMesh::K2_ReleasedLocal(float TargetCenterNormalized)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "K2_ReleasedLocal");

	Params::StaticInteractableMesh_K2_ReleasedLocal Parms{};

	Parms.TargetCenterNormalized = TargetCenterNormalized;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FCT.StaticInteractableMesh.K2_ReleasedOther
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   TargetCenterNormalized                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStaticInteractableMesh::K2_ReleasedOther(float TargetCenterNormalized)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "K2_ReleasedOther");

	Params::StaticInteractableMesh_K2_ReleasedOther Parms{};

	Parms.TargetCenterNormalized = TargetCenterNormalized;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FCT.StaticInteractableMesh.K2_ReleasedServer
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            PerformingPawn                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStaticInteractableMesh::K2_ReleasedServer(class APawn* PerformingPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "K2_ReleasedServer");

	Params::StaticInteractableMesh_K2_ReleasedServer Parms{};

	Parms.PerformingPawn = PerformingPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FCT.StaticInteractableMesh.MulticastClick
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class APawn*                            PressingPawn                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStaticInteractableMesh::MulticastClick(class APawn* PressingPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "MulticastClick");

	Params::StaticInteractableMesh_MulticastClick Parms{};

	Parms.PressingPawn = PressingPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.StaticInteractableMesh.MulticastCompleted
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class APawn*                            ReleasingPawn                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStaticInteractableMesh::MulticastCompleted(class APawn* ReleasingPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "MulticastCompleted");

	Params::StaticInteractableMesh_MulticastCompleted Parms{};

	Parms.ReleasingPawn = ReleasingPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.StaticInteractableMesh.MulticastReleased
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class APawn*                            ReleasingPawn                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TargetCenterNormalized                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStaticInteractableMesh::MulticastReleased(class APawn* ReleasingPawn, float TargetCenterNormalized)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "MulticastReleased");

	Params::StaticInteractableMesh_MulticastReleased Parms{};

	Parms.ReleasingPawn = ReleasingPawn;
	Parms.TargetCenterNormalized = TargetCenterNormalized;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.StaticInteractableMesh.OnRep_SetIsAvailable
// (Native, Public)

void AStaticInteractableMesh::OnRep_SetIsAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "OnRep_SetIsAvailable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FCT.StaticInteractableMesh.PressLocal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   LocalPressStamp                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStaticInteractableMesh::PressLocal(float LocalPressStamp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "PressLocal");

	Params::StaticInteractableMesh_PressLocal Parms{};

	Parms.LocalPressStamp = LocalPressStamp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.StaticInteractableMesh.PressOther
// (Final, Native, Public, BlueprintCallable)

void AStaticInteractableMesh::PressOther()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "PressOther");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FCT.StaticInteractableMesh.PressServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                            PressingPawn                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LocalPressTimeStamp                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Ping                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStaticInteractableMesh::PressServer(class APawn* PressingPawn, float LocalPressTimeStamp, uint8 Ping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "PressServer");

	Params::StaticInteractableMesh_PressServer Parms{};

	Parms.PressingPawn = PressingPawn;
	Parms.LocalPressTimeStamp = LocalPressTimeStamp;
	Parms.Ping = Ping;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.StaticInteractableMesh.ReleaseLocal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   LocalReleaseStamp                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStaticInteractableMesh::ReleaseLocal(float LocalReleaseStamp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "ReleaseLocal");

	Params::StaticInteractableMesh_ReleaseLocal Parms{};

	Parms.LocalReleaseStamp = LocalReleaseStamp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.StaticInteractableMesh.ReleaseServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   LocalReleaseTimeStamp                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStaticInteractableMesh::ReleaseServer(float LocalReleaseTimeStamp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "ReleaseServer");

	Params::StaticInteractableMesh_ReleaseServer Parms{};

	Parms.LocalReleaseTimeStamp = LocalReleaseTimeStamp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.StaticInteractableMesh.SetIsAvailable
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewIsAvailable                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStaticInteractableMesh::SetIsAvailable(bool NewIsAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StaticInteractableMesh", "SetIsAvailable");

	Params::StaticInteractableMesh_SetIsAvailable Parms{};

	Parms.NewIsAvailable = NewIsAvailable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.LanguageData.GetKeyAt
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULanguageData::GetKeyAt(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LanguageData", "GetKeyAt");

	Params::LanguageData_GetKeyAt Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.LanguageData.GetKeyIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULanguageData::GetKeyIndex(const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LanguageData", "GetKeyIndex");

	Params::LanguageData_GetKeyIndex Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.LanguageData.PopuplateComboBoxString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UComboBoxString*                  InComboBoxString                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULanguageData::PopuplateComboBoxString(class UComboBoxString* InComboBoxString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LanguageData", "PopuplateComboBoxString");

	Params::LanguageData_PopuplateComboBoxString Parms{};

	Parms.InComboBoxString = InComboBoxString;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.MenuButton.OnMenuButtonHovered
// (Final, Native, Public)

void UMenuButton::OnMenuButtonHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuButton", "OnMenuButtonHovered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FCT.MenuButton.OnMenuButtonPressed
// (Final, Native, Public)

void UMenuButton::OnMenuButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuButton", "OnMenuButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FCT.MenuButton.OnMenuButtonReleased
// (Final, Native, Public)

void UMenuButton::OnMenuButtonReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuButton", "OnMenuButtonReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FCT.MenuButton.OnMenuButtonUnhovered
// (Final, Native, Public)

void UMenuButton::OnMenuButtonUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuButton", "OnMenuButtonUnhovered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FCT.MenuControllerGIS.AddChildMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Menu                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ParentMenu                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    NonInteractable                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SetFocus                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPanelSlot*                       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPanelSlot* UMenuControllerGIS::AddChildMenu(class UUserWidget* Menu, class UUserWidget* ParentMenu, bool NonInteractable, bool SetFocus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuControllerGIS", "AddChildMenu");

	Params::MenuControllerGIS_AddChildMenu Parms{};

	Parms.Menu = Menu;
	Parms.ParentMenu = ParentMenu;
	Parms.NonInteractable = NonInteractable;
	Parms.SetFocus = SetFocus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.MenuControllerGIS.AddMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Menu                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ZOrder                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    NonInteractable                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SetFocus                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuControllerGIS::AddMenu(class UUserWidget* Menu, int32 ZOrder, bool NonInteractable, bool SetFocus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuControllerGIS", "AddMenu");

	Params::MenuControllerGIS_AddMenu Parms{};

	Parms.Menu = Menu;
	Parms.ZOrder = ZOrder;
	Parms.NonInteractable = NonInteractable;
	Parms.SetFocus = SetFocus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.MenuControllerGIS.ClearCurrentFocus
// (Final, Native, Public, BlueprintCallable)

void UMenuControllerGIS::ClearCurrentFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuControllerGIS", "ClearCurrentFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FCT.MenuControllerGIS.IsWidgetInActiveMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuControllerGIS::IsWidgetInActiveMenu(class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuControllerGIS", "IsWidgetInActiveMenu");

	Params::MenuControllerGIS_IsWidgetInActiveMenu Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.MenuControllerGIS.IsWidgetInAnyMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuControllerGIS::IsWidgetInAnyMenu(class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuControllerGIS", "IsWidgetInAnyMenu");

	Params::MenuControllerGIS_IsWidgetInAnyMenu Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.MenuControllerGIS.OnLevelRemovedFromWorld
// (Final, Native, Private)
// Parameters:
// class ULevel*                           InLevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWorld*                           InWorld                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuControllerGIS::OnLevelRemovedFromWorld(class ULevel* InLevel, class UWorld* InWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuControllerGIS", "OnLevelRemovedFromWorld");

	Params::MenuControllerGIS_OnLevelRemovedFromWorld Parms{};

	Parms.InLevel = InLevel;
	Parms.InWorld = InWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.MenuControllerGIS.RemoveMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Menu                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuControllerGIS::RemoveMenu(class UUserWidget* Menu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuControllerGIS", "RemoveMenu");

	Params::MenuControllerGIS_RemoveMenu Parms{};

	Parms.Menu = Menu;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.MenuControllerGIS.SetOverlayDialog
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Menu                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ZOrder                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    NonInteractable                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuControllerGIS::SetOverlayDialog(class UUserWidget* Menu, int32 ZOrder, bool NonInteractable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuControllerGIS", "SetOverlayDialog");

	Params::MenuControllerGIS_SetOverlayDialog Parms{};

	Parms.Menu = Menu;
	Parms.ZOrder = ZOrder;
	Parms.NonInteractable = NonInteractable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.MenuControllerGIS.UpdateMenus
// (Final, Native, Private)

void UMenuControllerGIS::UpdateMenus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuControllerGIS", "UpdateMenus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FCT.MenuControllerGIS.UpdateMenuStates
// (Final, Native, Private)

void UMenuControllerGIS::UpdateMenuStates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuControllerGIS", "UpdateMenuStates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FCT.MenuControllerGIS.UpdateUserWidgetFocus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    SetNewFocus                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuControllerGIS::UpdateUserWidgetFocus(bool SetNewFocus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuControllerGIS", "UpdateUserWidgetFocus");

	Params::MenuControllerGIS_UpdateUserWidgetFocus Parms{};

	Parms.SetNewFocus = SetNewFocus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.MenuControllerGIS.GetWorldContextObjectFromMenus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UMenuControllerGIS::GetWorldContextObjectFromMenus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuControllerGIS", "GetWorldContextObjectFromMenus");

	Params::MenuControllerGIS_GetWorldContextObjectFromMenus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.MenuControllerGIS.HasMenus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuControllerGIS::HasMenus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuControllerGIS", "HasMenus");

	Params::MenuControllerGIS_HasMenus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.MenuFocusWidget.GetLastFocusedWidget
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UMenuFocusWidget::GetLastFocusedWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuFocusWidget", "GetLastFocusedWidget");

	Params::MenuFocusWidget_GetLastFocusedWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.MyBlueprintFunctionLibrary.FindScreenEdgeLocationForWorldLocation
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WorldLocation                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CenterWeight                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OnTheEdge                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ScreenPosition                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Angle                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMyBlueprintFunctionLibrary::FindScreenEdgeLocationForWorldLocation(class UObject* WorldContextObject, const struct FVector& WorldLocation, const int32 CenterWeight, bool* OnTheEdge, struct FVector2D* ScreenPosition, float* Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MyBlueprintFunctionLibrary", "FindScreenEdgeLocationForWorldLocation");

	Params::MyBlueprintFunctionLibrary_FindScreenEdgeLocationForWorldLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.WorldLocation = std::move(WorldLocation);
	Parms.CenterWeight = CenterWeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OnTheEdge != nullptr)
		*OnTheEdge = Parms.OnTheEdge;

	if (ScreenPosition != nullptr)
		*ScreenPosition = std::move(Parms.ScreenPosition);

	if (Angle != nullptr)
		*Angle = Parms.Angle;
}


// Function FCT.MyBlueprintFunctionLibrary.GetRandomWeighted
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TMap<TSubclassOf<class AActor>, int32>  ActorToWeightMap                                       (ConstParm, Parm, NativeAccessSpecifierPublic)
// TSubclassOf<class AActor>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class AActor> UMyBlueprintFunctionLibrary::GetRandomWeighted(const TMap<TSubclassOf<class AActor>, int32>& ActorToWeightMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MyBlueprintFunctionLibrary", "GetRandomWeighted");

	Params::MyBlueprintFunctionLibrary_GetRandomWeighted Parms{};

	Parms.ActorToWeightMap = std::move(ActorToWeightMap);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.MyBlueprintFunctionLibrary.GetRandomWeightedEnum
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TMap<uint8, int32>                      EnumToWeightMap                                        (ConstParm, Parm, NativeAccessSpecifierPublic)
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UMyBlueprintFunctionLibrary::GetRandomWeightedEnum(const TMap<uint8, int32>& EnumToWeightMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MyBlueprintFunctionLibrary", "GetRandomWeightedEnum");

	Params::MyBlueprintFunctionLibrary_GetRandomWeightedEnum Parms{};

	Parms.EnumToWeightMap = std::move(EnumToWeightMap);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.MyBlueprintFunctionLibrary.GetSonyEnterButtonSwapped
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMyBlueprintFunctionLibrary::GetSonyEnterButtonSwapped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MyBlueprintFunctionLibrary", "GetSonyEnterButtonSwapped");

	Params::MyBlueprintFunctionLibrary_GetSonyEnterButtonSwapped Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.MyBlueprintFunctionLibrary.GetSonyRegion
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESonyRegion                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESonyRegion UMyBlueprintFunctionLibrary::GetSonyRegion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MyBlueprintFunctionLibrary", "GetSonyRegion");

	Params::MyBlueprintFunctionLibrary_GetSonyRegion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.MyBlueprintFunctionLibrary.GetSortedActorsDescending
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TMap<class AActor*, int32>              MyMap                                                  (Parm, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UMyBlueprintFunctionLibrary::GetSortedActorsDescending(const TMap<class AActor*, int32>& MyMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MyBlueprintFunctionLibrary", "GetSortedActorsDescending");

	Params::MyBlueprintFunctionLibrary_GetSortedActorsDescending Parms{};

	Parms.MyMap = std::move(MyMap);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.MyBlueprintFunctionLibrary.GetWidgetLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWidget*                          InParentWidget                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          InWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UMyBlueprintFunctionLibrary::GetWidgetLocation(class UWidget* InParentWidget, class UWidget* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MyBlueprintFunctionLibrary", "GetWidgetLocation");

	Params::MyBlueprintFunctionLibrary_GetWidgetLocation Parms{};

	Parms.InParentWidget = InParentWidget;
	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.MyBlueprintFunctionLibrary.IsConsolePlatform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMyBlueprintFunctionLibrary::IsConsolePlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MyBlueprintFunctionLibrary", "IsConsolePlatform");

	Params::MyBlueprintFunctionLibrary_IsConsolePlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.MyBlueprintFunctionLibrary.IsDevConsolePlatform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMyBlueprintFunctionLibrary::IsDevConsolePlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MyBlueprintFunctionLibrary", "IsDevConsolePlatform");

	Params::MyBlueprintFunctionLibrary_IsDevConsolePlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.MyBlueprintFunctionLibrary.IsPlatformRequestingIntroSkip
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMyBlueprintFunctionLibrary::IsPlatformRequestingIntroSkip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MyBlueprintFunctionLibrary", "IsPlatformRequestingIntroSkip");

	Params::MyBlueprintFunctionLibrary_IsPlatformRequestingIntroSkip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.MyBlueprintFunctionLibrary.IsPS4Platform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMyBlueprintFunctionLibrary::IsPS4Platform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MyBlueprintFunctionLibrary", "IsPS4Platform");

	Params::MyBlueprintFunctionLibrary_IsPS4Platform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.MyBlueprintFunctionLibrary.IsPS5Platform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMyBlueprintFunctionLibrary::IsPS5Platform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MyBlueprintFunctionLibrary", "IsPS5Platform");

	Params::MyBlueprintFunctionLibrary_IsPS5Platform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.MyBlueprintFunctionLibrary.IsWinGDKPlatform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMyBlueprintFunctionLibrary::IsWinGDKPlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MyBlueprintFunctionLibrary", "IsWinGDKPlatform");

	Params::MyBlueprintFunctionLibrary_IsWinGDKPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.MyBlueprintFunctionLibrary.IsXboxOneGDKPlatform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMyBlueprintFunctionLibrary::IsXboxOneGDKPlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MyBlueprintFunctionLibrary", "IsXboxOneGDKPlatform");

	Params::MyBlueprintFunctionLibrary_IsXboxOneGDKPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.MyBlueprintFunctionLibrary.IsXboxPlatform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMyBlueprintFunctionLibrary::IsXboxPlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MyBlueprintFunctionLibrary", "IsXboxPlatform");

	Params::MyBlueprintFunctionLibrary_IsXboxPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.MyBlueprintFunctionLibrary.IsXSXPlatform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMyBlueprintFunctionLibrary::IsXSXPlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MyBlueprintFunctionLibrary", "IsXSXPlatform");

	Params::MyBlueprintFunctionLibrary_IsXSXPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.MyBlueprintFunctionLibrary.SetMenuWorldRenderingDisabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsDisabled                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMyBlueprintFunctionLibrary::SetMenuWorldRenderingDisabled(class UObject* WorldContextObject, bool bIsDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MyBlueprintFunctionLibrary", "SetMenuWorldRenderingDisabled");

	Params::MyBlueprintFunctionLibrary_SetMenuWorldRenderingDisabled Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bIsDisabled = bIsDisabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.SaveControllerGIS.DoInitialLoad
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   SlotsToLoad                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveControllerGIS::DoInitialLoad(const TArray<class FString>& SlotsToLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveControllerGIS", "DoInitialLoad");

	Params::SaveControllerGIS_DoInitialLoad Parms{};

	Parms.SlotsToLoad = std::move(SlotsToLoad);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.SaveControllerGIS.GetAnySaveInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveControllerGIS::GetAnySaveInProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveControllerGIS", "GetAnySaveInProgress");

	Params::SaveControllerGIS_GetAnySaveInProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.SaveControllerGIS.GetInitialLoadComplete
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveControllerGIS::GetInitialLoadComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveControllerGIS", "GetInitialLoadComplete");

	Params::SaveControllerGIS_GetInitialLoadComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.SaveControllerGIS.GetSaveExists
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           SlotName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveControllerGIS::GetSaveExists(const class FString& SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveControllerGIS", "GetSaveExists");

	Params::SaveControllerGIS_GetSaveExists Parms{};

	Parms.SlotName = std::move(SlotName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.SaveControllerGIS.GetSaveInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           SlotName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveControllerGIS::GetSaveInProgress(const class FString& SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveControllerGIS", "GetSaveInProgress");

	Params::SaveControllerGIS_GetSaveInProgress Parms{};

	Parms.SlotName = std::move(SlotName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.SaveControllerGIS.GetSaveLoaded
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           SlotName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveControllerGIS::GetSaveLoaded(const class FString& SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveControllerGIS", "GetSaveLoaded");

	Params::SaveControllerGIS_GetSaveLoaded Parms{};

	Parms.SlotName = std::move(SlotName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.SaveControllerGIS.Load
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           SlotName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USaveGame*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USaveGame* USaveControllerGIS::Load(const class FString& SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveControllerGIS", "Load");

	Params::SaveControllerGIS_Load Parms{};

	Parms.SlotName = std::move(SlotName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.SaveControllerGIS.LogOutXboxUser
// (Final, Native, Public, BlueprintCallable)

void USaveControllerGIS::LogOutXboxUser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveControllerGIS", "LogOutXboxUser");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FCT.SaveControllerGIS.Preload
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           SlotName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USaveControllerGIS::Preload(const class FString& SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveControllerGIS", "Preload");

	Params::SaveControllerGIS_Preload Parms{};

	Parms.SlotName = std::move(SlotName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FCT.SaveControllerGIS.ResetSaveController
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveControllerGIS::ResetSaveController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveControllerGIS", "ResetSaveController");

	Params::SaveControllerGIS_ResetSaveController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.SaveControllerGIS.Save
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           SlotName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USaveGame*                        SaveGame                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveControllerGIS::Save(const class FString& SlotName, class USaveGame* SaveGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveControllerGIS", "Save");

	Params::SaveControllerGIS_Save Parms{};

	Parms.SlotName = std::move(SlotName);
	Parms.SaveGame = SaveGame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.SaveControllerGIS.SaveWithMetaData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           SlotName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USaveGame*                        SaveGame                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             DisplayName                                            (Parm, NativeAccessSpecifierPublic)
// class FText                             DisplaySubtitle                                        (Parm, NativeAccessSpecifierPublic)
// class FText                             DisplayDescription                                     (Parm, NativeAccessSpecifierPublic)
// class FString                           IconPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxBytes                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    KeepMetaData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USaveControllerGIS::SaveWithMetaData(const class FString& SlotName, class USaveGame* SaveGame, const class FText& DisplayName, const class FText& DisplaySubtitle, const class FText& DisplayDescription, const class FString& IconPath, int32 MaxBytes, bool KeepMetaData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveControllerGIS", "SaveWithMetaData");

	Params::SaveControllerGIS_SaveWithMetaData Parms{};

	Parms.SlotName = std::move(SlotName);
	Parms.SaveGame = SaveGame;
	Parms.DisplayName = std::move(DisplayName);
	Parms.DisplaySubtitle = std::move(DisplaySubtitle);
	Parms.DisplayDescription = std::move(DisplayDescription);
	Parms.IconPath = std::move(IconPath);
	Parms.MaxBytes = MaxBytes;
	Parms.KeepMetaData = KeepMetaData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FCT.SaveControllerGIS.SetSaveMetadata
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           SlotName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             DisplayName                                            (Parm, NativeAccessSpecifierPublic)
// class FText                             DisplaySubtitle                                        (Parm, NativeAccessSpecifierPublic)
// class FText                             DisplayDescription                                     (Parm, NativeAccessSpecifierPublic)
// class FString                           IconPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxBytes                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USaveControllerGIS::SetSaveMetadata(const class FString& SlotName, const class FText& DisplayName, const class FText& DisplaySubtitle, const class FText& DisplayDescription, const class FString& IconPath, int32 MaxBytes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SaveControllerGIS", "SetSaveMetadata");

	Params::SaveControllerGIS_SetSaveMetadata Parms{};

	Parms.SlotName = std::move(SlotName);
	Parms.DisplayName = std::move(DisplayName);
	Parms.DisplaySubtitle = std::move(DisplaySubtitle);
	Parms.DisplayDescription = std::move(DisplayDescription);
	Parms.IconPath = std::move(IconPath);
	Parms.MaxBytes = MaxBytes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

