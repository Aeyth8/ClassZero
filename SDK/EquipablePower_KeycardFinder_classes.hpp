#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EquipablePower_KeycardFinder

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_KeyCardColors_structs.hpp"
#include "SCT_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass EquipablePower_KeycardFinder.EquipablePower_KeycardFinder_C
// 0x00F0 (0x0328 - 0x0238)
class AEquipablePower_KeycardFinder_C final : public AEquipablePower
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               ParticleSystem3;                                   // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem2;                                   // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem1;                                   // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak;                                                // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 KeyCardFinder_Skeletal;                            // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Lights_Alpha_14942C2043164B722FC9C8AD0886C5E2;     // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Lights__Direction_14942C2043164B722FC9C8AD0886C5E2; // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Lights;                                            // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APickupActor_Keycard_C*>         Keycards;                                          // 0x0290(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class UAnimComponent_SCT_C*                   AnimBP;                                            // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AudioActive;                                       // 0x02A8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class APickupActor_Keycard_C*, float>    KeycardDistance;                                   // 0x02B0(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class ACharacterSCT*                          OwningCharacter;                                   // 0x0300(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APickupActor_Keycard_C*                 ClosestKeycard;                                    // 0x0308(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MI_Finder;                                         // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LookingAtDOT;                                      // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x031C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31D[0x3];                                      // 0x031D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EffectIntensity;                                   // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_EquipablePower_KeycardFinder(int32 EntryPoint);
	void Update_RTPC();
	void Check();
	void Stop_Cosmetics();
	void Start_Cosmetics();
	void Deactivate(bool WasCancelled);
	void Activate();
	void K2_OnHide();
	void K2_OnShow();
	void Lights__UpdateFunc();
	void Lights__FinishedFunc();
	void UserConstructionScript();
	void OnRep_AudioActive();
	void GetClosestActor(class APickupActor_Keycard_C** ClosestKeycard_0, float* Distance);
	float GetLookingAtDOT();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EquipablePower_KeycardFinder_C">();
	}
	static class AEquipablePower_KeycardFinder_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEquipablePower_KeycardFinder_C>();
	}
};
static_assert(alignof(AEquipablePower_KeycardFinder_C) == 0x000008, "Wrong alignment on AEquipablePower_KeycardFinder_C");
static_assert(sizeof(AEquipablePower_KeycardFinder_C) == 0x000328, "Wrong size on AEquipablePower_KeycardFinder_C");
static_assert(offsetof(AEquipablePower_KeycardFinder_C, UberGraphFrame) == 0x000238, "Member 'AEquipablePower_KeycardFinder_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AEquipablePower_KeycardFinder_C, ParticleSystem3) == 0x000240, "Member 'AEquipablePower_KeycardFinder_C::ParticleSystem3' has a wrong offset!");
static_assert(offsetof(AEquipablePower_KeycardFinder_C, ParticleSystem2) == 0x000248, "Member 'AEquipablePower_KeycardFinder_C::ParticleSystem2' has a wrong offset!");
static_assert(offsetof(AEquipablePower_KeycardFinder_C, ParticleSystem1) == 0x000250, "Member 'AEquipablePower_KeycardFinder_C::ParticleSystem1' has a wrong offset!");
static_assert(offsetof(AEquipablePower_KeycardFinder_C, ParticleSystem) == 0x000258, "Member 'AEquipablePower_KeycardFinder_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AEquipablePower_KeycardFinder_C, Ak) == 0x000260, "Member 'AEquipablePower_KeycardFinder_C::Ak' has a wrong offset!");
static_assert(offsetof(AEquipablePower_KeycardFinder_C, KeyCardFinder_Skeletal) == 0x000268, "Member 'AEquipablePower_KeycardFinder_C::KeyCardFinder_Skeletal' has a wrong offset!");
static_assert(offsetof(AEquipablePower_KeycardFinder_C, Scene) == 0x000270, "Member 'AEquipablePower_KeycardFinder_C::Scene' has a wrong offset!");
static_assert(offsetof(AEquipablePower_KeycardFinder_C, Root) == 0x000278, "Member 'AEquipablePower_KeycardFinder_C::Root' has a wrong offset!");
static_assert(offsetof(AEquipablePower_KeycardFinder_C, Lights_Alpha_14942C2043164B722FC9C8AD0886C5E2) == 0x000280, "Member 'AEquipablePower_KeycardFinder_C::Lights_Alpha_14942C2043164B722FC9C8AD0886C5E2' has a wrong offset!");
static_assert(offsetof(AEquipablePower_KeycardFinder_C, Lights__Direction_14942C2043164B722FC9C8AD0886C5E2) == 0x000284, "Member 'AEquipablePower_KeycardFinder_C::Lights__Direction_14942C2043164B722FC9C8AD0886C5E2' has a wrong offset!");
static_assert(offsetof(AEquipablePower_KeycardFinder_C, Lights) == 0x000288, "Member 'AEquipablePower_KeycardFinder_C::Lights' has a wrong offset!");
static_assert(offsetof(AEquipablePower_KeycardFinder_C, Keycards) == 0x000290, "Member 'AEquipablePower_KeycardFinder_C::Keycards' has a wrong offset!");
static_assert(offsetof(AEquipablePower_KeycardFinder_C, AnimBP) == 0x0002A0, "Member 'AEquipablePower_KeycardFinder_C::AnimBP' has a wrong offset!");
static_assert(offsetof(AEquipablePower_KeycardFinder_C, AudioActive) == 0x0002A8, "Member 'AEquipablePower_KeycardFinder_C::AudioActive' has a wrong offset!");
static_assert(offsetof(AEquipablePower_KeycardFinder_C, KeycardDistance) == 0x0002B0, "Member 'AEquipablePower_KeycardFinder_C::KeycardDistance' has a wrong offset!");
static_assert(offsetof(AEquipablePower_KeycardFinder_C, OwningCharacter) == 0x000300, "Member 'AEquipablePower_KeycardFinder_C::OwningCharacter' has a wrong offset!");
static_assert(offsetof(AEquipablePower_KeycardFinder_C, ClosestKeycard) == 0x000308, "Member 'AEquipablePower_KeycardFinder_C::ClosestKeycard' has a wrong offset!");
static_assert(offsetof(AEquipablePower_KeycardFinder_C, MI_Finder) == 0x000310, "Member 'AEquipablePower_KeycardFinder_C::MI_Finder' has a wrong offset!");
static_assert(offsetof(AEquipablePower_KeycardFinder_C, LookingAtDOT) == 0x000318, "Member 'AEquipablePower_KeycardFinder_C::LookingAtDOT' has a wrong offset!");
static_assert(offsetof(AEquipablePower_KeycardFinder_C, Debug) == 0x00031C, "Member 'AEquipablePower_KeycardFinder_C::Debug' has a wrong offset!");
static_assert(offsetof(AEquipablePower_KeycardFinder_C, EffectIntensity) == 0x000320, "Member 'AEquipablePower_KeycardFinder_C::EffectIntensity' has a wrong offset!");

}

