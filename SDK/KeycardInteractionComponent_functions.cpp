#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KeycardInteractionComponent

#include "Basic.hpp"

#include "KeycardInteractionComponent_classes.hpp"
#include "KeycardInteractionComponent_parameters.hpp"


namespace SDK
{

// Function KeycardInteractionComponent.KeycardInteractionComponent_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AKeySocket3in1BP_C*               Owner_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UKeycardInteractionComponent_C::Initialize(class AKeySocket3in1BP_C* Owner_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeycardInteractionComponent_C", "Initialize");

	Params::KeycardInteractionComponent_C_Initialize Parms{};

	Parms.Owner_0 = Owner_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function KeycardInteractionComponent.KeycardInteractionComponent_C.CanActivate
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UKeycardInteractionComponent_C::CanActivate(const struct FInteractionPayload& Payload) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeycardInteractionComponent_C", "CanActivate");

	Params::KeycardInteractionComponent_C_CanActivate Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function KeycardInteractionComponent.KeycardInteractionComponent_C.OwnerHasEquippedKeycard
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UKeycardGA_C*                     Equipped_Keycard                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Output                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UKeycardInteractionComponent_C::OwnerHasEquippedKeycard(class UKeycardGA_C* Equipped_Keycard, bool* Output) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeycardInteractionComponent_C", "OwnerHasEquippedKeycard");

	Params::KeycardInteractionComponent_C_OwnerHasEquippedKeycard Parms{};

	Parms.Equipped_Keycard = Equipped_Keycard;

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function KeycardInteractionComponent.KeycardInteractionComponent_C.GetInactiveContextDescription
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UKeycardInteractionComponent_C::GetInactiveContextDescription(const struct FInteractionPayload& Payload) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeycardInteractionComponent_C", "GetInactiveContextDescription");

	Params::KeycardInteractionComponent_C_GetInactiveContextDescription Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

