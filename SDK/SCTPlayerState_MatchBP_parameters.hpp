#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SCTPlayerState_MatchBP

#include "Basic.hpp"

#include "E_KeyCardColors_structs.hpp"
#include "SCT_structs.hpp"
#include "Engine_structs.hpp"
#include "S_Score_structs.hpp"
#include "E_ScoreCategories_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_Karma_structs.hpp"


namespace SDK::Params
{

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.OnAgendaDescriptionChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct SCTPlayerState_MatchBP_C_OnAgendaDescriptionChanged__DelegateSignature final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_OnAgendaDescriptionChanged__DelegateSignature) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_OnAgendaDescriptionChanged__DelegateSignature");
static_assert(sizeof(SCTPlayerState_MatchBP_C_OnAgendaDescriptionChanged__DelegateSignature) == 0x000010, "Wrong size on SCTPlayerState_MatchBP_C_OnAgendaDescriptionChanged__DelegateSignature");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnAgendaDescriptionChanged__DelegateSignature, Value) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_OnAgendaDescriptionChanged__DelegateSignature::Value' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.OnAgendaProgressionChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct SCTPlayerState_MatchBP_C_OnAgendaProgressionChanged__DelegateSignature final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_OnAgendaProgressionChanged__DelegateSignature) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_OnAgendaProgressionChanged__DelegateSignature");
static_assert(sizeof(SCTPlayerState_MatchBP_C_OnAgendaProgressionChanged__DelegateSignature) == 0x000010, "Wrong size on SCTPlayerState_MatchBP_C_OnAgendaProgressionChanged__DelegateSignature");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnAgendaProgressionChanged__DelegateSignature, Value) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_OnAgendaProgressionChanged__DelegateSignature::Value' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.OnAgendaStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct SCTPlayerState_MatchBP_C_OnAgendaStateChanged__DelegateSignature final
{
public:
	EAgendaObjectState                            State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_OnAgendaStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on SCTPlayerState_MatchBP_C_OnAgendaStateChanged__DelegateSignature");
static_assert(sizeof(SCTPlayerState_MatchBP_C_OnAgendaStateChanged__DelegateSignature) == 0x000001, "Wrong size on SCTPlayerState_MatchBP_C_OnAgendaStateChanged__DelegateSignature");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnAgendaStateChanged__DelegateSignature, State) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_OnAgendaStateChanged__DelegateSignature::State' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.ExecuteUbergraph_SCTPlayerState_MatchBP
// 0x04B0 (0x04B0 - 0x0000)
struct SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_StatCode;                       // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_IncementBy;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFCTStatIncrementCallbackProxy*         CallFunc_UpdateStatistic_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFCTAchievement*                        K2Node_CustomEvent_AchievementInfo_2;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Message_10;                     // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(class UFCTAchievement* AchievementInfo, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate;              // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 Temp_string_Variable;                              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UFCTAchievement*                        Temp_object_Variable;                              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UFCTStatIncrementCallbackProxy*         CallFunc_UpdateStatistic_ReturnValue_1;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Message_9;                      // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UFCTAchievement*                        K2Node_CustomEvent_AchievementInfo_1;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Message_8;                      // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(class UFCTAchievement* AchievementInfo, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00C8(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 Temp_string_Variable_1;                            // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UFCTAchievement*                        Temp_object_Variable_1;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UFCTStatIncrementCallbackProxy*         CallFunc_UpdateStatistic_ReturnValue_2;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 Code, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x010C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_Code_5;                         // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Message_7;                      // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code_4;                         // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Message_6;                      // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(int32 Code, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0148(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 Temp_string_Variable_2;                            // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFCTIncrementUnlinkedStatsCallbackProxy* CallFunc_IncrementUnlinkedStatistic_ReturnValue;   // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerInfoGIS*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 CurrentKarma, int32 Code, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0184(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_CurrentKarma_3;                 // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code_3;                         // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Message_5;                      // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CurrentKarma_2;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code_2;                         // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Message_4;                      // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(int32 CurrentKarma, int32 Code, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x01C8(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 Temp_string_Variable_3;                            // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 CurrentKarma, int32 Code, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x01F0(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_CurrentKarma_1;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code_1;                         // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Message_3;                      // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CurrentKarma;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code;                           // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Message_2;                      // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(int32 CurrentKarma, int32 Code, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x0230(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 Temp_string_Variable_4;                            // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPS5GameStatsGIS*                       CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Message_1;                      // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x0270(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UFCTAchievement* AchievementInfo, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_10;           // 0x0280(0x0010)(ZeroConstructor, NoDestructor)
	class UFCTAchievement*                        K2Node_CustomEvent_AchievementInfo;                // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Message;                        // 0x0298(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UFCTAchievement*                        Temp_object_Variable_2;                            // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFCTAchievement*                        K2Node_CustomEvent_AchievementInfo_3;              // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Message_12;                     // 0x02D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x02E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E3[0x5];                                      // 0x02E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0310(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue_1;        // 0x0320(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(class UFCTAchievement* AchievementInfo, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x0330(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0358(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Message_11;                     // 0x0368(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsEndScenario__IgnoreDataTable_; // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379[0x3];                                      // 0x0379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_EndScenarioScore;               // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_DataTableRowName;               // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Message_13;                     // 0x0388(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FS_Score                               CallFunc_GetDataTableRowFromName_OutRow;           // 0x0398(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x03C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CA[0x2];                                      // 0x03CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_12;           // 0x03D0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_13;           // 0x03E0(0x0010)(ZeroConstructor, NoDestructor)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP;              // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_402[0x6];                                      // 0x0402(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_Event_NewPlayerState;                       // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCTPlayerState_MatchBP_C*              K2Node_DynamicCast_AsSCTPlayer_State_Match_BP;     // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_419[0x3];                                      // 0x0419(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_Data_Table_Row_Name;            // 0x041C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Karma                               CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0428(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFCTStatIncrementCallbackProxy*         CallFunc_UpdateStatistic_ReturnValue_3;            // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFCTAccelByteKarmaStat*                 CallFunc_AddToCurrentKarma_ReturnValue;            // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46A[0x6];                                      // 0x046A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFCTAccelByteKarmaStat*                 CallFunc_AddToCurrentKarma_ReturnValue_1;          // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_479[0x7];                                      // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFCTAchievement*                        Temp_object_Variable_3;                            // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Vote;                           // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_6;                            // 0x0490(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x04A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP");
static_assert(sizeof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP) == 0x0004B0, "Wrong size on SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, EntryPoint) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_StatCode) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_StatCode' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_IncementBy) == 0x000018, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_IncementBy' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_UpdateStatistic_ReturnValue) == 0x000020, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_UpdateStatistic_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_AchievementInfo_2) == 0x000030, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_AchievementInfo_2' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_Message_10) == 0x000038, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_Message_10' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CreateDelegate_OutputDelegate) == 0x000048, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, Temp_string_Variable) == 0x000058, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, Temp_object_Variable) == 0x000068, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_UpdateStatistic_ReturnValue_1) == 0x000080, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_UpdateStatistic_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CreateDelegate_OutputDelegate_1) == 0x00008C, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_Message_9) == 0x0000A0, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_Message_9' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_AchievementInfo_1) == 0x0000B0, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_AchievementInfo_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_Message_8) == 0x0000B8, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_Message_8' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000C8, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, Temp_string_Variable_1) == 0x0000D8, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, Temp_object_Variable_1) == 0x0000E8, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000F0, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_UpdateStatistic_ReturnValue_2) == 0x000100, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_UpdateStatistic_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_IsValid_ReturnValue_2) == 0x000108, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CreateDelegate_OutputDelegate_3) == 0x00010C, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_Code_5) == 0x00011C, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_Code_5' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_Message_7) == 0x000120, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_Message_7' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_Code_4) == 0x000130, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_Code_4' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_Message_6) == 0x000138, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_Message_6' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CreateDelegate_OutputDelegate_4) == 0x000148, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, Temp_string_Variable_2) == 0x000158, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, Temp_int_Variable) == 0x000168, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_IncrementUnlinkedStatistic_ReturnValue) == 0x000170, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_IncrementUnlinkedStatistic_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000178, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_IsValid_ReturnValue_3) == 0x000180, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CreateDelegate_OutputDelegate_5) == 0x000184, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_CurrentKarma_3) == 0x000194, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_CurrentKarma_3' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_Code_3) == 0x000198, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_Code_3' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_Message_5) == 0x0001A0, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_Message_5' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_CurrentKarma_2) == 0x0001B0, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_CurrentKarma_2' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_Code_2) == 0x0001B4, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_Code_2' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_Message_4) == 0x0001B8, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_Message_4' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CreateDelegate_OutputDelegate_6) == 0x0001C8, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, Temp_string_Variable_3) == 0x0001D8, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, Temp_int_Variable_1) == 0x0001E8, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, Temp_int_Variable_2) == 0x0001EC, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CreateDelegate_OutputDelegate_7) == 0x0001F0, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_CurrentKarma_1) == 0x000200, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_CurrentKarma_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_Code_1) == 0x000204, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_Code_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_Message_3) == 0x000208, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_Message_3' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_CurrentKarma) == 0x000218, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_CurrentKarma' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_Code) == 0x00021C, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_Code' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_Message_2) == 0x000220, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_Message_2' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CreateDelegate_OutputDelegate_8) == 0x000230, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, Temp_string_Variable_4) == 0x000240, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, Temp_int_Variable_3) == 0x000250, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, Temp_int_Variable_4) == 0x000254, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000258, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_Message_1) == 0x000260, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_Message_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CreateDelegate_OutputDelegate_9) == 0x000270, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CreateDelegate_OutputDelegate_10) == 0x000280, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_AchievementInfo) == 0x000290, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_AchievementInfo' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_Message) == 0x000298, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_Message' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, Temp_string_Variable_5) == 0x0002A8, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, Temp_object_Variable_2) == 0x0002B8, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_HasAuthority_ReturnValue) == 0x0002C0, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_AchievementInfo_3) == 0x0002C8, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_AchievementInfo_3' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_Message_12) == 0x0002D0, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_Message_12' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_HasAuthority_ReturnValue_1) == 0x0002E0, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002E1, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0002E2, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_GetCurrentLevelName_ReturnValue) == 0x0002E8, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0002F8, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_Contains_ReturnValue) == 0x000308, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000310, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_GetCurrentLevelName_ReturnValue_1) == 0x000320, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_GetCurrentLevelName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CreateDelegate_OutputDelegate_11) == 0x000330, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000340, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_Contains_ReturnValue_1) == 0x000350, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000358, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_Message_11) == 0x000368, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_Message_11' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_IsEndScenario__IgnoreDataTable_) == 0x000378, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_IsEndScenario__IgnoreDataTable_' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_EndScenarioScore) == 0x00037C, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_EndScenarioScore' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_DataTableRowName) == 0x000380, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_DataTableRowName' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_Message_13) == 0x000388, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_Message_13' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_GetDataTableRowFromName_OutRow) == 0x000398, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0003C8, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_HasAuthority_ReturnValue_2) == 0x0003C9, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_Add_IntInt_ReturnValue) == 0x0003CC, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CreateDelegate_OutputDelegate_12) == 0x0003D0, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CreateDelegate_OutputDelegate_13) == 0x0003E0, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_GetPlayerPawn_ReturnValue) == 0x0003F0, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_DynamicCast_AsCharacter_SCTBP) == 0x0003F8, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_DynamicCast_AsCharacter_SCTBP' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_DynamicCast_bSuccess) == 0x000400, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_HasAuthority_ReturnValue_3) == 0x000401, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_Event_NewPlayerState) == 0x000408, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_Event_NewPlayerState' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_DynamicCast_AsSCTPlayer_State_Match_BP) == 0x000410, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_DynamicCast_AsSCTPlayer_State_Match_BP' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_DynamicCast_bSuccess_1) == 0x000418, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_Data_Table_Row_Name) == 0x00041C, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_Data_Table_Row_Name' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000428, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000450, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_UpdateStatistic_ReturnValue_3) == 0x000458, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_UpdateStatistic_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_AddToCurrentKarma_ReturnValue) == 0x000460, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_AddToCurrentKarma_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_IsValid_ReturnValue_4) == 0x000468, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_IsValid_ReturnValue_5) == 0x000469, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_AddToCurrentKarma_ReturnValue_1) == 0x000470, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_AddToCurrentKarma_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_IsValid_ReturnValue_6) == 0x000478, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, Temp_object_Variable_3) == 0x000480, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, K2Node_CustomEvent_Vote) == 0x000488, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::K2Node_CustomEvent_Vote' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, Temp_string_Variable_6) == 0x000490, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0004A0, "Member 'SCTPlayerState_MatchBP_C_ExecuteUbergraph_SCTPlayerState_MatchBP::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.UpdateStatisticOnClient
// 0x0018 (0x0018 - 0x0000)
struct SCTPlayerState_MatchBP_C_UpdateStatisticOnClient final
{
public:
	class FString                                 StatCode;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         IncementBy;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_UpdateStatisticOnClient) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_UpdateStatisticOnClient");
static_assert(sizeof(SCTPlayerState_MatchBP_C_UpdateStatisticOnClient) == 0x000018, "Wrong size on SCTPlayerState_MatchBP_C_UpdateStatisticOnClient");
static_assert(offsetof(SCTPlayerState_MatchBP_C_UpdateStatisticOnClient, StatCode) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_UpdateStatisticOnClient::StatCode' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_UpdateStatisticOnClient, IncementBy) == 0x000010, "Member 'SCTPlayerState_MatchBP_C_UpdateStatisticOnClient::IncementBy' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.Add Level Vote
// 0x0004 (0x0004 - 0x0000)
struct SCTPlayerState_MatchBP_C_Add_Level_Vote final
{
public:
	int32                                         Vote;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_Add_Level_Vote) == 0x000004, "Wrong alignment on SCTPlayerState_MatchBP_C_Add_Level_Vote");
static_assert(sizeof(SCTPlayerState_MatchBP_C_Add_Level_Vote) == 0x000004, "Wrong size on SCTPlayerState_MatchBP_C_Add_Level_Vote");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Add_Level_Vote, Vote) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_Add_Level_Vote::Vote' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.Add Karma Poins Player State
// 0x0008 (0x0008 - 0x0000)
struct SCTPlayerState_MatchBP_C_Add_Karma_Poins_Player_State final
{
public:
	class FName                                   Data_Table_Row_Name;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_Add_Karma_Poins_Player_State) == 0x000004, "Wrong alignment on SCTPlayerState_MatchBP_C_Add_Karma_Poins_Player_State");
static_assert(sizeof(SCTPlayerState_MatchBP_C_Add_Karma_Poins_Player_State) == 0x000008, "Wrong size on SCTPlayerState_MatchBP_C_Add_Karma_Poins_Player_State");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Add_Karma_Poins_Player_State, Data_Table_Row_Name) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_Add_Karma_Poins_Player_State::Data_Table_Row_Name' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.ReceiveCopyProperties
// 0x0008 (0x0008 - 0x0000)
struct SCTPlayerState_MatchBP_C_ReceiveCopyProperties final
{
public:
	class APlayerState*                           NewPlayerState;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_ReceiveCopyProperties) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_ReceiveCopyProperties");
static_assert(sizeof(SCTPlayerState_MatchBP_C_ReceiveCopyProperties) == 0x000008, "Wrong size on SCTPlayerState_MatchBP_C_ReceiveCopyProperties");
static_assert(offsetof(SCTPlayerState_MatchBP_C_ReceiveCopyProperties, NewPlayerState) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_ReceiveCopyProperties::NewPlayerState' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.Add Player State Score
// 0x0010 (0x0010 - 0x0000)
struct SCTPlayerState_MatchBP_C_Add_Player_State_Score final
{
public:
	bool                                          IsEndScenario__IgnoreDataTable_;                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EndScenarioScore;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DataTableRowName;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_Add_Player_State_Score) == 0x000004, "Wrong alignment on SCTPlayerState_MatchBP_C_Add_Player_State_Score");
static_assert(sizeof(SCTPlayerState_MatchBP_C_Add_Player_State_Score) == 0x000010, "Wrong size on SCTPlayerState_MatchBP_C_Add_Player_State_Score");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Add_Player_State_Score, IsEndScenario__IgnoreDataTable_) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_Add_Player_State_Score::IsEndScenario__IgnoreDataTable_' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Add_Player_State_Score, EndScenarioScore) == 0x000004, "Member 'SCTPlayerState_MatchBP_C_Add_Player_State_Score::EndScenarioScore' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Add_Player_State_Score, DataTableRowName) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_Add_Player_State_Score::DataTableRowName' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.OnSuccess_1A41FACC4EF6474DC435089BAD77C3F1
// 0x0018 (0x0018 - 0x0000)
struct SCTPlayerState_MatchBP_C_OnSuccess_1A41FACC4EF6474DC435089BAD77C3F1 final
{
public:
	class UFCTAchievement*                        AchievementInfo;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Message;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_OnSuccess_1A41FACC4EF6474DC435089BAD77C3F1) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_OnSuccess_1A41FACC4EF6474DC435089BAD77C3F1");
static_assert(sizeof(SCTPlayerState_MatchBP_C_OnSuccess_1A41FACC4EF6474DC435089BAD77C3F1) == 0x000018, "Wrong size on SCTPlayerState_MatchBP_C_OnSuccess_1A41FACC4EF6474DC435089BAD77C3F1");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnSuccess_1A41FACC4EF6474DC435089BAD77C3F1, AchievementInfo) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_OnSuccess_1A41FACC4EF6474DC435089BAD77C3F1::AchievementInfo' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnSuccess_1A41FACC4EF6474DC435089BAD77C3F1, Message) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_OnSuccess_1A41FACC4EF6474DC435089BAD77C3F1::Message' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.OnError_1A41FACC4EF6474DC435089BAD77C3F1
// 0x0010 (0x0010 - 0x0000)
struct SCTPlayerState_MatchBP_C_OnError_1A41FACC4EF6474DC435089BAD77C3F1 final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_OnError_1A41FACC4EF6474DC435089BAD77C3F1) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_OnError_1A41FACC4EF6474DC435089BAD77C3F1");
static_assert(sizeof(SCTPlayerState_MatchBP_C_OnError_1A41FACC4EF6474DC435089BAD77C3F1) == 0x000010, "Wrong size on SCTPlayerState_MatchBP_C_OnError_1A41FACC4EF6474DC435089BAD77C3F1");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnError_1A41FACC4EF6474DC435089BAD77C3F1, Message) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_OnError_1A41FACC4EF6474DC435089BAD77C3F1::Message' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.OnSuccess_D0B3EE42445B7DFE55751E9F764B1589
// 0x0018 (0x0018 - 0x0000)
struct SCTPlayerState_MatchBP_C_OnSuccess_D0B3EE42445B7DFE55751E9F764B1589 final
{
public:
	int32                                         CurrentKarma;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Code;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Message;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_OnSuccess_D0B3EE42445B7DFE55751E9F764B1589) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_OnSuccess_D0B3EE42445B7DFE55751E9F764B1589");
static_assert(sizeof(SCTPlayerState_MatchBP_C_OnSuccess_D0B3EE42445B7DFE55751E9F764B1589) == 0x000018, "Wrong size on SCTPlayerState_MatchBP_C_OnSuccess_D0B3EE42445B7DFE55751E9F764B1589");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnSuccess_D0B3EE42445B7DFE55751E9F764B1589, CurrentKarma) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_OnSuccess_D0B3EE42445B7DFE55751E9F764B1589::CurrentKarma' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnSuccess_D0B3EE42445B7DFE55751E9F764B1589, Code) == 0x000004, "Member 'SCTPlayerState_MatchBP_C_OnSuccess_D0B3EE42445B7DFE55751E9F764B1589::Code' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnSuccess_D0B3EE42445B7DFE55751E9F764B1589, Message) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_OnSuccess_D0B3EE42445B7DFE55751E9F764B1589::Message' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.OnError_D0B3EE42445B7DFE55751E9F764B1589
// 0x0018 (0x0018 - 0x0000)
struct SCTPlayerState_MatchBP_C_OnError_D0B3EE42445B7DFE55751E9F764B1589 final
{
public:
	int32                                         CurrentKarma;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Code;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Message;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_OnError_D0B3EE42445B7DFE55751E9F764B1589) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_OnError_D0B3EE42445B7DFE55751E9F764B1589");
static_assert(sizeof(SCTPlayerState_MatchBP_C_OnError_D0B3EE42445B7DFE55751E9F764B1589) == 0x000018, "Wrong size on SCTPlayerState_MatchBP_C_OnError_D0B3EE42445B7DFE55751E9F764B1589");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnError_D0B3EE42445B7DFE55751E9F764B1589, CurrentKarma) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_OnError_D0B3EE42445B7DFE55751E9F764B1589::CurrentKarma' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnError_D0B3EE42445B7DFE55751E9F764B1589, Code) == 0x000004, "Member 'SCTPlayerState_MatchBP_C_OnError_D0B3EE42445B7DFE55751E9F764B1589::Code' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnError_D0B3EE42445B7DFE55751E9F764B1589, Message) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_OnError_D0B3EE42445B7DFE55751E9F764B1589::Message' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.OnSuccess_1FFFECDE4BB286E7ECD546922419798C
// 0x0018 (0x0018 - 0x0000)
struct SCTPlayerState_MatchBP_C_OnSuccess_1FFFECDE4BB286E7ECD546922419798C final
{
public:
	int32                                         CurrentKarma;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Code;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Message;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_OnSuccess_1FFFECDE4BB286E7ECD546922419798C) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_OnSuccess_1FFFECDE4BB286E7ECD546922419798C");
static_assert(sizeof(SCTPlayerState_MatchBP_C_OnSuccess_1FFFECDE4BB286E7ECD546922419798C) == 0x000018, "Wrong size on SCTPlayerState_MatchBP_C_OnSuccess_1FFFECDE4BB286E7ECD546922419798C");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnSuccess_1FFFECDE4BB286E7ECD546922419798C, CurrentKarma) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_OnSuccess_1FFFECDE4BB286E7ECD546922419798C::CurrentKarma' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnSuccess_1FFFECDE4BB286E7ECD546922419798C, Code) == 0x000004, "Member 'SCTPlayerState_MatchBP_C_OnSuccess_1FFFECDE4BB286E7ECD546922419798C::Code' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnSuccess_1FFFECDE4BB286E7ECD546922419798C, Message) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_OnSuccess_1FFFECDE4BB286E7ECD546922419798C::Message' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.OnError_1FFFECDE4BB286E7ECD546922419798C
// 0x0018 (0x0018 - 0x0000)
struct SCTPlayerState_MatchBP_C_OnError_1FFFECDE4BB286E7ECD546922419798C final
{
public:
	int32                                         CurrentKarma;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Code;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Message;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_OnError_1FFFECDE4BB286E7ECD546922419798C) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_OnError_1FFFECDE4BB286E7ECD546922419798C");
static_assert(sizeof(SCTPlayerState_MatchBP_C_OnError_1FFFECDE4BB286E7ECD546922419798C) == 0x000018, "Wrong size on SCTPlayerState_MatchBP_C_OnError_1FFFECDE4BB286E7ECD546922419798C");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnError_1FFFECDE4BB286E7ECD546922419798C, CurrentKarma) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_OnError_1FFFECDE4BB286E7ECD546922419798C::CurrentKarma' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnError_1FFFECDE4BB286E7ECD546922419798C, Code) == 0x000004, "Member 'SCTPlayerState_MatchBP_C_OnError_1FFFECDE4BB286E7ECD546922419798C::Code' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnError_1FFFECDE4BB286E7ECD546922419798C, Message) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_OnError_1FFFECDE4BB286E7ECD546922419798C::Message' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.OnSuccess_89AEAF3B41C45DB713DF14A7E97AFE5C
// 0x0018 (0x0018 - 0x0000)
struct SCTPlayerState_MatchBP_C_OnSuccess_89AEAF3B41C45DB713DF14A7E97AFE5C final
{
public:
	int32                                         Code;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_OnSuccess_89AEAF3B41C45DB713DF14A7E97AFE5C) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_OnSuccess_89AEAF3B41C45DB713DF14A7E97AFE5C");
static_assert(sizeof(SCTPlayerState_MatchBP_C_OnSuccess_89AEAF3B41C45DB713DF14A7E97AFE5C) == 0x000018, "Wrong size on SCTPlayerState_MatchBP_C_OnSuccess_89AEAF3B41C45DB713DF14A7E97AFE5C");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnSuccess_89AEAF3B41C45DB713DF14A7E97AFE5C, Code) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_OnSuccess_89AEAF3B41C45DB713DF14A7E97AFE5C::Code' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnSuccess_89AEAF3B41C45DB713DF14A7E97AFE5C, Message) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_OnSuccess_89AEAF3B41C45DB713DF14A7E97AFE5C::Message' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.OnError_89AEAF3B41C45DB713DF14A7E97AFE5C
// 0x0018 (0x0018 - 0x0000)
struct SCTPlayerState_MatchBP_C_OnError_89AEAF3B41C45DB713DF14A7E97AFE5C final
{
public:
	int32                                         Code;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_OnError_89AEAF3B41C45DB713DF14A7E97AFE5C) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_OnError_89AEAF3B41C45DB713DF14A7E97AFE5C");
static_assert(sizeof(SCTPlayerState_MatchBP_C_OnError_89AEAF3B41C45DB713DF14A7E97AFE5C) == 0x000018, "Wrong size on SCTPlayerState_MatchBP_C_OnError_89AEAF3B41C45DB713DF14A7E97AFE5C");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnError_89AEAF3B41C45DB713DF14A7E97AFE5C, Code) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_OnError_89AEAF3B41C45DB713DF14A7E97AFE5C::Code' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnError_89AEAF3B41C45DB713DF14A7E97AFE5C, Message) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_OnError_89AEAF3B41C45DB713DF14A7E97AFE5C::Message' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.OnSuccess_CAC6C5D34CAC2485BB1C4AA3FAABA12B
// 0x0018 (0x0018 - 0x0000)
struct SCTPlayerState_MatchBP_C_OnSuccess_CAC6C5D34CAC2485BB1C4AA3FAABA12B final
{
public:
	class UFCTAchievement*                        AchievementInfo;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Message;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_OnSuccess_CAC6C5D34CAC2485BB1C4AA3FAABA12B) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_OnSuccess_CAC6C5D34CAC2485BB1C4AA3FAABA12B");
static_assert(sizeof(SCTPlayerState_MatchBP_C_OnSuccess_CAC6C5D34CAC2485BB1C4AA3FAABA12B) == 0x000018, "Wrong size on SCTPlayerState_MatchBP_C_OnSuccess_CAC6C5D34CAC2485BB1C4AA3FAABA12B");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnSuccess_CAC6C5D34CAC2485BB1C4AA3FAABA12B, AchievementInfo) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_OnSuccess_CAC6C5D34CAC2485BB1C4AA3FAABA12B::AchievementInfo' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnSuccess_CAC6C5D34CAC2485BB1C4AA3FAABA12B, Message) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_OnSuccess_CAC6C5D34CAC2485BB1C4AA3FAABA12B::Message' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.OnError_CAC6C5D34CAC2485BB1C4AA3FAABA12B
// 0x0010 (0x0010 - 0x0000)
struct SCTPlayerState_MatchBP_C_OnError_CAC6C5D34CAC2485BB1C4AA3FAABA12B final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_OnError_CAC6C5D34CAC2485BB1C4AA3FAABA12B) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_OnError_CAC6C5D34CAC2485BB1C4AA3FAABA12B");
static_assert(sizeof(SCTPlayerState_MatchBP_C_OnError_CAC6C5D34CAC2485BB1C4AA3FAABA12B) == 0x000010, "Wrong size on SCTPlayerState_MatchBP_C_OnError_CAC6C5D34CAC2485BB1C4AA3FAABA12B");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnError_CAC6C5D34CAC2485BB1C4AA3FAABA12B, Message) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_OnError_CAC6C5D34CAC2485BB1C4AA3FAABA12B::Message' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.OnSuccess_34D7F9694DE009FD0F4DA5ABEB750375
// 0x0018 (0x0018 - 0x0000)
struct SCTPlayerState_MatchBP_C_OnSuccess_34D7F9694DE009FD0F4DA5ABEB750375 final
{
public:
	class UFCTAchievement*                        AchievementInfo;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Message;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_OnSuccess_34D7F9694DE009FD0F4DA5ABEB750375) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_OnSuccess_34D7F9694DE009FD0F4DA5ABEB750375");
static_assert(sizeof(SCTPlayerState_MatchBP_C_OnSuccess_34D7F9694DE009FD0F4DA5ABEB750375) == 0x000018, "Wrong size on SCTPlayerState_MatchBP_C_OnSuccess_34D7F9694DE009FD0F4DA5ABEB750375");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnSuccess_34D7F9694DE009FD0F4DA5ABEB750375, AchievementInfo) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_OnSuccess_34D7F9694DE009FD0F4DA5ABEB750375::AchievementInfo' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnSuccess_34D7F9694DE009FD0F4DA5ABEB750375, Message) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_OnSuccess_34D7F9694DE009FD0F4DA5ABEB750375::Message' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.OnError_34D7F9694DE009FD0F4DA5ABEB750375
// 0x0010 (0x0010 - 0x0000)
struct SCTPlayerState_MatchBP_C_OnError_34D7F9694DE009FD0F4DA5ABEB750375 final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_OnError_34D7F9694DE009FD0F4DA5ABEB750375) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_OnError_34D7F9694DE009FD0F4DA5ABEB750375");
static_assert(sizeof(SCTPlayerState_MatchBP_C_OnError_34D7F9694DE009FD0F4DA5ABEB750375) == 0x000010, "Wrong size on SCTPlayerState_MatchBP_C_OnError_34D7F9694DE009FD0F4DA5ABEB750375");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnError_34D7F9694DE009FD0F4DA5ABEB750375, Message) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_OnError_34D7F9694DE009FD0F4DA5ABEB750375::Message' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.OnSuccess_1811381D4135F05FFB2E638E3E09B928
// 0x0018 (0x0018 - 0x0000)
struct SCTPlayerState_MatchBP_C_OnSuccess_1811381D4135F05FFB2E638E3E09B928 final
{
public:
	class UFCTAchievement*                        AchievementInfo;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Message;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_OnSuccess_1811381D4135F05FFB2E638E3E09B928) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_OnSuccess_1811381D4135F05FFB2E638E3E09B928");
static_assert(sizeof(SCTPlayerState_MatchBP_C_OnSuccess_1811381D4135F05FFB2E638E3E09B928) == 0x000018, "Wrong size on SCTPlayerState_MatchBP_C_OnSuccess_1811381D4135F05FFB2E638E3E09B928");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnSuccess_1811381D4135F05FFB2E638E3E09B928, AchievementInfo) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_OnSuccess_1811381D4135F05FFB2E638E3E09B928::AchievementInfo' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnSuccess_1811381D4135F05FFB2E638E3E09B928, Message) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_OnSuccess_1811381D4135F05FFB2E638E3E09B928::Message' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.OnError_1811381D4135F05FFB2E638E3E09B928
// 0x0010 (0x0010 - 0x0000)
struct SCTPlayerState_MatchBP_C_OnError_1811381D4135F05FFB2E638E3E09B928 final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_OnError_1811381D4135F05FFB2E638E3E09B928) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_OnError_1811381D4135F05FFB2E638E3E09B928");
static_assert(sizeof(SCTPlayerState_MatchBP_C_OnError_1811381D4135F05FFB2E638E3E09B928) == 0x000010, "Wrong size on SCTPlayerState_MatchBP_C_OnError_1811381D4135F05FFB2E638E3E09B928");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnError_1811381D4135F05FFB2E638E3E09B928, Message) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_OnError_1811381D4135F05FFB2E638E3E09B928::Message' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.AddPlayerScore
// 0x0050 (0x0050 - 0x0000)
struct SCTPlayerState_MatchBP_C_AddPlayerScore final
{
public:
	struct FS_Score                               Score_0;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   Row_Name;                                          // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetScorePoints_Score_Points;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Query_Valid_Category_Is_Valid;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_ScoreCategories                             CallFunc_Query_Valid_Category_Category;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_AddPlayerScore) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_AddPlayerScore");
static_assert(sizeof(SCTPlayerState_MatchBP_C_AddPlayerScore) == 0x000050, "Wrong size on SCTPlayerState_MatchBP_C_AddPlayerScore");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddPlayerScore, Score_0) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_AddPlayerScore::Score_0' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddPlayerScore, Row_Name) == 0x000030, "Member 'SCTPlayerState_MatchBP_C_AddPlayerScore::Row_Name' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddPlayerScore, K2Node_DynamicCast_AsCharacter_SCTBP) == 0x000038, "Member 'SCTPlayerState_MatchBP_C_AddPlayerScore::K2Node_DynamicCast_AsCharacter_SCTBP' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddPlayerScore, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'SCTPlayerState_MatchBP_C_AddPlayerScore::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddPlayerScore, CallFunc_GetScorePoints_Score_Points) == 0x000044, "Member 'SCTPlayerState_MatchBP_C_AddPlayerScore::CallFunc_GetScorePoints_Score_Points' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddPlayerScore, CallFunc_Query_Valid_Category_Is_Valid) == 0x000048, "Member 'SCTPlayerState_MatchBP_C_AddPlayerScore::CallFunc_Query_Valid_Category_Is_Valid' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddPlayerScore, CallFunc_Query_Valid_Category_Category) == 0x000049, "Member 'SCTPlayerState_MatchBP_C_AddPlayerScore::CallFunc_Query_Valid_Category_Category' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.AddPlayerInfoCategoryScore
// 0x0010 (0x0010 - 0x0000)
struct SCTPlayerState_MatchBP_C_AddPlayerInfoCategoryScore final
{
public:
	int32                                         Score_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ScoreCategories                             Category;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Score_Points;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_AddPlayerInfoCategoryScore) == 0x000004, "Wrong alignment on SCTPlayerState_MatchBP_C_AddPlayerInfoCategoryScore");
static_assert(sizeof(SCTPlayerState_MatchBP_C_AddPlayerInfoCategoryScore) == 0x000010, "Wrong size on SCTPlayerState_MatchBP_C_AddPlayerInfoCategoryScore");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddPlayerInfoCategoryScore, Score_0) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_AddPlayerInfoCategoryScore::Score_0' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddPlayerInfoCategoryScore, Category) == 0x000004, "Member 'SCTPlayerState_MatchBP_C_AddPlayerInfoCategoryScore::Category' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddPlayerInfoCategoryScore, Score_Points) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_AddPlayerInfoCategoryScore::Score_Points' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddPlayerInfoCategoryScore, K2Node_SwitchEnum_CmpSuccess) == 0x00000C, "Member 'SCTPlayerState_MatchBP_C_AddPlayerInfoCategoryScore::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.PrintDebugString
// 0x0190 (0x0190 - 0x0000)
struct SCTPlayerState_MatchBP_C_PrintDebugString final
{
public:
	struct FS_Score                               Score_0;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   Row_Name;                                          // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetDebugStringColor_Color;                // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0048(0x0018)()
	E_ScoreCategories                             CallFunc_GetCategory_NewParam;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0040)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetScorePoints_Score_Points;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00C0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0118(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0158(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0168(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_PrintDebugString) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_PrintDebugString");
static_assert(sizeof(SCTPlayerState_MatchBP_C_PrintDebugString) == 0x000190, "Wrong size on SCTPlayerState_MatchBP_C_PrintDebugString");
static_assert(offsetof(SCTPlayerState_MatchBP_C_PrintDebugString, Score_0) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_PrintDebugString::Score_0' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_PrintDebugString, Row_Name) == 0x000030, "Member 'SCTPlayerState_MatchBP_C_PrintDebugString::Row_Name' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_PrintDebugString, CallFunc_GetDebugStringColor_Color) == 0x000038, "Member 'SCTPlayerState_MatchBP_C_PrintDebugString::CallFunc_GetDebugStringColor_Color' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_PrintDebugString, CallFunc_Conv_NameToText_ReturnValue) == 0x000048, "Member 'SCTPlayerState_MatchBP_C_PrintDebugString::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_PrintDebugString, CallFunc_GetCategory_NewParam) == 0x000060, "Member 'SCTPlayerState_MatchBP_C_PrintDebugString::CallFunc_GetCategory_NewParam' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_PrintDebugString, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'SCTPlayerState_MatchBP_C_PrintDebugString::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_PrintDebugString, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000A8, "Member 'SCTPlayerState_MatchBP_C_PrintDebugString::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_PrintDebugString, CallFunc_GetScorePoints_Score_Points) == 0x0000B8, "Member 'SCTPlayerState_MatchBP_C_PrintDebugString::CallFunc_GetScorePoints_Score_Points' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_PrintDebugString, CallFunc_Conv_StringToText_ReturnValue) == 0x0000C0, "Member 'SCTPlayerState_MatchBP_C_PrintDebugString::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_PrintDebugString, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D8, "Member 'SCTPlayerState_MatchBP_C_PrintDebugString::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_PrintDebugString, K2Node_MakeStruct_FormatArgumentData_2) == 0x000118, "Member 'SCTPlayerState_MatchBP_C_PrintDebugString::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_PrintDebugString, K2Node_MakeArray_Array) == 0x000158, "Member 'SCTPlayerState_MatchBP_C_PrintDebugString::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_PrintDebugString, CallFunc_Format_ReturnValue) == 0x000168, "Member 'SCTPlayerState_MatchBP_C_PrintDebugString::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_PrintDebugString, CallFunc_Conv_TextToString_ReturnValue) == 0x000180, "Member 'SCTPlayerState_MatchBP_C_PrintDebugString::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.Query Valid Category
// 0x0050 (0x0050 - 0x0000)
struct SCTPlayerState_MatchBP_C_Query_Valid_Category final
{
public:
	struct FS_Score                               Score_0;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Is_Valid;                                          // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_ScoreCategories                             Category;                                          // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBitMask_Category_Bitmask;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ScoreCategories                             CallFunc_GetCategory_NewParam;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ToBitMask_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_Query_Valid_Category) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_Query_Valid_Category");
static_assert(sizeof(SCTPlayerState_MatchBP_C_Query_Valid_Category) == 0x000050, "Wrong size on SCTPlayerState_MatchBP_C_Query_Valid_Category");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Query_Valid_Category, Score_0) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_Query_Valid_Category::Score_0' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Query_Valid_Category, Is_Valid) == 0x000030, "Member 'SCTPlayerState_MatchBP_C_Query_Valid_Category::Is_Valid' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Query_Valid_Category, Category) == 0x000031, "Member 'SCTPlayerState_MatchBP_C_Query_Valid_Category::Category' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Query_Valid_Category, CallFunc_GetBitMask_Category_Bitmask) == 0x000034, "Member 'SCTPlayerState_MatchBP_C_Query_Valid_Category::CallFunc_GetBitMask_Category_Bitmask' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Query_Valid_Category, CallFunc_GetCategory_NewParam) == 0x000038, "Member 'SCTPlayerState_MatchBP_C_Query_Valid_Category::CallFunc_GetCategory_NewParam' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Query_Valid_Category, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00003C, "Member 'SCTPlayerState_MatchBP_C_Query_Valid_Category::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Query_Valid_Category, CallFunc_ToBitMask_ReturnValue) == 0x000040, "Member 'SCTPlayerState_MatchBP_C_Query_Valid_Category::CallFunc_ToBitMask_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Query_Valid_Category, CallFunc_And_IntInt_ReturnValue) == 0x000044, "Member 'SCTPlayerState_MatchBP_C_Query_Valid_Category::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Query_Valid_Category, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000048, "Member 'SCTPlayerState_MatchBP_C_Query_Valid_Category::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.AddProgressionScore
// 0x0010 (0x0010 - 0x0000)
struct SCTPlayerState_MatchBP_C_AddProgressionScore final
{
public:
	int32                                         Score_Amount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerInfoGIS*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_AddProgressionScore) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_AddProgressionScore");
static_assert(sizeof(SCTPlayerState_MatchBP_C_AddProgressionScore) == 0x000010, "Wrong size on SCTPlayerState_MatchBP_C_AddProgressionScore");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddProgressionScore, Score_Amount) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_AddProgressionScore::Score_Amount' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddProgressionScore, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_AddProgressionScore::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.AddDeceptionScore
// 0x0010 (0x0010 - 0x0000)
struct SCTPlayerState_MatchBP_C_AddDeceptionScore final
{
public:
	int32                                         Score_Value;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerInfoGIS*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_AddDeceptionScore) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_AddDeceptionScore");
static_assert(sizeof(SCTPlayerState_MatchBP_C_AddDeceptionScore) == 0x000010, "Wrong size on SCTPlayerState_MatchBP_C_AddDeceptionScore");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddDeceptionScore, Score_Value) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_AddDeceptionScore::Score_Value' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddDeceptionScore, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_AddDeceptionScore::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.AddEndScenarioScore
// 0x0010 (0x0010 - 0x0000)
struct SCTPlayerState_MatchBP_C_AddEndScenarioScore final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerInfoGIS*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_AddEndScenarioScore) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_AddEndScenarioScore");
static_assert(sizeof(SCTPlayerState_MatchBP_C_AddEndScenarioScore) == 0x000010, "Wrong size on SCTPlayerState_MatchBP_C_AddEndScenarioScore");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddEndScenarioScore, Amount) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_AddEndScenarioScore::Amount' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddEndScenarioScore, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_AddEndScenarioScore::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.AddSabotageScore
// 0x0010 (0x0010 - 0x0000)
struct SCTPlayerState_MatchBP_C_AddSabotageScore final
{
public:
	int32                                         Score_Amount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerInfoGIS*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_AddSabotageScore) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_AddSabotageScore");
static_assert(sizeof(SCTPlayerState_MatchBP_C_AddSabotageScore) == 0x000010, "Wrong size on SCTPlayerState_MatchBP_C_AddSabotageScore");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddSabotageScore, Score_Amount) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_AddSabotageScore::Score_Amount' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddSabotageScore, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_AddSabotageScore::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.AddDeductionScore
// 0x0010 (0x0010 - 0x0000)
struct SCTPlayerState_MatchBP_C_AddDeductionScore final
{
public:
	int32                                         ScoreAmount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerInfoGIS*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_AddDeductionScore) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_AddDeductionScore");
static_assert(sizeof(SCTPlayerState_MatchBP_C_AddDeductionScore) == 0x000010, "Wrong size on SCTPlayerState_MatchBP_C_AddDeductionScore");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddDeductionScore, ScoreAmount) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_AddDeductionScore::ScoreAmount' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddDeductionScore, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_AddDeductionScore::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.AddTotalPersonoidScore
// 0x0010 (0x0010 - 0x0000)
struct SCTPlayerState_MatchBP_C_AddTotalPersonoidScore final
{
public:
	int32                                         Score_Amount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerInfoGIS*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_AddTotalPersonoidScore) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_AddTotalPersonoidScore");
static_assert(sizeof(SCTPlayerState_MatchBP_C_AddTotalPersonoidScore) == 0x000010, "Wrong size on SCTPlayerState_MatchBP_C_AddTotalPersonoidScore");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddTotalPersonoidScore, Score_Amount) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_AddTotalPersonoidScore::Score_Amount' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddTotalPersonoidScore, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_AddTotalPersonoidScore::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.AddTotalResidentScore
// 0x0010 (0x0010 - 0x0000)
struct SCTPlayerState_MatchBP_C_AddTotalResidentScore final
{
public:
	int32                                         Score_Amount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerInfoGIS*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_AddTotalResidentScore) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_AddTotalResidentScore");
static_assert(sizeof(SCTPlayerState_MatchBP_C_AddTotalResidentScore) == 0x000010, "Wrong size on SCTPlayerState_MatchBP_C_AddTotalResidentScore");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddTotalResidentScore, Score_Amount) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_AddTotalResidentScore::Score_Amount' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddTotalResidentScore, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_AddTotalResidentScore::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.AddCollaborationScore
// 0x0010 (0x0010 - 0x0000)
struct SCTPlayerState_MatchBP_C_AddCollaborationScore final
{
public:
	int32                                         ScoreAmount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerInfoGIS*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_AddCollaborationScore) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_AddCollaborationScore");
static_assert(sizeof(SCTPlayerState_MatchBP_C_AddCollaborationScore) == 0x000010, "Wrong size on SCTPlayerState_MatchBP_C_AddCollaborationScore");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddCollaborationScore, ScoreAmount) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_AddCollaborationScore::ScoreAmount' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddCollaborationScore, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_AddCollaborationScore::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.AddTotalPoints
// 0x0008 (0x0008 - 0x0000)
struct SCTPlayerState_MatchBP_C_AddTotalPoints final
{
public:
	int32                                         Score_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPersonoid_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_AddTotalPoints) == 0x000004, "Wrong alignment on SCTPlayerState_MatchBP_C_AddTotalPoints");
static_assert(sizeof(SCTPlayerState_MatchBP_C_AddTotalPoints) == 0x000008, "Wrong size on SCTPlayerState_MatchBP_C_AddTotalPoints");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddTotalPoints, Score_0) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_AddTotalPoints::Score_0' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddTotalPoints, CallFunc_IsPersonoid_ReturnValue) == 0x000004, "Member 'SCTPlayerState_MatchBP_C_AddTotalPoints::CallFunc_IsPersonoid_ReturnValue' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.IsPersonoid_NonConst
// 0x0002 (0x0002 - 0x0000)
struct SCTPlayerState_MatchBP_C_IsPersonoid_NonConst final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_IsPersonoid_NonConst) == 0x000001, "Wrong alignment on SCTPlayerState_MatchBP_C_IsPersonoid_NonConst");
static_assert(sizeof(SCTPlayerState_MatchBP_C_IsPersonoid_NonConst) == 0x000002, "Wrong size on SCTPlayerState_MatchBP_C_IsPersonoid_NonConst");
static_assert(offsetof(SCTPlayerState_MatchBP_C_IsPersonoid_NonConst, ReturnValue) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_IsPersonoid_NonConst::ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_IsPersonoid_NonConst, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'SCTPlayerState_MatchBP_C_IsPersonoid_NonConst::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.KeycardHandin
// 0x0002 (0x0002 - 0x0000)
struct SCTPlayerState_MatchBP_C_KeycardHandin final
{
public:
	E_KeyCardColors                               Keycard_Color;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_KeycardHandin) == 0x000001, "Wrong alignment on SCTPlayerState_MatchBP_C_KeycardHandin");
static_assert(sizeof(SCTPlayerState_MatchBP_C_KeycardHandin) == 0x000002, "Wrong size on SCTPlayerState_MatchBP_C_KeycardHandin");
static_assert(offsetof(SCTPlayerState_MatchBP_C_KeycardHandin, Keycard_Color) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_KeycardHandin::Keycard_Color' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_KeycardHandin, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'SCTPlayerState_MatchBP_C_KeycardHandin::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.HandleImDoingMyPartAchievement
// 0x0020 (0x0020 - 0x0000)
struct SCTPlayerState_MatchBP_C_HandleImDoingMyPartAchievement final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerController*                   CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCTPlayerController_MatchBP_C*         K2Node_DynamicCast_AsSCTPlayer_Controller_Match_BP; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_HandleImDoingMyPartAchievement) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_HandleImDoingMyPartAchievement");
static_assert(sizeof(SCTPlayerState_MatchBP_C_HandleImDoingMyPartAchievement) == 0x000020, "Wrong size on SCTPlayerState_MatchBP_C_HandleImDoingMyPartAchievement");
static_assert(offsetof(SCTPlayerState_MatchBP_C_HandleImDoingMyPartAchievement, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_HandleImDoingMyPartAchievement::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_HandleImDoingMyPartAchievement, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_HandleImDoingMyPartAchievement::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_HandleImDoingMyPartAchievement, K2Node_DynamicCast_AsSCTPlayer_Controller_Match_BP) == 0x000010, "Member 'SCTPlayerState_MatchBP_C_HandleImDoingMyPartAchievement::K2Node_DynamicCast_AsSCTPlayer_Controller_Match_BP' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_HandleImDoingMyPartAchievement, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'SCTPlayerState_MatchBP_C_HandleImDoingMyPartAchievement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_HandleImDoingMyPartAchievement, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'SCTPlayerState_MatchBP_C_HandleImDoingMyPartAchievement::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_HandleImDoingMyPartAchievement, CallFunc_BooleanAND_ReturnValue_1) == 0x00001A, "Member 'SCTPlayerState_MatchBP_C_HandleImDoingMyPartAchievement::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.AddPlayerKilledWithSyringe
// 0x0004 (0x0004 - 0x0000)
struct SCTPlayerState_MatchBP_C_AddPlayerKilledWithSyringe final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_AddPlayerKilledWithSyringe) == 0x000004, "Wrong alignment on SCTPlayerState_MatchBP_C_AddPlayerKilledWithSyringe");
static_assert(sizeof(SCTPlayerState_MatchBP_C_AddPlayerKilledWithSyringe) == 0x000004, "Wrong size on SCTPlayerState_MatchBP_C_AddPlayerKilledWithSyringe");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddPlayerKilledWithSyringe, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_AddPlayerKilledWithSyringe::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.Handle Its Time for Your Medicine Achievement
// 0x0020 (0x0020 - 0x0000)
struct SCTPlayerState_MatchBP_C_Handle_Its_Time_for_Your_Medicine_Achievement final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerController*                   CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCTPlayerController_MatchBP_C*         K2Node_DynamicCast_AsSCTPlayer_Controller_Match_BP; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_Handle_Its_Time_for_Your_Medicine_Achievement) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_Handle_Its_Time_for_Your_Medicine_Achievement");
static_assert(sizeof(SCTPlayerState_MatchBP_C_Handle_Its_Time_for_Your_Medicine_Achievement) == 0x000020, "Wrong size on SCTPlayerState_MatchBP_C_Handle_Its_Time_for_Your_Medicine_Achievement");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Handle_Its_Time_for_Your_Medicine_Achievement, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_Handle_Its_Time_for_Your_Medicine_Achievement::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Handle_Its_Time_for_Your_Medicine_Achievement, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_Handle_Its_Time_for_Your_Medicine_Achievement::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Handle_Its_Time_for_Your_Medicine_Achievement, K2Node_DynamicCast_AsSCTPlayer_Controller_Match_BP) == 0x000010, "Member 'SCTPlayerState_MatchBP_C_Handle_Its_Time_for_Your_Medicine_Achievement::K2Node_DynamicCast_AsSCTPlayer_Controller_Match_BP' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Handle_Its_Time_for_Your_Medicine_Achievement, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'SCTPlayerState_MatchBP_C_Handle_Its_Time_for_Your_Medicine_Achievement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Handle_Its_Time_for_Your_Medicine_Achievement, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000019, "Member 'SCTPlayerState_MatchBP_C_Handle_Its_Time_for_Your_Medicine_Achievement::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.HandleChangingTheAirFilterAchievement
// 0x0010 (0x0010 - 0x0000)
struct SCTPlayerState_MatchBP_C_HandleChangingTheAirFilterAchievement final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerController*                   CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_HandleChangingTheAirFilterAchievement) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_HandleChangingTheAirFilterAchievement");
static_assert(sizeof(SCTPlayerState_MatchBP_C_HandleChangingTheAirFilterAchievement) == 0x000010, "Wrong size on SCTPlayerState_MatchBP_C_HandleChangingTheAirFilterAchievement");
static_assert(offsetof(SCTPlayerState_MatchBP_C_HandleChangingTheAirFilterAchievement, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_HandleChangingTheAirFilterAchievement::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_HandleChangingTheAirFilterAchievement, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'SCTPlayerState_MatchBP_C_HandleChangingTheAirFilterAchievement::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_HandleChangingTheAirFilterAchievement, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_HandleChangingTheAirFilterAchievement::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.AddGeneratorSabotaged
// 0x0008 (0x0008 - 0x0000)
struct SCTPlayerState_MatchBP_C_AddGeneratorSabotaged final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_AddGeneratorSabotaged) == 0x000004, "Wrong alignment on SCTPlayerState_MatchBP_C_AddGeneratorSabotaged");
static_assert(sizeof(SCTPlayerState_MatchBP_C_AddGeneratorSabotaged) == 0x000008, "Wrong size on SCTPlayerState_MatchBP_C_AddGeneratorSabotaged");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddGeneratorSabotaged, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_AddGeneratorSabotaged::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddGeneratorSabotaged, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'SCTPlayerState_MatchBP_C_AddGeneratorSabotaged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.AddPersonoidScanTimestamp
// 0x0018 (0x0018 - 0x0000)
struct SCTPlayerState_MatchBP_C_AddPersonoidScanTimestamp final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTGameState_MatchBP_C*                CallFunc_GetSCTGameState_MatchBP_AsSCTGame_State_Match_BP; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_AddPersonoidScanTimestamp) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_AddPersonoidScanTimestamp");
static_assert(sizeof(SCTPlayerState_MatchBP_C_AddPersonoidScanTimestamp) == 0x000018, "Wrong size on SCTPlayerState_MatchBP_C_AddPersonoidScanTimestamp");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddPersonoidScanTimestamp, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_AddPersonoidScanTimestamp::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddPersonoidScanTimestamp, CallFunc_GetSCTGameState_MatchBP_AsSCTGame_State_Match_BP) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_AddPersonoidScanTimestamp::CallFunc_GetSCTGameState_MatchBP_AsSCTGame_State_Match_BP' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddPersonoidScanTimestamp, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000010, "Member 'SCTPlayerState_MatchBP_C_AddPersonoidScanTimestamp::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.HandleWellAtLeastITriedAchievement
// 0x0028 (0x0028 - 0x0000)
struct SCTPlayerState_MatchBP_C_HandleWellAtLeastITriedAchievement final
{
public:
	EFate                                         Fate_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTGameState_MatchBP_C*                CallFunc_GetSCTGameState_MatchBP_AsSCTGame_State_Match_BP; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCTPlayerController*                   CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_HandleWellAtLeastITriedAchievement) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_HandleWellAtLeastITriedAchievement");
static_assert(sizeof(SCTPlayerState_MatchBP_C_HandleWellAtLeastITriedAchievement) == 0x000028, "Wrong size on SCTPlayerState_MatchBP_C_HandleWellAtLeastITriedAchievement");
static_assert(offsetof(SCTPlayerState_MatchBP_C_HandleWellAtLeastITriedAchievement, Fate_0) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_HandleWellAtLeastITriedAchievement::Fate_0' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_HandleWellAtLeastITriedAchievement, CallFunc_GetSCTGameState_MatchBP_AsSCTGame_State_Match_BP) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_HandleWellAtLeastITriedAchievement::CallFunc_GetSCTGameState_MatchBP_AsSCTGame_State_Match_BP' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_HandleWellAtLeastITriedAchievement, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'SCTPlayerState_MatchBP_C_HandleWellAtLeastITriedAchievement::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_HandleWellAtLeastITriedAchievement, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000014, "Member 'SCTPlayerState_MatchBP_C_HandleWellAtLeastITriedAchievement::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_HandleWellAtLeastITriedAchievement, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'SCTPlayerState_MatchBP_C_HandleWellAtLeastITriedAchievement::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_HandleWellAtLeastITriedAchievement, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000020, "Member 'SCTPlayerState_MatchBP_C_HandleWellAtLeastITriedAchievement::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_HandleWellAtLeastITriedAchievement, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000024, "Member 'SCTPlayerState_MatchBP_C_HandleWellAtLeastITriedAchievement::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.OnRep_PersonoidScanTimestamp
// 0x0010 (0x0010 - 0x0000)
struct SCTPlayerState_MatchBP_C_OnRep_PersonoidScanTimestamp final
{
public:
	TDelegate<void(EFate Fate)>                   K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_OnRep_PersonoidScanTimestamp) == 0x000004, "Wrong alignment on SCTPlayerState_MatchBP_C_OnRep_PersonoidScanTimestamp");
static_assert(sizeof(SCTPlayerState_MatchBP_C_OnRep_PersonoidScanTimestamp) == 0x000010, "Wrong size on SCTPlayerState_MatchBP_C_OnRep_PersonoidScanTimestamp");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnRep_PersonoidScanTimestamp, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_OnRep_PersonoidScanTimestamp::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.AddGotScannedTimestamp
// 0x0018 (0x0018 - 0x0000)
struct SCTPlayerState_MatchBP_C_AddGotScannedTimestamp final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTGameState_MatchBP_C*                CallFunc_GetSCTGameState_MatchBP_AsSCTGame_State_Match_BP; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_AddGotScannedTimestamp) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_AddGotScannedTimestamp");
static_assert(sizeof(SCTPlayerState_MatchBP_C_AddGotScannedTimestamp) == 0x000018, "Wrong size on SCTPlayerState_MatchBP_C_AddGotScannedTimestamp");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddGotScannedTimestamp, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_AddGotScannedTimestamp::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddGotScannedTimestamp, CallFunc_GetSCTGameState_MatchBP_AsSCTGame_State_Match_BP) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_AddGotScannedTimestamp::CallFunc_GetSCTGameState_MatchBP_AsSCTGame_State_Match_BP' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_AddGotScannedTimestamp, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000010, "Member 'SCTPlayerState_MatchBP_C_AddGotScannedTimestamp::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.Handle Its A Machine Achievement
// 0x0018 (0x0018 - 0x0000)
struct SCTPlayerState_MatchBP_C_Handle_Its_A_Machine_Achievement final
{
public:
	class ASCTPlayerState_MatchBP_C*              Last_scanned_player_0;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerController*                   CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_Handle_Its_A_Machine_Achievement) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_Handle_Its_A_Machine_Achievement");
static_assert(sizeof(SCTPlayerState_MatchBP_C_Handle_Its_A_Machine_Achievement) == 0x000018, "Wrong size on SCTPlayerState_MatchBP_C_Handle_Its_A_Machine_Achievement");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Handle_Its_A_Machine_Achievement, Last_scanned_player_0) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_Handle_Its_A_Machine_Achievement::Last_scanned_player_0' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Handle_Its_A_Machine_Achievement, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_Handle_Its_A_Machine_Achievement::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Handle_Its_A_Machine_Achievement, K2Node_SwitchEnum_CmpSuccess) == 0x000009, "Member 'SCTPlayerState_MatchBP_C_Handle_Its_A_Machine_Achievement::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Handle_Its_A_Machine_Achievement, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'SCTPlayerState_MatchBP_C_Handle_Its_A_Machine_Achievement::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.OnRep_Last Scanned Player
// 0x0001 (0x0001 - 0x0000)
struct SCTPlayerState_MatchBP_C_OnRep_Last_Scanned_Player final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_OnRep_Last_Scanned_Player) == 0x000001, "Wrong alignment on SCTPlayerState_MatchBP_C_OnRep_Last_Scanned_Player");
static_assert(sizeof(SCTPlayerState_MatchBP_C_OnRep_Last_Scanned_Player) == 0x000001, "Wrong size on SCTPlayerState_MatchBP_C_OnRep_Last_Scanned_Player");
static_assert(offsetof(SCTPlayerState_MatchBP_C_OnRep_Last_Scanned_Player, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_OnRep_Last_Scanned_Player::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.Print KarmaPointsSuccessMessage
// 0x0058 (0x0058 - 0x0000)
struct SCTPlayerState_MatchBP_C_Print_KarmaPointsSuccessMessage final
{
public:
	int32                                         Points;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_1;          // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_Print_KarmaPointsSuccessMessage) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_Print_KarmaPointsSuccessMessage");
static_assert(sizeof(SCTPlayerState_MatchBP_C_Print_KarmaPointsSuccessMessage) == 0x000058, "Wrong size on SCTPlayerState_MatchBP_C_Print_KarmaPointsSuccessMessage");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Print_KarmaPointsSuccessMessage, Points) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_Print_KarmaPointsSuccessMessage::Points' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Print_KarmaPointsSuccessMessage, CallFunc_MakeLiteralString_ReturnValue) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_Print_KarmaPointsSuccessMessage::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Print_KarmaPointsSuccessMessage, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'SCTPlayerState_MatchBP_C_Print_KarmaPointsSuccessMessage::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Print_KarmaPointsSuccessMessage, CallFunc_MakeLiteralString_ReturnValue_1) == 0x000028, "Member 'SCTPlayerState_MatchBP_C_Print_KarmaPointsSuccessMessage::CallFunc_MakeLiteralString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Print_KarmaPointsSuccessMessage, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'SCTPlayerState_MatchBP_C_Print_KarmaPointsSuccessMessage::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Print_KarmaPointsSuccessMessage, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'SCTPlayerState_MatchBP_C_Print_KarmaPointsSuccessMessage::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.Print KarmaPointsErrorMessage
// 0x0030 (0x0030 - 0x0000)
struct SCTPlayerState_MatchBP_C_Print_KarmaPointsErrorMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_Print_KarmaPointsErrorMessage) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_Print_KarmaPointsErrorMessage");
static_assert(sizeof(SCTPlayerState_MatchBP_C_Print_KarmaPointsErrorMessage) == 0x000030, "Wrong size on SCTPlayerState_MatchBP_C_Print_KarmaPointsErrorMessage");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Print_KarmaPointsErrorMessage, Message) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_Print_KarmaPointsErrorMessage::Message' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Print_KarmaPointsErrorMessage, CallFunc_MakeLiteralString_ReturnValue) == 0x000010, "Member 'SCTPlayerState_MatchBP_C_Print_KarmaPointsErrorMessage::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_Print_KarmaPointsErrorMessage, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'SCTPlayerState_MatchBP_C_Print_KarmaPointsErrorMessage::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.UpdateKarmaText
// 0x0010 (0x0010 - 0x0000)
struct SCTPlayerState_MatchBP_C_UpdateKarmaText final
{
public:
	class UBP_WI_KarmaScoreTest_C*                CallFunc_GetSCT_KarmaWidget_KarmaScoreWi;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_UpdateKarmaText) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_UpdateKarmaText");
static_assert(sizeof(SCTPlayerState_MatchBP_C_UpdateKarmaText) == 0x000010, "Wrong size on SCTPlayerState_MatchBP_C_UpdateKarmaText");
static_assert(offsetof(SCTPlayerState_MatchBP_C_UpdateKarmaText, CallFunc_GetSCT_KarmaWidget_KarmaScoreWi) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_UpdateKarmaText::CallFunc_GetSCT_KarmaWidget_KarmaScoreWi' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_UpdateKarmaText, CallFunc_IsDedicatedServer_ReturnValue) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_UpdateKarmaText::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_UpdateKarmaText, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'SCTPlayerState_MatchBP_C_UpdateKarmaText::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.GetDebugStringColor
// 0x0048 (0x0048 - 0x0000)
struct SCTPlayerState_MatchBP_C_GetDebugStringColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPersonoid_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_GetDebugStringColor) == 0x000004, "Wrong alignment on SCTPlayerState_MatchBP_C_GetDebugStringColor");
static_assert(sizeof(SCTPlayerState_MatchBP_C_GetDebugStringColor) == 0x000048, "Wrong size on SCTPlayerState_MatchBP_C_GetDebugStringColor");
static_assert(offsetof(SCTPlayerState_MatchBP_C_GetDebugStringColor, Color) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_GetDebugStringColor::Color' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_GetDebugStringColor, Temp_bool_Variable) == 0x000010, "Member 'SCTPlayerState_MatchBP_C_GetDebugStringColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_GetDebugStringColor, Temp_struct_Variable) == 0x000014, "Member 'SCTPlayerState_MatchBP_C_GetDebugStringColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_GetDebugStringColor, Temp_struct_Variable_1) == 0x000024, "Member 'SCTPlayerState_MatchBP_C_GetDebugStringColor::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_GetDebugStringColor, CallFunc_IsPersonoid_ReturnValue) == 0x000034, "Member 'SCTPlayerState_MatchBP_C_GetDebugStringColor::CallFunc_IsPersonoid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_GetDebugStringColor, K2Node_Select_Default) == 0x000038, "Member 'SCTPlayerState_MatchBP_C_GetDebugStringColor::K2Node_Select_Default' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.GetCategory
// 0x0038 (0x0038 - 0x0000)
struct SCTPlayerState_MatchBP_C_GetCategory final
{
public:
	struct FS_Score                               Data;                                              // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	E_ScoreCategories                             NewParam;                                          // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPersonoid_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_ScoreCategories                             K2Node_Select_Default;                             // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_GetCategory) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_GetCategory");
static_assert(sizeof(SCTPlayerState_MatchBP_C_GetCategory) == 0x000038, "Wrong size on SCTPlayerState_MatchBP_C_GetCategory");
static_assert(offsetof(SCTPlayerState_MatchBP_C_GetCategory, Data) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_GetCategory::Data' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_GetCategory, NewParam) == 0x000030, "Member 'SCTPlayerState_MatchBP_C_GetCategory::NewParam' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_GetCategory, Temp_bool_Variable) == 0x000031, "Member 'SCTPlayerState_MatchBP_C_GetCategory::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_GetCategory, CallFunc_IsPersonoid_ReturnValue) == 0x000032, "Member 'SCTPlayerState_MatchBP_C_GetCategory::CallFunc_IsPersonoid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_GetCategory, K2Node_Select_Default) == 0x000033, "Member 'SCTPlayerState_MatchBP_C_GetCategory::K2Node_Select_Default' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.GetScorePoints
// 0x0040 (0x0040 - 0x0000)
struct SCTPlayerState_MatchBP_C_GetScorePoints final
{
public:
	struct FS_Score                               Score_0;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         Score_Points;                                      // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPersonoid_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_GetScorePoints) == 0x000008, "Wrong alignment on SCTPlayerState_MatchBP_C_GetScorePoints");
static_assert(sizeof(SCTPlayerState_MatchBP_C_GetScorePoints) == 0x000040, "Wrong size on SCTPlayerState_MatchBP_C_GetScorePoints");
static_assert(offsetof(SCTPlayerState_MatchBP_C_GetScorePoints, Score_0) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_GetScorePoints::Score_0' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_GetScorePoints, Score_Points) == 0x000030, "Member 'SCTPlayerState_MatchBP_C_GetScorePoints::Score_Points' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_GetScorePoints, Temp_bool_Variable) == 0x000034, "Member 'SCTPlayerState_MatchBP_C_GetScorePoints::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_GetScorePoints, CallFunc_IsPersonoid_ReturnValue) == 0x000035, "Member 'SCTPlayerState_MatchBP_C_GetScorePoints::CallFunc_IsPersonoid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_GetScorePoints, K2Node_Select_Default) == 0x000038, "Member 'SCTPlayerState_MatchBP_C_GetScorePoints::K2Node_Select_Default' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.GetBitMask
// 0x000C (0x000C - 0x0000)
struct SCTPlayerState_MatchBP_C_GetBitMask final
{
public:
	int32                                         Category_Bitmask;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPersonoid_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_GetBitMask) == 0x000004, "Wrong alignment on SCTPlayerState_MatchBP_C_GetBitMask");
static_assert(sizeof(SCTPlayerState_MatchBP_C_GetBitMask) == 0x00000C, "Wrong size on SCTPlayerState_MatchBP_C_GetBitMask");
static_assert(offsetof(SCTPlayerState_MatchBP_C_GetBitMask, Category_Bitmask) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_GetBitMask::Category_Bitmask' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_GetBitMask, Temp_bool_Variable) == 0x000004, "Member 'SCTPlayerState_MatchBP_C_GetBitMask::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_GetBitMask, CallFunc_IsPersonoid_ReturnValue) == 0x000005, "Member 'SCTPlayerState_MatchBP_C_GetBitMask::CallFunc_IsPersonoid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_GetBitMask, K2Node_Select_Default) == 0x000008, "Member 'SCTPlayerState_MatchBP_C_GetBitMask::K2Node_Select_Default' has a wrong offset!");

// Function SCTPlayerState_MatchBP.SCTPlayerState_MatchBP_C.IsPersonoid
// 0x0002 (0x0002 - 0x0000)
struct SCTPlayerState_MatchBP_C_IsPersonoid final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SCTPlayerState_MatchBP_C_IsPersonoid) == 0x000001, "Wrong alignment on SCTPlayerState_MatchBP_C_IsPersonoid");
static_assert(sizeof(SCTPlayerState_MatchBP_C_IsPersonoid) == 0x000002, "Wrong size on SCTPlayerState_MatchBP_C_IsPersonoid");
static_assert(offsetof(SCTPlayerState_MatchBP_C_IsPersonoid, ReturnValue) == 0x000000, "Member 'SCTPlayerState_MatchBP_C_IsPersonoid::ReturnValue' has a wrong offset!");
static_assert(offsetof(SCTPlayerState_MatchBP_C_IsPersonoid, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'SCTPlayerState_MatchBP_C_IsPersonoid::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

}

