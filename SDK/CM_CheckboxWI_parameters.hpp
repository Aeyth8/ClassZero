#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CM_CheckboxWI

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function CM_CheckboxWI.CM_CheckboxWI_C.StateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct CM_CheckboxWI_C_StateChanged__DelegateSignature final
{
public:
	bool                                          IsChecked;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CM_CheckboxWI_C_StateChanged__DelegateSignature) == 0x000001, "Wrong alignment on CM_CheckboxWI_C_StateChanged__DelegateSignature");
static_assert(sizeof(CM_CheckboxWI_C_StateChanged__DelegateSignature) == 0x000001, "Wrong size on CM_CheckboxWI_C_StateChanged__DelegateSignature");
static_assert(offsetof(CM_CheckboxWI_C_StateChanged__DelegateSignature, IsChecked) == 0x000000, "Member 'CM_CheckboxWI_C_StateChanged__DelegateSignature::IsChecked' has a wrong offset!");

// Function CM_CheckboxWI.CM_CheckboxWI_C.ExecuteUbergraph_CM_CheckboxWI
// 0x0130 (0x0130 - 0x0000)
struct CM_CheckboxWI_C_ExecuteUbergraph_CM_CheckboxWI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x0008(0x0008)(NoDestructor)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0010(0x0008)(NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0018(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0050(0x0070)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00C0(0x0070)(ConstParm)
};
static_assert(alignof(CM_CheckboxWI_C_ExecuteUbergraph_CM_CheckboxWI) == 0x000008, "Wrong alignment on CM_CheckboxWI_C_ExecuteUbergraph_CM_CheckboxWI");
static_assert(sizeof(CM_CheckboxWI_C_ExecuteUbergraph_CM_CheckboxWI) == 0x000130, "Wrong size on CM_CheckboxWI_C_ExecuteUbergraph_CM_CheckboxWI");
static_assert(offsetof(CM_CheckboxWI_C_ExecuteUbergraph_CM_CheckboxWI, EntryPoint) == 0x000000, "Member 'CM_CheckboxWI_C_ExecuteUbergraph_CM_CheckboxWI::EntryPoint' has a wrong offset!");
static_assert(offsetof(CM_CheckboxWI_C_ExecuteUbergraph_CM_CheckboxWI, K2Node_Event_IsDesignTime) == 0x000004, "Member 'CM_CheckboxWI_C_ExecuteUbergraph_CM_CheckboxWI::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(CM_CheckboxWI_C_ExecuteUbergraph_CM_CheckboxWI, K2Node_ComponentBoundEvent_bIsChecked) == 0x000005, "Member 'CM_CheckboxWI_C_ExecuteUbergraph_CM_CheckboxWI::K2Node_ComponentBoundEvent_bIsChecked' has a wrong offset!");
static_assert(offsetof(CM_CheckboxWI_C_ExecuteUbergraph_CM_CheckboxWI, K2Node_Event_InFocusEvent_1) == 0x000008, "Member 'CM_CheckboxWI_C_ExecuteUbergraph_CM_CheckboxWI::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(CM_CheckboxWI_C_ExecuteUbergraph_CM_CheckboxWI, K2Node_Event_InFocusEvent) == 0x000010, "Member 'CM_CheckboxWI_C_ExecuteUbergraph_CM_CheckboxWI::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(CM_CheckboxWI_C_ExecuteUbergraph_CM_CheckboxWI, K2Node_Event_MyGeometry) == 0x000018, "Member 'CM_CheckboxWI_C_ExecuteUbergraph_CM_CheckboxWI::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(CM_CheckboxWI_C_ExecuteUbergraph_CM_CheckboxWI, K2Node_Event_MouseEvent_1) == 0x000050, "Member 'CM_CheckboxWI_C_ExecuteUbergraph_CM_CheckboxWI::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(CM_CheckboxWI_C_ExecuteUbergraph_CM_CheckboxWI, K2Node_Event_MouseEvent) == 0x0000C0, "Member 'CM_CheckboxWI_C_ExecuteUbergraph_CM_CheckboxWI::K2Node_Event_MouseEvent' has a wrong offset!");

// Function CM_CheckboxWI.CM_CheckboxWI_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct CM_CheckboxWI_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(CM_CheckboxWI_C_OnMouseLeave) == 0x000008, "Wrong alignment on CM_CheckboxWI_C_OnMouseLeave");
static_assert(sizeof(CM_CheckboxWI_C_OnMouseLeave) == 0x000070, "Wrong size on CM_CheckboxWI_C_OnMouseLeave");
static_assert(offsetof(CM_CheckboxWI_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'CM_CheckboxWI_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function CM_CheckboxWI.CM_CheckboxWI_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct CM_CheckboxWI_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(CM_CheckboxWI_C_OnMouseEnter) == 0x000008, "Wrong alignment on CM_CheckboxWI_C_OnMouseEnter");
static_assert(sizeof(CM_CheckboxWI_C_OnMouseEnter) == 0x0000A8, "Wrong size on CM_CheckboxWI_C_OnMouseEnter");
static_assert(offsetof(CM_CheckboxWI_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'CM_CheckboxWI_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(CM_CheckboxWI_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'CM_CheckboxWI_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function CM_CheckboxWI.CM_CheckboxWI_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct CM_CheckboxWI_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(CM_CheckboxWI_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on CM_CheckboxWI_C_OnRemovedFromFocusPath");
static_assert(sizeof(CM_CheckboxWI_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on CM_CheckboxWI_C_OnRemovedFromFocusPath");
static_assert(offsetof(CM_CheckboxWI_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'CM_CheckboxWI_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function CM_CheckboxWI.CM_CheckboxWI_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct CM_CheckboxWI_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(CM_CheckboxWI_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on CM_CheckboxWI_C_OnAddedToFocusPath");
static_assert(sizeof(CM_CheckboxWI_C_OnAddedToFocusPath) == 0x000008, "Wrong size on CM_CheckboxWI_C_OnAddedToFocusPath");
static_assert(offsetof(CM_CheckboxWI_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'CM_CheckboxWI_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function CM_CheckboxWI.CM_CheckboxWI_C.BndEvt__CM_CheckboxWI_CheckBox_35_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct CM_CheckboxWI_C_BndEvt__CM_CheckboxWI_CheckBox_35_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CM_CheckboxWI_C_BndEvt__CM_CheckboxWI_CheckBox_35_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on CM_CheckboxWI_C_BndEvt__CM_CheckboxWI_CheckBox_35_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(CM_CheckboxWI_C_BndEvt__CM_CheckboxWI_CheckBox_35_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on CM_CheckboxWI_C_BndEvt__CM_CheckboxWI_CheckBox_35_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(CM_CheckboxWI_C_BndEvt__CM_CheckboxWI_CheckBox_35_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'CM_CheckboxWI_C_BndEvt__CM_CheckboxWI_CheckBox_35_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function CM_CheckboxWI.CM_CheckboxWI_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct CM_CheckboxWI_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CM_CheckboxWI_C_PreConstruct) == 0x000001, "Wrong alignment on CM_CheckboxWI_C_PreConstruct");
static_assert(sizeof(CM_CheckboxWI_C_PreConstruct) == 0x000001, "Wrong size on CM_CheckboxWI_C_PreConstruct");
static_assert(offsetof(CM_CheckboxWI_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'CM_CheckboxWI_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function CM_CheckboxWI.CM_CheckboxWI_C.OnMouseOver
// 0x0218 (0x0218 - 0x0000)
struct CM_CheckboxWI_C_OnMouseOver final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x0160(0x00B8)(UObjectWrapper)
};
static_assert(alignof(CM_CheckboxWI_C_OnMouseOver) == 0x000008, "Wrong alignment on CM_CheckboxWI_C_OnMouseOver");
static_assert(sizeof(CM_CheckboxWI_C_OnMouseOver) == 0x000218, "Wrong size on CM_CheckboxWI_C_OnMouseOver");
static_assert(offsetof(CM_CheckboxWI_C_OnMouseOver, MyGeometry) == 0x000000, "Member 'CM_CheckboxWI_C_OnMouseOver::MyGeometry' has a wrong offset!");
static_assert(offsetof(CM_CheckboxWI_C_OnMouseOver, MouseEvent) == 0x000038, "Member 'CM_CheckboxWI_C_OnMouseOver::MouseEvent' has a wrong offset!");
static_assert(offsetof(CM_CheckboxWI_C_OnMouseOver, ReturnValue) == 0x0000A8, "Member 'CM_CheckboxWI_C_OnMouseOver::ReturnValue' has a wrong offset!");
static_assert(offsetof(CM_CheckboxWI_C_OnMouseOver, K2Node_MakeStruct_EventReply) == 0x000160, "Member 'CM_CheckboxWI_C_OnMouseOver::K2Node_MakeStruct_EventReply' has a wrong offset!");

}

