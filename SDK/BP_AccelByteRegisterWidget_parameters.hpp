#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AccelByteRegisterWidget

#include "Basic.hpp"

#include "AccelByteUe4Sdk_structs.hpp"


namespace SDK::Params
{

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.OnSendVerificationCode__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct BP_AccelByteRegisterWidget_C_OnSendVerificationCode__DelegateSignature final
{
public:
	class FString                                 DisplayName;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Email;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Password;                                          // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_OnSendVerificationCode__DelegateSignature) == 0x000008, "Wrong alignment on BP_AccelByteRegisterWidget_C_OnSendVerificationCode__DelegateSignature");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_OnSendVerificationCode__DelegateSignature) == 0x000030, "Wrong size on BP_AccelByteRegisterWidget_C_OnSendVerificationCode__DelegateSignature");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnSendVerificationCode__DelegateSignature, DisplayName) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_OnSendVerificationCode__DelegateSignature::DisplayName' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnSendVerificationCode__DelegateSignature, Email) == 0x000010, "Member 'BP_AccelByteRegisterWidget_C_OnSendVerificationCode__DelegateSignature::Email' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnSendVerificationCode__DelegateSignature, Password) == 0x000020, "Member 'BP_AccelByteRegisterWidget_C_OnSendVerificationCode__DelegateSignature::Password' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.ExecuteUbergraph_BP_AccelByteRegisterWidget
// 0x0698 (0x0698 - 0x0000)
struct BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWinGDKPlatform_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Result_8;                       // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code_9;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Result_7;                       // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code_8;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Result, int32 Code)> K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& Result, int32 Code)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Result_6;                       // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code_7;                         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Result_5;                       // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code_6;                         // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Result, int32 Code)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable_1;                               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UFCTAuthSendVerificationCodeCallbackProxy* CallFunc_SendVerificationCodeForAccount_ReturnValue; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Result, int32 Code)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Result_4;                       // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code_5;                         // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Result_3;                       // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code_4;                         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Result, int32 Code)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x011C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable_2;                               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UFCTAuthLogoutCallbackProxy*            CallFunc_Logout_ReturnValue;                       // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Result, int32 Code)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0148(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Result_2;                       // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code_3;                         // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Result_1;                       // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code_2;                         // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Result, int32 Code)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x018C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable_3;                               // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Message_1;                      // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code_1;                         // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Message, int32 Code)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x01C4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAccountUserData                       K2Node_CustomEvent_Result;                         // 0x01D8(0x0120)(ConstParm)
	class FString                                 K2Node_CustomEvent_Message;                        // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code;                           // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FAccountUserData& Result, const class FString& Message, int32 Code)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x030C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable_4;                               // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0320(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAccountUserData                       Temp_struct_Variable;                              // 0x0330(0x0120)()
	struct FPagedPublicUsersInfo                  Temp_struct_Variable_1;                            // 0x0450(0x0050)()
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x04A0(0x0018)()
	TDelegate<void(const class FString& Result, int32 Code)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x04B8(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x04C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked_1;           // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x04D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DA[0x6];                                      // 0x04DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetUserDisplayName_ReturnValue;           // 0x04E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x04F0(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue_1;                    // 0x0508(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0520(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChecked_ReturnValue;                    // 0x0531(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChecked_ReturnValue_1;                  // 0x0532(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_533[0x5];                                      // 0x0533(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayNameInputString_OutDisplayName; // 0x0538(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UFCTAccelByteSearchUserUtils*           CallFunc_SearchUsers_ReturnValue;                  // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UserNameAvailable_NameAvailable;          // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0551(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_552[0x6];                                      // 0x0552(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPagedPublicUsersInfo                  K2Node_CustomEvent_UsersInfo;                      // 0x0558(0x0050)()
	class FString                                 CallFunc_GetDisplayNameInputString_OutDisplayName_1; // 0x05A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const struct FPagedPublicUsersInfo& UsersInfo)> K2Node_CreateDelegate_OutputDelegate_10;           // 0x05B8(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 CallFunc_GetEmailInputString_OutEmail;             // 0x05C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPasswordInputString_OutPassword;       // 0x05D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked;             // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsolePlatform_ReturnValue;            // 0x05E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x05EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EB[0x5];                                      // 0x05EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEmailInputString_OutEmail_1;           // 0x05F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPasswordInputString_OutPassword_1;     // 0x0600(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code_10;                        // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_614[0x4];                                      // 0x0614(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Message_2;                      // 0x0618(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UFCTAuthUpgradeAccountCallbackProxy*    CallFunc_UpgradeHeadlessAccount_ReturnValue;       // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Code, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x0630(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_641[0x7];                                      // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEmailInputString_OutEmail_2;           // 0x0648(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPasswordInputString_OutPassword_2;     // 0x0658(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UFCTAccelByteLinkAccountsCallbackProxy* CallFunc_LogIntoVersusEvilAccount_ReturnValue;     // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_671[0x7];                                      // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayNameInputString_OutDisplayName_2; // 0x0678(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UFCTAuthUpdateUserCallbackProxy*        CallFunc_UpdateUser_ReturnValue;                   // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget) == 0x000008, "Wrong alignment on BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget) == 0x000698, "Wrong size on BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, EntryPoint) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_IsWinGDKPlatform_ReturnValue) == 0x000004, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_IsWinGDKPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CustomEvent_Result_8) == 0x000008, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CustomEvent_Result_8' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CustomEvent_Code_9) == 0x000018, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CustomEvent_Code_9' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CustomEvent_Result_7) == 0x000020, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CustomEvent_Result_7' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CustomEvent_Code_8) == 0x000030, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CustomEvent_Code_8' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, Temp_int_Variable) == 0x000044, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, Temp_string_Variable) == 0x000048, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_Conv_IntToString_ReturnValue) == 0x000058, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_SwitchString_CmpSuccess) == 0x000068, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CreateDelegate_OutputDelegate_1) == 0x00006C, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CustomEvent_Result_6) == 0x000080, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CustomEvent_Result_6' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CustomEvent_Code_7) == 0x000090, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CustomEvent_Code_7' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CustomEvent_Result_5) == 0x000098, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CustomEvent_Result_5' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CustomEvent_Code_6) == 0x0000A8, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CustomEvent_Code_6' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000AC, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, Temp_int_Variable_1) == 0x0000BC, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, Temp_string_Variable_1) == 0x0000C0, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_SendVerificationCodeForAccount_ReturnValue) == 0x0000D0, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_SendVerificationCodeForAccount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000D8, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CustomEvent_Result_4) == 0x0000F0, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CustomEvent_Result_4' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CustomEvent_Code_5) == 0x000100, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CustomEvent_Code_5' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CustomEvent_Result_3) == 0x000108, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CustomEvent_Result_3' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CustomEvent_Code_4) == 0x000118, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CustomEvent_Code_4' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CreateDelegate_OutputDelegate_4) == 0x00011C, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, Temp_int_Variable_2) == 0x00012C, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, Temp_string_Variable_2) == 0x000130, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_Logout_ReturnValue) == 0x000140, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_Logout_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CreateDelegate_OutputDelegate_5) == 0x000148, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_IsValid_ReturnValue_1) == 0x000158, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CustomEvent_Result_2) == 0x000160, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CustomEvent_Result_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CustomEvent_Code_3) == 0x000170, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CustomEvent_Code_3' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CustomEvent_Result_1) == 0x000178, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CustomEvent_Result_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CustomEvent_Code_2) == 0x000188, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CustomEvent_Code_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CreateDelegate_OutputDelegate_6) == 0x00018C, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, Temp_int_Variable_3) == 0x00019C, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, Temp_string_Variable_3) == 0x0001A0, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CustomEvent_Message_1) == 0x0001B0, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CustomEvent_Message_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CustomEvent_Code_1) == 0x0001C0, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CustomEvent_Code_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CreateDelegate_OutputDelegate_7) == 0x0001C4, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CustomEvent_Result) == 0x0001D8, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CustomEvent_Message) == 0x0002F8, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CustomEvent_Message' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CustomEvent_Code) == 0x000308, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CustomEvent_Code' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CreateDelegate_OutputDelegate_8) == 0x00030C, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, Temp_int_Variable_4) == 0x00031C, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, Temp_string_Variable_4) == 0x000320, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, Temp_struct_Variable) == 0x000330, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, Temp_struct_Variable_1) == 0x000450, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_GetText_ReturnValue) == 0x0004A0, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CreateDelegate_OutputDelegate_9) == 0x0004B8, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_Conv_TextToString_ReturnValue) == 0x0004C8, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_ComponentBoundEvent_bIsChecked_1) == 0x0004D8, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_ComponentBoundEvent_bIsChecked_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_Not_PreBool_ReturnValue) == 0x0004D9, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_GetUserDisplayName_ReturnValue) == 0x0004E0, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_GetUserDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_Conv_StringToText_ReturnValue) == 0x0004F0, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_GetText_ReturnValue_1) == 0x000508, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_GetText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000520, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000530, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_IsChecked_ReturnValue) == 0x000531, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_IsChecked_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_IsChecked_ReturnValue_1) == 0x000532, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_IsChecked_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_GetDisplayNameInputString_OutDisplayName) == 0x000538, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_GetDisplayNameInputString_OutDisplayName' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_SearchUsers_ReturnValue) == 0x000548, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_SearchUsers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_UserNameAvailable_NameAvailable) == 0x000550, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_UserNameAvailable_NameAvailable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_IsValid_ReturnValue_2) == 0x000551, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CustomEvent_UsersInfo) == 0x000558, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CustomEvent_UsersInfo' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_GetDisplayNameInputString_OutDisplayName_1) == 0x0005A8, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_GetDisplayNameInputString_OutDisplayName_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CreateDelegate_OutputDelegate_10) == 0x0005B8, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_GetEmailInputString_OutEmail) == 0x0005C8, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_GetEmailInputString_OutEmail' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_GetPasswordInputString_OutPassword) == 0x0005D8, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_GetPasswordInputString_OutPassword' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_ComponentBoundEvent_bIsChecked) == 0x0005E8, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_ComponentBoundEvent_bIsChecked' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_IsConsolePlatform_ReturnValue) == 0x0005E9, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_IsConsolePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_BooleanOR_ReturnValue) == 0x0005EA, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_GetEmailInputString_OutEmail_1) == 0x0005F0, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_GetEmailInputString_OutEmail_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_GetPasswordInputString_OutPassword_1) == 0x000600, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_GetPasswordInputString_OutPassword_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CustomEvent_Code_10) == 0x000610, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CustomEvent_Code_10' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CustomEvent_Message_2) == 0x000618, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CustomEvent_Message_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_UpgradeHeadlessAccount_ReturnValue) == 0x000628, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_UpgradeHeadlessAccount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, K2Node_CreateDelegate_OutputDelegate_11) == 0x000630, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_IsValid_ReturnValue_3) == 0x000640, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_GetEmailInputString_OutEmail_2) == 0x000648, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_GetEmailInputString_OutEmail_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_GetPasswordInputString_OutPassword_2) == 0x000658, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_GetPasswordInputString_OutPassword_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_LogIntoVersusEvilAccount_ReturnValue) == 0x000668, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_LogIntoVersusEvilAccount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_IsValid_ReturnValue_4) == 0x000670, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_GetDisplayNameInputString_OutDisplayName_2) == 0x000678, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_GetDisplayNameInputString_OutDisplayName_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_UpdateUser_ReturnValue) == 0x000688, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_UpdateUser_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget, CallFunc_IsValid_ReturnValue_5) == 0x000690, "Member 'BP_AccelByteRegisterWidget_C_ExecuteUbergraph_BP_AccelByteRegisterWidget::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.BndEvt__BP_AccelByteRegisterWidget_AgeCheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_AccelByteRegisterWidget_C_BndEvt__BP_AccelByteRegisterWidget_AgeCheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_BndEvt__BP_AccelByteRegisterWidget_AgeCheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on BP_AccelByteRegisterWidget_C_BndEvt__BP_AccelByteRegisterWidget_AgeCheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_BndEvt__BP_AccelByteRegisterWidget_AgeCheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on BP_AccelByteRegisterWidget_C_BndEvt__BP_AccelByteRegisterWidget_AgeCheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_BndEvt__BP_AccelByteRegisterWidget_AgeCheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_BndEvt__BP_AccelByteRegisterWidget_AgeCheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.BndEvt__KeepUsernameCheckbox_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_AccelByteRegisterWidget_C_BndEvt__KeepUsernameCheckbox_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_BndEvt__KeepUsernameCheckbox_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on BP_AccelByteRegisterWidget_C_BndEvt__KeepUsernameCheckbox_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_BndEvt__KeepUsernameCheckbox_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on BP_AccelByteRegisterWidget_C_BndEvt__KeepUsernameCheckbox_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_BndEvt__KeepUsernameCheckbox_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_BndEvt__KeepUsernameCheckbox_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.OnSuccess_BA35C05048A87F35424259AA85EDFCC7
// 0x0138 (0x0138 - 0x0000)
struct BP_AccelByteRegisterWidget_C_OnSuccess_BA35C05048A87F35424259AA85EDFCC7 final
{
public:
	struct FAccountUserData                       Result;                                            // 0x0000(0x0120)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 Message;                                           // 0x0120(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Code;                                              // 0x0130(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_OnSuccess_BA35C05048A87F35424259AA85EDFCC7) == 0x000008, "Wrong alignment on BP_AccelByteRegisterWidget_C_OnSuccess_BA35C05048A87F35424259AA85EDFCC7");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_OnSuccess_BA35C05048A87F35424259AA85EDFCC7) == 0x000138, "Wrong size on BP_AccelByteRegisterWidget_C_OnSuccess_BA35C05048A87F35424259AA85EDFCC7");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnSuccess_BA35C05048A87F35424259AA85EDFCC7, Result) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_OnSuccess_BA35C05048A87F35424259AA85EDFCC7::Result' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnSuccess_BA35C05048A87F35424259AA85EDFCC7, Message) == 0x000120, "Member 'BP_AccelByteRegisterWidget_C_OnSuccess_BA35C05048A87F35424259AA85EDFCC7::Message' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnSuccess_BA35C05048A87F35424259AA85EDFCC7, Code) == 0x000130, "Member 'BP_AccelByteRegisterWidget_C_OnSuccess_BA35C05048A87F35424259AA85EDFCC7::Code' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.OnError_BA35C05048A87F35424259AA85EDFCC7
// 0x0018 (0x0018 - 0x0000)
struct BP_AccelByteRegisterWidget_C_OnError_BA35C05048A87F35424259AA85EDFCC7 final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Code;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_OnError_BA35C05048A87F35424259AA85EDFCC7) == 0x000008, "Wrong alignment on BP_AccelByteRegisterWidget_C_OnError_BA35C05048A87F35424259AA85EDFCC7");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_OnError_BA35C05048A87F35424259AA85EDFCC7) == 0x000018, "Wrong size on BP_AccelByteRegisterWidget_C_OnError_BA35C05048A87F35424259AA85EDFCC7");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnError_BA35C05048A87F35424259AA85EDFCC7, Message) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_OnError_BA35C05048A87F35424259AA85EDFCC7::Message' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnError_BA35C05048A87F35424259AA85EDFCC7, Code) == 0x000010, "Member 'BP_AccelByteRegisterWidget_C_OnError_BA35C05048A87F35424259AA85EDFCC7::Code' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.OnSuccess_7ABCB2AB4DE6822731B88CBE6957D8A5
// 0x0018 (0x0018 - 0x0000)
struct BP_AccelByteRegisterWidget_C_OnSuccess_7ABCB2AB4DE6822731B88CBE6957D8A5 final
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Code;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_OnSuccess_7ABCB2AB4DE6822731B88CBE6957D8A5) == 0x000008, "Wrong alignment on BP_AccelByteRegisterWidget_C_OnSuccess_7ABCB2AB4DE6822731B88CBE6957D8A5");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_OnSuccess_7ABCB2AB4DE6822731B88CBE6957D8A5) == 0x000018, "Wrong size on BP_AccelByteRegisterWidget_C_OnSuccess_7ABCB2AB4DE6822731B88CBE6957D8A5");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnSuccess_7ABCB2AB4DE6822731B88CBE6957D8A5, Result) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_OnSuccess_7ABCB2AB4DE6822731B88CBE6957D8A5::Result' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnSuccess_7ABCB2AB4DE6822731B88CBE6957D8A5, Code) == 0x000010, "Member 'BP_AccelByteRegisterWidget_C_OnSuccess_7ABCB2AB4DE6822731B88CBE6957D8A5::Code' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.OnError_7ABCB2AB4DE6822731B88CBE6957D8A5
// 0x0018 (0x0018 - 0x0000)
struct BP_AccelByteRegisterWidget_C_OnError_7ABCB2AB4DE6822731B88CBE6957D8A5 final
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Code;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_OnError_7ABCB2AB4DE6822731B88CBE6957D8A5) == 0x000008, "Wrong alignment on BP_AccelByteRegisterWidget_C_OnError_7ABCB2AB4DE6822731B88CBE6957D8A5");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_OnError_7ABCB2AB4DE6822731B88CBE6957D8A5) == 0x000018, "Wrong size on BP_AccelByteRegisterWidget_C_OnError_7ABCB2AB4DE6822731B88CBE6957D8A5");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnError_7ABCB2AB4DE6822731B88CBE6957D8A5, Result) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_OnError_7ABCB2AB4DE6822731B88CBE6957D8A5::Result' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnError_7ABCB2AB4DE6822731B88CBE6957D8A5, Code) == 0x000010, "Member 'BP_AccelByteRegisterWidget_C_OnError_7ABCB2AB4DE6822731B88CBE6957D8A5::Code' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.OnSuccess_EBE150A54A45320110E72DA4D10B9F48
// 0x0018 (0x0018 - 0x0000)
struct BP_AccelByteRegisterWidget_C_OnSuccess_EBE150A54A45320110E72DA4D10B9F48 final
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Code;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_OnSuccess_EBE150A54A45320110E72DA4D10B9F48) == 0x000008, "Wrong alignment on BP_AccelByteRegisterWidget_C_OnSuccess_EBE150A54A45320110E72DA4D10B9F48");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_OnSuccess_EBE150A54A45320110E72DA4D10B9F48) == 0x000018, "Wrong size on BP_AccelByteRegisterWidget_C_OnSuccess_EBE150A54A45320110E72DA4D10B9F48");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnSuccess_EBE150A54A45320110E72DA4D10B9F48, Result) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_OnSuccess_EBE150A54A45320110E72DA4D10B9F48::Result' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnSuccess_EBE150A54A45320110E72DA4D10B9F48, Code) == 0x000010, "Member 'BP_AccelByteRegisterWidget_C_OnSuccess_EBE150A54A45320110E72DA4D10B9F48::Code' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.OnError_EBE150A54A45320110E72DA4D10B9F48
// 0x0018 (0x0018 - 0x0000)
struct BP_AccelByteRegisterWidget_C_OnError_EBE150A54A45320110E72DA4D10B9F48 final
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Code;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_OnError_EBE150A54A45320110E72DA4D10B9F48) == 0x000008, "Wrong alignment on BP_AccelByteRegisterWidget_C_OnError_EBE150A54A45320110E72DA4D10B9F48");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_OnError_EBE150A54A45320110E72DA4D10B9F48) == 0x000018, "Wrong size on BP_AccelByteRegisterWidget_C_OnError_EBE150A54A45320110E72DA4D10B9F48");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnError_EBE150A54A45320110E72DA4D10B9F48, Result) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_OnError_EBE150A54A45320110E72DA4D10B9F48::Result' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnError_EBE150A54A45320110E72DA4D10B9F48, Code) == 0x000010, "Member 'BP_AccelByteRegisterWidget_C_OnError_EBE150A54A45320110E72DA4D10B9F48::Code' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.OnSuccess_27F7195245B523606805B8BF1431B28C
// 0x0018 (0x0018 - 0x0000)
struct BP_AccelByteRegisterWidget_C_OnSuccess_27F7195245B523606805B8BF1431B28C final
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Code;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_OnSuccess_27F7195245B523606805B8BF1431B28C) == 0x000008, "Wrong alignment on BP_AccelByteRegisterWidget_C_OnSuccess_27F7195245B523606805B8BF1431B28C");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_OnSuccess_27F7195245B523606805B8BF1431B28C) == 0x000018, "Wrong size on BP_AccelByteRegisterWidget_C_OnSuccess_27F7195245B523606805B8BF1431B28C");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnSuccess_27F7195245B523606805B8BF1431B28C, Result) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_OnSuccess_27F7195245B523606805B8BF1431B28C::Result' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnSuccess_27F7195245B523606805B8BF1431B28C, Code) == 0x000010, "Member 'BP_AccelByteRegisterWidget_C_OnSuccess_27F7195245B523606805B8BF1431B28C::Code' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.OnError_27F7195245B523606805B8BF1431B28C
// 0x0018 (0x0018 - 0x0000)
struct BP_AccelByteRegisterWidget_C_OnError_27F7195245B523606805B8BF1431B28C final
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Code;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_OnError_27F7195245B523606805B8BF1431B28C) == 0x000008, "Wrong alignment on BP_AccelByteRegisterWidget_C_OnError_27F7195245B523606805B8BF1431B28C");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_OnError_27F7195245B523606805B8BF1431B28C) == 0x000018, "Wrong size on BP_AccelByteRegisterWidget_C_OnError_27F7195245B523606805B8BF1431B28C");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnError_27F7195245B523606805B8BF1431B28C, Result) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_OnError_27F7195245B523606805B8BF1431B28C::Result' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnError_27F7195245B523606805B8BF1431B28C, Code) == 0x000010, "Member 'BP_AccelByteRegisterWidget_C_OnError_27F7195245B523606805B8BF1431B28C::Code' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.OnSuccess_37484B9B46D5AF04A96CA09E4DC0B157
// 0x0018 (0x0018 - 0x0000)
struct BP_AccelByteRegisterWidget_C_OnSuccess_37484B9B46D5AF04A96CA09E4DC0B157 final
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Code;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_OnSuccess_37484B9B46D5AF04A96CA09E4DC0B157) == 0x000008, "Wrong alignment on BP_AccelByteRegisterWidget_C_OnSuccess_37484B9B46D5AF04A96CA09E4DC0B157");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_OnSuccess_37484B9B46D5AF04A96CA09E4DC0B157) == 0x000018, "Wrong size on BP_AccelByteRegisterWidget_C_OnSuccess_37484B9B46D5AF04A96CA09E4DC0B157");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnSuccess_37484B9B46D5AF04A96CA09E4DC0B157, Result) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_OnSuccess_37484B9B46D5AF04A96CA09E4DC0B157::Result' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnSuccess_37484B9B46D5AF04A96CA09E4DC0B157, Code) == 0x000010, "Member 'BP_AccelByteRegisterWidget_C_OnSuccess_37484B9B46D5AF04A96CA09E4DC0B157::Code' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.OnError_37484B9B46D5AF04A96CA09E4DC0B157
// 0x0018 (0x0018 - 0x0000)
struct BP_AccelByteRegisterWidget_C_OnError_37484B9B46D5AF04A96CA09E4DC0B157 final
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Code;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_OnError_37484B9B46D5AF04A96CA09E4DC0B157) == 0x000008, "Wrong alignment on BP_AccelByteRegisterWidget_C_OnError_37484B9B46D5AF04A96CA09E4DC0B157");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_OnError_37484B9B46D5AF04A96CA09E4DC0B157) == 0x000018, "Wrong size on BP_AccelByteRegisterWidget_C_OnError_37484B9B46D5AF04A96CA09E4DC0B157");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnError_37484B9B46D5AF04A96CA09E4DC0B157, Result) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_OnError_37484B9B46D5AF04A96CA09E4DC0B157::Result' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnError_37484B9B46D5AF04A96CA09E4DC0B157, Code) == 0x000010, "Member 'BP_AccelByteRegisterWidget_C_OnError_37484B9B46D5AF04A96CA09E4DC0B157::Code' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.OnSuccess_AE04DCEE41C8360F9BA1F78B28EB2223
// 0x0050 (0x0050 - 0x0000)
struct BP_AccelByteRegisterWidget_C_OnSuccess_AE04DCEE41C8360F9BA1F78B28EB2223 final
{
public:
	struct FPagedPublicUsersInfo                  UsersInfo;                                         // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_OnSuccess_AE04DCEE41C8360F9BA1F78B28EB2223) == 0x000008, "Wrong alignment on BP_AccelByteRegisterWidget_C_OnSuccess_AE04DCEE41C8360F9BA1F78B28EB2223");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_OnSuccess_AE04DCEE41C8360F9BA1F78B28EB2223) == 0x000050, "Wrong size on BP_AccelByteRegisterWidget_C_OnSuccess_AE04DCEE41C8360F9BA1F78B28EB2223");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnSuccess_AE04DCEE41C8360F9BA1F78B28EB2223, UsersInfo) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_OnSuccess_AE04DCEE41C8360F9BA1F78B28EB2223::UsersInfo' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.OnFail_AE04DCEE41C8360F9BA1F78B28EB2223
// 0x0018 (0x0018 - 0x0000)
struct BP_AccelByteRegisterWidget_C_OnFail_AE04DCEE41C8360F9BA1F78B28EB2223 final
{
public:
	int32                                         Code;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_OnFail_AE04DCEE41C8360F9BA1F78B28EB2223) == 0x000008, "Wrong alignment on BP_AccelByteRegisterWidget_C_OnFail_AE04DCEE41C8360F9BA1F78B28EB2223");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_OnFail_AE04DCEE41C8360F9BA1F78B28EB2223) == 0x000018, "Wrong size on BP_AccelByteRegisterWidget_C_OnFail_AE04DCEE41C8360F9BA1F78B28EB2223");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnFail_AE04DCEE41C8360F9BA1F78B28EB2223, Code) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_OnFail_AE04DCEE41C8360F9BA1F78B28EB2223::Code' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_OnFail_AE04DCEE41C8360F9BA1F78B28EB2223, Message) == 0x000008, "Member 'BP_AccelByteRegisterWidget_C_OnFail_AE04DCEE41C8360F9BA1F78B28EB2223::Message' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.Set New Day Count
// 0x0004 (0x0004 - 0x0000)
struct BP_AccelByteRegisterWidget_C_Set_New_Day_Count final
{
public:
	int32                                         SelectedDayIndex;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_Set_New_Day_Count) == 0x000004, "Wrong alignment on BP_AccelByteRegisterWidget_C_Set_New_Day_Count");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_Set_New_Day_Count) == 0x000004, "Wrong size on BP_AccelByteRegisterWidget_C_Set_New_Day_Count");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_Set_New_Day_Count, SelectedDayIndex) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_Set_New_Day_Count::SelectedDayIndex' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.GetDisplayNameInputString
// 0x0038 (0x0038 - 0x0000)
struct BP_AccelByteRegisterWidget_C_GetDisplayNameInputString final
{
public:
	class FString                                 OutDisplayName;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0010(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_GetDisplayNameInputString) == 0x000008, "Wrong alignment on BP_AccelByteRegisterWidget_C_GetDisplayNameInputString");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_GetDisplayNameInputString) == 0x000038, "Wrong size on BP_AccelByteRegisterWidget_C_GetDisplayNameInputString");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_GetDisplayNameInputString, OutDisplayName) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_GetDisplayNameInputString::OutDisplayName' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_GetDisplayNameInputString, CallFunc_GetText_ReturnValue) == 0x000010, "Member 'BP_AccelByteRegisterWidget_C_GetDisplayNameInputString::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_GetDisplayNameInputString, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'BP_AccelByteRegisterWidget_C_GetDisplayNameInputString::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.GetPasswordInputString
// 0x0038 (0x0038 - 0x0000)
struct BP_AccelByteRegisterWidget_C_GetPasswordInputString final
{
public:
	class FString                                 OutPassword;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0010(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_GetPasswordInputString) == 0x000008, "Wrong alignment on BP_AccelByteRegisterWidget_C_GetPasswordInputString");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_GetPasswordInputString) == 0x000038, "Wrong size on BP_AccelByteRegisterWidget_C_GetPasswordInputString");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_GetPasswordInputString, OutPassword) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_GetPasswordInputString::OutPassword' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_GetPasswordInputString, CallFunc_GetText_ReturnValue) == 0x000010, "Member 'BP_AccelByteRegisterWidget_C_GetPasswordInputString::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_GetPasswordInputString, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'BP_AccelByteRegisterWidget_C_GetPasswordInputString::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.GetFormattedBirthDate
// 0x0020 (0x0020 - 0x0000)
struct BP_AccelByteRegisterWidget_C_GetFormattedBirthDate final
{
public:
	class FString                                 OutBirthDate;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 FormattedDate;                                     // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_GetFormattedBirthDate) == 0x000008, "Wrong alignment on BP_AccelByteRegisterWidget_C_GetFormattedBirthDate");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_GetFormattedBirthDate) == 0x000020, "Wrong size on BP_AccelByteRegisterWidget_C_GetFormattedBirthDate");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_GetFormattedBirthDate, OutBirthDate) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_GetFormattedBirthDate::OutBirthDate' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_GetFormattedBirthDate, FormattedDate) == 0x000010, "Member 'BP_AccelByteRegisterWidget_C_GetFormattedBirthDate::FormattedDate' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.Get Appended Date Column
// 0x0068 (0x0068 - 0x0000)
struct BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column final
{
public:
	class UComboBoxString*                        Date;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 OutMonth;                                          // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_ReturnValue_1;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_ReturnValue_2;           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column) == 0x000008, "Wrong alignment on BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column) == 0x000068, "Wrong size on BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column, Date) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column::Date' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column, OutMonth) == 0x000008, "Member 'BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column::OutMonth' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column, CallFunc_GetSelectedIndex_ReturnValue) == 0x000018, "Member 'BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column::CallFunc_GetSelectedIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column, CallFunc_GetSelectedIndex_ReturnValue_1) == 0x00001C, "Member 'BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column::CallFunc_GetSelectedIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000038, "Member 'BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column, CallFunc_GetSelectedIndex_ReturnValue_2) == 0x000058, "Member 'BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column::CallFunc_GetSelectedIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column, CallFunc_Add_IntInt_ReturnValue_2) == 0x00005C, "Member 'BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_AccelByteRegisterWidget_C_Get_Appended_Date_Column::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.GetEmailInputString
// 0x0038 (0x0038 - 0x0000)
struct BP_AccelByteRegisterWidget_C_GetEmailInputString final
{
public:
	class FString                                 OutEmail;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0010(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_GetEmailInputString) == 0x000008, "Wrong alignment on BP_AccelByteRegisterWidget_C_GetEmailInputString");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_GetEmailInputString) == 0x000038, "Wrong size on BP_AccelByteRegisterWidget_C_GetEmailInputString");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_GetEmailInputString, OutEmail) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_GetEmailInputString::OutEmail' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_GetEmailInputString, CallFunc_GetText_ReturnValue) == 0x000010, "Member 'BP_AccelByteRegisterWidget_C_GetEmailInputString::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_GetEmailInputString, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'BP_AccelByteRegisterWidget_C_GetEmailInputString::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.Init
// 0x0010 (0x0010 - 0x0000)
struct BP_AccelByteRegisterWidget_C_Init final
{
public:
	class FString                                 Country;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_Init) == 0x000008, "Wrong alignment on BP_AccelByteRegisterWidget_C_Init");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_Init) == 0x000010, "Wrong size on BP_AccelByteRegisterWidget_C_Init");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_Init, Country) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_Init::Country' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.UserNameAvailable
// 0x0098 (0x0098 - 0x0000)
struct BP_AccelByteRegisterWidget_C_UserNameAvailable final
{
public:
	class FString                                 DisplayName;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FPublicUserInfo>                UserQuery;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          NameAvailable;                                     // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPublicUserInfo                        CallFunc_Array_Get_Item;                           // 0x0030(0x0050)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_UserNameAvailable) == 0x000008, "Wrong alignment on BP_AccelByteRegisterWidget_C_UserNameAvailable");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_UserNameAvailable) == 0x000098, "Wrong size on BP_AccelByteRegisterWidget_C_UserNameAvailable");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_UserNameAvailable, DisplayName) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_UserNameAvailable::DisplayName' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_UserNameAvailable, UserQuery) == 0x000010, "Member 'BP_AccelByteRegisterWidget_C_UserNameAvailable::UserQuery' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_UserNameAvailable, NameAvailable) == 0x000020, "Member 'BP_AccelByteRegisterWidget_C_UserNameAvailable::NameAvailable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_UserNameAvailable, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_AccelByteRegisterWidget_C_UserNameAvailable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_UserNameAvailable, Temp_bool_True_if_break_was_hit_Variable) == 0x000028, "Member 'BP_AccelByteRegisterWidget_C_UserNameAvailable::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_UserNameAvailable, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_AccelByteRegisterWidget_C_UserNameAvailable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_UserNameAvailable, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_AccelByteRegisterWidget_C_UserNameAvailable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_UserNameAvailable, CallFunc_Not_PreBool_ReturnValue) == 0x000080, "Member 'BP_AccelByteRegisterWidget_C_UserNameAvailable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_UserNameAvailable, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000081, "Member 'BP_AccelByteRegisterWidget_C_UserNameAvailable::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_UserNameAvailable, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'BP_AccelByteRegisterWidget_C_UserNameAvailable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_UserNameAvailable, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_AccelByteRegisterWidget_C_UserNameAvailable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_UserNameAvailable, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'BP_AccelByteRegisterWidget_C_UserNameAvailable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_UserNameAvailable, CallFunc_BooleanAND_ReturnValue) == 0x000090, "Member 'BP_AccelByteRegisterWidget_C_UserNameAvailable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.SetErrorMessage
// 0x0028 (0x0028 - 0x0000)
struct BP_AccelByteRegisterWidget_C_SetErrorMessage final
{
public:
	class UTextBlock*                             TextWidget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ErrorText;                                         // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UPanelWidget*                           CallFunc_GetParent_ReturnValue;                    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_SetErrorMessage) == 0x000008, "Wrong alignment on BP_AccelByteRegisterWidget_C_SetErrorMessage");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_SetErrorMessage) == 0x000028, "Wrong size on BP_AccelByteRegisterWidget_C_SetErrorMessage");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_SetErrorMessage, TextWidget) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_SetErrorMessage::TextWidget' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_SetErrorMessage, ErrorText) == 0x000008, "Member 'BP_AccelByteRegisterWidget_C_SetErrorMessage::ErrorText' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_SetErrorMessage, CallFunc_GetParent_ReturnValue) == 0x000020, "Member 'BP_AccelByteRegisterWidget_C_SetErrorMessage::CallFunc_GetParent_ReturnValue' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.ValidatePasswordInput
// 0x0088 (0x0088 - 0x0000)
struct BP_AccelByteRegisterWidget_C_ValidatePasswordInput final
{
public:
	class FText                                   NewLocalVar_0;                                     // 0x0000(0x0018)(Edit, BlueprintVisible)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0018(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue_1;                    // 0x0030(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_PasswordIsValid_Code;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PasswordIsValid_ReturnValue;              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_ValidatePasswordInput) == 0x000008, "Wrong alignment on BP_AccelByteRegisterWidget_C_ValidatePasswordInput");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_ValidatePasswordInput) == 0x000088, "Wrong size on BP_AccelByteRegisterWidget_C_ValidatePasswordInput");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ValidatePasswordInput, NewLocalVar_0) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_ValidatePasswordInput::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ValidatePasswordInput, CallFunc_GetText_ReturnValue) == 0x000018, "Member 'BP_AccelByteRegisterWidget_C_ValidatePasswordInput::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ValidatePasswordInput, CallFunc_GetText_ReturnValue_1) == 0x000030, "Member 'BP_AccelByteRegisterWidget_C_ValidatePasswordInput::CallFunc_GetText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ValidatePasswordInput, CallFunc_Conv_TextToString_ReturnValue) == 0x000048, "Member 'BP_AccelByteRegisterWidget_C_ValidatePasswordInput::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ValidatePasswordInput, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000058, "Member 'BP_AccelByteRegisterWidget_C_ValidatePasswordInput::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ValidatePasswordInput, CallFunc_PasswordIsValid_Code) == 0x000068, "Member 'BP_AccelByteRegisterWidget_C_ValidatePasswordInput::CallFunc_PasswordIsValid_Code' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ValidatePasswordInput, CallFunc_PasswordIsValid_ReturnValue) == 0x00006C, "Member 'BP_AccelByteRegisterWidget_C_ValidatePasswordInput::CallFunc_PasswordIsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ValidatePasswordInput, CallFunc_Conv_IntToString_ReturnValue) == 0x000070, "Member 'BP_AccelByteRegisterWidget_C_ValidatePasswordInput::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_ValidatePasswordInput, K2Node_SwitchString_CmpSuccess) == 0x000080, "Member 'BP_AccelByteRegisterWidget_C_ValidatePasswordInput::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

// Function BP_AccelByteRegisterWidget.BP_AccelByteRegisterWidget_C.SetErrorMessageWithErrorCode
// 0x0010 (0x0010 - 0x0000)
struct BP_AccelByteRegisterWidget_C_SetErrorMessageWithErrorCode final
{
public:
	class UTextBlock*                             TextWidget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ErrorCode;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AccelByteRegisterWidget_C_SetErrorMessageWithErrorCode) == 0x000008, "Wrong alignment on BP_AccelByteRegisterWidget_C_SetErrorMessageWithErrorCode");
static_assert(sizeof(BP_AccelByteRegisterWidget_C_SetErrorMessageWithErrorCode) == 0x000010, "Wrong size on BP_AccelByteRegisterWidget_C_SetErrorMessageWithErrorCode");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_SetErrorMessageWithErrorCode, TextWidget) == 0x000000, "Member 'BP_AccelByteRegisterWidget_C_SetErrorMessageWithErrorCode::TextWidget' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_SetErrorMessageWithErrorCode, ErrorCode) == 0x000008, "Member 'BP_AccelByteRegisterWidget_C_SetErrorMessageWithErrorCode::ErrorCode' has a wrong offset!");
static_assert(offsetof(BP_AccelByteRegisterWidget_C_SetErrorMessageWithErrorCode, K2Node_SwitchInteger_CmpSuccess) == 0x00000C, "Member 'BP_AccelByteRegisterWidget_C_SetErrorMessageWithErrorCode::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

}

