#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ThumbsVoteBillboardComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "VoteState_structs.hpp"


namespace SDK::Params
{

// Function ThumbsVoteBillboardComponent.ThumbsVoteBillboardComponent_C.ExecuteUbergraph_ThumbsVoteBillboardComponent
// 0x0010 (0x0010 - 0x0000)
struct ThumbsVoteBillboardComponent_C_ExecuteUbergraph_ThumbsVoteBillboardComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ThumbsVoteBillboardComponent_C_ExecuteUbergraph_ThumbsVoteBillboardComponent) == 0x000004, "Wrong alignment on ThumbsVoteBillboardComponent_C_ExecuteUbergraph_ThumbsVoteBillboardComponent");
static_assert(sizeof(ThumbsVoteBillboardComponent_C_ExecuteUbergraph_ThumbsVoteBillboardComponent) == 0x000010, "Wrong size on ThumbsVoteBillboardComponent_C_ExecuteUbergraph_ThumbsVoteBillboardComponent");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_ExecuteUbergraph_ThumbsVoteBillboardComponent, EntryPoint) == 0x000000, "Member 'ThumbsVoteBillboardComponent_C_ExecuteUbergraph_ThumbsVoteBillboardComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_ExecuteUbergraph_ThumbsVoteBillboardComponent, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'ThumbsVoteBillboardComponent_C_ExecuteUbergraph_ThumbsVoteBillboardComponent::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_ExecuteUbergraph_ThumbsVoteBillboardComponent, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'ThumbsVoteBillboardComponent_C_ExecuteUbergraph_ThumbsVoteBillboardComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_ExecuteUbergraph_ThumbsVoteBillboardComponent, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'ThumbsVoteBillboardComponent_C_ExecuteUbergraph_ThumbsVoteBillboardComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ThumbsVoteBillboardComponent.ThumbsVoteBillboardComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct ThumbsVoteBillboardComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ThumbsVoteBillboardComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on ThumbsVoteBillboardComponent_C_ReceiveTick");
static_assert(sizeof(ThumbsVoteBillboardComponent_C_ReceiveTick) == 0x000004, "Wrong size on ThumbsVoteBillboardComponent_C_ReceiveTick");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'ThumbsVoteBillboardComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function ThumbsVoteBillboardComponent.ThumbsVoteBillboardComponent_C.SetTargetVisibility
// 0x0005 (0x0005 - 0x0000)
struct ThumbsVoteBillboardComponent_C_SetTargetVisibility final
{
public:
	VoteState::EVoteState                         Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ThumbsVoteBillboardComponent_C_SetTargetVisibility) == 0x000001, "Wrong alignment on ThumbsVoteBillboardComponent_C_SetTargetVisibility");
static_assert(sizeof(ThumbsVoteBillboardComponent_C_SetTargetVisibility) == 0x000005, "Wrong size on ThumbsVoteBillboardComponent_C_SetTargetVisibility");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_SetTargetVisibility, Temp_byte_Variable) == 0x000000, "Member 'ThumbsVoteBillboardComponent_C_SetTargetVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_SetTargetVisibility, Temp_bool_Variable) == 0x000001, "Member 'ThumbsVoteBillboardComponent_C_SetTargetVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_SetTargetVisibility, Temp_bool_Variable_1) == 0x000002, "Member 'ThumbsVoteBillboardComponent_C_SetTargetVisibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_SetTargetVisibility, Temp_bool_Variable_2) == 0x000003, "Member 'ThumbsVoteBillboardComponent_C_SetTargetVisibility::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_SetTargetVisibility, K2Node_Select_Default) == 0x000004, "Member 'ThumbsVoteBillboardComponent_C_SetTargetVisibility::K2Node_Select_Default' has a wrong offset!");

// Function ThumbsVoteBillboardComponent.ThumbsVoteBillboardComponent_C.SetTargetMaterial
// 0x0018 (0x0018 - 0x0000)
struct ThumbsVoteBillboardComponent_C_SetTargetMaterial final
{
public:
	VoteState::EVoteState                         Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterial*                              Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ThumbsVoteBillboardComponent_C_SetTargetMaterial) == 0x000008, "Wrong alignment on ThumbsVoteBillboardComponent_C_SetTargetMaterial");
static_assert(sizeof(ThumbsVoteBillboardComponent_C_SetTargetMaterial) == 0x000018, "Wrong size on ThumbsVoteBillboardComponent_C_SetTargetMaterial");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_SetTargetMaterial, Temp_byte_Variable) == 0x000000, "Member 'ThumbsVoteBillboardComponent_C_SetTargetMaterial::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_SetTargetMaterial, Temp_object_Variable) == 0x000008, "Member 'ThumbsVoteBillboardComponent_C_SetTargetMaterial::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_SetTargetMaterial, K2Node_Select_Default) == 0x000010, "Member 'ThumbsVoteBillboardComponent_C_SetTargetMaterial::K2Node_Select_Default' has a wrong offset!");

// Function ThumbsVoteBillboardComponent.ThumbsVoteBillboardComponent_C.Set Player State
// 0x0008 (0x0008 - 0x0000)
struct ThumbsVoteBillboardComponent_C_Set_Player_State final
{
public:
	class ASCTPlayerState*                        PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ThumbsVoteBillboardComponent_C_Set_Player_State) == 0x000008, "Wrong alignment on ThumbsVoteBillboardComponent_C_Set_Player_State");
static_assert(sizeof(ThumbsVoteBillboardComponent_C_Set_Player_State) == 0x000008, "Wrong size on ThumbsVoteBillboardComponent_C_Set_Player_State");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_Set_Player_State, PlayerState) == 0x000000, "Member 'ThumbsVoteBillboardComponent_C_Set_Player_State::PlayerState' has a wrong offset!");

// Function ThumbsVoteBillboardComponent.ThumbsVoteBillboardComponent_C.BindToCallbacks
// 0x0060 (0x0060 - 0x0000)
struct ThumbsVoteBillboardComponent_C_BindToCallbacks final
{
public:
	class UObject*                                CallFunc_GetGlobalObject_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetGlobalObject_ReturnValue_1;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOnPlayerDisconnected_C*                K2Node_DynamicCast_AsOn_Player_Disconnected;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOnPlayerConnected_C*                   K2Node_DynamicCast_AsOn_Player_Connected;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ASCTPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class ASCTPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(ThumbsVoteBillboardComponent_C_BindToCallbacks) == 0x000008, "Wrong alignment on ThumbsVoteBillboardComponent_C_BindToCallbacks");
static_assert(sizeof(ThumbsVoteBillboardComponent_C_BindToCallbacks) == 0x000060, "Wrong size on ThumbsVoteBillboardComponent_C_BindToCallbacks");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_BindToCallbacks, CallFunc_GetGlobalObject_ReturnValue) == 0x000000, "Member 'ThumbsVoteBillboardComponent_C_BindToCallbacks::CallFunc_GetGlobalObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_BindToCallbacks, CallFunc_GetGlobalObject_ReturnValue_1) == 0x000008, "Member 'ThumbsVoteBillboardComponent_C_BindToCallbacks::CallFunc_GetGlobalObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_BindToCallbacks, K2Node_DynamicCast_AsOn_Player_Disconnected) == 0x000010, "Member 'ThumbsVoteBillboardComponent_C_BindToCallbacks::K2Node_DynamicCast_AsOn_Player_Disconnected' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_BindToCallbacks, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ThumbsVoteBillboardComponent_C_BindToCallbacks::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_BindToCallbacks, K2Node_DynamicCast_AsOn_Player_Connected) == 0x000020, "Member 'ThumbsVoteBillboardComponent_C_BindToCallbacks::K2Node_DynamicCast_AsOn_Player_Connected' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_BindToCallbacks, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'ThumbsVoteBillboardComponent_C_BindToCallbacks::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_BindToCallbacks, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'ThumbsVoteBillboardComponent_C_BindToCallbacks::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_BindToCallbacks, K2Node_CreateDelegate_OutputDelegate_1) == 0x00003C, "Member 'ThumbsVoteBillboardComponent_C_BindToCallbacks::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_BindToCallbacks, K2Node_CreateDelegate_OutputDelegate_2) == 0x00004C, "Member 'ThumbsVoteBillboardComponent_C_BindToCallbacks::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function ThumbsVoteBillboardComponent.ThumbsVoteBillboardComponent_C.QueryAllPlayerScores
// 0x0050 (0x0050 - 0x0000)
struct ThumbsVoteBillboardComponent_C_QueryAllPlayerScores final
{
public:
	int32                                         HighestScore;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LowestScore;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lowest;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Highest;                                           // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVoteScore_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCTPlayerState*                        K2Node_DynamicCast_AsSCTPlayer_State;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetVoteScore_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ThumbsVoteBillboardComponent_C_QueryAllPlayerScores) == 0x000008, "Wrong alignment on ThumbsVoteBillboardComponent_C_QueryAllPlayerScores");
static_assert(sizeof(ThumbsVoteBillboardComponent_C_QueryAllPlayerScores) == 0x000050, "Wrong size on ThumbsVoteBillboardComponent_C_QueryAllPlayerScores");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_QueryAllPlayerScores, HighestScore) == 0x000000, "Member 'ThumbsVoteBillboardComponent_C_QueryAllPlayerScores::HighestScore' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_QueryAllPlayerScores, LowestScore) == 0x000004, "Member 'ThumbsVoteBillboardComponent_C_QueryAllPlayerScores::LowestScore' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_QueryAllPlayerScores, Lowest) == 0x000008, "Member 'ThumbsVoteBillboardComponent_C_QueryAllPlayerScores::Lowest' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_QueryAllPlayerScores, Highest) == 0x00000C, "Member 'ThumbsVoteBillboardComponent_C_QueryAllPlayerScores::Highest' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_QueryAllPlayerScores, Temp_int_Array_Index_Variable) == 0x000010, "Member 'ThumbsVoteBillboardComponent_C_QueryAllPlayerScores::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_QueryAllPlayerScores, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'ThumbsVoteBillboardComponent_C_QueryAllPlayerScores::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_QueryAllPlayerScores, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'ThumbsVoteBillboardComponent_C_QueryAllPlayerScores::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_QueryAllPlayerScores, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'ThumbsVoteBillboardComponent_C_QueryAllPlayerScores::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_QueryAllPlayerScores, CallFunc_GetVoteScore_ReturnValue) == 0x000028, "Member 'ThumbsVoteBillboardComponent_C_QueryAllPlayerScores::CallFunc_GetVoteScore_ReturnValue' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_QueryAllPlayerScores, CallFunc_Array_Get_Item) == 0x000030, "Member 'ThumbsVoteBillboardComponent_C_QueryAllPlayerScores::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_QueryAllPlayerScores, K2Node_DynamicCast_AsSCTPlayer_State) == 0x000038, "Member 'ThumbsVoteBillboardComponent_C_QueryAllPlayerScores::K2Node_DynamicCast_AsSCTPlayer_State' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_QueryAllPlayerScores, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'ThumbsVoteBillboardComponent_C_QueryAllPlayerScores::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_QueryAllPlayerScores, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'ThumbsVoteBillboardComponent_C_QueryAllPlayerScores::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_QueryAllPlayerScores, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000042, "Member 'ThumbsVoteBillboardComponent_C_QueryAllPlayerScores::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_QueryAllPlayerScores, CallFunc_GetVoteScore_ReturnValue_1) == 0x000044, "Member 'ThumbsVoteBillboardComponent_C_QueryAllPlayerScores::CallFunc_GetVoteScore_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_QueryAllPlayerScores, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'ThumbsVoteBillboardComponent_C_QueryAllPlayerScores::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_QueryAllPlayerScores, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'ThumbsVoteBillboardComponent_C_QueryAllPlayerScores::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_QueryAllPlayerScores, CallFunc_Less_IntInt_ReturnValue_1) == 0x00004D, "Member 'ThumbsVoteBillboardComponent_C_QueryAllPlayerScores::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_QueryAllPlayerScores, CallFunc_Greater_IntInt_ReturnValue) == 0x00004E, "Member 'ThumbsVoteBillboardComponent_C_QueryAllPlayerScores::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function ThumbsVoteBillboardComponent.ThumbsVoteBillboardComponent_C.UpdateState
// 0x0018 (0x0018 - 0x0000)
struct ThumbsVoteBillboardComponent_C_UpdateState final
{
public:
	int32                                         Lowest;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Highest;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVoteScore_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_QueryAllPlayerScores_HighestScore;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_QueryAllPlayerScores_LowestScore;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ThumbsVoteBillboardComponent_C_UpdateState) == 0x000004, "Wrong alignment on ThumbsVoteBillboardComponent_C_UpdateState");
static_assert(sizeof(ThumbsVoteBillboardComponent_C_UpdateState) == 0x000018, "Wrong size on ThumbsVoteBillboardComponent_C_UpdateState");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_UpdateState, Lowest) == 0x000000, "Member 'ThumbsVoteBillboardComponent_C_UpdateState::Lowest' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_UpdateState, Highest) == 0x000004, "Member 'ThumbsVoteBillboardComponent_C_UpdateState::Highest' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_UpdateState, CallFunc_GetVoteScore_ReturnValue) == 0x000008, "Member 'ThumbsVoteBillboardComponent_C_UpdateState::CallFunc_GetVoteScore_ReturnValue' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_UpdateState, CallFunc_QueryAllPlayerScores_HighestScore) == 0x00000C, "Member 'ThumbsVoteBillboardComponent_C_UpdateState::CallFunc_QueryAllPlayerScores_HighestScore' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_UpdateState, CallFunc_QueryAllPlayerScores_LowestScore) == 0x000010, "Member 'ThumbsVoteBillboardComponent_C_UpdateState::CallFunc_QueryAllPlayerScores_LowestScore' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_UpdateState, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000014, "Member 'ThumbsVoteBillboardComponent_C_UpdateState::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_UpdateState, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000015, "Member 'ThumbsVoteBillboardComponent_C_UpdateState::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_UpdateState, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000016, "Member 'ThumbsVoteBillboardComponent_C_UpdateState::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function ThumbsVoteBillboardComponent.ThumbsVoteBillboardComponent_C.OnConnected
// 0x0018 (0x0018 - 0x0000)
struct ThumbsVoteBillboardComponent_C_OnConnected final
{
public:
	class ASCTPlayerState*                        PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(ThumbsVoteBillboardComponent_C_OnConnected) == 0x000008, "Wrong alignment on ThumbsVoteBillboardComponent_C_OnConnected");
static_assert(sizeof(ThumbsVoteBillboardComponent_C_OnConnected) == 0x000018, "Wrong size on ThumbsVoteBillboardComponent_C_OnConnected");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_OnConnected, PlayerState) == 0x000000, "Member 'ThumbsVoteBillboardComponent_C_OnConnected::PlayerState' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_OnConnected, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'ThumbsVoteBillboardComponent_C_OnConnected::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function ThumbsVoteBillboardComponent.ThumbsVoteBillboardComponent_C.OnDisconnected
// 0x0008 (0x0008 - 0x0000)
struct ThumbsVoteBillboardComponent_C_OnDisconnected final
{
public:
	class ASCTPlayerState*                        PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ThumbsVoteBillboardComponent_C_OnDisconnected) == 0x000008, "Wrong alignment on ThumbsVoteBillboardComponent_C_OnDisconnected");
static_assert(sizeof(ThumbsVoteBillboardComponent_C_OnDisconnected) == 0x000008, "Wrong size on ThumbsVoteBillboardComponent_C_OnDisconnected");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_OnDisconnected, PlayerState) == 0x000000, "Member 'ThumbsVoteBillboardComponent_C_OnDisconnected::PlayerState' has a wrong offset!");

// Function ThumbsVoteBillboardComponent.ThumbsVoteBillboardComponent_C.CacheNameWidth
// 0x0010 (0x0010 - 0x0000)
struct ThumbsVoteBillboardComponent_C_CacheNameWidth final
{
public:
	float                                         TextWidth;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CanvasWidth;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ThumbsVoteBillboardComponent_C_CacheNameWidth) == 0x000004, "Wrong alignment on ThumbsVoteBillboardComponent_C_CacheNameWidth");
static_assert(sizeof(ThumbsVoteBillboardComponent_C_CacheNameWidth) == 0x000010, "Wrong size on ThumbsVoteBillboardComponent_C_CacheNameWidth");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_CacheNameWidth, TextWidth) == 0x000000, "Member 'ThumbsVoteBillboardComponent_C_CacheNameWidth::TextWidth' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_CacheNameWidth, CanvasWidth) == 0x000004, "Member 'ThumbsVoteBillboardComponent_C_CacheNameWidth::CanvasWidth' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_CacheNameWidth, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'ThumbsVoteBillboardComponent_C_CacheNameWidth::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_CacheNameWidth, K2Node_MathExpression_ReturnValue) == 0x00000C, "Member 'ThumbsVoteBillboardComponent_C_CacheNameWidth::K2Node_MathExpression_ReturnValue' has a wrong offset!");

// Function ThumbsVoteBillboardComponent.ThumbsVoteBillboardComponent_C.SetTargetPosition
// 0x00F0 (0x00F0 - 0x0000)
struct ThumbsVoteBillboardComponent_C_SetTargetPosition final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTransformedRightVector_ReturnValue;    // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMaterialSpriteElement                 CallFunc_Array_Get_Item;                           // 0x0020(0x0028)(NoDestructor)
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0064(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ThumbsVoteBillboardComponent_C_SetTargetPosition) == 0x000008, "Wrong alignment on ThumbsVoteBillboardComponent_C_SetTargetPosition");
static_assert(sizeof(ThumbsVoteBillboardComponent_C_SetTargetPosition) == 0x0000F0, "Wrong size on ThumbsVoteBillboardComponent_C_SetTargetPosition");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_SetTargetPosition, Temp_bool_Variable) == 0x000000, "Member 'ThumbsVoteBillboardComponent_C_SetTargetPosition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_SetTargetPosition, Temp_struct_Variable) == 0x000004, "Member 'ThumbsVoteBillboardComponent_C_SetTargetPosition::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_SetTargetPosition, CallFunc_GetTransformedRightVector_ReturnValue) == 0x000010, "Member 'ThumbsVoteBillboardComponent_C_SetTargetPosition::CallFunc_GetTransformedRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_SetTargetPosition, CallFunc_Array_Get_Item) == 0x000020, "Member 'ThumbsVoteBillboardComponent_C_SetTargetPosition::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_SetTargetPosition, K2Node_MathExpression_ReturnValue) == 0x000048, "Member 'ThumbsVoteBillboardComponent_C_SetTargetPosition::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_SetTargetPosition, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00004C, "Member 'ThumbsVoteBillboardComponent_C_SetTargetPosition::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_SetTargetPosition, K2Node_Select_Default) == 0x000058, "Member 'ThumbsVoteBillboardComponent_C_SetTargetPosition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_SetTargetPosition, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000064, "Member 'ThumbsVoteBillboardComponent_C_SetTargetPosition::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function ThumbsVoteBillboardComponent.ThumbsVoteBillboardComponent_C.CheckIsLocalPlayer
// 0x0010 (0x0010 - 0x0000)
struct ThumbsVoteBillboardComponent_C_CheckIsLocalPlayer final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ThumbsVoteBillboardComponent_C_CheckIsLocalPlayer) == 0x000008, "Wrong alignment on ThumbsVoteBillboardComponent_C_CheckIsLocalPlayer");
static_assert(sizeof(ThumbsVoteBillboardComponent_C_CheckIsLocalPlayer) == 0x000010, "Wrong size on ThumbsVoteBillboardComponent_C_CheckIsLocalPlayer");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_CheckIsLocalPlayer, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'ThumbsVoteBillboardComponent_C_CheckIsLocalPlayer::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_CheckIsLocalPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000008, "Member 'ThumbsVoteBillboardComponent_C_CheckIsLocalPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function ThumbsVoteBillboardComponent.ThumbsVoteBillboardComponent_C.GetTransformedRightVector
// 0x0058 (0x0058 - 0x0000)
struct ThumbsVoteBillboardComponent_C_GetTransformedRightVector final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ThumbsVoteBillboardComponent_C_GetTransformedRightVector) == 0x000008, "Wrong alignment on ThumbsVoteBillboardComponent_C_GetTransformedRightVector");
static_assert(sizeof(ThumbsVoteBillboardComponent_C_GetTransformedRightVector) == 0x000058, "Wrong size on ThumbsVoteBillboardComponent_C_GetTransformedRightVector");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_GetTransformedRightVector, ReturnValue) == 0x000000, "Member 'ThumbsVoteBillboardComponent_C_GetTransformedRightVector::ReturnValue' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_GetTransformedRightVector, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000010, "Member 'ThumbsVoteBillboardComponent_C_GetTransformedRightVector::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_GetTransformedRightVector, CallFunc_GetActorForwardVector_ReturnValue) == 0x000018, "Member 'ThumbsVoteBillboardComponent_C_GetTransformedRightVector::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_GetTransformedRightVector, CallFunc_BreakVector_X) == 0x000024, "Member 'ThumbsVoteBillboardComponent_C_GetTransformedRightVector::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_GetTransformedRightVector, CallFunc_BreakVector_Y) == 0x000028, "Member 'ThumbsVoteBillboardComponent_C_GetTransformedRightVector::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_GetTransformedRightVector, CallFunc_BreakVector_Z) == 0x00002C, "Member 'ThumbsVoteBillboardComponent_C_GetTransformedRightVector::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_GetTransformedRightVector, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'ThumbsVoteBillboardComponent_C_GetTransformedRightVector::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_GetTransformedRightVector, CallFunc_Normal_ReturnValue) == 0x00003C, "Member 'ThumbsVoteBillboardComponent_C_GetTransformedRightVector::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_GetTransformedRightVector, CallFunc_Cross_VectorVector_ReturnValue) == 0x000048, "Member 'ThumbsVoteBillboardComponent_C_GetTransformedRightVector::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");

// Function ThumbsVoteBillboardComponent.ThumbsVoteBillboardComponent_C.GetVoteScore
// 0x0010 (0x0010 - 0x0000)
struct ThumbsVoteBillboardComponent_C_GetVoteScore final
{
public:
	class ASCTPlayerState*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ThumbsVoteBillboardComponent_C_GetVoteScore) == 0x000008, "Wrong alignment on ThumbsVoteBillboardComponent_C_GetVoteScore");
static_assert(sizeof(ThumbsVoteBillboardComponent_C_GetVoteScore) == 0x000010, "Wrong size on ThumbsVoteBillboardComponent_C_GetVoteScore");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_GetVoteScore, Target) == 0x000000, "Member 'ThumbsVoteBillboardComponent_C_GetVoteScore::Target' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_GetVoteScore, ReturnValue) == 0x000008, "Member 'ThumbsVoteBillboardComponent_C_GetVoteScore::ReturnValue' has a wrong offset!");
static_assert(offsetof(ThumbsVoteBillboardComponent_C_GetVoteScore, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'ThumbsVoteBillboardComponent_C_GetVoteScore::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

}

