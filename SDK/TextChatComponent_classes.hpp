#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TextChatComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass TextChatComponent.TextChatComponent_C
// 0x0018 (0x00C8 - 0x00B0)
class UTextChatComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UTextChatWindowWI_C*                    ChatWidget;                                        // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MessageCutoffDistance;                             // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_TextChatComponent(int32 EntryPoint);
	void ReceiveMessageMulticast(uint8 Channel, class ASCTPlayerState* Player_State, const class FText& Message);
	void SendMessageServer(class APlayerController* Controller, uint8 Channel, const class FText& Message);
	void Start_Typing_In_All_Chat();
	void Start_Typing_In_Personoid_Chat();
	void EndTyping();
	void Try_All_Message(class UTextChatWindowWI_C* ChatWidget_0, class ASCTPlayerState* Player_State, const class FText& TextMessage, uint8 Channel);
	void TryPersonoidMessage(class UTextChatWindowWI_C* ChatWidget_0, class ASCTPlayerState* Player_State, const class FText& TextMessage, uint8 Channel);
	void TryRoombaMessage(class UTextChatWindowWI_C* ChatWidget_0, class ASCTPlayerState* Player_State, const class FText& TextMessage, uint8 Channel);
	void TryEndgameMessage(class UTextChatWindowWI_C* ChatWidget_0, class ASCTPlayerState* Player_State, const class FText& TextMessage, uint8 Channel);
	void AddTextChatWindowWidgetToUI();
	void CreateTextChatWindowIfNoneExists();

	bool IsPlayerWithinTextingRange(class APlayerState* Player_State) const;
	bool IsPlayerAlive(class ASCTPlayerState* PlayerState) const;
	class FText Construct_Text_Message(class APlayerState* PlayerState, const class FText& MessageText, uint8 Channel) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TextChatComponent_C">();
	}
	static class UTextChatComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTextChatComponent_C>();
	}
};
static_assert(alignof(UTextChatComponent_C) == 0x000008, "Wrong alignment on UTextChatComponent_C");
static_assert(sizeof(UTextChatComponent_C) == 0x0000C8, "Wrong size on UTextChatComponent_C");
static_assert(offsetof(UTextChatComponent_C, UberGraphFrame) == 0x0000B0, "Member 'UTextChatComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTextChatComponent_C, ChatWidget) == 0x0000B8, "Member 'UTextChatComponent_C::ChatWidget' has a wrong offset!");
static_assert(offsetof(UTextChatComponent_C, MessageCutoffDistance) == 0x0000C0, "Member 'UTextChatComponent_C::MessageCutoffDistance' has a wrong offset!");

}

