#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemTooltip

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "SCT_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_ItemTooltip.BP_ItemTooltip_C
// 0x00F8 (0x0358 - 0x0260)
class UBP_ItemTooltip_C final : public UUserWidget
{
public:
	class UTextBlock*                             AchievementDescription;                            // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Border;                                            // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCM_ClickableSubTitleWI_C*              ButtonIcon;                                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CategoryText;                                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Container;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ExclusiveText;                                     // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_83;                                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_108;                                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ItemStatus;                                        // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             LevelText;                                         // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             QualityText;                                       // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 StatusIcon;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_2;                                       // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        TypeSwitcher;                                      // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         UnlockType;                                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture2D*                             StatusTexture;                                     // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2DDynamic*                      StatusTextureDynamic;                              // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Description;                                       // 0x02F8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 EntitlementCode;                                   // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 AchievementCode;                                   // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         UnlockLevel;                                       // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Equipped;                                          // 0x0334(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Unlocked;                                          // 0x0335(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EItemQuality                                  Quality;                                           // 0x0336(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_337[0x1];                                      // 0x0337(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           QualityColor;                                      // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Sku;                                               // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void Set_Variables(class UBP_ItemCard_C* ItemCard);
	void SetCharacterVariables(class UBP_ItemCard_C* ItemCard, uint8 CategoryAsByte);
	void SetVruumbaVariables(class UBP_ItemCard_C* ItemCard, uint8 CategoryAsByte);
	void SetTexture(class UTexture2D* Texture, class UTexture2DDynamic* TextureDynamic);
	void Set_QualityText();
	void SetEquippedStatus();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ItemTooltip_C">();
	}
	static class UBP_ItemTooltip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ItemTooltip_C>();
	}
};
static_assert(alignof(UBP_ItemTooltip_C) == 0x000008, "Wrong alignment on UBP_ItemTooltip_C");
static_assert(sizeof(UBP_ItemTooltip_C) == 0x000358, "Wrong size on UBP_ItemTooltip_C");
static_assert(offsetof(UBP_ItemTooltip_C, AchievementDescription) == 0x000260, "Member 'UBP_ItemTooltip_C::AchievementDescription' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, Border) == 0x000268, "Member 'UBP_ItemTooltip_C::Border' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, ButtonIcon) == 0x000270, "Member 'UBP_ItemTooltip_C::ButtonIcon' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, CategoryText) == 0x000278, "Member 'UBP_ItemTooltip_C::CategoryText' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, Container) == 0x000280, "Member 'UBP_ItemTooltip_C::Container' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, ExclusiveText) == 0x000288, "Member 'UBP_ItemTooltip_C::ExclusiveText' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, Image) == 0x000290, "Member 'UBP_ItemTooltip_C::Image' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, Image_1) == 0x000298, "Member 'UBP_ItemTooltip_C::Image_1' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, Image_83) == 0x0002A0, "Member 'UBP_ItemTooltip_C::Image_83' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, Image_108) == 0x0002A8, "Member 'UBP_ItemTooltip_C::Image_108' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, ItemStatus) == 0x0002B0, "Member 'UBP_ItemTooltip_C::ItemStatus' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, LevelText) == 0x0002B8, "Member 'UBP_ItemTooltip_C::LevelText' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, QualityText) == 0x0002C0, "Member 'UBP_ItemTooltip_C::QualityText' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, StatusIcon) == 0x0002C8, "Member 'UBP_ItemTooltip_C::StatusIcon' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, TextBlock_2) == 0x0002D0, "Member 'UBP_ItemTooltip_C::TextBlock_2' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, TypeSwitcher) == 0x0002D8, "Member 'UBP_ItemTooltip_C::TypeSwitcher' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, UnlockType) == 0x0002E0, "Member 'UBP_ItemTooltip_C::UnlockType' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, StatusTexture) == 0x0002E8, "Member 'UBP_ItemTooltip_C::StatusTexture' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, StatusTextureDynamic) == 0x0002F0, "Member 'UBP_ItemTooltip_C::StatusTextureDynamic' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, Description) == 0x0002F8, "Member 'UBP_ItemTooltip_C::Description' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, EntitlementCode) == 0x000310, "Member 'UBP_ItemTooltip_C::EntitlementCode' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, AchievementCode) == 0x000320, "Member 'UBP_ItemTooltip_C::AchievementCode' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, UnlockLevel) == 0x000330, "Member 'UBP_ItemTooltip_C::UnlockLevel' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, Equipped) == 0x000334, "Member 'UBP_ItemTooltip_C::Equipped' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, Unlocked) == 0x000335, "Member 'UBP_ItemTooltip_C::Unlocked' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, Quality) == 0x000336, "Member 'UBP_ItemTooltip_C::Quality' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, QualityColor) == 0x000338, "Member 'UBP_ItemTooltip_C::QualityColor' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_C, Sku) == 0x000348, "Member 'UBP_ItemTooltip_C::Sku' has a wrong offset!");

}

