#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HatPickup

#include "Basic.hpp"

#include "HatPickup_classes.hpp"
#include "HatPickup_parameters.hpp"


namespace SDK
{

// Function HatPickup.HatPickup_C.UpdatedScore__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AHatPickup_C::UpdatedScore__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HatPickup_C", "UpdatedScore__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HatPickup.HatPickup_C.ExecuteUbergraph_HatPickup
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHatPickup_C::ExecuteUbergraph_HatPickup(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HatPickup_C", "ExecuteUbergraph_HatPickup");

	Params::HatPickup_C_ExecuteUbergraph_HatPickup Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HatPickup.HatPickup_C.POI visible first time
// (BlueprintCallable, BlueprintEvent)

void AHatPickup_C::POI_visible_first_time()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HatPickup_C", "POI visible first time");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HatPickup.HatPickup_C.POI visible
// (BlueprintCallable, BlueprintEvent)

void AHatPickup_C::POI_visible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HatPickup_C", "POI visible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HatPickup.HatPickup_C.Widget Update Holder
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AHatPickup_C::Widget_Update_Holder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HatPickup_C", "Widget Update Holder");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HatPickup.HatPickup_C.Audio Pickup Flag
// (BlueprintCallable, BlueprintEvent)

void AHatPickup_C::Audio_Pickup_Flag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HatPickup_C", "Audio Pickup Flag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HatPickup.HatPickup_C.UpdateEndScore
// (BlueprintCallable, BlueprintEvent)

void AHatPickup_C::UpdateEndScore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HatPickup_C", "UpdateEndScore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HatPickup.HatPickup_C.Picked up
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AHatPickup_C::Picked_up()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HatPickup_C", "Picked up");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HatPickup.HatPickup_C.Stop timers
// (BlueprintCallable, BlueprintEvent)

void AHatPickup_C::Stop_timers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HatPickup_C", "Stop timers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HatPickup.HatPickup_C.Pick up flag
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void AHatPickup_C::Pick_up_flag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HatPickup_C", "Pick up flag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HatPickup.HatPickup_C.UpdateScore
// (BlueprintCallable, BlueprintEvent)

void AHatPickup_C::UpdateScore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HatPickup_C", "UpdateScore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HatPickup.HatPickup_C.BndEvt__Radius_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AHatPickup_C::BndEvt__Radius_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HatPickup_C", "BndEvt__Radius_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::HatPickup_C_BndEvt__Radius_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HatPickup.HatPickup_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AHatPickup_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HatPickup_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HatPickup.HatPickup_C.Check for new flagholder
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          NewFlagHolder                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewHolder                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHatPickup_C::Check_for_new_flagholder(class UObject* NewFlagHolder, bool* NewHolder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HatPickup_C", "Check for new flagholder");

	Params::HatPickup_C_Check_for_new_flagholder Parms{};

	Parms.NewFlagHolder = NewFlagHolder;

	UObject::ProcessEvent(Func, &Parms);

	if (NewHolder != nullptr)
		*NewHolder = Parms.NewHolder;
}


// Function HatPickup.HatPickup_C.OnRep_RoombaHolder
// (BlueprintCallable, BlueprintEvent)

void AHatPickup_C::OnRep_RoombaHolder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HatPickup_C", "OnRep_RoombaHolder");

	UObject::ProcessEvent(Func, nullptr);
}

}

