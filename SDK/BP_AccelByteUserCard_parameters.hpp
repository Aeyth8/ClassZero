#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AccelByteUserCard

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "SlateCore_structs.hpp"
#include "AccelByteUe4Sdk_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SCT_structs.hpp"


namespace SDK::Params
{

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.ExecuteUbergraph_BP_AccelByteUserCard
// 0x0690 (0x0690 - 0x0000)
struct BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_FriendId_3;                     // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Message_16;                     // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& FriendId, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 Temp_string_Variable;                              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Message_15;                     // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 K2Node_CustomEvent_FriendId_2;                     // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Message_14;                     // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& FriendId, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 Temp_string_Variable_2;                            // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Message_13;                     // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 K2Node_CustomEvent_FriendId_1;                     // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Message_12;                     // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& FriendId, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0108(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 Temp_string_Variable_4;                            // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_PlayerId_1;                     // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& PlayerId)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0148(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 K2Node_CustomEvent_PlayerId;                       // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& PlayerId)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0168(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 Temp_string_Variable_6;                            // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0188(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 K2Node_CustomEvent_Message_11;                     // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_FriendId;                       // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Message_10;                     // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& FriendId, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x01C8(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 Temp_string_Variable_7;                            // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_8;                            // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x01F8(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0208(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	struct FFCTPlatformPlayerInfo                 K2Node_CustomEvent_PlatformInfo_1;                 // 0x0218(0x0020)()
	int32                                         K2Node_CustomEvent_Code_9;                         // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Message_9;                      // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const struct FFCTPlatformPlayerInfo& PlatformInfo, int32 Code, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x0250(0x0010)(ZeroConstructor, NoDestructor)
	struct FFCTPlatformPlayerInfo                 K2Node_CustomEvent_PlatformInfo;                   // 0x0260(0x0020)()
	int32                                         K2Node_CustomEvent_Code_8;                         // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Message_8;                      // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const struct FFCTPlatformPlayerInfo& PlatformInfo, int32 Code, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_10;           // 0x0298(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 Temp_string_Variable_9;                            // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFCTPlatformPlayerInfo                 Temp_struct_Variable_1;                            // 0x02C0(0x0020)()
	TDelegate<void(int32 Code, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x02E0(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_Code_7;                         // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Message_7;                      // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code_6;                         // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Message_6;                      // 0x0310(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(int32 Code, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_12;           // 0x0320(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_Code_5;                         // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Message_5;                      // 0x0338(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(int32 Code, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_13;           // 0x0348(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 Temp_string_Variable_10;                           // 0x0358(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAccelByteModelsListBlockedUserResponse K2Node_CustomEvent_Payload_1;                      // 0x0370(0x0010)()
	class FString                                 K2Node_CustomEvent_Message_4;                      // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code_4;                         // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FAccelByteModelsListBlockedUserResponse& Payload, const class FString& Message, int32 Code)> K2Node_CreateDelegate_OutputDelegate_14;           // 0x0394(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAccelByteModelsListBlockedUserResponse K2Node_CustomEvent_Payload;                        // 0x03A8(0x0010)()
	class FString                                 K2Node_CustomEvent_Message_3;                      // 0x03B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code_3;                         // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FAccelByteModelsListBlockedUserResponse& Payload, const class FString& Message, int32 Code)> K2Node_CreateDelegate_OutputDelegate_15;           // 0x03CC(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable_2;                               // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_11;                           // 0x03E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAccelByteModelsListBlockedUserResponse Temp_struct_Variable_2;                            // 0x03F0(0x0010)()
	class UFCTGetBlockedPlayerListCallbackProxy*  CallFunc_GetBlockedPlayerList_ReturnValue;         // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409[0x3];                                      // 0x0409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Code, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_16;           // 0x0410(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_Code_2;                         // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Message_2;                      // 0x0428(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Code_1;                         // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Message_1;                      // 0x0440(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(int32 Code, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_17;           // 0x0450(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_Code;                           // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Message;                        // 0x0468(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(int32 Code, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_18;           // 0x0478(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 Temp_string_Variable_12;                           // 0x0488(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x049C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49D[0x3];                                      // 0x049D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_19;           // 0x04A0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B2[0x6];                                      // 0x04B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_FriendId_4;                     // 0x04C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Message_18;                     // 0x04D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_AccelByteUserCard_C*                K2Node_DynamicCast_AsBP_Accel_Byte_User_Card;      // 0x04E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFCTFriendManagementAsyncProxy*         CallFunc_InviteFriend_ReturnValue;                 // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F9[0x7];                                      // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFCTFriendManagementAsyncProxy*         CallFunc_CancelInviteFriend_ReturnValue;           // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& FriendId, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_20;           // 0x0508(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_519[0x7];                                      // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFCTFriendManagementAsyncProxy*         CallFunc_AcceptInviteFriend_ReturnValue;           // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFCTFriendManagementAsyncProxy*         CallFunc_RejectInviteFriend_ReturnValue;           // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0531(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_532[0x6];                                      // 0x0532(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AccelByteFriends_C*                 K2Node_DynamicCast_AsBP_Accel_Byte_Friends;        // 0x0538(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AccelByteFriends_C*                 K2Node_DynamicCast_AsBP_Accel_Byte_Friends_1;      // 0x0548(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_551[0x7];                                      // 0x0551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AccelByteFriends_C*                 K2Node_DynamicCast_AsBP_Accel_Byte_Friends_2;      // 0x0558(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_561[0x7];                                      // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AccelByteFriends_C*                 K2Node_DynamicCast_AsBP_Accel_Byte_Friends_3;      // 0x0568(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_571[0x7];                                      // 0x0571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFCTPartyManagementCallbackProxy*       CallFunc_InviteUserToParty_ReturnValue;            // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFCTFriendManagementAsyncProxy*         CallFunc_RemoveFriend_ReturnValue;                 // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0589(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_58A[0x6];                                      // 0x058A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AccelByteFriends_C*                 K2Node_DynamicCast_AsBP_Accel_Byte_Friends_4;      // 0x0590(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_599[0x7];                                      // 0x0599(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_SpawnAkComponentAtLocation_ReturnValue;   // 0x05A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Message_19;                     // 0x05A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x05BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x05C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C5[0x3];                                      // 0x05C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlockedData                           CallFunc_Array_Get_Item;                           // 0x05C8(0x0010)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent_2;                       // 0x05DC(0x0008)(NoDestructor)
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x05E4(0x0008)(NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x05EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x05ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x05EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue;              // 0x05EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x05F0(0x0008)(NoDestructor)
	class FString                                 K2Node_CustomEvent_Message_17;                     // 0x05F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_21;           // 0x0608(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0619(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61A[0x6];                                      // 0x061A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFCTGetUserPlatformInfoCallbackProxy*   CallFunc_GetUserPlatformInfo_ReturnValue;          // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_629[0x3];                                      // 0x0629(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_22;           // 0x062C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_63C[0x4];                                      // 0x063C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFCTAccelByteBlockPlayerCallbackProxy*  CallFunc_BlockPlayer_ReturnValue;                  // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFCTAccelByteUnblockPlayerCallbackProxy* CallFunc_UnblockPlayer_ReturnValue;                // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0659(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65A[0x6];                                      // 0x065A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_13;                           // 0x0660(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_14;                           // 0x0670(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0681(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsXboxPlatform_ReturnValue;               // 0x0682(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWinGDKPlatform_ReturnValue;             // 0x0683(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0684(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsXboxPlatform_ReturnValue_1;             // 0x0685(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWinGDKPlatform_ReturnValue_1;           // 0x0686(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0687(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x0689(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_3;          // 0x068A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x068B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x068C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x068D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard");
static_assert(sizeof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard) == 0x000690, "Wrong size on BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, EntryPoint) == 0x000000, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_FriendId_3) == 0x000008, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_FriendId_3' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Message_16) == 0x000018, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Message_16' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_string_Variable) == 0x000038, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_string_Variable_1) == 0x000048, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Message_15) == 0x000058, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Message_15' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CreateDelegate_OutputDelegate_1) == 0x000068, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_FriendId_2) == 0x000078, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_FriendId_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Message_14) == 0x000088, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Message_14' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CreateDelegate_OutputDelegate_2) == 0x000098, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_string_Variable_2) == 0x0000A8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_string_Variable_3) == 0x0000B8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Message_13) == 0x0000C8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Message_13' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000D8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_FriendId_1) == 0x0000E8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_FriendId_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Message_12) == 0x0000F8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Message_12' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CreateDelegate_OutputDelegate_4) == 0x000108, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_string_Variable_4) == 0x000118, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_string_Variable_5) == 0x000128, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_PlayerId_1) == 0x000138, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_PlayerId_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CreateDelegate_OutputDelegate_5) == 0x000148, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_PlayerId) == 0x000158, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_PlayerId' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CreateDelegate_OutputDelegate_6) == 0x000168, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_string_Variable_6) == 0x000178, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CreateDelegate_OutputDelegate_7) == 0x000188, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Message_11) == 0x000198, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Message_11' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_FriendId) == 0x0001A8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_FriendId' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Message_10) == 0x0001B8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Message_10' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CreateDelegate_OutputDelegate_8) == 0x0001C8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_string_Variable_7) == 0x0001D8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_string_Variable_8) == 0x0001E8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_string_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_struct_Variable) == 0x0001F8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_delegate_Variable) == 0x000208, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_PlatformInfo_1) == 0x000218, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_PlatformInfo_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Code_9) == 0x000238, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Code_9' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Message_9) == 0x000240, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Message_9' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CreateDelegate_OutputDelegate_9) == 0x000250, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_PlatformInfo) == 0x000260, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_PlatformInfo' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Code_8) == 0x000280, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Code_8' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Message_8) == 0x000288, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Message_8' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CreateDelegate_OutputDelegate_10) == 0x000298, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_string_Variable_9) == 0x0002A8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_string_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_int_Variable) == 0x0002B8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_struct_Variable_1) == 0x0002C0, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CreateDelegate_OutputDelegate_11) == 0x0002E0, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Code_7) == 0x0002F0, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Code_7' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Message_7) == 0x0002F8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Message_7' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Code_6) == 0x000308, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Code_6' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Message_6) == 0x000310, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Message_6' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CreateDelegate_OutputDelegate_12) == 0x000320, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Code_5) == 0x000330, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Code_5' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Message_5) == 0x000338, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Message_5' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CreateDelegate_OutputDelegate_13) == 0x000348, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_string_Variable_10) == 0x000358, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_string_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_int_Variable_1) == 0x000368, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Payload_1) == 0x000370, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Payload_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Message_4) == 0x000380, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Message_4' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Code_4) == 0x000390, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Code_4' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CreateDelegate_OutputDelegate_14) == 0x000394, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Payload) == 0x0003A8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Message_3) == 0x0003B8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Message_3' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Code_3) == 0x0003C8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Code_3' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CreateDelegate_OutputDelegate_15) == 0x0003CC, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_int_Variable_2) == 0x0003DC, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_string_Variable_11) == 0x0003E0, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_string_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_struct_Variable_2) == 0x0003F0, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_GetBlockedPlayerList_ReturnValue) == 0x000400, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_GetBlockedPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_IsValid_ReturnValue) == 0x000408, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_Array_Length_ReturnValue) == 0x00040C, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CreateDelegate_OutputDelegate_16) == 0x000410, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Code_2) == 0x000420, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Code_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Message_2) == 0x000428, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Message_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Code_1) == 0x000438, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Code_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Message_1) == 0x000440, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Message_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CreateDelegate_OutputDelegate_17) == 0x000450, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Code) == 0x000460, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Code' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Message) == 0x000468, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Message' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CreateDelegate_OutputDelegate_18) == 0x000478, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_string_Variable_12) == 0x000488, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_string_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_int_Variable_3) == 0x000498, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_bool_IsClosed_Variable) == 0x00049C, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CreateDelegate_OutputDelegate_19) == 0x0004A0, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_bool_Has_Been_Initd_Variable) == 0x0004B0, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_Event_IsDesignTime) == 0x0004B1, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_Event_ListItemObject) == 0x0004B8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_FriendId_4) == 0x0004C0, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_FriendId_4' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Message_18) == 0x0004D0, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Message_18' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_DynamicCast_AsBP_Accel_Byte_User_Card) == 0x0004E0, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_DynamicCast_AsBP_Accel_Byte_User_Card' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_DynamicCast_bSuccess) == 0x0004E8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_InviteFriend_ReturnValue) == 0x0004F0, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_InviteFriend_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_IsValid_ReturnValue_1) == 0x0004F8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_CancelInviteFriend_ReturnValue) == 0x000500, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_CancelInviteFriend_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CreateDelegate_OutputDelegate_20) == 0x000508, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_IsValid_ReturnValue_2) == 0x000518, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_AcceptInviteFriend_ReturnValue) == 0x000520, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_AcceptInviteFriend_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_RejectInviteFriend_ReturnValue) == 0x000528, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_RejectInviteFriend_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_IsValid_ReturnValue_3) == 0x000530, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_IsValid_ReturnValue_4) == 0x000531, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_DynamicCast_AsBP_Accel_Byte_Friends) == 0x000538, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_DynamicCast_AsBP_Accel_Byte_Friends' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_DynamicCast_bSuccess_1) == 0x000540, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_DynamicCast_AsBP_Accel_Byte_Friends_1) == 0x000548, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_DynamicCast_AsBP_Accel_Byte_Friends_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_DynamicCast_bSuccess_2) == 0x000550, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_DynamicCast_AsBP_Accel_Byte_Friends_2) == 0x000558, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_DynamicCast_AsBP_Accel_Byte_Friends_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_DynamicCast_bSuccess_3) == 0x000560, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_DynamicCast_AsBP_Accel_Byte_Friends_3) == 0x000568, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_DynamicCast_AsBP_Accel_Byte_Friends_3' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_DynamicCast_bSuccess_4) == 0x000570, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_InviteUserToParty_ReturnValue) == 0x000578, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_InviteUserToParty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_RemoveFriend_ReturnValue) == 0x000580, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_RemoveFriend_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_IsValid_ReturnValue_5) == 0x000588, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_IsValid_ReturnValue_6) == 0x000589, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_DynamicCast_AsBP_Accel_Byte_Friends_4) == 0x000590, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_DynamicCast_AsBP_Accel_Byte_Friends_4' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_DynamicCast_bSuccess_5) == 0x000598, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_SpawnAkComponentAtLocation_ReturnValue) == 0x0005A0, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_SpawnAkComponentAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Message_19) == 0x0005A8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Message_19' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_PostAkEvent_ReturnValue) == 0x0005B8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_int_Loop_Counter_Variable) == 0x0005BC, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_int_Array_Index_Variable) == 0x0005C0, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_Less_IntInt_ReturnValue) == 0x0005C4, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_Array_Get_Item) == 0x0005C8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_Add_IntInt_ReturnValue) == 0x0005D8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_Event_InFocusEvent_2) == 0x0005DC, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_Event_InFocusEvent_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_Event_InFocusEvent_1) == 0x0005E4, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_bool_True_if_break_was_hit_Variable) == 0x0005EC, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_Not_PreBool_ReturnValue) == 0x0005ED, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_BooleanAND_ReturnValue) == 0x0005EE, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_HasAnyUserFocus_ReturnValue) == 0x0005EF, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_HasAnyUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_Event_InFocusEvent) == 0x0005F0, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CustomEvent_Message_17) == 0x0005F8, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CustomEvent_Message_17' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CreateDelegate_OutputDelegate_21) == 0x000608, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_IsEmpty_ReturnValue) == 0x000618, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_Not_PreBool_ReturnValue_1) == 0x000619, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_GetUserPlatformInfo_ReturnValue) == 0x000620, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_GetUserPlatformInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_IsValid_ReturnValue_7) == 0x000628, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, K2Node_CreateDelegate_OutputDelegate_22) == 0x00062C, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_GetPlayerController_ReturnValue) == 0x000640, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_BlockPlayer_ReturnValue) == 0x000648, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_BlockPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_UnblockPlayer_ReturnValue) == 0x000650, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_UnblockPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_IsValid_ReturnValue_8) == 0x000658, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_IsValid_ReturnValue_9) == 0x000659, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_string_Variable_13) == 0x000660, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_string_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, Temp_string_Variable_14) == 0x000670, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::Temp_string_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000680, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000681, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_IsXboxPlatform_ReturnValue) == 0x000682, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_IsXboxPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_IsWinGDKPlatform_ReturnValue) == 0x000683, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_IsWinGDKPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_BooleanOR_ReturnValue) == 0x000684, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_IsXboxPlatform_ReturnValue_1) == 0x000685, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_IsXboxPlatform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_IsWinGDKPlatform_ReturnValue_1) == 0x000686, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_IsWinGDKPlatform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_BooleanOR_ReturnValue_1) == 0x000687, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000688, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x000689, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_EqualEqual_StrStr_ReturnValue_3) == 0x00068A, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_EqualEqual_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_BooleanOR_ReturnValue_2) == 0x00068B, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_BooleanOR_ReturnValue_3) == 0x00068C, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard, CallFunc_BooleanAND_ReturnValue_1) == 0x00068D, "Member 'BP_AccelByteUserCard_C_ExecuteUbergraph_BP_AccelByteUserCard::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct BP_AccelByteUserCard_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on BP_AccelByteUserCard_C_OnRemovedFromFocusPath");
static_assert(sizeof(BP_AccelByteUserCard_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on BP_AccelByteUserCard_C_OnRemovedFromFocusPath");
static_assert(offsetof(BP_AccelByteUserCard_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnFocusLost
// 0x0008 (0x0008 - 0x0000)
struct BP_AccelByteUserCard_C_OnFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnFocusLost) == 0x000004, "Wrong alignment on BP_AccelByteUserCard_C_OnFocusLost");
static_assert(sizeof(BP_AccelByteUserCard_C_OnFocusLost) == 0x000008, "Wrong size on BP_AccelByteUserCard_C_OnFocusLost");
static_assert(offsetof(BP_AccelByteUserCard_C_OnFocusLost, InFocusEvent) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnFocusLost::InFocusEvent' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct BP_AccelByteUserCard_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on BP_AccelByteUserCard_C_OnAddedToFocusPath");
static_assert(sizeof(BP_AccelByteUserCard_C_OnAddedToFocusPath) == 0x000008, "Wrong size on BP_AccelByteUserCard_C_OnAddedToFocusPath");
static_assert(offsetof(BP_AccelByteUserCard_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct BP_AccelByteUserCard_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_OnListItemObjectSet");
static_assert(sizeof(BP_AccelByteUserCard_C_OnListItemObjectSet) == 0x000008, "Wrong size on BP_AccelByteUserCard_C_OnListItemObjectSet");
static_assert(offsetof(BP_AccelByteUserCard_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_AccelByteUserCard_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AccelByteUserCard_C_PreConstruct) == 0x000001, "Wrong alignment on BP_AccelByteUserCard_C_PreConstruct");
static_assert(sizeof(BP_AccelByteUserCard_C_PreConstruct) == 0x000001, "Wrong size on BP_AccelByteUserCard_C_PreConstruct");
static_assert(offsetof(BP_AccelByteUserCard_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_AccelByteUserCard_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnSuccess_468246554A37C8916C0FF0A4A9E6D7C3
// 0x0018 (0x0018 - 0x0000)
struct BP_AccelByteUserCard_C_OnSuccess_468246554A37C8916C0FF0A4A9E6D7C3 final
{
public:
	int32                                         Code;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnSuccess_468246554A37C8916C0FF0A4A9E6D7C3) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_OnSuccess_468246554A37C8916C0FF0A4A9E6D7C3");
static_assert(sizeof(BP_AccelByteUserCard_C_OnSuccess_468246554A37C8916C0FF0A4A9E6D7C3) == 0x000018, "Wrong size on BP_AccelByteUserCard_C_OnSuccess_468246554A37C8916C0FF0A4A9E6D7C3");
static_assert(offsetof(BP_AccelByteUserCard_C_OnSuccess_468246554A37C8916C0FF0A4A9E6D7C3, Code) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnSuccess_468246554A37C8916C0FF0A4A9E6D7C3::Code' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_OnSuccess_468246554A37C8916C0FF0A4A9E6D7C3, Message) == 0x000008, "Member 'BP_AccelByteUserCard_C_OnSuccess_468246554A37C8916C0FF0A4A9E6D7C3::Message' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnFailure_468246554A37C8916C0FF0A4A9E6D7C3
// 0x0018 (0x0018 - 0x0000)
struct BP_AccelByteUserCard_C_OnFailure_468246554A37C8916C0FF0A4A9E6D7C3 final
{
public:
	int32                                         Code;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnFailure_468246554A37C8916C0FF0A4A9E6D7C3) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_OnFailure_468246554A37C8916C0FF0A4A9E6D7C3");
static_assert(sizeof(BP_AccelByteUserCard_C_OnFailure_468246554A37C8916C0FF0A4A9E6D7C3) == 0x000018, "Wrong size on BP_AccelByteUserCard_C_OnFailure_468246554A37C8916C0FF0A4A9E6D7C3");
static_assert(offsetof(BP_AccelByteUserCard_C_OnFailure_468246554A37C8916C0FF0A4A9E6D7C3, Code) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnFailure_468246554A37C8916C0FF0A4A9E6D7C3::Code' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_OnFailure_468246554A37C8916C0FF0A4A9E6D7C3, Message) == 0x000008, "Member 'BP_AccelByteUserCard_C_OnFailure_468246554A37C8916C0FF0A4A9E6D7C3::Message' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnResponseSuccess_468246554A37C8916C0FF0A4A9E6D7C3
// 0x0018 (0x0018 - 0x0000)
struct BP_AccelByteUserCard_C_OnResponseSuccess_468246554A37C8916C0FF0A4A9E6D7C3 final
{
public:
	int32                                         Code;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnResponseSuccess_468246554A37C8916C0FF0A4A9E6D7C3) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_OnResponseSuccess_468246554A37C8916C0FF0A4A9E6D7C3");
static_assert(sizeof(BP_AccelByteUserCard_C_OnResponseSuccess_468246554A37C8916C0FF0A4A9E6D7C3) == 0x000018, "Wrong size on BP_AccelByteUserCard_C_OnResponseSuccess_468246554A37C8916C0FF0A4A9E6D7C3");
static_assert(offsetof(BP_AccelByteUserCard_C_OnResponseSuccess_468246554A37C8916C0FF0A4A9E6D7C3, Code) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnResponseSuccess_468246554A37C8916C0FF0A4A9E6D7C3::Code' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_OnResponseSuccess_468246554A37C8916C0FF0A4A9E6D7C3, Message) == 0x000008, "Member 'BP_AccelByteUserCard_C_OnResponseSuccess_468246554A37C8916C0FF0A4A9E6D7C3::Message' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnSuccess_F09471284E2DD4EDDAD2728281859324
// 0x0028 (0x0028 - 0x0000)
struct BP_AccelByteUserCard_C_OnSuccess_F09471284E2DD4EDDAD2728281859324 final
{
public:
	struct FAccelByteModelsListBlockedUserResponse Payload;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 Message;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Code;                                              // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnSuccess_F09471284E2DD4EDDAD2728281859324) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_OnSuccess_F09471284E2DD4EDDAD2728281859324");
static_assert(sizeof(BP_AccelByteUserCard_C_OnSuccess_F09471284E2DD4EDDAD2728281859324) == 0x000028, "Wrong size on BP_AccelByteUserCard_C_OnSuccess_F09471284E2DD4EDDAD2728281859324");
static_assert(offsetof(BP_AccelByteUserCard_C_OnSuccess_F09471284E2DD4EDDAD2728281859324, Payload) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnSuccess_F09471284E2DD4EDDAD2728281859324::Payload' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_OnSuccess_F09471284E2DD4EDDAD2728281859324, Message) == 0x000010, "Member 'BP_AccelByteUserCard_C_OnSuccess_F09471284E2DD4EDDAD2728281859324::Message' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_OnSuccess_F09471284E2DD4EDDAD2728281859324, Code) == 0x000020, "Member 'BP_AccelByteUserCard_C_OnSuccess_F09471284E2DD4EDDAD2728281859324::Code' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnError_F09471284E2DD4EDDAD2728281859324
// 0x0028 (0x0028 - 0x0000)
struct BP_AccelByteUserCard_C_OnError_F09471284E2DD4EDDAD2728281859324 final
{
public:
	struct FAccelByteModelsListBlockedUserResponse Payload;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 Message;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Code;                                              // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnError_F09471284E2DD4EDDAD2728281859324) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_OnError_F09471284E2DD4EDDAD2728281859324");
static_assert(sizeof(BP_AccelByteUserCard_C_OnError_F09471284E2DD4EDDAD2728281859324) == 0x000028, "Wrong size on BP_AccelByteUserCard_C_OnError_F09471284E2DD4EDDAD2728281859324");
static_assert(offsetof(BP_AccelByteUserCard_C_OnError_F09471284E2DD4EDDAD2728281859324, Payload) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnError_F09471284E2DD4EDDAD2728281859324::Payload' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_OnError_F09471284E2DD4EDDAD2728281859324, Message) == 0x000010, "Member 'BP_AccelByteUserCard_C_OnError_F09471284E2DD4EDDAD2728281859324::Message' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_OnError_F09471284E2DD4EDDAD2728281859324, Code) == 0x000020, "Member 'BP_AccelByteUserCard_C_OnError_F09471284E2DD4EDDAD2728281859324::Code' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnSuccess_229999EC4494C6235EBAF9AF9D9FF1C4
// 0x0018 (0x0018 - 0x0000)
struct BP_AccelByteUserCard_C_OnSuccess_229999EC4494C6235EBAF9AF9D9FF1C4 final
{
public:
	int32                                         Code;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnSuccess_229999EC4494C6235EBAF9AF9D9FF1C4) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_OnSuccess_229999EC4494C6235EBAF9AF9D9FF1C4");
static_assert(sizeof(BP_AccelByteUserCard_C_OnSuccess_229999EC4494C6235EBAF9AF9D9FF1C4) == 0x000018, "Wrong size on BP_AccelByteUserCard_C_OnSuccess_229999EC4494C6235EBAF9AF9D9FF1C4");
static_assert(offsetof(BP_AccelByteUserCard_C_OnSuccess_229999EC4494C6235EBAF9AF9D9FF1C4, Code) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnSuccess_229999EC4494C6235EBAF9AF9D9FF1C4::Code' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_OnSuccess_229999EC4494C6235EBAF9AF9D9FF1C4, Message) == 0x000008, "Member 'BP_AccelByteUserCard_C_OnSuccess_229999EC4494C6235EBAF9AF9D9FF1C4::Message' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnFailure_229999EC4494C6235EBAF9AF9D9FF1C4
// 0x0018 (0x0018 - 0x0000)
struct BP_AccelByteUserCard_C_OnFailure_229999EC4494C6235EBAF9AF9D9FF1C4 final
{
public:
	int32                                         Code;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnFailure_229999EC4494C6235EBAF9AF9D9FF1C4) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_OnFailure_229999EC4494C6235EBAF9AF9D9FF1C4");
static_assert(sizeof(BP_AccelByteUserCard_C_OnFailure_229999EC4494C6235EBAF9AF9D9FF1C4) == 0x000018, "Wrong size on BP_AccelByteUserCard_C_OnFailure_229999EC4494C6235EBAF9AF9D9FF1C4");
static_assert(offsetof(BP_AccelByteUserCard_C_OnFailure_229999EC4494C6235EBAF9AF9D9FF1C4, Code) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnFailure_229999EC4494C6235EBAF9AF9D9FF1C4::Code' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_OnFailure_229999EC4494C6235EBAF9AF9D9FF1C4, Message) == 0x000008, "Member 'BP_AccelByteUserCard_C_OnFailure_229999EC4494C6235EBAF9AF9D9FF1C4::Message' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnResponseSuccess_229999EC4494C6235EBAF9AF9D9FF1C4
// 0x0018 (0x0018 - 0x0000)
struct BP_AccelByteUserCard_C_OnResponseSuccess_229999EC4494C6235EBAF9AF9D9FF1C4 final
{
public:
	int32                                         Code;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnResponseSuccess_229999EC4494C6235EBAF9AF9D9FF1C4) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_OnResponseSuccess_229999EC4494C6235EBAF9AF9D9FF1C4");
static_assert(sizeof(BP_AccelByteUserCard_C_OnResponseSuccess_229999EC4494C6235EBAF9AF9D9FF1C4) == 0x000018, "Wrong size on BP_AccelByteUserCard_C_OnResponseSuccess_229999EC4494C6235EBAF9AF9D9FF1C4");
static_assert(offsetof(BP_AccelByteUserCard_C_OnResponseSuccess_229999EC4494C6235EBAF9AF9D9FF1C4, Code) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnResponseSuccess_229999EC4494C6235EBAF9AF9D9FF1C4::Code' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_OnResponseSuccess_229999EC4494C6235EBAF9AF9D9FF1C4, Message) == 0x000008, "Member 'BP_AccelByteUserCard_C_OnResponseSuccess_229999EC4494C6235EBAF9AF9D9FF1C4::Message' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnSuccess_25370621421E2AC3A9204AA47BE543F6
// 0x0038 (0x0038 - 0x0000)
struct BP_AccelByteUserCard_C_OnSuccess_25370621421E2AC3A9204AA47BE543F6 final
{
public:
	struct FFCTPlatformPlayerInfo                 PlatformInfo;                                      // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Code;                                              // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnSuccess_25370621421E2AC3A9204AA47BE543F6) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_OnSuccess_25370621421E2AC3A9204AA47BE543F6");
static_assert(sizeof(BP_AccelByteUserCard_C_OnSuccess_25370621421E2AC3A9204AA47BE543F6) == 0x000038, "Wrong size on BP_AccelByteUserCard_C_OnSuccess_25370621421E2AC3A9204AA47BE543F6");
static_assert(offsetof(BP_AccelByteUserCard_C_OnSuccess_25370621421E2AC3A9204AA47BE543F6, PlatformInfo) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnSuccess_25370621421E2AC3A9204AA47BE543F6::PlatformInfo' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_OnSuccess_25370621421E2AC3A9204AA47BE543F6, Code) == 0x000020, "Member 'BP_AccelByteUserCard_C_OnSuccess_25370621421E2AC3A9204AA47BE543F6::Code' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_OnSuccess_25370621421E2AC3A9204AA47BE543F6, Message) == 0x000028, "Member 'BP_AccelByteUserCard_C_OnSuccess_25370621421E2AC3A9204AA47BE543F6::Message' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnError_25370621421E2AC3A9204AA47BE543F6
// 0x0038 (0x0038 - 0x0000)
struct BP_AccelByteUserCard_C_OnError_25370621421E2AC3A9204AA47BE543F6 final
{
public:
	struct FFCTPlatformPlayerInfo                 PlatformInfo;                                      // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Code;                                              // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnError_25370621421E2AC3A9204AA47BE543F6) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_OnError_25370621421E2AC3A9204AA47BE543F6");
static_assert(sizeof(BP_AccelByteUserCard_C_OnError_25370621421E2AC3A9204AA47BE543F6) == 0x000038, "Wrong size on BP_AccelByteUserCard_C_OnError_25370621421E2AC3A9204AA47BE543F6");
static_assert(offsetof(BP_AccelByteUserCard_C_OnError_25370621421E2AC3A9204AA47BE543F6, PlatformInfo) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnError_25370621421E2AC3A9204AA47BE543F6::PlatformInfo' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_OnError_25370621421E2AC3A9204AA47BE543F6, Code) == 0x000020, "Member 'BP_AccelByteUserCard_C_OnError_25370621421E2AC3A9204AA47BE543F6::Code' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_OnError_25370621421E2AC3A9204AA47BE543F6, Message) == 0x000028, "Member 'BP_AccelByteUserCard_C_OnError_25370621421E2AC3A9204AA47BE543F6::Message' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnSuccess_3EB1F95F4306B033D3544B80E262936A
// 0x0020 (0x0020 - 0x0000)
struct BP_AccelByteUserCard_C_OnSuccess_3EB1F95F4306B033D3544B80E262936A final
{
public:
	class FString                                 FriendId;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Message;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnSuccess_3EB1F95F4306B033D3544B80E262936A) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_OnSuccess_3EB1F95F4306B033D3544B80E262936A");
static_assert(sizeof(BP_AccelByteUserCard_C_OnSuccess_3EB1F95F4306B033D3544B80E262936A) == 0x000020, "Wrong size on BP_AccelByteUserCard_C_OnSuccess_3EB1F95F4306B033D3544B80E262936A");
static_assert(offsetof(BP_AccelByteUserCard_C_OnSuccess_3EB1F95F4306B033D3544B80E262936A, FriendId) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnSuccess_3EB1F95F4306B033D3544B80E262936A::FriendId' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_OnSuccess_3EB1F95F4306B033D3544B80E262936A, Message) == 0x000010, "Member 'BP_AccelByteUserCard_C_OnSuccess_3EB1F95F4306B033D3544B80E262936A::Message' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnError_3EB1F95F4306B033D3544B80E262936A
// 0x0010 (0x0010 - 0x0000)
struct BP_AccelByteUserCard_C_OnError_3EB1F95F4306B033D3544B80E262936A final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnError_3EB1F95F4306B033D3544B80E262936A) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_OnError_3EB1F95F4306B033D3544B80E262936A");
static_assert(sizeof(BP_AccelByteUserCard_C_OnError_3EB1F95F4306B033D3544B80E262936A) == 0x000010, "Wrong size on BP_AccelByteUserCard_C_OnError_3EB1F95F4306B033D3544B80E262936A");
static_assert(offsetof(BP_AccelByteUserCard_C_OnError_3EB1F95F4306B033D3544B80E262936A, Message) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnError_3EB1F95F4306B033D3544B80E262936A::Message' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnSuccess_3958E5014D4ACDC9B2C2449BB0FC88F4
// 0x0010 (0x0010 - 0x0000)
struct BP_AccelByteUserCard_C_OnSuccess_3958E5014D4ACDC9B2C2449BB0FC88F4 final
{
public:
	class FString                                 PlayerId;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnSuccess_3958E5014D4ACDC9B2C2449BB0FC88F4) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_OnSuccess_3958E5014D4ACDC9B2C2449BB0FC88F4");
static_assert(sizeof(BP_AccelByteUserCard_C_OnSuccess_3958E5014D4ACDC9B2C2449BB0FC88F4) == 0x000010, "Wrong size on BP_AccelByteUserCard_C_OnSuccess_3958E5014D4ACDC9B2C2449BB0FC88F4");
static_assert(offsetof(BP_AccelByteUserCard_C_OnSuccess_3958E5014D4ACDC9B2C2449BB0FC88F4, PlayerId) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnSuccess_3958E5014D4ACDC9B2C2449BB0FC88F4::PlayerId' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnFail_3958E5014D4ACDC9B2C2449BB0FC88F4
// 0x0010 (0x0010 - 0x0000)
struct BP_AccelByteUserCard_C_OnFail_3958E5014D4ACDC9B2C2449BB0FC88F4 final
{
public:
	class FString                                 PlayerId;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnFail_3958E5014D4ACDC9B2C2449BB0FC88F4) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_OnFail_3958E5014D4ACDC9B2C2449BB0FC88F4");
static_assert(sizeof(BP_AccelByteUserCard_C_OnFail_3958E5014D4ACDC9B2C2449BB0FC88F4) == 0x000010, "Wrong size on BP_AccelByteUserCard_C_OnFail_3958E5014D4ACDC9B2C2449BB0FC88F4");
static_assert(offsetof(BP_AccelByteUserCard_C_OnFail_3958E5014D4ACDC9B2C2449BB0FC88F4, PlayerId) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnFail_3958E5014D4ACDC9B2C2449BB0FC88F4::PlayerId' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnSuccess_0A7B7BC5428BCC259EAA9AB1B1FFE86D
// 0x0020 (0x0020 - 0x0000)
struct BP_AccelByteUserCard_C_OnSuccess_0A7B7BC5428BCC259EAA9AB1B1FFE86D final
{
public:
	class FString                                 FriendId;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Message;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnSuccess_0A7B7BC5428BCC259EAA9AB1B1FFE86D) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_OnSuccess_0A7B7BC5428BCC259EAA9AB1B1FFE86D");
static_assert(sizeof(BP_AccelByteUserCard_C_OnSuccess_0A7B7BC5428BCC259EAA9AB1B1FFE86D) == 0x000020, "Wrong size on BP_AccelByteUserCard_C_OnSuccess_0A7B7BC5428BCC259EAA9AB1B1FFE86D");
static_assert(offsetof(BP_AccelByteUserCard_C_OnSuccess_0A7B7BC5428BCC259EAA9AB1B1FFE86D, FriendId) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnSuccess_0A7B7BC5428BCC259EAA9AB1B1FFE86D::FriendId' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_OnSuccess_0A7B7BC5428BCC259EAA9AB1B1FFE86D, Message) == 0x000010, "Member 'BP_AccelByteUserCard_C_OnSuccess_0A7B7BC5428BCC259EAA9AB1B1FFE86D::Message' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnError_0A7B7BC5428BCC259EAA9AB1B1FFE86D
// 0x0010 (0x0010 - 0x0000)
struct BP_AccelByteUserCard_C_OnError_0A7B7BC5428BCC259EAA9AB1B1FFE86D final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnError_0A7B7BC5428BCC259EAA9AB1B1FFE86D) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_OnError_0A7B7BC5428BCC259EAA9AB1B1FFE86D");
static_assert(sizeof(BP_AccelByteUserCard_C_OnError_0A7B7BC5428BCC259EAA9AB1B1FFE86D) == 0x000010, "Wrong size on BP_AccelByteUserCard_C_OnError_0A7B7BC5428BCC259EAA9AB1B1FFE86D");
static_assert(offsetof(BP_AccelByteUserCard_C_OnError_0A7B7BC5428BCC259EAA9AB1B1FFE86D, Message) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnError_0A7B7BC5428BCC259EAA9AB1B1FFE86D::Message' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnSuccess_909A421741824A9A021F65A1C1227EA1
// 0x0020 (0x0020 - 0x0000)
struct BP_AccelByteUserCard_C_OnSuccess_909A421741824A9A021F65A1C1227EA1 final
{
public:
	class FString                                 FriendId;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Message;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnSuccess_909A421741824A9A021F65A1C1227EA1) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_OnSuccess_909A421741824A9A021F65A1C1227EA1");
static_assert(sizeof(BP_AccelByteUserCard_C_OnSuccess_909A421741824A9A021F65A1C1227EA1) == 0x000020, "Wrong size on BP_AccelByteUserCard_C_OnSuccess_909A421741824A9A021F65A1C1227EA1");
static_assert(offsetof(BP_AccelByteUserCard_C_OnSuccess_909A421741824A9A021F65A1C1227EA1, FriendId) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnSuccess_909A421741824A9A021F65A1C1227EA1::FriendId' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_OnSuccess_909A421741824A9A021F65A1C1227EA1, Message) == 0x000010, "Member 'BP_AccelByteUserCard_C_OnSuccess_909A421741824A9A021F65A1C1227EA1::Message' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnError_909A421741824A9A021F65A1C1227EA1
// 0x0010 (0x0010 - 0x0000)
struct BP_AccelByteUserCard_C_OnError_909A421741824A9A021F65A1C1227EA1 final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnError_909A421741824A9A021F65A1C1227EA1) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_OnError_909A421741824A9A021F65A1C1227EA1");
static_assert(sizeof(BP_AccelByteUserCard_C_OnError_909A421741824A9A021F65A1C1227EA1) == 0x000010, "Wrong size on BP_AccelByteUserCard_C_OnError_909A421741824A9A021F65A1C1227EA1");
static_assert(offsetof(BP_AccelByteUserCard_C_OnError_909A421741824A9A021F65A1C1227EA1, Message) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnError_909A421741824A9A021F65A1C1227EA1::Message' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnSuccess_C517180948AC916BA9E58089B3A1B147
// 0x0020 (0x0020 - 0x0000)
struct BP_AccelByteUserCard_C_OnSuccess_C517180948AC916BA9E58089B3A1B147 final
{
public:
	class FString                                 FriendId;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Message;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnSuccess_C517180948AC916BA9E58089B3A1B147) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_OnSuccess_C517180948AC916BA9E58089B3A1B147");
static_assert(sizeof(BP_AccelByteUserCard_C_OnSuccess_C517180948AC916BA9E58089B3A1B147) == 0x000020, "Wrong size on BP_AccelByteUserCard_C_OnSuccess_C517180948AC916BA9E58089B3A1B147");
static_assert(offsetof(BP_AccelByteUserCard_C_OnSuccess_C517180948AC916BA9E58089B3A1B147, FriendId) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnSuccess_C517180948AC916BA9E58089B3A1B147::FriendId' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_OnSuccess_C517180948AC916BA9E58089B3A1B147, Message) == 0x000010, "Member 'BP_AccelByteUserCard_C_OnSuccess_C517180948AC916BA9E58089B3A1B147::Message' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnError_C517180948AC916BA9E58089B3A1B147
// 0x0010 (0x0010 - 0x0000)
struct BP_AccelByteUserCard_C_OnError_C517180948AC916BA9E58089B3A1B147 final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnError_C517180948AC916BA9E58089B3A1B147) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_OnError_C517180948AC916BA9E58089B3A1B147");
static_assert(sizeof(BP_AccelByteUserCard_C_OnError_C517180948AC916BA9E58089B3A1B147) == 0x000010, "Wrong size on BP_AccelByteUserCard_C_OnError_C517180948AC916BA9E58089B3A1B147");
static_assert(offsetof(BP_AccelByteUserCard_C_OnError_C517180948AC916BA9E58089B3A1B147, Message) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnError_C517180948AC916BA9E58089B3A1B147::Message' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnSuccess_CBF0EFE74C5AED627A674F900FF0AA3A
// 0x0020 (0x0020 - 0x0000)
struct BP_AccelByteUserCard_C_OnSuccess_CBF0EFE74C5AED627A674F900FF0AA3A final
{
public:
	class FString                                 FriendId;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Message;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnSuccess_CBF0EFE74C5AED627A674F900FF0AA3A) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_OnSuccess_CBF0EFE74C5AED627A674F900FF0AA3A");
static_assert(sizeof(BP_AccelByteUserCard_C_OnSuccess_CBF0EFE74C5AED627A674F900FF0AA3A) == 0x000020, "Wrong size on BP_AccelByteUserCard_C_OnSuccess_CBF0EFE74C5AED627A674F900FF0AA3A");
static_assert(offsetof(BP_AccelByteUserCard_C_OnSuccess_CBF0EFE74C5AED627A674F900FF0AA3A, FriendId) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnSuccess_CBF0EFE74C5AED627A674F900FF0AA3A::FriendId' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_OnSuccess_CBF0EFE74C5AED627A674F900FF0AA3A, Message) == 0x000010, "Member 'BP_AccelByteUserCard_C_OnSuccess_CBF0EFE74C5AED627A674F900FF0AA3A::Message' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.OnError_CBF0EFE74C5AED627A674F900FF0AA3A
// 0x0010 (0x0010 - 0x0000)
struct BP_AccelByteUserCard_C_OnError_CBF0EFE74C5AED627A674F900FF0AA3A final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteUserCard_C_OnError_CBF0EFE74C5AED627A674F900FF0AA3A) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_OnError_CBF0EFE74C5AED627A674F900FF0AA3A");
static_assert(sizeof(BP_AccelByteUserCard_C_OnError_CBF0EFE74C5AED627A674F900FF0AA3A) == 0x000010, "Wrong size on BP_AccelByteUserCard_C_OnError_CBF0EFE74C5AED627A674F900FF0AA3A");
static_assert(offsetof(BP_AccelByteUserCard_C_OnError_CBF0EFE74C5AED627A674F900FF0AA3A, Message) == 0x000000, "Member 'BP_AccelByteUserCard_C_OnError_CBF0EFE74C5AED627A674F900FF0AA3A::Message' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.SetProfileInfo
// 0x00C0 (0x00C0 - 0x0000)
struct BP_AccelByteUserCard_C_SetProfileInfo final
{
public:
	class FString                                 DisplayName_0;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 InUserID;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         OnlineStatus_0;                                    // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFFCTFriendListType                           InListType;                                        // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERelationshipStatusCode                       Relationship;                                      // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         InPartyMembers;                                    // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FTimespan                              Time;                                              // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 PlatformName_0;                                    // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UFriendLobbyWidget*                     InParent;                                          // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsXboxPlatform_ReturnValue;               // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWinGDKPlatform_ReturnValue;             // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSplitDisplayNameAndFriendCode_OutDisplayName; // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSplitDisplayNameAndFriendCode_OutFriendCode; // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0088(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00A0(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AccelByteUserCard_C_SetProfileInfo) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_SetProfileInfo");
static_assert(sizeof(BP_AccelByteUserCard_C_SetProfileInfo) == 0x0000C0, "Wrong size on BP_AccelByteUserCard_C_SetProfileInfo");
static_assert(offsetof(BP_AccelByteUserCard_C_SetProfileInfo, DisplayName_0) == 0x000000, "Member 'BP_AccelByteUserCard_C_SetProfileInfo::DisplayName_0' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_SetProfileInfo, InUserID) == 0x000010, "Member 'BP_AccelByteUserCard_C_SetProfileInfo::InUserID' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_SetProfileInfo, OnlineStatus_0) == 0x000020, "Member 'BP_AccelByteUserCard_C_SetProfileInfo::OnlineStatus_0' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_SetProfileInfo, InListType) == 0x000021, "Member 'BP_AccelByteUserCard_C_SetProfileInfo::InListType' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_SetProfileInfo, Relationship) == 0x000022, "Member 'BP_AccelByteUserCard_C_SetProfileInfo::Relationship' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_SetProfileInfo, InPartyMembers) == 0x000028, "Member 'BP_AccelByteUserCard_C_SetProfileInfo::InPartyMembers' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_SetProfileInfo, Time) == 0x000038, "Member 'BP_AccelByteUserCard_C_SetProfileInfo::Time' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_SetProfileInfo, PlatformName_0) == 0x000040, "Member 'BP_AccelByteUserCard_C_SetProfileInfo::PlatformName_0' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_SetProfileInfo, InParent) == 0x000050, "Member 'BP_AccelByteUserCard_C_SetProfileInfo::InParent' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_SetProfileInfo, CallFunc_GetValidValue_ReturnValue) == 0x000058, "Member 'BP_AccelByteUserCard_C_SetProfileInfo::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_SetProfileInfo, K2Node_SwitchEnum_CmpSuccess) == 0x000059, "Member 'BP_AccelByteUserCard_C_SetProfileInfo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_SetProfileInfo, CallFunc_IsXboxPlatform_ReturnValue) == 0x00005A, "Member 'BP_AccelByteUserCard_C_SetProfileInfo::CallFunc_IsXboxPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_SetProfileInfo, CallFunc_IsWinGDKPlatform_ReturnValue) == 0x00005B, "Member 'BP_AccelByteUserCard_C_SetProfileInfo::CallFunc_IsWinGDKPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_SetProfileInfo, CallFunc_BooleanOR_ReturnValue) == 0x00005C, "Member 'BP_AccelByteUserCard_C_SetProfileInfo::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_SetProfileInfo, CallFunc_GetSplitDisplayNameAndFriendCode_OutDisplayName) == 0x000060, "Member 'BP_AccelByteUserCard_C_SetProfileInfo::CallFunc_GetSplitDisplayNameAndFriendCode_OutDisplayName' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_SetProfileInfo, CallFunc_GetSplitDisplayNameAndFriendCode_OutFriendCode) == 0x000070, "Member 'BP_AccelByteUserCard_C_SetProfileInfo::CallFunc_GetSplitDisplayNameAndFriendCode_OutFriendCode' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_SetProfileInfo, Temp_bool_Variable) == 0x000080, "Member 'BP_AccelByteUserCard_C_SetProfileInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_SetProfileInfo, CallFunc_Conv_StringToText_ReturnValue) == 0x000088, "Member 'BP_AccelByteUserCard_C_SetProfileInfo::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_SetProfileInfo, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000A0, "Member 'BP_AccelByteUserCard_C_SetProfileInfo::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_SetProfileInfo, Temp_bool_Variable_1) == 0x0000B8, "Member 'BP_AccelByteUserCard_C_SetProfileInfo::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_SetProfileInfo, Temp_bool_Variable_2) == 0x0000B9, "Member 'BP_AccelByteUserCard_C_SetProfileInfo::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_SetProfileInfo, K2Node_Select_Default) == 0x0000BA, "Member 'BP_AccelByteUserCard_C_SetProfileInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_SetProfileInfo, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000BB, "Member 'BP_AccelByteUserCard_C_SetProfileInfo::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.UserAlreadyInvitedToParty
// 0x00A0 (0x00A0 - 0x0000)
struct BP_AccelByteUserCard_C_UserAlreadyInvitedToParty final
{
public:
	struct FAccelByteModelsInfoPartyResponse      PartyInfo;                                         // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          HasBeenInvited;                                    // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AccelByteUserCard_C_UserAlreadyInvitedToParty) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_UserAlreadyInvitedToParty");
static_assert(sizeof(BP_AccelByteUserCard_C_UserAlreadyInvitedToParty) == 0x0000A0, "Wrong size on BP_AccelByteUserCard_C_UserAlreadyInvitedToParty");
static_assert(offsetof(BP_AccelByteUserCard_C_UserAlreadyInvitedToParty, PartyInfo) == 0x000000, "Member 'BP_AccelByteUserCard_C_UserAlreadyInvitedToParty::PartyInfo' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_UserAlreadyInvitedToParty, HasBeenInvited) == 0x000070, "Member 'BP_AccelByteUserCard_C_UserAlreadyInvitedToParty::HasBeenInvited' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_UserAlreadyInvitedToParty, Temp_int_Array_Index_Variable) == 0x000074, "Member 'BP_AccelByteUserCard_C_UserAlreadyInvitedToParty::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_UserAlreadyInvitedToParty, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_AccelByteUserCard_C_UserAlreadyInvitedToParty::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_UserAlreadyInvitedToParty, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_AccelByteUserCard_C_UserAlreadyInvitedToParty::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_UserAlreadyInvitedToParty, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'BP_AccelByteUserCard_C_UserAlreadyInvitedToParty::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_UserAlreadyInvitedToParty, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'BP_AccelByteUserCard_C_UserAlreadyInvitedToParty::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_UserAlreadyInvitedToParty, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'BP_AccelByteUserCard_C_UserAlreadyInvitedToParty::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_UserAlreadyInvitedToParty, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x00009C, "Member 'BP_AccelByteUserCard_C_UserAlreadyInvitedToParty::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.UpdateInviteText
// 0x0030 (0x0030 - 0x0000)
struct BP_AccelByteUserCard_C_UpdateInviteText final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AccelByteUserCard_C_UpdateInviteText) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_UpdateInviteText");
static_assert(sizeof(BP_AccelByteUserCard_C_UpdateInviteText) == 0x000030, "Wrong size on BP_AccelByteUserCard_C_UpdateInviteText");
static_assert(offsetof(BP_AccelByteUserCard_C_UpdateInviteText, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'BP_AccelByteUserCard_C_UpdateInviteText::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_UpdateInviteText, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AccelByteUserCard_C_UpdateInviteText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_UpdateInviteText, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_AccelByteUserCard_C_UpdateInviteText::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_UpdateInviteText, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_AccelByteUserCard_C_UpdateInviteText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_UpdateInviteText, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_AccelByteUserCard_C_UpdateInviteText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_UpdateInviteText, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_AccelByteUserCard_C_UpdateInviteText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_UpdateInviteText, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_AccelByteUserCard_C_UpdateInviteText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_UpdateInviteText, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_AccelByteUserCard_C_UpdateInviteText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_UpdateInviteText, CallFunc_BooleanAND_ReturnValue) == 0x000029, "Member 'BP_AccelByteUserCard_C_UpdateInviteText::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_UpdateInviteText, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x00002A, "Member 'BP_AccelByteUserCard_C_UpdateInviteText::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.GenerateTimeLastPlayedWith
// 0x0090 (0x0090 - 0x0000)
struct BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith final
{
public:
	int32                                         CallFunc_BreakTimespan2_Days;                      // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan2_Hours;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan2_Minutes;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan2_Seconds;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan2_FractionNano;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDays_ReturnValue;                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMinutes_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHours_ReturnValue;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0048(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0060(0x0018)()
	int32                                         CallFunc_GetDays_ReturnValue_1;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHours_ReturnValue_1;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMinutes_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith");
static_assert(sizeof(BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith) == 0x000090, "Wrong size on BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith");
static_assert(offsetof(BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith, CallFunc_BreakTimespan2_Days) == 0x000000, "Member 'BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith::CallFunc_BreakTimespan2_Days' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith, CallFunc_BreakTimespan2_Hours) == 0x000004, "Member 'BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith::CallFunc_BreakTimespan2_Hours' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith, CallFunc_BreakTimespan2_Minutes) == 0x000008, "Member 'BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith::CallFunc_BreakTimespan2_Minutes' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith, CallFunc_BreakTimespan2_Seconds) == 0x00000C, "Member 'BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith::CallFunc_BreakTimespan2_Seconds' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith, CallFunc_BreakTimespan2_FractionNano) == 0x000010, "Member 'BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith::CallFunc_BreakTimespan2_FractionNano' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith, CallFunc_GetDays_ReturnValue) == 0x000018, "Member 'BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith::CallFunc_GetDays_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith, CallFunc_GetMinutes_ReturnValue) == 0x00003C, "Member 'BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith::CallFunc_GetMinutes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith, CallFunc_GetHours_ReturnValue) == 0x000044, "Member 'BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith::CallFunc_GetHours_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000048, "Member 'BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000060, "Member 'BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith, CallFunc_GetDays_ReturnValue_1) == 0x000078, "Member 'BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith::CallFunc_GetDays_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith, CallFunc_GetHours_ReturnValue_1) == 0x00007C, "Member 'BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith::CallFunc_GetHours_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000080, "Member 'BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000081, "Member 'BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith, CallFunc_GetMinutes_ReturnValue_1) == 0x000084, "Member 'BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith::CallFunc_GetMinutes_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith, CallFunc_Greater_IntInt_ReturnValue_4) == 0x000088, "Member 'BP_AccelByteUserCard_C_GenerateTimeLastPlayedWith::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.DoCustomNavigation_0
// 0x0010 (0x0010 - 0x0000)
struct BP_AccelByteUserCard_C_DoCustomNavigation_0 final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AccelByteUserCard_C_DoCustomNavigation_0) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_DoCustomNavigation_0");
static_assert(sizeof(BP_AccelByteUserCard_C_DoCustomNavigation_0) == 0x000010, "Wrong size on BP_AccelByteUserCard_C_DoCustomNavigation_0");
static_assert(offsetof(BP_AccelByteUserCard_C_DoCustomNavigation_0, Navigation_0) == 0x000000, "Member 'BP_AccelByteUserCard_C_DoCustomNavigation_0::Navigation_0' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_DoCustomNavigation_0, ReturnValue) == 0x000008, "Member 'BP_AccelByteUserCard_C_DoCustomNavigation_0::ReturnValue' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.ListenForControllerEvents
// 0x0010 (0x0010 - 0x0000)
struct BP_AccelByteUserCard_C_ListenForControllerEvents final
{
public:
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AccelByteUserCard_C_ListenForControllerEvents) == 0x000008, "Wrong alignment on BP_AccelByteUserCard_C_ListenForControllerEvents");
static_assert(sizeof(BP_AccelByteUserCard_C_ListenForControllerEvents) == 0x000010, "Wrong size on BP_AccelByteUserCard_C_ListenForControllerEvents");
static_assert(offsetof(BP_AccelByteUserCard_C_ListenForControllerEvents, CallFunc_GetActiveWidget_ReturnValue) == 0x000000, "Member 'BP_AccelByteUserCard_C_ListenForControllerEvents::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ListenForControllerEvents, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000008, "Member 'BP_AccelByteUserCard_C_ListenForControllerEvents::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ListenForControllerEvents, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000009, "Member 'BP_AccelByteUserCard_C_ListenForControllerEvents::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ListenForControllerEvents, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x00000A, "Member 'BP_AccelByteUserCard_C_ListenForControllerEvents::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ListenForControllerEvents, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x00000B, "Member 'BP_AccelByteUserCard_C_ListenForControllerEvents::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AccelByteUserCard_C_ListenForControllerEvents, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x00000C, "Member 'BP_AccelByteUserCard_C_ListenForControllerEvents::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");

// Function BP_AccelByteUserCard.BP_AccelByteUserCard_C.SetOnlineStatusUI
// 0x0001 (0x0001 - 0x0000)
struct BP_AccelByteUserCard_C_SetOnlineStatusUI final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AccelByteUserCard_C_SetOnlineStatusUI) == 0x000001, "Wrong alignment on BP_AccelByteUserCard_C_SetOnlineStatusUI");
static_assert(sizeof(BP_AccelByteUserCard_C_SetOnlineStatusUI) == 0x000001, "Wrong size on BP_AccelByteUserCard_C_SetOnlineStatusUI");
static_assert(offsetof(BP_AccelByteUserCard_C_SetOnlineStatusUI, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_AccelByteUserCard_C_SetOnlineStatusUI::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

