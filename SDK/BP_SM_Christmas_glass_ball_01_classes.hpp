#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SM_Christmas_glass_ball_01

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SM_Christmas_glass_ball_01.BP_SM_Christmas_glass_ball_01_C
// 0x0030 (0x0250 - 0x0220)
class ABP_SM_Christmas_glass_ball_01_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_Christmas_glass_ball_03;                        // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Christmas_glass_ball_02;                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Christmas_glass_ball_01;                        // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         Rotation_speed;                                    // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SM_Christmas_glass_ball_01(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SM_Christmas_glass_ball_01_C">();
	}
	static class ABP_SM_Christmas_glass_ball_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SM_Christmas_glass_ball_01_C>();
	}
};
static_assert(alignof(ABP_SM_Christmas_glass_ball_01_C) == 0x000008, "Wrong alignment on ABP_SM_Christmas_glass_ball_01_C");
static_assert(sizeof(ABP_SM_Christmas_glass_ball_01_C) == 0x000250, "Wrong size on ABP_SM_Christmas_glass_ball_01_C");
static_assert(offsetof(ABP_SM_Christmas_glass_ball_01_C, UberGraphFrame) == 0x000220, "Member 'ABP_SM_Christmas_glass_ball_01_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SM_Christmas_glass_ball_01_C, SM_Christmas_glass_ball_03) == 0x000228, "Member 'ABP_SM_Christmas_glass_ball_01_C::SM_Christmas_glass_ball_03' has a wrong offset!");
static_assert(offsetof(ABP_SM_Christmas_glass_ball_01_C, SM_Christmas_glass_ball_02) == 0x000230, "Member 'ABP_SM_Christmas_glass_ball_01_C::SM_Christmas_glass_ball_02' has a wrong offset!");
static_assert(offsetof(ABP_SM_Christmas_glass_ball_01_C, SM_Christmas_glass_ball_01) == 0x000238, "Member 'ABP_SM_Christmas_glass_ball_01_C::SM_Christmas_glass_ball_01' has a wrong offset!");
static_assert(offsetof(ABP_SM_Christmas_glass_ball_01_C, DefaultSceneRoot) == 0x000240, "Member 'ABP_SM_Christmas_glass_ball_01_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_SM_Christmas_glass_ball_01_C, Rotation_speed) == 0x000248, "Member 'ABP_SM_Christmas_glass_ball_01_C::Rotation_speed' has a wrong offset!");

}

