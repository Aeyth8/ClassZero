#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterSCTBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_Emote_structs.hpp"
#include "Gait_structs.hpp"
#include "PlayerCustomizationStruct_structs.hpp"
#include "E_Emotes_structs.hpp"
#include "SCT_structs.hpp"
#include "SCT_classes.hpp"
#include "E_PlayerDestiny_structs.hpp"
#include "E_Characters_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "ExtinguisherTypes_structs.hpp"
#include "PassengerLogFactType_structs.hpp"
#include "AkAudio_structs.hpp"
#include "MovementMode_structs.hpp"
#include "E_interactionAnim_structs.hpp"
#include "E_interactionAnimState_structs.hpp"
#include "Stance_structs.hpp"
#include "IdleEntryState_structs.hpp"
#include "E_ScoreCategories_structs.hpp"
#include "RPC_Enum_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass CharacterSCTBP.CharacterSCTBP_C
// 0x1190 (0x1790 - 0x0600)
class ACharacterSCTBP_C : public AHumanoidCharacter
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0600(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UStaticMeshComponent*                   ScannerCube;                                       // 0x0608(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UControllerHapticsComponent*            ControllerHaptics;                                 // 0x0610(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 FacialHair;                                        // 0x0618(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Accessory;                                         // 0x0620(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Eyewear;                                           // 0x0628(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UThumbsVoteBillboardComponent_C*        ThumbsVoteBillboardComponent;                      // 0x0630(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialBillboardComponent*            VoteBillboard;                                     // 0x0638(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 PersonoidBody;                                     // 0x0640(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   OutlinePostProcessArea;                            // 0x0648(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SphereForCollision;                                // 0x0650(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Head;                                              // 0x0658(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UEmergencyMeetingComponent_C*           EmergencyMeetingComponent;                         // 0x0660(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleMontage;                                   // 0x0668(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   EmojiWidget;                                       // 0x0670(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           AkFeet;                                            // 0x0678(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SceneCenterOfBody;                                 // 0x0680(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_AquaticInteraction_C*               BP_AquaticInteraction;                             // 0x0688(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        HomingTarget;                                      // 0x0690(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialBillboardComponent*            LocalTalkIcon;                                     // 0x0698(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Talk_Icon_Personoid;                               // 0x06A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Talk_Icon_Temp;                                    // 0x06A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           AkNonOccluded;                                     // 0x06B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   FireLight;                                         // 0x06B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               OnFireParticleSystem;                              // 0x06C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialBillboardComponent*            NameBillboard;                                     // 0x06C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    NameSpringArm;                                     // 0x06D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UContextStaticMeshComponent*            ContextStaticMesh1;                                // 0x06D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Effects;                                           // 0x06E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               OxygenGain;                                        // 0x06E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Hair;                                              // 0x06F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Shoes;                                             // 0x06F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Pants;                                             // 0x0700(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Jacket;                                            // 0x0708(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak;                                                // 0x0710(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAnimComponent_SCT_C*                   AnimComponent_SCT;                                 // 0x0718(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         PersonoidTransformationTimeline_Scale_AC1D011F490C3C5643993B9D8C5D1638; // 0x0720(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         PersonoidTransformationTimeline_Percent_AC1D011F490C3C5643993B9D8C5D1638; // 0x0724(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            PersonoidTransformationTimeline__Direction_AC1D011F490C3C5643993B9D8C5D1638; // 0x0728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_729[0x7];                                      // 0x0729(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     PersonoidTransformationTimeline;                   // 0x0730(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         FireIntensity2_Fire_6A38972C472DF44A64D1BB8615AAA5B8; // 0x0738(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            FireIntensity2__Direction_6A38972C472DF44A64D1BB8615AAA5B8; // 0x073C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73D[0x3];                                      // 0x073D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FireIntensity2;                                    // 0x0740(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         FireIntensity_Char_5CD8DF5841E7B6BD254D92AD85664228; // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            FireIntensity__Direction_5CD8DF5841E7B6BD254D92AD85664228; // 0x074C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74D[0x3];                                      // 0x074D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FireIntensity;                                     // 0x0750(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         Frost_Intensity_Amount_E36FD6BE47BAF286294566AA41281FE3; // 0x0758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            Frost_Intensity__Direction_E36FD6BE47BAF286294566AA41281FE3; // 0x075C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75D[0x3];                                      // 0x075D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Frost_Intensity;                                   // 0x0760(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         ScannerScale_Amount_29434B8A4859CF879CA5DA9CB9AC19C4; // 0x0768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            ScannerScale__Direction_29434B8A4859CF879CA5DA9CB9AC19C4; // 0x076C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76D[0x3];                                      // 0x076D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ScannerScale;                                      // 0x0770(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         ScannerVisuals_Amount_2FDC1A014ADE3F76EDA07AB6ED41C6F6; // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            ScannerVisuals__Direction_2FDC1A014ADE3F76EDA07AB6ED41C6F6; // 0x077C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77D[0x3];                                      // 0x077D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ScannerVisuals;                                    // 0x0780(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         CameraOffset_Alpha_762778044358A42F7EA4FF82EB626EDB; // 0x0788(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            CameraOffset__Direction_762778044358A42F7EA4FF82EB626EDB; // 0x078C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78D[0x3];                                      // 0x078D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CameraOffset;                                      // 0x0790(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPower*                                 ItemSlot1Power;                                    // 0x0798(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPower*                                 ItemSlot2Power;                                    // 0x07A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWorldInteractableWI_C*                 InteractionWidget;                                 // 0x07A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugInteraction;                                  // 0x07B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B1[0x7];                                      // 0x07B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UContextStaticMeshComponent*, class UWorldInteractableWI_C*> InteractionWidgets;                                // 0x07B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	float                                         OldOldValue;                                       // 0x0808(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_80C[0x4];                                      // 0x080C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCoopActorWaiting_C*                    CoopActorTimer;                                    // 0x0810(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFinalFantSkillcheckWI_C*               Skillcheck;                                        // 0x0818(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACoopActorSCT_C*                        CoopActorBeingInteractedWith;                      // 0x0820(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Characters                                  CharacterPreset;                                   // 0x0828(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_829[0x7];                                      // 0x0829(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerCustomizationStruct             PlayerCustomization;                               // 0x0830(0x00C0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          Female;                                            // 0x08F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F1[0x7];                                      // 0x08F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               SkinMaterialDynamic;                               // 0x08F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UTexture*>                       ClothMasks;                                        // 0x0900(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USkeletalMesh*                          UpperBodyMesh;                                     // 0x0910(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          LowerBodyMesh;                                     // 0x0918(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          FeetMesh;                                          // 0x0920(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            HairStaticMesh;                                    // 0x0928(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      UpperBodyMaterial;                                 // 0x0930(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      LowerBodyMaterial;                                 // 0x0938(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      FeetMaterial;                                      // 0x0940(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      SkinMaterial;                                      // 0x0948(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HairColor;                                         // 0x0950(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PlayerDestiny                               CharacterDestiny;                                  // 0x0960(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_961[0x7];                                      // 0x0961(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 TestCanvas;                                        // 0x0968(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CharacterFire;                                     // 0x0970(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnFire;                                            // 0x0978(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_979[0x7];                                      // 0x0979(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FVector, class UWorldInteractableWI_C*> VectorToWIInteractable;                            // 0x0980(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         Count;                                             // 0x09D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ContextUI_MergeThreshold;                          // 0x09D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 SwitchGroupMaterial;                               // 0x09D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         FootstepCount;                                     // 0x09E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9EC[0x4];                                      // 0x09EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class Ubp_wi_Puzzle_C*                        WI_SymbolPuzzle;                                   // 0x09F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASymbolPuzzleBP_C*                      ActiveSymbolPuzzle;                                // 0x09F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FireStacks;                                        // 0x0A00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A04[0x4];                                      // 0x0A04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      GrabbingCharacter;                                 // 0x0A08(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CarriedCorpse;                                     // 0x0A10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A18[0x8];                                      // 0x0A18(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   Freezing;                                          // 0x0A20(0x0550)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FPostProcessSettings                   UnFreezing;                                        // 0x0F70(0x0550)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UMaterialInstanceDynamic*               ScreenFrostMaterial;                               // 0x14C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AlcoholPercent;                                    // 0x14C8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14CC[0x4];                                     // 0x14CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatineeCameraShake*                    DrunkCameraShake;                                  // 0x14D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DrunkScreenEffect;                                 // 0x14D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ScreenBurningMaterial;                             // 0x14E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerState*>                   AllPlayersExceptSelf;                              // 0x14E8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class FText                                   HiddenAgendatext;                                  // 0x14F8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsDrowned;                                         // 0x1510(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_1511[0x7];                                     // 0x1511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkRtpc*                                RTPC_FootstepVol;                                  // 0x1518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkRtpc*                                RTPC_Footstep_Vol_Offset;                          // 0x1520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkRtpc*                                RTPC_3D;                                           // 0x1528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkRtpc*                                RTPC_DrunkLevel;                                   // 0x1530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkRtpc*                                RTPC_MovementSpeed;                                // 0x1538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkRtpc*                                RTPC_Wetness;                                      // 0x1540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionType                              InteractingAnim;                                   // 0x1548(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          DisableCameraShake;                                // 0x1549(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_154A[0x2];                                     // 0x154A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EmergencyRTPClevel;                                // 0x154C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShaking;                                         // 0x1550(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1551[0x7];                                     // 0x1551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatineeCameraShake*                    CameraShakeRef;                                    // 0x1558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CurrentPhysMat;                                    // 0x1560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFrozen;                                          // 0x1568(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          NoExtinguishAudio;                                 // 0x1569(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          beingGrabbed;                                      // 0x156A(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          IsGrabbing;                                        // 0x156B(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          IsPushing;                                         // 0x156C(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_156D[0x3];                                     // 0x156D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAgendaControllerEvent*                 Event;                                             // 0x1570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOxygenPot;                                       // 0x1578(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          IsThrowing;                                        // 0x1579(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          IsElectrocuted;                                    // 0x157A(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_157B[0x5];                                     // 0x157B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UEmote_Base_C*>                  EmoteComponents;                                   // 0x1580(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UAkAudioEvent*                          CooldownSound;                                     // 0x1590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          NotiOxygenWarning;                                 // 0x1598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 MovementMode;                                      // 0x15A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 MovementAction;                                    // 0x15B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UPhysicalMaterial*>              SurfaceMaterials;                                  // 0x15C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         AudioMoveSpeed;                                    // 0x15D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PickedUpUniquePower;                               // 0x15D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15D5[0x3];                                     // 0x15D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkRtpc*                                RTPC_Killer_Residents;                             // 0x15D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkRtpc*                                RTPC_Killer_Personoid;                             // 0x15E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnGrabbingActorChanged;                            // 0x15E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FActiveGameplayEffectHandle            SlowWalkHandle;                                    // 0x15F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_MaleCustomizationSettings_C*        CustomizationOptions_9;                            // 0x1600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CustomizationSettings_C*            CustomizationOptions;                              // 0x1608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemWheelV2WI_C*                       ItemWheelRef;                                      // 0x1610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BorderColor;                                       // 0x1618(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCT*                          CoopKiller;                                        // 0x1628(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MI_Name;                                           // 0x1630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomizationOptions*                  AppearanceSettings;                                // 0x1638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEmoteWheelWI_C*                        EmoteWheelWI;                                      // 0x1640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_Emote>                       PlayerEmotes;                                      // 0x1648(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          CustomizationSet;                                  // 0x1658(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1659[0x3];                                     // 0x1659(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudCustomizationPayload             CustomizationSettings;                             // 0x165C(0x0044)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TArray<class FName>                           PlaceholderEmoteNames;                             // 0x16A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   Corpse_Bone_Socket;                                // 0x16B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOxygenState                                  OxygenState;                                       // 0x16B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16B9[0x7];                                     // 0x16B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          Footstep_Sound;                                    // 0x16C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          Jump_Sound;                                        // 0x16C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          Land_Sound;                                        // 0x16D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          Stop_Sound;                                        // 0x16D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      LastDisablingCharacter;                            // 0x16E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      LastDisablingCharacterByButton;                    // 0x16E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CustomizationSettings_C*            CustomizationConfig;                               // 0x16F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnKillingActorChanged;                             // 0x16F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          GrantedScoreElsewhere;                             // 0x1708(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1709[0x7];                                     // 0x1709(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMesh*>                  SkeletalMeshes;                                    // 0x1710(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UMaterialInterface*>             SkeletalMaterial;                                  // 0x1720(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnBecameUnconscious;                               // 0x1730(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class UMaterialInstanceDynamic*>       CustomizationDynamicMaterials;                     // 0x1740(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          PersonoidAppearance;                               // 0x1750(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1751[0x7];                                     // 0x1751(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          Head_Sound;                                        // 0x1758(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          Upper_Body_Sound;                                  // 0x1760(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          Lower_Body_Sound;                                  // 0x1768(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACharacterSCTBP_C*>              ClosestCharactersOnDeath;                          // 0x1770(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             On_PIESetCustomization;                            // 0x1780(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnGrabbingActorChanged__DelegateSignature(class AActor* NewGrabbingActor);
	void OnKillingActorChanged__DelegateSignature(class ACharacterSCT* NewKillingActor);
	void OnBecameUnconscious__DelegateSignature();
	void On_PIESetCustomization__DelegateSignature(const class FString& PlayerAccelByteID);
	void ExecuteUbergraph_CharacterSCTBP(int32 EntryPoint);
	void Owner_Show_Coop_Actor_Waiting();
	void Remove_All_Coop_Actor_Waiting_And_Skillchecks();
	void Owner_Coop_Actor_Show_Waiting();
	void Coop_Actor_Start_ProgressBar(class ACoopActorSCT_C* CoopActor, float Duration);
	void Start_Skillcheck();
	void Failed_Skillcheck();
	void Server_Fail_Skillcheck(class ACoopActorSCT_C* Target);
	void Coop_Actor_Start_Waiting();
	void Close_Show_Skillcheck_Audio_Gate();
	void Hit_By_Champagne_Bottle(float Time);
	void Knock_Unconscious();
	void Get_Up_From_Champagne_Knockout();
	void Inventory_Changed();
	void On_State_Changed(EOxygenState NewState);
	void Scan_Player_Start();
	void Scan_Player_Stop();
	void Engage_Over_Shoulder_View();
	void Disengage_Over_Should_View();
	void PIE_LoginClient();
	void OnPIEClientLoggedIn();
	void SetCustomizationPostOnSuccess(const struct FFCTCloudCustomizationGender& Customization, bool IsMale, const class FString& PlayerAccelByteID);
	void PIE_SetCustomization();
	void Force_Down();
	void Toggle_Ice_Gliding(bool Activate);
	void ReattachMesh();
	void TryReattachMeshToCapsule(bool Cancel);
	void K2_OnSetCustomization(const class FString& PlayerAccelByteID);
	void MulticastPersonoidTransformation(bool ToPersonoid);
	void ServerPersonoidTransformation(bool ToPersonoid);
	void PersonoidTransformationEffect(bool ToPersonoid, float TransformDuration);
	void BndEvt__ContextStaticMesh1_K2Node_ComponentBoundEvent_0_ToggleHighlightEffect__DelegateSignature(bool ShouldShow);
	void K2_FellOutOfWorld();
	void CameraWallTakePictureReroute(class ACameraWallSCTBP_C* CameraWall, const struct FTransform& CaptureTargetTransform);
	void CameraWallEndFullScreenReroute(class ACameraWallSCTBP_C* CameraWall);
	void Set_Releasing_Character_To_Null();
	void Timer_Disabling_Character_By_Button();
	void Out_Of_Oxygen();
	void Emergency_Camerashake();
	void Set_Color_For_Name_PlayerState(class ASCTPlayerState* PlayerState_0);
	void Set_Color_For_Name();
	void OnSetActorVisible();
	void ReceiveTick(float DeltaSeconds);
	void Owner_Unlock_Achievement(const class FString& StatCode);
	void Server_Unlock_Achievement(const class FString& StatCode);
	void OnMoveSpeedChanged(float MovementSpeed);
	void Owner_Post_Message_Self(const class FText& Text);
	void ReceivePossessed(class AController* NewController);
	void K2_OnDestiny(const struct FDestiny& Destiny);
	void K2_InitializeResident();
	void K2_InitializePersonoid();
	void InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0(float AxisValue);
	void K2_OnRepPlayerState(const bool IsValid);
	void BndEvt__ContextInputManager_K2Node_ComponentBoundEvent_0_InputChangedDelegate__DelegateSignature(TArray<struct FBoundContextSpec>& SpecArray);
	void ReceiveBeginPlay();
	void Multi_Shield_Cosmetics();
	void On_Talking_Spectator_Channel(const bool IsTalking, const bool IsLocallyControlled_0);
	void On_Talking_Personoid_Channel(const bool IsTalking, const bool IsLocallyControlled_0);
	void On_Talking_Local_Channel(const bool IsTalking, const bool IsLocallyControlled_0);
	void DisplayAirlockWidgetBPI(bool Show);
	void DecayAlcohol();
	void AddAlcoholBPI(float InputValue, bool Delay);
	void TimerExpired();
	void ForceLocation();
	void AllReleaseCorpse(class AActor* Target);
	void AllCarryCorpse(class AActor* Target);
	void CarryingCorpseBPI(bool InputValue);
	void BeingCarriedCorpseBPI(bool InputValue);
	void ServerCarryCorpse();
	void OwningTeleport(const struct FRotator& NewRotation);
	void TeleportLocationRotationBPI(const struct FVector& TargetLocation, const struct FRotator& TargetRotation);
	void EnableIK_AimDelayBPI();
	void ServerForceRagdoll(bool To_Ragdoll);
	void LaunchRagdollBPI(const struct FVector& TargetLocation, const struct FVector& Direction);
	void SetCharacterRotationBPI(ERPC_Enum RPC, bool EnableRotationOverride, const struct FRotator& Rotation);
	void EnableIKandAimOffsetBPI(bool Enable);
	void SetAimingStateBPI(bool Aiming, uint8 AimType);
	void RagdollCharacterBPI(bool ToRagdoll, float Duration, const struct FVector& OptionalImpulse, bool Force);
	void OnLanded(const struct FHitResult& Hit);
	void K2_OnEndCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust);
	void K2_OnStartCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust);
	void K2_OnMovementModeChanged(Engine::EMovementMode PrevMovementMode, Engine::EMovementMode NewMovementMode, uint8 PrevCustomMode, uint8 NewCustomMode);
	void Multi_Get_Killed_By_Overdose();
	void Reset_Do_Once_Fire_Score();
	void Push_Player();
	void Remove_Burning_Cosmetics();
	void Show_Burning_Cosmetics();
	void Force_Extinguish(bool NoExtinguishAudio_0);
	void Remove_Downed_Death_Timer();
	void Show_Downed_Death_Timer(float Duration, const class FString& Description, const class FText& DescriptionText);
	void Remove_Freezing_Cosmetics();
	void Show_Freezing_Cosmetics(float Duration);
	void Remove_Drowning_Cosmetics();
	void Showe_Drowning_Cosmetics(float Duration);
	void Extinguish_Hit_Character_Do_Once_Reset();
	void Extinguish_Hit_Character(class ACharacter* Character, float Damage);
	void Ignite_Character(float Duration);
	void Die_From_Overdose(const struct FVector& Optional_Impulse);
	void Cancel_Overdosed();
	void Begin_Beging_Overdosed();
	void Killer_Move_Into_Overdose_Location();
	void Cancel_Being_Coop_Killed();
	void Die_From_Coop_Kill();
	void Begin_Being_Coop_Killed();
	void Grabber_Move_Into_Grab_Location();
	void Stop_Beging_Grabbed();
	void Begin_Being_Grabbed();
	void OnStopCriticalGlobalOxygenHaptics();
	void OnStartCriticalGlobalOxygenHaptics();
	void Owner_Show_Escaped_Widget();
	void Audio_Drop_Carry_Player();
	void Audio_Carry_Player();
	void K2_OnWetnessChanged(float Wetness);
	void Audio_Play_Jump();
	void Audio_Play_Land();
	void Audio_Play_Footstep_New(const class FString& MovementType);
	void Audio_Waiting_Timer_Stop();
	void WaitingAfterDelay();
	void Audio_Waiting_Timer_Start();
	void Audio_Player_On_Fire();
	void Audio_Drowning_Stop();
	void Audio_Drowning_Start();
	void Set_Switch_Material(const class FString& Selection);
	void Audio_Freezing_Stop();
	void Audio_Freezing_Start();
	void Owner_Score_Widget(E_ScoreCategories E_ScoreCategory, int32 Points);
	void BndEvt__AbilitySystemComponent_K2Node_ComponentBoundEvent_1_PowerInputChangedDelegate__DelegateSignature(class UPower* Power);
	void BndEvt__AbilitySystemComponent_K2Node_ComponentBoundEvent_0_PowerInputChangedDelegate__DelegateSignature(class UPower* Power);
	void Owner_Audio_Auto_Post_Ak_Comp_At_Location(class UAkAudioEvent* AkEvent, const struct FVector& Location);
	void Audio_push_player();
	void Audio_Drunk();
	void Multicast_Audio_Pickup(class UAkAudioEvent* AkEvent);
	void Audio_Stop_Drinking();
	void Audio_Drinking();
	void Audio_Fire_Extinguished();
	void Audio_Hit_By_Extinguisher();
	void Owner_Audio_Play_Event_On_This_Character(class UAkAudioEvent* AkEvent);
	void Audio_Coop_Kill_Begin_Stop();
	void Audio_release_player();
	void Audio_grab_player();
	void No_SubMaterial_sub2(bool MaxWet);
	void Liquid(bool MaxWet);
	void No_SubMaterial();
	void Glass();
	void ClearFootstepCountTimer();
	void DecrementFootstepCount();
	void TriggerFootstepRunning();
	void TriggerFootstepsSneaking();
	void Reset_Coop_Kill_End();
	void Reset_Coop_Kill_Begin();
	void Audio_Coop_Kill_End();
	void Audio_Coop_Kill_Begin();
	void Audio_Take_Drink();
	void Audio_Play_Footstep(bool Sneak);
	void Hacky_Hack_Close_Symbol_Puzzle();
	void Server_SymbolPuzzleClosed();
	void Owner_Close_Symbol_Puzzle();
	void Remove_All_Waiting_For_Partner_Widget();
	void Show_Waiting_For_Partner_Widget();
	void Close_Symbol_Puzzle_For_All();
	void Close_Symbol_Puzzle();
	void Server_Symbol_Puzzle_Solved(bool Number1);
	void Server_Picked_Up_Audio(class UAkAudioEvent* AK_Event);
	void Owner_Show_Empty_Picked_Up_Widget(class UContextStaticMeshComponent* ContextStaticMesh);
	void Owner_Show_Picked_Up_Widget(class UPowerData* PowerData, bool InventoryFull, class UContextStaticMeshComponent* ContextStaticMesh);
	void Owner_Update_Equipment_Slot_Widget(class UPower* Power);
	void Equip_Item(class UPower* Power, EInventorySlotID SlotId);
	void SetDestinyBPI(EFate Fate, const struct FVector& Impulse);
	void PassengerLogVoteBPI(class AActor* AirlockTarget, class ACharacter* TargetCharacter, class ACharacter* VotingCharacter);
	void ServerPassengerLogVote(class AActor* AirlockTarget, class ACharacter* TargetCharacter, class ACharacter* VotingCharacter);
	void ServerTrustVote(class AActor* TargetAirlock, bool Yes, class ACharacter* VotingCharacter);
	void TrustVoteBPI(class AActor* TargetAirlock, bool Yes, class ACharacter* VotingCharacter);
	void ServerEliminationVote(class AActor* TargetAirlock, class ACharacter* Character, class ACharacter* VotingCharacter);
	void EliminationVoteBPI(class AActor* AirlockTarget, class ACharacter* VotedCharacter, class ACharacter* VotingCharacter);
	void Stop_Montaging();
	void Add_Emotes_To_Emote_Array();
	void Multi_Emote(const struct FS_Emote& Emote, class ACharacterSCTBP_C* Character);
	void Reset_Emote_Cooldown();
	void Server_Emote(const struct FS_Emote& Emote);
	void Run_Emote(int32 EmoteIntInWheel);
	void Remove_Emote_Components();
	void Add_Emote_Component(E_Emotes Emote);
	void AnimNotifyIdleEntryStateBPI(EIdleEntryState IdleEntryState);
	void AnimNotifyTurnInPlaceBPI(class UAnimMontage* TurnInPlaceMontage, bool ShouldTurnInPlace, bool TurningInPlace, bool TurningRight);
	void AnimNotifyPivotBPI(const struct FPivotParams& PivotParameters);
	void PlayGetUpAnimBPI(bool FaceDown);
	void SavePoseSnapshotBPI(class FName PoseName);
	void SetGaitBPI(EGait NewGait);
	void SetMovementModeBPI(MovementMode::EMovementMode NewMovementMode);
	void SetAimingBPI(bool Aiming, uint8 AimType);
	void PlayEmoteBPI(uint8 EmoteID);
	void ToRagdollBPI(bool ToRagdoll, const struct FVector& OptionalImpulse, bool Force);
	void ReinitBPI();
	void ShouldSprintBPI(bool ShouldSprint);
	void LandedBPI(const struct FHitResult& Hit);
	void SetStanceBPI(EStance NewStance);
	void MovementModeChangedBPI(Engine::EMovementMode PrevMovementMode, Engine::EMovementMode NewMovementMode, uint8 PrevCustomMode, uint8 NewCustomMode);
	void AddCharacterRotationBPI(const struct FRotator& AddAmount);
	void LogOutBPI();
	void InitiateAirlockSequenceBPI();
	void StartElevatorBPI();
	void OnSuccess_29AD0CAB4DB0BF046014A39EE29FD9A9(const struct FFCTCloudCustomizationGender& Payload, bool IsMale, int32 Code, const class FString& Message);
	void OnError_29AD0CAB4DB0BF046014A39EE29FD9A9(int32 Code, const class FString& Message);
	void OnSuccess_302DBEE4465F643C3F8F1F978FCF93E2(const struct FAccelByteUserPresenceData& Payload, int32 Code, const class FString& Message);
	void OnError_302DBEE4465F643C3F8F1F978FCF93E2(const struct FAccelByteUserPresenceData& Payload, int32 Code, const class FString& Message);
	void OnSuccess_1233531A41373DBD3993A09096D388D3(const struct FFCTCloudCustomizationGender& Payload, bool IsMale, int32 Code, const class FString& Message);
	void OnError_1233531A41373DBD3993A09096D388D3(int32 Code, const class FString& Message);
	void Success_30EC041F4468C700F95F6F84503617E3(class UFCTAchievement* AchievementInfo, const class FString& Message);
	void OnError_30EC041F4468C700F95F6F84503617E3(const class FString& Message);
	void InpActEvt_Crouch_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_Crouch_K2Node_InputActionEvent_1(const struct FKey& Key);
	void OnCompleted_F6F4253F4EB102CB8BB478860CDBED32(class FName NotifyName);
	void OnBlendOut_F6F4253F4EB102CB8BB478860CDBED32(class FName NotifyName);
	void OnInterrupted_F6F4253F4EB102CB8BB478860CDBED32(class FName NotifyName);
	void OnNotifyBegin_F6F4253F4EB102CB8BB478860CDBED32(class FName NotifyName);
	void OnNotifyEnd_F6F4253F4EB102CB8BB478860CDBED32(class FName NotifyName);
	void ScannerVisuals__UpdateFunc();
	void ScannerVisuals__FinishedFunc();
	void ScannerScale__UpdateFunc();
	void ScannerScale__FinishedFunc();
	void CameraOffset__UpdateFunc();
	void CameraOffset__FinishedFunc();
	void PersonoidTransformationTimeline__UpdateFunc();
	void PersonoidTransformationTimeline__FinishedFunc();
	void FireIntensity2__UpdateFunc();
	void FireIntensity2__FinishedFunc();
	void FireIntensity__UpdateFunc();
	void FireIntensity__FinishedFunc();
	void Frost_Intensity__UpdateFunc();
	void Frost_Intensity__FinishedFunc();
	void UserConstructionScript();
	void OxygenLow();
	void OxygenNormal();
	void OxygenEmpty();
	void RemoveAllInteractionWidgets();
	void PrintInteractionSpec(class UActorComponent* ContextStaticMesh, const class FString& Description, const struct FKey& Key);
	void CreateNewWidgetForWorldInteraction();
	void ReturnSplitSpecVariables(const struct FBoundContextSpec& BoundContextSpec, class UContextStaticMeshComponent** Target, struct FKey* Key);
	void CreateCustomizations();
	void Initialization();
	void Set_Name_Billboard(const class FString& NewName);
	void Low_Oxygen_Warning_Stop();
	void LowOxygenWarningStart();
	void InitializePersonoid();
	void InitializeResident();
	void OnRep_OnFire();
	void CreateNewInteractionWidget(const struct FBoundContextSpec& BoundContextSpec, class UWorldInteractableWI_C** Widget);
	void AddEntryToInteractionWidget(const struct FBoundContextSpec& BoundContextSpec, class UWorldInteractableWI_C* WorldInteractableWidget);
	void AddKeysToInteractionMap(const struct FBoundContextSpec& BoundContextSpec);
	void RebuildContextUI(TArray<struct FBoundContextSpec>& InputPin);
	void GetNameOfPhysMatBelow(class UPhysicalMaterial** PhysMat);
	void SetRenderCustomDepthCustom(bool On);
	void BecomeUnconscious(const struct FVector& Optional_Impulse, bool Force);
	void Become_Conscious(bool Force);
	void GetAliveTemp(TArray<class ACharacter*>* AlivePlayers);
	void CreateCharacterIntroWidget();
	void ScoreForAirlockVote(class ACharacter* VotedCharacter, class ACharacter* VotingCharacter);
	void OnRep_AlcoholPercent();
	float GenerateSineWave(float Period);
	void HandleNameChanged(const class FString& NewName);
	void UpdateItemWheelEntry();
	void GetAllOtherPlayers(TArray<class APlayerState*>* AllPlayersExceptSelf_0);
	void GetHiddenAgenda(class FText* HiddenAgenda);
	void Hidden_ParticipateInCoopKill(class FText* HiddenAgenda);
	void Hidden_ScanAPlayer(class FText* HiddenAgenda);
	void Hidden_MakeSureIsEliminated(class FText* HiddenAgenda);
	void Hidden_MakeSureIsTheMostDownVoted(class FText* HiddenAgenda);
	void Hidden_Hit5WithBottle(class FText* HiddenAgenda);
	void GetRandomPlayerThatIsNotSelf(class APlayerState** Output);
	void OnRep_Drowned();
	void SetDrowned();
	void OnRep_InteractingAnim();
	void LowOxygenAnimState(bool LowOxygen);
	void Emergency();
	void IsNewMatTheOldMat(class UPhysicalMaterial* PhysMat, bool* IsTheSame);
	void FadePlayerUI(bool Show);
	void OnRep_IsFrozen();
	void SetBurned();
	void OnRep_beingGrabbed();
	void OnRep_isGrabbing();
	void OnRep_isPushing();
	void OnRep_isOxygenPot();
	void OnRep_isThrowing();
	void UpdateItemSlotWidgetIfPowerNotValid(EInventorySlotID SlotId);
	void SetElectrocuted();
	void Audio_Set_Gender(bool IsMale);
	void Audio_Set_Clothing_Switch();
	void Audio_Set_Switch_Movement_Type(const class FString& MovementType);
	void Audio_Set_Switch_Surface_Material();
	void Audio_Set_3D_RTPC();
	void Audio_Set_Wetness_RTPC(float Float);
	void Audio_Set_Players_Threat_Levels_RTPC(float ThreatLevel, class ACharacterSCTBP_C* Character);
	void Audio_Killer_Mode(bool On);
	void OnRep_AudioFootstep();
	void SetGrabbingActor(class ACharacterSCTBP_C* GrabbingActor);
	void SetGait(float MoveSpeed);
	void Set_Customization_Appearance(const struct FCloudCustomizationPayload& CustomizationPayload);
	void SetCustomizationItem(class UObject* InMesh, const struct FCloudCustomizationSetting& CustomizationSetting, TArray<struct FPlayerCustomizationItem>& CustomizationOptionsList, TArray<class UTexture2D*>& Masks);
	void Interaction_Anim(E_interactionAnim Animation, E_interactionAnimState State);
	void InitializeCustomizationOptions(bool IsMale);
	void ApplyCustomizationMasks(const struct FCloudCustomizationPayload& CustomizationPayload);
	void CosmeticsForMontage(const struct FS_Emote& EmoteDetails, const class AActor* OtherActor);
	void SetAndPlayEmoji(const struct FS_Emote& EmoteDetails);
	void StopMontage();
	void InitializeNameBillboard();
	void OnIdentificationColorChanged(class APlayerState* PlayerState_0, const struct FLinearColor& Value);
	bool CharacterHasGATag(const struct FGameplayTagContainer& Tags_0);
	void Notify_Character_Widget_Of_Player_State();
	void SetOxygenState(EOxygenState Selection);
	void OxygenCritical();
	void DropPassengerLogWithInfo();
	void GrantScoreToKiller(EFate Fate);
	void UpdateFateAnalytics(EFate Fate);
	void Set_Character_Configuration(const struct FFCTCloudCustomizationGender& Customization, bool IsMale);
	void NewFunction_0(bool Condition);
	void SetCoopKiller(class ACharacterSCT* New_Killing_Actor);
	void SpawnCharacterCameraHider();
	void SetFrozen();
	void GetCustomDepthMeshes(TArray<class UPrimitiveComponent*>* Meshes);
	void SetDeadAnim();
	void CreateMissingDynamicMaterials();
	void IsInRecentlyPlayedWithList(const class FString& UserAccelByteId, const struct FFCTFriendsList& RecentlyPlayedWithList, bool* InRecentlyPlayedWith);
	void Vivox_Talker_Event_Bindings();
	void PrintCustomizationError(const class FString& UserId, int32 Code, const class FString& Message, bool bSuccess, float DisplayDuration);
	struct FVector2D GetGamepadAxis();
	struct FVector2D GetMouseAxis();
	void UpdatePlatformIcon(const class FString& PlatformId);
	void GetPlatformTexture(const class FString& Selection, class UTexture2D** IconTexture);
	void ToggleCharacterVisibility(bool bNewVisibility);
	void EnableCharacterVisibilityInPIE();
	void GetCloseCharactersOnDeath(TArray<class ACharacterSCTBP_C*>* Characters);
	void TryRemoveShieldGE(bool* WasShielded);
	void GetEssentialValuesBPI(const struct FVector& InVelocity, bool InIsMoving, bool InHasMovementInput, bool InIsAiming, uint8 InAimType, float InDirection, float InCharacterRotationDifference, float InVelocityDifference, float InAimYawDelta, float InAimYawRate, const struct FRotator& InCharacterRotation, const struct FRotator& InLookingRotation, const struct FRotator& InLastVelocityRotation, const struct FRotator& InLastMovementInputRotation, bool InCarryingCorpse, bool InBeingCarriedCorpse, float InAlcoholPercent, struct FVector* Velocity, bool* IsMoving, bool* HasMovementInput, bool* IsAiming, uint8* AimType, float* Direction, float* CharacterRotationDifference, float* VelocityDifference, float* AimYawDelta, float* AimYawRate, struct FRotator* CharacterRotation, struct FRotator* LookingRotation, struct FRotator* LastVelocityRotation, struct FRotator* LastMovementInputRotation, bool* CarryingCorpse, bool* BeingCarriedCorpse, float* AlcoholPercent_0);
	void GetSetupValuesBPI(float InCrouchSpeed, float InWalkSpeed, float InRunSpeed, float InSprintSpeed, bool InFemale, float* CrouchSpeed, float* WalkSpeed, float* RunSpeed, float* SprintSpeed, bool* Female_0);
	void GetPlayerNameBPI(class FString* Name_0);
	void IsPersonoidBPI(bool* IsPersonoid);
	void GetHeldLogInfoBPI(EPassengerLogFactType* FactType, TArray<struct FPlayerData>* Players, bool* HasLog);
	void IsAliveBPI(bool* Alive);
	bool IsFemaleBPI();
	class UAbilitySystemComponent* GetAbilitySystemComponentBPI();
	class UTexture2D* GetPortrait();
	class USceneComponent* GetHomingTargetBPI();
	void IsPlayerBlocked(class APlayerState* Player, bool* bLocked);
	void IsPlayerConsoleCommunicationBlocked(class APlayerState* Player, bool* bLocked);
	void HitByExtinguisher(class ACharacter* Character, float Damage, ExtinguisherTypes Extinguisher_Type, bool* Void);
	void HitByFire(bool* Void);

	bool K2_CanCrouch() const;
	void GetGrabbingActor(class ACharacterSCTBP_C** GrabbingCharacter_0) const;
	void GetCoopKiller(class ACharacterSCT** CoopKiller_0) const;
	void GetAkComponent(class UAkComponent** AkComponent) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CharacterSCTBP_C">();
	}
	static class ACharacterSCTBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACharacterSCTBP_C>();
	}
};
static_assert(alignof(ACharacterSCTBP_C) == 0x000010, "Wrong alignment on ACharacterSCTBP_C");
static_assert(sizeof(ACharacterSCTBP_C) == 0x001790, "Wrong size on ACharacterSCTBP_C");
static_assert(offsetof(ACharacterSCTBP_C, UberGraphFrame) == 0x000600, "Member 'ACharacterSCTBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, ScannerCube) == 0x000608, "Member 'ACharacterSCTBP_C::ScannerCube' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, ControllerHaptics) == 0x000610, "Member 'ACharacterSCTBP_C::ControllerHaptics' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, FacialHair) == 0x000618, "Member 'ACharacterSCTBP_C::FacialHair' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Accessory) == 0x000620, "Member 'ACharacterSCTBP_C::Accessory' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Eyewear) == 0x000628, "Member 'ACharacterSCTBP_C::Eyewear' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, ThumbsVoteBillboardComponent) == 0x000630, "Member 'ACharacterSCTBP_C::ThumbsVoteBillboardComponent' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, VoteBillboard) == 0x000638, "Member 'ACharacterSCTBP_C::VoteBillboard' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, PersonoidBody) == 0x000640, "Member 'ACharacterSCTBP_C::PersonoidBody' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, OutlinePostProcessArea) == 0x000648, "Member 'ACharacterSCTBP_C::OutlinePostProcessArea' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, SphereForCollision) == 0x000650, "Member 'ACharacterSCTBP_C::SphereForCollision' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Head) == 0x000658, "Member 'ACharacterSCTBP_C::Head' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, EmergencyMeetingComponent) == 0x000660, "Member 'ACharacterSCTBP_C::EmergencyMeetingComponent' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, ParticleMontage) == 0x000668, "Member 'ACharacterSCTBP_C::ParticleMontage' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, EmojiWidget) == 0x000670, "Member 'ACharacterSCTBP_C::EmojiWidget' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, AkFeet) == 0x000678, "Member 'ACharacterSCTBP_C::AkFeet' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, SceneCenterOfBody) == 0x000680, "Member 'ACharacterSCTBP_C::SceneCenterOfBody' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, BP_AquaticInteraction) == 0x000688, "Member 'ACharacterSCTBP_C::BP_AquaticInteraction' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, HomingTarget) == 0x000690, "Member 'ACharacterSCTBP_C::HomingTarget' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, LocalTalkIcon) == 0x000698, "Member 'ACharacterSCTBP_C::LocalTalkIcon' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Talk_Icon_Personoid) == 0x0006A0, "Member 'ACharacterSCTBP_C::Talk_Icon_Personoid' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Talk_Icon_Temp) == 0x0006A8, "Member 'ACharacterSCTBP_C::Talk_Icon_Temp' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, AkNonOccluded) == 0x0006B0, "Member 'ACharacterSCTBP_C::AkNonOccluded' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, FireLight) == 0x0006B8, "Member 'ACharacterSCTBP_C::FireLight' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, OnFireParticleSystem) == 0x0006C0, "Member 'ACharacterSCTBP_C::OnFireParticleSystem' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, NameBillboard) == 0x0006C8, "Member 'ACharacterSCTBP_C::NameBillboard' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, NameSpringArm) == 0x0006D0, "Member 'ACharacterSCTBP_C::NameSpringArm' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, ContextStaticMesh1) == 0x0006D8, "Member 'ACharacterSCTBP_C::ContextStaticMesh1' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Effects) == 0x0006E0, "Member 'ACharacterSCTBP_C::Effects' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, OxygenGain) == 0x0006E8, "Member 'ACharacterSCTBP_C::OxygenGain' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Hair) == 0x0006F0, "Member 'ACharacterSCTBP_C::Hair' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Shoes) == 0x0006F8, "Member 'ACharacterSCTBP_C::Shoes' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Pants) == 0x000700, "Member 'ACharacterSCTBP_C::Pants' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Jacket) == 0x000708, "Member 'ACharacterSCTBP_C::Jacket' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Ak) == 0x000710, "Member 'ACharacterSCTBP_C::Ak' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, AnimComponent_SCT) == 0x000718, "Member 'ACharacterSCTBP_C::AnimComponent_SCT' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, PersonoidTransformationTimeline_Scale_AC1D011F490C3C5643993B9D8C5D1638) == 0x000720, "Member 'ACharacterSCTBP_C::PersonoidTransformationTimeline_Scale_AC1D011F490C3C5643993B9D8C5D1638' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, PersonoidTransformationTimeline_Percent_AC1D011F490C3C5643993B9D8C5D1638) == 0x000724, "Member 'ACharacterSCTBP_C::PersonoidTransformationTimeline_Percent_AC1D011F490C3C5643993B9D8C5D1638' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, PersonoidTransformationTimeline__Direction_AC1D011F490C3C5643993B9D8C5D1638) == 0x000728, "Member 'ACharacterSCTBP_C::PersonoidTransformationTimeline__Direction_AC1D011F490C3C5643993B9D8C5D1638' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, PersonoidTransformationTimeline) == 0x000730, "Member 'ACharacterSCTBP_C::PersonoidTransformationTimeline' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, FireIntensity2_Fire_6A38972C472DF44A64D1BB8615AAA5B8) == 0x000738, "Member 'ACharacterSCTBP_C::FireIntensity2_Fire_6A38972C472DF44A64D1BB8615AAA5B8' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, FireIntensity2__Direction_6A38972C472DF44A64D1BB8615AAA5B8) == 0x00073C, "Member 'ACharacterSCTBP_C::FireIntensity2__Direction_6A38972C472DF44A64D1BB8615AAA5B8' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, FireIntensity2) == 0x000740, "Member 'ACharacterSCTBP_C::FireIntensity2' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, FireIntensity_Char_5CD8DF5841E7B6BD254D92AD85664228) == 0x000748, "Member 'ACharacterSCTBP_C::FireIntensity_Char_5CD8DF5841E7B6BD254D92AD85664228' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, FireIntensity__Direction_5CD8DF5841E7B6BD254D92AD85664228) == 0x00074C, "Member 'ACharacterSCTBP_C::FireIntensity__Direction_5CD8DF5841E7B6BD254D92AD85664228' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, FireIntensity) == 0x000750, "Member 'ACharacterSCTBP_C::FireIntensity' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Frost_Intensity_Amount_E36FD6BE47BAF286294566AA41281FE3) == 0x000758, "Member 'ACharacterSCTBP_C::Frost_Intensity_Amount_E36FD6BE47BAF286294566AA41281FE3' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Frost_Intensity__Direction_E36FD6BE47BAF286294566AA41281FE3) == 0x00075C, "Member 'ACharacterSCTBP_C::Frost_Intensity__Direction_E36FD6BE47BAF286294566AA41281FE3' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Frost_Intensity) == 0x000760, "Member 'ACharacterSCTBP_C::Frost_Intensity' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, ScannerScale_Amount_29434B8A4859CF879CA5DA9CB9AC19C4) == 0x000768, "Member 'ACharacterSCTBP_C::ScannerScale_Amount_29434B8A4859CF879CA5DA9CB9AC19C4' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, ScannerScale__Direction_29434B8A4859CF879CA5DA9CB9AC19C4) == 0x00076C, "Member 'ACharacterSCTBP_C::ScannerScale__Direction_29434B8A4859CF879CA5DA9CB9AC19C4' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, ScannerScale) == 0x000770, "Member 'ACharacterSCTBP_C::ScannerScale' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, ScannerVisuals_Amount_2FDC1A014ADE3F76EDA07AB6ED41C6F6) == 0x000778, "Member 'ACharacterSCTBP_C::ScannerVisuals_Amount_2FDC1A014ADE3F76EDA07AB6ED41C6F6' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, ScannerVisuals__Direction_2FDC1A014ADE3F76EDA07AB6ED41C6F6) == 0x00077C, "Member 'ACharacterSCTBP_C::ScannerVisuals__Direction_2FDC1A014ADE3F76EDA07AB6ED41C6F6' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, ScannerVisuals) == 0x000780, "Member 'ACharacterSCTBP_C::ScannerVisuals' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, CameraOffset_Alpha_762778044358A42F7EA4FF82EB626EDB) == 0x000788, "Member 'ACharacterSCTBP_C::CameraOffset_Alpha_762778044358A42F7EA4FF82EB626EDB' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, CameraOffset__Direction_762778044358A42F7EA4FF82EB626EDB) == 0x00078C, "Member 'ACharacterSCTBP_C::CameraOffset__Direction_762778044358A42F7EA4FF82EB626EDB' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, CameraOffset) == 0x000790, "Member 'ACharacterSCTBP_C::CameraOffset' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, ItemSlot1Power) == 0x000798, "Member 'ACharacterSCTBP_C::ItemSlot1Power' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, ItemSlot2Power) == 0x0007A0, "Member 'ACharacterSCTBP_C::ItemSlot2Power' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, InteractionWidget) == 0x0007A8, "Member 'ACharacterSCTBP_C::InteractionWidget' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, DebugInteraction) == 0x0007B0, "Member 'ACharacterSCTBP_C::DebugInteraction' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, InteractionWidgets) == 0x0007B8, "Member 'ACharacterSCTBP_C::InteractionWidgets' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, OldOldValue) == 0x000808, "Member 'ACharacterSCTBP_C::OldOldValue' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, CoopActorTimer) == 0x000810, "Member 'ACharacterSCTBP_C::CoopActorTimer' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Skillcheck) == 0x000818, "Member 'ACharacterSCTBP_C::Skillcheck' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, CoopActorBeingInteractedWith) == 0x000820, "Member 'ACharacterSCTBP_C::CoopActorBeingInteractedWith' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, CharacterPreset) == 0x000828, "Member 'ACharacterSCTBP_C::CharacterPreset' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, PlayerCustomization) == 0x000830, "Member 'ACharacterSCTBP_C::PlayerCustomization' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Female) == 0x0008F0, "Member 'ACharacterSCTBP_C::Female' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, SkinMaterialDynamic) == 0x0008F8, "Member 'ACharacterSCTBP_C::SkinMaterialDynamic' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, ClothMasks) == 0x000900, "Member 'ACharacterSCTBP_C::ClothMasks' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, UpperBodyMesh) == 0x000910, "Member 'ACharacterSCTBP_C::UpperBodyMesh' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, LowerBodyMesh) == 0x000918, "Member 'ACharacterSCTBP_C::LowerBodyMesh' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, FeetMesh) == 0x000920, "Member 'ACharacterSCTBP_C::FeetMesh' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, HairStaticMesh) == 0x000928, "Member 'ACharacterSCTBP_C::HairStaticMesh' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, UpperBodyMaterial) == 0x000930, "Member 'ACharacterSCTBP_C::UpperBodyMaterial' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, LowerBodyMaterial) == 0x000938, "Member 'ACharacterSCTBP_C::LowerBodyMaterial' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, FeetMaterial) == 0x000940, "Member 'ACharacterSCTBP_C::FeetMaterial' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, SkinMaterial) == 0x000948, "Member 'ACharacterSCTBP_C::SkinMaterial' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, HairColor) == 0x000950, "Member 'ACharacterSCTBP_C::HairColor' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, CharacterDestiny) == 0x000960, "Member 'ACharacterSCTBP_C::CharacterDestiny' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, TestCanvas) == 0x000968, "Member 'ACharacterSCTBP_C::TestCanvas' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, CharacterFire) == 0x000970, "Member 'ACharacterSCTBP_C::CharacterFire' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, OnFire) == 0x000978, "Member 'ACharacterSCTBP_C::OnFire' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, VectorToWIInteractable) == 0x000980, "Member 'ACharacterSCTBP_C::VectorToWIInteractable' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Count) == 0x0009D0, "Member 'ACharacterSCTBP_C::Count' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, ContextUI_MergeThreshold) == 0x0009D4, "Member 'ACharacterSCTBP_C::ContextUI_MergeThreshold' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, SwitchGroupMaterial) == 0x0009D8, "Member 'ACharacterSCTBP_C::SwitchGroupMaterial' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, FootstepCount) == 0x0009E8, "Member 'ACharacterSCTBP_C::FootstepCount' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, WI_SymbolPuzzle) == 0x0009F0, "Member 'ACharacterSCTBP_C::WI_SymbolPuzzle' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, ActiveSymbolPuzzle) == 0x0009F8, "Member 'ACharacterSCTBP_C::ActiveSymbolPuzzle' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, FireStacks) == 0x000A00, "Member 'ACharacterSCTBP_C::FireStacks' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, GrabbingCharacter) == 0x000A08, "Member 'ACharacterSCTBP_C::GrabbingCharacter' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, CarriedCorpse) == 0x000A10, "Member 'ACharacterSCTBP_C::CarriedCorpse' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Freezing) == 0x000A20, "Member 'ACharacterSCTBP_C::Freezing' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, UnFreezing) == 0x000F70, "Member 'ACharacterSCTBP_C::UnFreezing' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, ScreenFrostMaterial) == 0x0014C0, "Member 'ACharacterSCTBP_C::ScreenFrostMaterial' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, AlcoholPercent) == 0x0014C8, "Member 'ACharacterSCTBP_C::AlcoholPercent' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, DrunkCameraShake) == 0x0014D0, "Member 'ACharacterSCTBP_C::DrunkCameraShake' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, DrunkScreenEffect) == 0x0014D8, "Member 'ACharacterSCTBP_C::DrunkScreenEffect' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, ScreenBurningMaterial) == 0x0014E0, "Member 'ACharacterSCTBP_C::ScreenBurningMaterial' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, AllPlayersExceptSelf) == 0x0014E8, "Member 'ACharacterSCTBP_C::AllPlayersExceptSelf' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, HiddenAgendatext) == 0x0014F8, "Member 'ACharacterSCTBP_C::HiddenAgendatext' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, IsDrowned) == 0x001510, "Member 'ACharacterSCTBP_C::IsDrowned' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, RTPC_FootstepVol) == 0x001518, "Member 'ACharacterSCTBP_C::RTPC_FootstepVol' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, RTPC_Footstep_Vol_Offset) == 0x001520, "Member 'ACharacterSCTBP_C::RTPC_Footstep_Vol_Offset' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, RTPC_3D) == 0x001528, "Member 'ACharacterSCTBP_C::RTPC_3D' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, RTPC_DrunkLevel) == 0x001530, "Member 'ACharacterSCTBP_C::RTPC_DrunkLevel' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, RTPC_MovementSpeed) == 0x001538, "Member 'ACharacterSCTBP_C::RTPC_MovementSpeed' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, RTPC_Wetness) == 0x001540, "Member 'ACharacterSCTBP_C::RTPC_Wetness' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, InteractingAnim) == 0x001548, "Member 'ACharacterSCTBP_C::InteractingAnim' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, DisableCameraShake) == 0x001549, "Member 'ACharacterSCTBP_C::DisableCameraShake' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, EmergencyRTPClevel) == 0x00154C, "Member 'ACharacterSCTBP_C::EmergencyRTPClevel' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, IsShaking) == 0x001550, "Member 'ACharacterSCTBP_C::IsShaking' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, CameraShakeRef) == 0x001558, "Member 'ACharacterSCTBP_C::CameraShakeRef' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, CurrentPhysMat) == 0x001560, "Member 'ACharacterSCTBP_C::CurrentPhysMat' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, IsFrozen) == 0x001568, "Member 'ACharacterSCTBP_C::IsFrozen' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, NoExtinguishAudio) == 0x001569, "Member 'ACharacterSCTBP_C::NoExtinguishAudio' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, beingGrabbed) == 0x00156A, "Member 'ACharacterSCTBP_C::beingGrabbed' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, IsGrabbing) == 0x00156B, "Member 'ACharacterSCTBP_C::IsGrabbing' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, IsPushing) == 0x00156C, "Member 'ACharacterSCTBP_C::IsPushing' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Event) == 0x001570, "Member 'ACharacterSCTBP_C::Event' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, IsOxygenPot) == 0x001578, "Member 'ACharacterSCTBP_C::IsOxygenPot' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, IsThrowing) == 0x001579, "Member 'ACharacterSCTBP_C::IsThrowing' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, IsElectrocuted) == 0x00157A, "Member 'ACharacterSCTBP_C::IsElectrocuted' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, EmoteComponents) == 0x001580, "Member 'ACharacterSCTBP_C::EmoteComponents' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, CooldownSound) == 0x001590, "Member 'ACharacterSCTBP_C::CooldownSound' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, NotiOxygenWarning) == 0x001598, "Member 'ACharacterSCTBP_C::NotiOxygenWarning' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, MovementMode) == 0x0015A0, "Member 'ACharacterSCTBP_C::MovementMode' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, MovementAction) == 0x0015B0, "Member 'ACharacterSCTBP_C::MovementAction' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, SurfaceMaterials) == 0x0015C0, "Member 'ACharacterSCTBP_C::SurfaceMaterials' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, AudioMoveSpeed) == 0x0015D0, "Member 'ACharacterSCTBP_C::AudioMoveSpeed' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, PickedUpUniquePower) == 0x0015D4, "Member 'ACharacterSCTBP_C::PickedUpUniquePower' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, RTPC_Killer_Residents) == 0x0015D8, "Member 'ACharacterSCTBP_C::RTPC_Killer_Residents' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, RTPC_Killer_Personoid) == 0x0015E0, "Member 'ACharacterSCTBP_C::RTPC_Killer_Personoid' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, OnGrabbingActorChanged) == 0x0015E8, "Member 'ACharacterSCTBP_C::OnGrabbingActorChanged' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, SlowWalkHandle) == 0x0015F8, "Member 'ACharacterSCTBP_C::SlowWalkHandle' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, CustomizationOptions_9) == 0x001600, "Member 'ACharacterSCTBP_C::CustomizationOptions_9' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, CustomizationOptions) == 0x001608, "Member 'ACharacterSCTBP_C::CustomizationOptions' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, ItemWheelRef) == 0x001610, "Member 'ACharacterSCTBP_C::ItemWheelRef' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, BorderColor) == 0x001618, "Member 'ACharacterSCTBP_C::BorderColor' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, CoopKiller) == 0x001628, "Member 'ACharacterSCTBP_C::CoopKiller' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, MI_Name) == 0x001630, "Member 'ACharacterSCTBP_C::MI_Name' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, AppearanceSettings) == 0x001638, "Member 'ACharacterSCTBP_C::AppearanceSettings' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, EmoteWheelWI) == 0x001640, "Member 'ACharacterSCTBP_C::EmoteWheelWI' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, PlayerEmotes) == 0x001648, "Member 'ACharacterSCTBP_C::PlayerEmotes' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, CustomizationSet) == 0x001658, "Member 'ACharacterSCTBP_C::CustomizationSet' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, CustomizationSettings) == 0x00165C, "Member 'ACharacterSCTBP_C::CustomizationSettings' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, PlaceholderEmoteNames) == 0x0016A0, "Member 'ACharacterSCTBP_C::PlaceholderEmoteNames' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Corpse_Bone_Socket) == 0x0016B0, "Member 'ACharacterSCTBP_C::Corpse_Bone_Socket' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, OxygenState) == 0x0016B8, "Member 'ACharacterSCTBP_C::OxygenState' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Footstep_Sound) == 0x0016C0, "Member 'ACharacterSCTBP_C::Footstep_Sound' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Jump_Sound) == 0x0016C8, "Member 'ACharacterSCTBP_C::Jump_Sound' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Land_Sound) == 0x0016D0, "Member 'ACharacterSCTBP_C::Land_Sound' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Stop_Sound) == 0x0016D8, "Member 'ACharacterSCTBP_C::Stop_Sound' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, LastDisablingCharacter) == 0x0016E0, "Member 'ACharacterSCTBP_C::LastDisablingCharacter' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, LastDisablingCharacterByButton) == 0x0016E8, "Member 'ACharacterSCTBP_C::LastDisablingCharacterByButton' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, CustomizationConfig) == 0x0016F0, "Member 'ACharacterSCTBP_C::CustomizationConfig' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, OnKillingActorChanged) == 0x0016F8, "Member 'ACharacterSCTBP_C::OnKillingActorChanged' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, GrantedScoreElsewhere) == 0x001708, "Member 'ACharacterSCTBP_C::GrantedScoreElsewhere' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, SkeletalMeshes) == 0x001710, "Member 'ACharacterSCTBP_C::SkeletalMeshes' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, SkeletalMaterial) == 0x001720, "Member 'ACharacterSCTBP_C::SkeletalMaterial' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, OnBecameUnconscious) == 0x001730, "Member 'ACharacterSCTBP_C::OnBecameUnconscious' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, CustomizationDynamicMaterials) == 0x001740, "Member 'ACharacterSCTBP_C::CustomizationDynamicMaterials' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, PersonoidAppearance) == 0x001750, "Member 'ACharacterSCTBP_C::PersonoidAppearance' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Head_Sound) == 0x001758, "Member 'ACharacterSCTBP_C::Head_Sound' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Upper_Body_Sound) == 0x001760, "Member 'ACharacterSCTBP_C::Upper_Body_Sound' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, Lower_Body_Sound) == 0x001768, "Member 'ACharacterSCTBP_C::Lower_Body_Sound' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, ClosestCharactersOnDeath) == 0x001770, "Member 'ACharacterSCTBP_C::ClosestCharactersOnDeath' has a wrong offset!");
static_assert(offsetof(ACharacterSCTBP_C, On_PIESetCustomization) == 0x001780, "Member 'ACharacterSCTBP_C::On_PIESetCustomization' has a wrong offset!");

}

