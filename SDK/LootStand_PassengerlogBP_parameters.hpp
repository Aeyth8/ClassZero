#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LootStand_PassengerlogBP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "SCT_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.ExecuteUbergraph_LootStand_PassengerlogBP
// 0x0330 (0x0330 - 0x0000)
struct LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldCreatePassengerLog_ReturnValue;     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x001C(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0040(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0058(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x006C(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_2;                            // 0x0080(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APickupActor_C*                         CallFunc_Spawn_Loot_Spawned_Pickup;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APickupActor_PassengerLog_C*            K2Node_DynamicCast_AsPickup_Actor_Passenger_Log;   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiForObjects_OutHits;       // 0x00E8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiForObjects_ReturnValue;   // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x00FC(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18E[0x2];                                      // 0x018E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0225(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_226[0x2];                                      // 0x0226(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3;                          // 0x0228(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_3;                            // 0x0238(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInteractionPayload                    CallFunc_Array_Get_Item_1;                         // 0x0250(0x0030)(NoDestructor, ContainsInstancedReference)
	struct FInteractionPayload                    K2Node_ComponentBoundEvent_payload_2;              // 0x0280(0x0030)(ConstParm, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0x3];                                      // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue_2;                // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInteractionPayload                    K2Node_ComponentBoundEvent_payload_1;              // 0x02B8(0x0030)(ConstParm, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_ComponentBoundEvent_wasCancelled;           // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue_3;                // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x02F0(0x0010)(ZeroConstructor, NoDestructor)
	struct FInteractionPayload                    K2Node_ComponentBoundEvent_payload;                // 0x0300(0x0030)(ConstParm, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP) == 0x000008, "Wrong alignment on LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP");
static_assert(sizeof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP) == 0x000330, "Wrong size on LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, EntryPoint) == 0x000000, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_ShouldCreatePassengerLog_ReturnValue) == 0x000004, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_ShouldCreatePassengerLog_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, Temp_struct_Variable) == 0x000008, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, Temp_delegate_Variable) == 0x00001C, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, Temp_struct_Variable_1) == 0x000030, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, Temp_delegate_Variable_1) == 0x000040, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, Temp_int_Array_Index_Variable) == 0x000050, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, Temp_object_Variable) == 0x000058, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_HasAuthority_ReturnValue) == 0x000068, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, Temp_delegate_Variable_2) == 0x00006C, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_HasAuthority_ReturnValue_1) == 0x00007C, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, Temp_struct_Variable_2) == 0x000080, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_HasAuthority_ReturnValue_2) == 0x000090, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_PostAkEvent_ReturnValue) == 0x000094, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_Spawn_Loot_Spawned_Pickup) == 0x000098, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_Spawn_Loot_Spawned_Pickup' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, K2Node_DynamicCast_AsPickup_Actor_Passenger_Log) == 0x0000A0, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::K2Node_DynamicCast_AsPickup_Actor_Passenger_Log' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000AC, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, K2Node_MakeArray_Array) == 0x0000B8, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C8, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000D4, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, Temp_int_Loop_Counter_Variable) == 0x0000E0, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_SphereTraceMultiForObjects_OutHits) == 0x0000E8, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_SphereTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_SphereTraceMultiForObjects_ReturnValue) == 0x0000F8, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_SphereTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_Array_Get_Item) == 0x0000FC, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_Array_Length_ReturnValue) == 0x000188, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_BreakHitResult_bBlockingHit) == 0x00018C, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_BreakHitResult_bInitialOverlap) == 0x00018D, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_BreakHitResult_Time) == 0x000190, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_BreakHitResult_Distance) == 0x000194, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_BreakHitResult_Location) == 0x000198, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_BreakHitResult_ImpactPoint) == 0x0001A4, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_BreakHitResult_Normal) == 0x0001B0, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_BreakHitResult_ImpactNormal) == 0x0001BC, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_BreakHitResult_PhysMat) == 0x0001C8, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_BreakHitResult_HitActor) == 0x0001D0, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_BreakHitResult_HitComponent) == 0x0001D8, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_BreakHitResult_HitBoneName) == 0x0001E0, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_BreakHitResult_HitItem) == 0x0001E8, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_BreakHitResult_FaceIndex) == 0x0001EC, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_BreakHitResult_TraceStart) == 0x0001F0, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_BreakHitResult_TraceEnd) == 0x0001FC, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_Less_IntInt_ReturnValue) == 0x000208, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_GetDisplayName_ReturnValue) == 0x000210, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_Add_IntInt_ReturnValue) == 0x000220, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000224, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000225, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, Temp_delegate_Variable_3) == 0x000228, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, Temp_struct_Variable_3) == 0x000238, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_PostAkEvent_ReturnValue_1) == 0x000248, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_Array_Get_Item_1) == 0x000250, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, K2Node_ComponentBoundEvent_payload_2) == 0x000280, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::K2Node_ComponentBoundEvent_payload_2' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_HasAuthority_ReturnValue_3) == 0x0002B0, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_PostAkEvent_ReturnValue_2) == 0x0002B4, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_PostAkEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, K2Node_ComponentBoundEvent_payload_1) == 0x0002B8, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::K2Node_ComponentBoundEvent_payload_1' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, K2Node_ComponentBoundEvent_wasCancelled) == 0x0002E8, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::K2Node_ComponentBoundEvent_wasCancelled' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, CallFunc_PostAkEvent_ReturnValue_3) == 0x0002EC, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::CallFunc_PostAkEvent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, K2Node_CreateDelegate_OutputDelegate) == 0x0002F0, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP, K2Node_ComponentBoundEvent_payload) == 0x000300, "Member 'LootStand_PassengerlogBP_C_ExecuteUbergraph_LootStand_PassengerlogBP::K2Node_ComponentBoundEvent_payload' has a wrong offset!");

// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.BndEvt__Interaction_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct LootStand_PassengerlogBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature final
{
public:
	struct FInteractionPayload                    Payload;                                           // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(LootStand_PassengerlogBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature) == 0x000008, "Wrong alignment on LootStand_PassengerlogBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature");
static_assert(sizeof(LootStand_PassengerlogBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature) == 0x000030, "Wrong size on LootStand_PassengerlogBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature");
static_assert(offsetof(LootStand_PassengerlogBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature, Payload) == 0x000000, "Member 'LootStand_PassengerlogBP_C_BndEvt__Interaction_K2Node_ComponentBoundEvent_0_InteractionDelegate__DelegateSignature::Payload' has a wrong offset!");

// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.BndEvt__Interaction Component_secondary_K2Node_ComponentBoundEvent_4_InteractionEndedDelegate__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct LootStand_PassengerlogBP_C_BndEvt__Interaction_Component_secondary_K2Node_ComponentBoundEvent_4_InteractionEndedDelegate__DelegateSignature final
{
public:
	struct FInteractionPayload                    Payload;                                           // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	bool                                          WasCancelled;                                      // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LootStand_PassengerlogBP_C_BndEvt__Interaction_Component_secondary_K2Node_ComponentBoundEvent_4_InteractionEndedDelegate__DelegateSignature) == 0x000008, "Wrong alignment on LootStand_PassengerlogBP_C_BndEvt__Interaction_Component_secondary_K2Node_ComponentBoundEvent_4_InteractionEndedDelegate__DelegateSignature");
static_assert(sizeof(LootStand_PassengerlogBP_C_BndEvt__Interaction_Component_secondary_K2Node_ComponentBoundEvent_4_InteractionEndedDelegate__DelegateSignature) == 0x000038, "Wrong size on LootStand_PassengerlogBP_C_BndEvt__Interaction_Component_secondary_K2Node_ComponentBoundEvent_4_InteractionEndedDelegate__DelegateSignature");
static_assert(offsetof(LootStand_PassengerlogBP_C_BndEvt__Interaction_Component_secondary_K2Node_ComponentBoundEvent_4_InteractionEndedDelegate__DelegateSignature, Payload) == 0x000000, "Member 'LootStand_PassengerlogBP_C_BndEvt__Interaction_Component_secondary_K2Node_ComponentBoundEvent_4_InteractionEndedDelegate__DelegateSignature::Payload' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_BndEvt__Interaction_Component_secondary_K2Node_ComponentBoundEvent_4_InteractionEndedDelegate__DelegateSignature, WasCancelled) == 0x000030, "Member 'LootStand_PassengerlogBP_C_BndEvt__Interaction_Component_secondary_K2Node_ComponentBoundEvent_4_InteractionEndedDelegate__DelegateSignature::WasCancelled' has a wrong offset!");

// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.BndEvt__Interaction Component_secondary_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct LootStand_PassengerlogBP_C_BndEvt__Interaction_Component_secondary_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature final
{
public:
	struct FInteractionPayload                    Payload;                                           // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(LootStand_PassengerlogBP_C_BndEvt__Interaction_Component_secondary_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature) == 0x000008, "Wrong alignment on LootStand_PassengerlogBP_C_BndEvt__Interaction_Component_secondary_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature");
static_assert(sizeof(LootStand_PassengerlogBP_C_BndEvt__Interaction_Component_secondary_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature) == 0x000030, "Wrong size on LootStand_PassengerlogBP_C_BndEvt__Interaction_Component_secondary_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature");
static_assert(offsetof(LootStand_PassengerlogBP_C_BndEvt__Interaction_Component_secondary_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature, Payload) == 0x000000, "Member 'LootStand_PassengerlogBP_C_BndEvt__Interaction_Component_secondary_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature::Payload' has a wrong offset!");

// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct LootStand_PassengerlogBP_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInteractionSubComponentInterface> CallFunc_AddSubComponent_component_CastInput;      // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
};
static_assert(alignof(LootStand_PassengerlogBP_C_UserConstructionScript) == 0x000008, "Wrong alignment on LootStand_PassengerlogBP_C_UserConstructionScript");
static_assert(sizeof(LootStand_PassengerlogBP_C_UserConstructionScript) == 0x000018, "Wrong size on LootStand_PassengerlogBP_C_UserConstructionScript");
static_assert(offsetof(LootStand_PassengerlogBP_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'LootStand_PassengerlogBP_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'LootStand_PassengerlogBP_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_UserConstructionScript, CallFunc_AddSubComponent_component_CastInput) == 0x000008, "Member 'LootStand_PassengerlogBP_C_UserConstructionScript::CallFunc_AddSubComponent_component_CastInput' has a wrong offset!");

// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.AutoGrantLoot
// 0x0020 (0x0020 - 0x0000)
struct LootStand_PassengerlogBP_C_AutoGrantLoot final
{
public:
	class UInventory*                             Instigator_Inventory;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LootStand_PassengerlogBP_C_AutoGrantLoot) == 0x000008, "Wrong alignment on LootStand_PassengerlogBP_C_AutoGrantLoot");
static_assert(sizeof(LootStand_PassengerlogBP_C_AutoGrantLoot) == 0x000020, "Wrong size on LootStand_PassengerlogBP_C_AutoGrantLoot");
static_assert(offsetof(LootStand_PassengerlogBP_C_AutoGrantLoot, Instigator_Inventory) == 0x000000, "Member 'LootStand_PassengerlogBP_C_AutoGrantLoot::Instigator_Inventory' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_AutoGrantLoot, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'LootStand_PassengerlogBP_C_AutoGrantLoot::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_AutoGrantLoot, K2Node_DynamicCast_AsCharacter_SCTBP) == 0x000010, "Member 'LootStand_PassengerlogBP_C_AutoGrantLoot::K2Node_DynamicCast_AsCharacter_SCTBP' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_AutoGrantLoot, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'LootStand_PassengerlogBP_C_AutoGrantLoot::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.GrantPassengerLogInformation
// 0x0010 (0x0010 - 0x0000)
struct LootStand_PassengerlogBP_C_GrantPassengerLogInformation final
{
public:
	class ASCTPlayerState*                        CallFunc_TryGetInteractingPlayerState_PlayerState; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetInteractingPlayerState_Is_Valid;    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LootStand_PassengerlogBP_C_GrantPassengerLogInformation) == 0x000008, "Wrong alignment on LootStand_PassengerlogBP_C_GrantPassengerLogInformation");
static_assert(sizeof(LootStand_PassengerlogBP_C_GrantPassengerLogInformation) == 0x000010, "Wrong size on LootStand_PassengerlogBP_C_GrantPassengerLogInformation");
static_assert(offsetof(LootStand_PassengerlogBP_C_GrantPassengerLogInformation, CallFunc_TryGetInteractingPlayerState_PlayerState) == 0x000000, "Member 'LootStand_PassengerlogBP_C_GrantPassengerLogInformation::CallFunc_TryGetInteractingPlayerState_PlayerState' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_GrantPassengerLogInformation, CallFunc_TryGetInteractingPlayerState_Is_Valid) == 0x000008, "Member 'LootStand_PassengerlogBP_C_GrantPassengerLogInformation::CallFunc_TryGetInteractingPlayerState_Is_Valid' has a wrong offset!");

// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.CreateLogInformation
// 0x0038 (0x0038 - 0x0000)
struct LootStand_PassengerlogBP_C_CreateLogInformation final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPassengerLogInformation               CallFunc_GetInformation_ReturnValue;               // 0x0008(0x0028)()
	class UPassengerLogGenerator*                 CallFunc_SpawnObject_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LootStand_PassengerlogBP_C_CreateLogInformation) == 0x000008, "Wrong alignment on LootStand_PassengerlogBP_C_CreateLogInformation");
static_assert(sizeof(LootStand_PassengerlogBP_C_CreateLogInformation) == 0x000038, "Wrong size on LootStand_PassengerlogBP_C_CreateLogInformation");
static_assert(offsetof(LootStand_PassengerlogBP_C_CreateLogInformation, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'LootStand_PassengerlogBP_C_CreateLogInformation::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_CreateLogInformation, CallFunc_IsValidClass_ReturnValue) == 0x000001, "Member 'LootStand_PassengerlogBP_C_CreateLogInformation::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_CreateLogInformation, CallFunc_GetInformation_ReturnValue) == 0x000008, "Member 'LootStand_PassengerlogBP_C_CreateLogInformation::CallFunc_GetInformation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_CreateLogInformation, CallFunc_SpawnObject_ReturnValue) == 0x000030, "Member 'LootStand_PassengerlogBP_C_CreateLogInformation::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.SabotageLog
// 0x0068 (0x0068 - 0x0000)
struct LootStand_PassengerlogBP_C_SabotageLog final
{
public:
	struct FInteractionPayload                    Payload;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
	struct FPassengerLogInformation               CallFunc_GetInformation_ReturnValue;               // 0x0030(0x0028)()
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LootStand_PassengerlogBP_C_SabotageLog) == 0x000008, "Wrong alignment on LootStand_PassengerlogBP_C_SabotageLog");
static_assert(sizeof(LootStand_PassengerlogBP_C_SabotageLog) == 0x000068, "Wrong size on LootStand_PassengerlogBP_C_SabotageLog");
static_assert(offsetof(LootStand_PassengerlogBP_C_SabotageLog, Payload) == 0x000000, "Member 'LootStand_PassengerlogBP_C_SabotageLog::Payload' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_SabotageLog, CallFunc_GetInformation_ReturnValue) == 0x000030, "Member 'LootStand_PassengerlogBP_C_SabotageLog::CallFunc_GetInformation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_SabotageLog, K2Node_DynamicCast_AsCharacter) == 0x000058, "Member 'LootStand_PassengerlogBP_C_SabotageLog::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_SabotageLog, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'LootStand_PassengerlogBP_C_SabotageLog::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.PrintInvalidLogTypeWarning
// 0x0118 (0x0118 - 0x0000)
struct LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0048(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning) == 0x000008, "Wrong alignment on LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning");
static_assert(sizeof(LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning) == 0x000118, "Wrong size on LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning");
static_assert(offsetof(LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning, CallFunc_Conv_VectorToString_ReturnValue) == 0x000010, "Member 'LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000048, "Member 'LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning, K2Node_MakeArray_Array) == 0x0000E0, "Member 'LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning, CallFunc_Conv_TextToString_ReturnValue) == 0x000108, "Member 'LootStand_PassengerlogBP_C_PrintInvalidLogTypeWarning::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.CheckDisablePassengerLog
// 0x0001 (0x0001 - 0x0000)
struct LootStand_PassengerlogBP_C_CheckDisablePassengerLog final
{
public:
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LootStand_PassengerlogBP_C_CheckDisablePassengerLog) == 0x000001, "Wrong alignment on LootStand_PassengerlogBP_C_CheckDisablePassengerLog");
static_assert(sizeof(LootStand_PassengerlogBP_C_CheckDisablePassengerLog) == 0x000001, "Wrong size on LootStand_PassengerlogBP_C_CheckDisablePassengerLog");
static_assert(offsetof(LootStand_PassengerlogBP_C_CheckDisablePassengerLog, CallFunc_IsValidClass_ReturnValue) == 0x000000, "Member 'LootStand_PassengerlogBP_C_CheckDisablePassengerLog::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.QueryInitializePassengerLog
// 0x0001 (0x0001 - 0x0000)
struct LootStand_PassengerlogBP_C_QueryInitializePassengerLog final
{
public:
	bool                                          CallFunc_ShouldCreatePassengerLog_ReturnValue;     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LootStand_PassengerlogBP_C_QueryInitializePassengerLog) == 0x000001, "Wrong alignment on LootStand_PassengerlogBP_C_QueryInitializePassengerLog");
static_assert(sizeof(LootStand_PassengerlogBP_C_QueryInitializePassengerLog) == 0x000001, "Wrong size on LootStand_PassengerlogBP_C_QueryInitializePassengerLog");
static_assert(offsetof(LootStand_PassengerlogBP_C_QueryInitializePassengerLog, CallFunc_ShouldCreatePassengerLog_ReturnValue) == 0x000000, "Member 'LootStand_PassengerlogBP_C_QueryInitializePassengerLog::CallFunc_ShouldCreatePassengerLog_ReturnValue' has a wrong offset!");

// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.RenderXray
// 0x0010 (0x0010 - 0x0000)
struct LootStand_PassengerlogBP_C_RenderXray final
{
public:
	bool                                          On;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LootStand_PassengerlogBP_C_RenderXray) == 0x000004, "Wrong alignment on LootStand_PassengerlogBP_C_RenderXray");
static_assert(sizeof(LootStand_PassengerlogBP_C_RenderXray) == 0x000010, "Wrong size on LootStand_PassengerlogBP_C_RenderXray");
static_assert(offsetof(LootStand_PassengerlogBP_C_RenderXray, On) == 0x000000, "Member 'LootStand_PassengerlogBP_C_RenderXray::On' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_RenderXray, Temp_bool_Variable) == 0x000001, "Member 'LootStand_PassengerlogBP_C_RenderXray::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_RenderXray, Temp_int_Variable) == 0x000004, "Member 'LootStand_PassengerlogBP_C_RenderXray::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_RenderXray, Temp_int_Variable_1) == 0x000008, "Member 'LootStand_PassengerlogBP_C_RenderXray::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_RenderXray, K2Node_Select_Default) == 0x00000C, "Member 'LootStand_PassengerlogBP_C_RenderXray::K2Node_Select_Default' has a wrong offset!");

// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.PermanentlyDisableInteraction
// 0x0003 (0x0003 - 0x0000)
struct LootStand_PassengerlogBP_C_PermanentlyDisableInteraction final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LootStand_PassengerlogBP_C_PermanentlyDisableInteraction) == 0x000001, "Wrong alignment on LootStand_PassengerlogBP_C_PermanentlyDisableInteraction");
static_assert(sizeof(LootStand_PassengerlogBP_C_PermanentlyDisableInteraction) == 0x000003, "Wrong size on LootStand_PassengerlogBP_C_PermanentlyDisableInteraction");
static_assert(offsetof(LootStand_PassengerlogBP_C_PermanentlyDisableInteraction, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'LootStand_PassengerlogBP_C_PermanentlyDisableInteraction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_PermanentlyDisableInteraction, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'LootStand_PassengerlogBP_C_PermanentlyDisableInteraction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_PermanentlyDisableInteraction, CallFunc_IsValid_ReturnValue_2) == 0x000002, "Member 'LootStand_PassengerlogBP_C_PermanentlyDisableInteraction::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.TryGetInteractingPlayerController
// 0x0030 (0x0030 - 0x0000)
struct LootStand_PassengerlogBP_C_TryGetInteractingPlayerController final
{
public:
	class ASCTPlayerController*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerController*                   K2Node_DynamicCast_AsSCTPlayer_Controller;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LootStand_PassengerlogBP_C_TryGetInteractingPlayerController) == 0x000008, "Wrong alignment on LootStand_PassengerlogBP_C_TryGetInteractingPlayerController");
static_assert(sizeof(LootStand_PassengerlogBP_C_TryGetInteractingPlayerController) == 0x000030, "Wrong size on LootStand_PassengerlogBP_C_TryGetInteractingPlayerController");
static_assert(offsetof(LootStand_PassengerlogBP_C_TryGetInteractingPlayerController, ReturnValue) == 0x000000, "Member 'LootStand_PassengerlogBP_C_TryGetInteractingPlayerController::ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_TryGetInteractingPlayerController, IsValid) == 0x000008, "Member 'LootStand_PassengerlogBP_C_TryGetInteractingPlayerController::IsValid' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_TryGetInteractingPlayerController, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'LootStand_PassengerlogBP_C_TryGetInteractingPlayerController::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_TryGetInteractingPlayerController, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'LootStand_PassengerlogBP_C_TryGetInteractingPlayerController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_TryGetInteractingPlayerController, K2Node_DynamicCast_AsSCTPlayer_Controller) == 0x000020, "Member 'LootStand_PassengerlogBP_C_TryGetInteractingPlayerController::K2Node_DynamicCast_AsSCTPlayer_Controller' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_TryGetInteractingPlayerController, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'LootStand_PassengerlogBP_C_TryGetInteractingPlayerController::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.TryGetInteractingPlayerState
// 0x0020 (0x0020 - 0x0000)
struct LootStand_PassengerlogBP_C_TryGetInteractingPlayerState final
{
public:
	class ASCTPlayerState*                        PlayerState;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Valid;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState*                        CallFunc_GetSCTPlayerState_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LootStand_PassengerlogBP_C_TryGetInteractingPlayerState) == 0x000008, "Wrong alignment on LootStand_PassengerlogBP_C_TryGetInteractingPlayerState");
static_assert(sizeof(LootStand_PassengerlogBP_C_TryGetInteractingPlayerState) == 0x000020, "Wrong size on LootStand_PassengerlogBP_C_TryGetInteractingPlayerState");
static_assert(offsetof(LootStand_PassengerlogBP_C_TryGetInteractingPlayerState, PlayerState) == 0x000000, "Member 'LootStand_PassengerlogBP_C_TryGetInteractingPlayerState::PlayerState' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_TryGetInteractingPlayerState, Is_Valid) == 0x000008, "Member 'LootStand_PassengerlogBP_C_TryGetInteractingPlayerState::Is_Valid' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_TryGetInteractingPlayerState, CallFunc_GetSCTPlayerState_ReturnValue) == 0x000010, "Member 'LootStand_PassengerlogBP_C_TryGetInteractingPlayerState::CallFunc_GetSCTPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_TryGetInteractingPlayerState, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'LootStand_PassengerlogBP_C_TryGetInteractingPlayerState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_TryGetInteractingPlayerState, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'LootStand_PassengerlogBP_C_TryGetInteractingPlayerState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function LootStand_PassengerlogBP.LootStand_PassengerlogBP_C.ShouldCreatePassengerLog
// 0x0018 (0x0018 - 0x0000)
struct LootStand_PassengerlogBP_C_ShouldCreatePassengerLog final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPassengerLogGenerator*                 CallFunc_SpawnObject_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanSpawn_ReturnValue;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LootStand_PassengerlogBP_C_ShouldCreatePassengerLog) == 0x000008, "Wrong alignment on LootStand_PassengerlogBP_C_ShouldCreatePassengerLog");
static_assert(sizeof(LootStand_PassengerlogBP_C_ShouldCreatePassengerLog) == 0x000018, "Wrong size on LootStand_PassengerlogBP_C_ShouldCreatePassengerLog");
static_assert(offsetof(LootStand_PassengerlogBP_C_ShouldCreatePassengerLog, ReturnValue) == 0x000000, "Member 'LootStand_PassengerlogBP_C_ShouldCreatePassengerLog::ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ShouldCreatePassengerLog, CallFunc_SpawnObject_ReturnValue) == 0x000008, "Member 'LootStand_PassengerlogBP_C_ShouldCreatePassengerLog::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ShouldCreatePassengerLog, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'LootStand_PassengerlogBP_C_ShouldCreatePassengerLog::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ShouldCreatePassengerLog, CallFunc_CanSpawn_ReturnValue) == 0x000011, "Member 'LootStand_PassengerlogBP_C_ShouldCreatePassengerLog::CallFunc_CanSpawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ShouldCreatePassengerLog, CallFunc_IsValidClass_ReturnValue) == 0x000012, "Member 'LootStand_PassengerlogBP_C_ShouldCreatePassengerLog::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootStand_PassengerlogBP_C_ShouldCreatePassengerLog, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'LootStand_PassengerlogBP_C_ShouldCreatePassengerLog::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

