#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Emote_PickUpDrink

#include "Basic.hpp"


namespace SDK::Params
{

// Function Emote_PickUpDrink.Emote_PickUpDrink_C.ExecuteUbergraph_Emote_PickUpDrink
// 0x00B0 (0x00B0 - 0x0000)
struct Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink) == 0x000008, "Wrong alignment on Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink");
static_assert(sizeof(Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink) == 0x0000B0, "Wrong size on Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink");
static_assert(offsetof(Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink, EntryPoint) == 0x000000, "Member 'Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink::EntryPoint' has a wrong offset!");
static_assert(offsetof(Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink, K2Node_CustomEvent_NotifyName_4) == 0x000004, "Member 'Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink, K2Node_CustomEvent_NotifyName_3) == 0x00001C, "Member 'Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink, K2Node_CustomEvent_NotifyName_2) == 0x000034, "Member 'Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink, K2Node_CustomEvent_NotifyName_1) == 0x00004C, "Member 'Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink, K2Node_CreateDelegate_OutputDelegate_3) == 0x000054, "Member 'Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink, K2Node_CustomEvent_NotifyName) == 0x000064, "Member 'Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink, K2Node_CreateDelegate_OutputDelegate_4) == 0x00006C, "Member 'Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink, Temp_name_Variable) == 0x00007C, "Member 'Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink, K2Node_DynamicCast_AsICharacter_SCT) == 0x000088, "Member 'Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0000A0, "Member 'Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'Emote_PickUpDrink_C_ExecuteUbergraph_Emote_PickUpDrink::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Emote_PickUpDrink.Emote_PickUpDrink_C.OnCompleted_2349577148DEA1D619D0FDAD2F45AA39
// 0x0008 (0x0008 - 0x0000)
struct Emote_PickUpDrink_C_OnCompleted_2349577148DEA1D619D0FDAD2F45AA39 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Emote_PickUpDrink_C_OnCompleted_2349577148DEA1D619D0FDAD2F45AA39) == 0x000004, "Wrong alignment on Emote_PickUpDrink_C_OnCompleted_2349577148DEA1D619D0FDAD2F45AA39");
static_assert(sizeof(Emote_PickUpDrink_C_OnCompleted_2349577148DEA1D619D0FDAD2F45AA39) == 0x000008, "Wrong size on Emote_PickUpDrink_C_OnCompleted_2349577148DEA1D619D0FDAD2F45AA39");
static_assert(offsetof(Emote_PickUpDrink_C_OnCompleted_2349577148DEA1D619D0FDAD2F45AA39, NotifyName) == 0x000000, "Member 'Emote_PickUpDrink_C_OnCompleted_2349577148DEA1D619D0FDAD2F45AA39::NotifyName' has a wrong offset!");

// Function Emote_PickUpDrink.Emote_PickUpDrink_C.OnBlendOut_2349577148DEA1D619D0FDAD2F45AA39
// 0x0008 (0x0008 - 0x0000)
struct Emote_PickUpDrink_C_OnBlendOut_2349577148DEA1D619D0FDAD2F45AA39 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Emote_PickUpDrink_C_OnBlendOut_2349577148DEA1D619D0FDAD2F45AA39) == 0x000004, "Wrong alignment on Emote_PickUpDrink_C_OnBlendOut_2349577148DEA1D619D0FDAD2F45AA39");
static_assert(sizeof(Emote_PickUpDrink_C_OnBlendOut_2349577148DEA1D619D0FDAD2F45AA39) == 0x000008, "Wrong size on Emote_PickUpDrink_C_OnBlendOut_2349577148DEA1D619D0FDAD2F45AA39");
static_assert(offsetof(Emote_PickUpDrink_C_OnBlendOut_2349577148DEA1D619D0FDAD2F45AA39, NotifyName) == 0x000000, "Member 'Emote_PickUpDrink_C_OnBlendOut_2349577148DEA1D619D0FDAD2F45AA39::NotifyName' has a wrong offset!");

// Function Emote_PickUpDrink.Emote_PickUpDrink_C.OnInterrupted_2349577148DEA1D619D0FDAD2F45AA39
// 0x0008 (0x0008 - 0x0000)
struct Emote_PickUpDrink_C_OnInterrupted_2349577148DEA1D619D0FDAD2F45AA39 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Emote_PickUpDrink_C_OnInterrupted_2349577148DEA1D619D0FDAD2F45AA39) == 0x000004, "Wrong alignment on Emote_PickUpDrink_C_OnInterrupted_2349577148DEA1D619D0FDAD2F45AA39");
static_assert(sizeof(Emote_PickUpDrink_C_OnInterrupted_2349577148DEA1D619D0FDAD2F45AA39) == 0x000008, "Wrong size on Emote_PickUpDrink_C_OnInterrupted_2349577148DEA1D619D0FDAD2F45AA39");
static_assert(offsetof(Emote_PickUpDrink_C_OnInterrupted_2349577148DEA1D619D0FDAD2F45AA39, NotifyName) == 0x000000, "Member 'Emote_PickUpDrink_C_OnInterrupted_2349577148DEA1D619D0FDAD2F45AA39::NotifyName' has a wrong offset!");

// Function Emote_PickUpDrink.Emote_PickUpDrink_C.OnNotifyBegin_2349577148DEA1D619D0FDAD2F45AA39
// 0x0008 (0x0008 - 0x0000)
struct Emote_PickUpDrink_C_OnNotifyBegin_2349577148DEA1D619D0FDAD2F45AA39 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Emote_PickUpDrink_C_OnNotifyBegin_2349577148DEA1D619D0FDAD2F45AA39) == 0x000004, "Wrong alignment on Emote_PickUpDrink_C_OnNotifyBegin_2349577148DEA1D619D0FDAD2F45AA39");
static_assert(sizeof(Emote_PickUpDrink_C_OnNotifyBegin_2349577148DEA1D619D0FDAD2F45AA39) == 0x000008, "Wrong size on Emote_PickUpDrink_C_OnNotifyBegin_2349577148DEA1D619D0FDAD2F45AA39");
static_assert(offsetof(Emote_PickUpDrink_C_OnNotifyBegin_2349577148DEA1D619D0FDAD2F45AA39, NotifyName) == 0x000000, "Member 'Emote_PickUpDrink_C_OnNotifyBegin_2349577148DEA1D619D0FDAD2F45AA39::NotifyName' has a wrong offset!");

// Function Emote_PickUpDrink.Emote_PickUpDrink_C.OnNotifyEnd_2349577148DEA1D619D0FDAD2F45AA39
// 0x0008 (0x0008 - 0x0000)
struct Emote_PickUpDrink_C_OnNotifyEnd_2349577148DEA1D619D0FDAD2F45AA39 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Emote_PickUpDrink_C_OnNotifyEnd_2349577148DEA1D619D0FDAD2F45AA39) == 0x000004, "Wrong alignment on Emote_PickUpDrink_C_OnNotifyEnd_2349577148DEA1D619D0FDAD2F45AA39");
static_assert(sizeof(Emote_PickUpDrink_C_OnNotifyEnd_2349577148DEA1D619D0FDAD2F45AA39) == 0x000008, "Wrong size on Emote_PickUpDrink_C_OnNotifyEnd_2349577148DEA1D619D0FDAD2F45AA39");
static_assert(offsetof(Emote_PickUpDrink_C_OnNotifyEnd_2349577148DEA1D619D0FDAD2F45AA39, NotifyName) == 0x000000, "Member 'Emote_PickUpDrink_C_OnNotifyEnd_2349577148DEA1D619D0FDAD2F45AA39::NotifyName' has a wrong offset!");

}

