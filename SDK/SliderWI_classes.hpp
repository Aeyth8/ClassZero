#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SliderWI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass SliderWI.SliderWI_C
// 0x0068 (0x02C8 - 0x0260)
class USliderWI_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class USlider*                                Slider_1;                                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Amount;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Title;                                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             ValueChanged;                                      // 0x0280(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UAkComponent*                           Ak;                                                // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnRelease;                                         // 0x0298(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   Title;                                             // 0x02A8(0x0018)(Edit, BlueprintVisible)
	float                                         XAlignment;                                        // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ValueChanged__DelegateSignature(float Value);
	void OnRelease__DelegateSignature(float Value);
	void ExecuteUbergraph_SliderWI(int32 EntryPoint);
	void BndEvt__Slider_1_K2Node_ComponentBoundEvent_4_OnControllerCaptureEndEvent__DelegateSignature();
	void BndEvt__Slider_1_K2Node_ComponentBoundEvent_3_OnControllerCaptureBeginEvent__DelegateSignature();
	void Set_Amount_Text();
	void PreConstruct(bool IsDesignTime);
	void BndEvt__Slider_1_K2Node_ComponentBoundEvent_0_OnMouseCaptureBeginEvent__DelegateSignature();
	void Construct();
	void BndEvt__Slider_1_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__Slider_1_K2Node_ComponentBoundEvent_1_OnMouseCaptureEndEvent__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SliderWI_C">();
	}
	static class USliderWI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USliderWI_C>();
	}
};
static_assert(alignof(USliderWI_C) == 0x000008, "Wrong alignment on USliderWI_C");
static_assert(sizeof(USliderWI_C) == 0x0002C8, "Wrong size on USliderWI_C");
static_assert(offsetof(USliderWI_C, UberGraphFrame) == 0x000260, "Member 'USliderWI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USliderWI_C, Slider_1) == 0x000268, "Member 'USliderWI_C::Slider_1' has a wrong offset!");
static_assert(offsetof(USliderWI_C, Text_Amount) == 0x000270, "Member 'USliderWI_C::Text_Amount' has a wrong offset!");
static_assert(offsetof(USliderWI_C, Text_Title) == 0x000278, "Member 'USliderWI_C::Text_Title' has a wrong offset!");
static_assert(offsetof(USliderWI_C, ValueChanged) == 0x000280, "Member 'USliderWI_C::ValueChanged' has a wrong offset!");
static_assert(offsetof(USliderWI_C, Ak) == 0x000290, "Member 'USliderWI_C::Ak' has a wrong offset!");
static_assert(offsetof(USliderWI_C, OnRelease) == 0x000298, "Member 'USliderWI_C::OnRelease' has a wrong offset!");
static_assert(offsetof(USliderWI_C, Title) == 0x0002A8, "Member 'USliderWI_C::Title' has a wrong offset!");
static_assert(offsetof(USliderWI_C, XAlignment) == 0x0002C0, "Member 'USliderWI_C::XAlignment' has a wrong offset!");

}

