#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OxygenGeneratorBP

#include "Basic.hpp"

#include "OxygenGeneratorBP_classes.hpp"
#include "OxygenGeneratorBP_parameters.hpp"


namespace SDK
{

// Function OxygenGeneratorBP.OxygenGeneratorBP_C.ExecuteUbergraph_OxygenGeneratorBP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOxygenGeneratorBP_C::ExecuteUbergraph_OxygenGeneratorBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "ExecuteUbergraph_OxygenGeneratorBP");

	Params::OxygenGeneratorBP_C_ExecuteUbergraph_OxygenGeneratorBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.BndEvt__ContextStaticMeshSabotage_K2Node_ComponentBoundEvent_5_PriorityDelegate__DelegateSignature
// (BlueprintEvent)

void AOxygenGeneratorBP_C::BndEvt__ContextStaticMeshSabotage_K2Node_ComponentBoundEvent_5_PriorityDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "BndEvt__ContextStaticMeshSabotage_K2Node_ComponentBoundEvent_5_PriorityDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.BndEvt__ContextStaticMeshSabotage_K2Node_ComponentBoundEvent_4_PriorityDelegate__DelegateSignature
// (BlueprintEvent)

void AOxygenGeneratorBP_C::BndEvt__ContextStaticMeshSabotage_K2Node_ComponentBoundEvent_4_PriorityDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "BndEvt__ContextStaticMeshSabotage_K2Node_ComponentBoundEvent_4_PriorityDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Sabotage
// (BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::Sabotage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Sabotage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_3_InteractionSuccessfulDelegate__DelegateSignature
// (BlueprintEvent)

void AOxygenGeneratorBP_C::BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_3_InteractionSuccessfulDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_3_InteractionSuccessfulDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void AOxygenGeneratorBP_C::BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature(const struct FInteractionPayload& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature");

	Params::OxygenGeneratorBP_C_BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_1_InteractionDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_0_InteractionEndedDelegate__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FInteractionPayload              Payload                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// bool                                    WasCancelled                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AOxygenGeneratorBP_C::BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_0_InteractionEndedDelegate__DelegateSignature(const struct FInteractionPayload& Payload, bool WasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_0_InteractionEndedDelegate__DelegateSignature");

	Params::OxygenGeneratorBP_C_BndEvt__InteractionSabotage_K2Node_ComponentBoundEvent_0_InteractionEndedDelegate__DelegateSignature Parms{};

	Parms.Payload = std::move(Payload);
	Parms.WasCancelled = WasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Audio Sabotage Stop
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::Audio_Sabotage_Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Audio Sabotage Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Audio Sabotage Start
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::Audio_Sabotage_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Audio Sabotage Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Audio Sabotaged UI Notification
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::Audio_Sabotaged_UI_Notification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Audio Sabotaged UI Notification");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Display Warning Message
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::Display_Warning_Message()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Display Warning Message");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.BndEvt__bpc_ac_Opener_K2Node_ComponentBoundEvent_2_OnOpenStateChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    IsOpening                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AOxygenGeneratorBP_C::BndEvt__bpc_ac_Opener_K2Node_ComponentBoundEvent_2_OnOpenStateChanged__DelegateSignature(bool IsOpening)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "BndEvt__bpc_ac_Opener_K2Node_ComponentBoundEvent_2_OnOpenStateChanged__DelegateSignature");

	Params::OxygenGeneratorBP_C_BndEvt__bpc_ac_Opener_K2Node_ComponentBoundEvent_2_OnOpenStateChanged__DelegateSignature Parms{};

	Parms.IsOpening = IsOpening;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.BndEvt__Box_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOxygenGeneratorBP_C::BndEvt__Box_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "BndEvt__Box_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature");

	Params::OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AOxygenGeneratorBP_C::BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature");

	Params::OxygenGeneratorBP_C_BndEvt__Box_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Multicast Event Close Lids
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::Multicast_Event_Close_Lids()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Multicast Event Close Lids");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Multicast Event Open Lids
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::Multicast_Event_Open_Lids()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Multicast Event Open Lids");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.K2_OnReset
// (Event, Public, BlueprintEvent)

void AOxygenGeneratorBP_C::K2_OnReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "K2_OnReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AOxygenGeneratorBP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Audio SabotagedOrFailed
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::Audio_SabotagedOrFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Audio SabotagedOrFailed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Audio Repaired
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::Audio_Repaired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Audio Repaired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Audio Idle Neutral
// (BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::Audio_Idle_Neutral()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Audio Idle Neutral");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Audio Lid Move Stop
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::Audio_Lid_Move_Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Audio Lid Move Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Audio Lid Move
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::Audio_Lid_Move()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Audio Lid Move");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.TimelineLids__UpdateFunc
// (BlueprintEvent)

void AOxygenGeneratorBP_C::TimelineLids__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "TimelineLids__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.TimelineLids__FinishedFunc
// (BlueprintEvent)

void AOxygenGeneratorBP_C::TimelineLids__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "TimelineLids__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Init
// (Public, BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.OnRep_bSabotaged
// (BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::OnRep_bSabotaged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "OnRep_bSabotaged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.OnRep_bOpen
// (BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::OnRep_bOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "OnRep_bOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Set Open
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Open                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AOxygenGeneratorBP_C::Set_Open(bool Open)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Set Open");

	Params::OxygenGeneratorBP_C_Set_Open Parms{};

	Parms.Open = Open;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Event Open Lids
// (Public, BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::Event_Open_Lids()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Event Open Lids");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Event Close Lids
// (Public, BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::Event_Close_Lids()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Event Close Lids");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.MoveLids
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Alpha                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOxygenGeneratorBP_C::MoveLids(float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "MoveLids");

	Params::OxygenGeneratorBP_C_MoveLids Parms{};

	Parms.Alpha = Alpha;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Event Sabotaged
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::Event_Sabotaged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Event Sabotaged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Event Repaired
// (Public, BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::Event_Repaired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Event Repaired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Set Lids
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Open                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AOxygenGeneratorBP_C::Set_Lids(bool Open)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Set Lids");

	Params::OxygenGeneratorBP_C_Set_Lids Parms{};

	Parms.Open = Open;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Set Repaired StateCosmetic
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Repaired_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AOxygenGeneratorBP_C::Set_Repaired_StateCosmetic(bool Repaired_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Set Repaired StateCosmetic");

	Params::OxygenGeneratorBP_C_Set_Repaired_StateCosmetic Parms{};

	Parms.Repaired_0 = Repaired_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Set Sabotaged or Failed State Cosmetic
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sabotaged_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AOxygenGeneratorBP_C::Set_Sabotaged_or_Failed_State_Cosmetic(bool Sabotaged_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Set Sabotaged or Failed State Cosmetic");

	Params::OxygenGeneratorBP_C_Set_Sabotaged_or_Failed_State_Cosmetic Parms{};

	Parms.Sabotaged_0 = Sabotaged_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.OnRep_bRepaired
// (BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::OnRep_bRepaired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "OnRep_bRepaired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Set Timeline Time
// (Public, BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::Set_Timeline_Time()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Set Timeline Time");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.GetIsNoOneInside
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoOneInside                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AOxygenGeneratorBP_C::GetIsNoOneInside(bool* NoOneInside)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "GetIsNoOneInside");

	Params::OxygenGeneratorBP_C_GetIsNoOneInside Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoOneInside != nullptr)
		*NoOneInside = Parms.NoOneInside;
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.OnRep_bFailed
// (BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::OnRep_bFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "OnRep_bFailed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Display Sabotaged UI
// (Public, BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::Display_Sabotaged_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Display Sabotaged UI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Make Interactions Unavailable
// (Public, BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::Make_Interactions_Unavailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Make Interactions Unavailable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Event Failed
// (Public, BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::Event_Failed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Event Failed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.Calculate Oxygen Percentage From Seconds
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Oxygen_Amount_In_Seconds                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Oxygen_Amount_In_Percentage                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AOxygenGeneratorBP_C::Calculate_Oxygen_Percentage_From_Seconds(float Oxygen_Amount_In_Seconds, float* Oxygen_Amount_In_Percentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "Calculate Oxygen Percentage From Seconds");

	Params::OxygenGeneratorBP_C_Calculate_Oxygen_Percentage_From_Seconds Parms{};

	Parms.Oxygen_Amount_In_Seconds = Oxygen_Amount_In_Seconds;

	UObject::ProcessEvent(Func, &Parms);

	if (Oxygen_Amount_In_Percentage != nullptr)
		*Oxygen_Amount_In_Percentage = Parms.Oxygen_Amount_In_Percentage;
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.PlayerStateAddGeneratorSabotaged
// (Public, BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::PlayerStateAddGeneratorSabotaged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "PlayerStateAddGeneratorSabotaged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.RenderXray
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AOxygenGeneratorBP_C::RenderXray(bool On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "RenderXray");

	Params::OxygenGeneratorBP_C_RenderXray Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.OnRep_bSabotaging
// (BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::OnRep_bSabotaging()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "OnRep_bSabotaging");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OxygenGeneratorBP.OxygenGeneratorBP_C.OnRep_bRepairing
// (BlueprintCallable, BlueprintEvent)

void AOxygenGeneratorBP_C::OnRep_bRepairing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OxygenGeneratorBP_C", "OnRep_bRepairing");

	UObject::ProcessEvent(Func, nullptr);
}

}

