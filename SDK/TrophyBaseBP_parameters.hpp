#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TrophyBaseBP

#include "Basic.hpp"

#include "SCT_structs.hpp"
#include "InputCore_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function TrophyBaseBP.TrophyBaseBP_C.ExecuteUbergraph_TrophyBaseBP
// 0x00F8 (0x00F8 - 0x0000)
struct TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0018(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0028(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0038(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_2;                            // 0x0048(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x005C(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_3;                            // 0x0070(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3;                          // 0x0080(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_TouchedComponent_2;     // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_TouchedComponent_1;     // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_ComponentBoundEvent_ButtonPressed;          // 0x00A0(0x0018)(HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMenuCamController_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GodRay_C*                           K2Node_DynamicCast_AsBP_God_Ray;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue_2;                // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_3;                // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_TouchedComponent;       // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP) == 0x000008, "Wrong alignment on TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP");
static_assert(sizeof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP) == 0x0000F8, "Wrong size on TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP");
static_assert(offsetof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP, EntryPoint) == 0x000000, "Member 'TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP, Temp_struct_Variable) == 0x000008, "Member 'TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP, Temp_delegate_Variable) == 0x000018, "Member 'TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP, Temp_struct_Variable_1) == 0x000028, "Member 'TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP, Temp_delegate_Variable_1) == 0x000038, "Member 'TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP, Temp_struct_Variable_2) == 0x000048, "Member 'TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP, CallFunc_Lerp_ReturnValue) == 0x000058, "Member 'TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP, Temp_delegate_Variable_2) == 0x00005C, "Member 'TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP, Temp_struct_Variable_3) == 0x000070, "Member 'TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP, Temp_delegate_Variable_3) == 0x000080, "Member 'TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP, K2Node_ComponentBoundEvent_TouchedComponent_2) == 0x000090, "Member 'TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP::K2Node_ComponentBoundEvent_TouchedComponent_2' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP, K2Node_ComponentBoundEvent_TouchedComponent_1) == 0x000098, "Member 'TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP::K2Node_ComponentBoundEvent_TouchedComponent_1' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP, K2Node_ComponentBoundEvent_ButtonPressed) == 0x0000A0, "Member 'TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP::K2Node_ComponentBoundEvent_ButtonPressed' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP, CallFunc_GetPlayerController_ReturnValue) == 0x0000B8, "Member 'TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP, CallFunc_GetComponentByClass_ReturnValue) == 0x0000C0, "Member 'TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP, CallFunc_Conv_StringToName_ReturnValue) == 0x0000C8, "Member 'TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP, CallFunc_PostAkEvent_ReturnValue) == 0x0000D0, "Member 'TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP, CallFunc_PostAkEvent_ReturnValue_1) == 0x0000D4, "Member 'TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP, K2Node_DynamicCast_AsBP_God_Ray) == 0x0000D8, "Member 'TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP::K2Node_DynamicCast_AsBP_God_Ray' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP, CallFunc_PostAkEvent_ReturnValue_2) == 0x0000E4, "Member 'TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP::CallFunc_PostAkEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP, CallFunc_PostAkEvent_ReturnValue_3) == 0x0000E8, "Member 'TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP::CallFunc_PostAkEvent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP, K2Node_ComponentBoundEvent_TouchedComponent) == 0x0000F0, "Member 'TrophyBaseBP_C_ExecuteUbergraph_TrophyBaseBP::K2Node_ComponentBoundEvent_TouchedComponent' has a wrong offset!");

// Function TrophyBaseBP.TrophyBaseBP_C.BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_2_ComponentBeginCursorOverSignature__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct TrophyBaseBP_C_BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_2_ComponentBeginCursorOverSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    TouchedComponent;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrophyBaseBP_C_BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_2_ComponentBeginCursorOverSignature__DelegateSignature) == 0x000008, "Wrong alignment on TrophyBaseBP_C_BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_2_ComponentBeginCursorOverSignature__DelegateSignature");
static_assert(sizeof(TrophyBaseBP_C_BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_2_ComponentBeginCursorOverSignature__DelegateSignature) == 0x000008, "Wrong size on TrophyBaseBP_C_BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_2_ComponentBeginCursorOverSignature__DelegateSignature");
static_assert(offsetof(TrophyBaseBP_C_BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_2_ComponentBeginCursorOverSignature__DelegateSignature, TouchedComponent) == 0x000000, "Member 'TrophyBaseBP_C_BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_2_ComponentBeginCursorOverSignature__DelegateSignature::TouchedComponent' has a wrong offset!");

// Function TrophyBaseBP.TrophyBaseBP_C.BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_0_ComponentOnClickedSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct TrophyBaseBP_C_BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_0_ComponentOnClickedSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    TouchedComponent;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   ButtonPressed;                                     // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(TrophyBaseBP_C_BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_0_ComponentOnClickedSignature__DelegateSignature) == 0x000008, "Wrong alignment on TrophyBaseBP_C_BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_0_ComponentOnClickedSignature__DelegateSignature");
static_assert(sizeof(TrophyBaseBP_C_BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_0_ComponentOnClickedSignature__DelegateSignature) == 0x000020, "Wrong size on TrophyBaseBP_C_BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_0_ComponentOnClickedSignature__DelegateSignature");
static_assert(offsetof(TrophyBaseBP_C_BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_0_ComponentOnClickedSignature__DelegateSignature, TouchedComponent) == 0x000000, "Member 'TrophyBaseBP_C_BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_0_ComponentOnClickedSignature__DelegateSignature::TouchedComponent' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_0_ComponentOnClickedSignature__DelegateSignature, ButtonPressed) == 0x000008, "Member 'TrophyBaseBP_C_BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_0_ComponentOnClickedSignature__DelegateSignature::ButtonPressed' has a wrong offset!");

// Function TrophyBaseBP.TrophyBaseBP_C.BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_4_ComponentEndCursorOverSignature__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct TrophyBaseBP_C_BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_4_ComponentEndCursorOverSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    TouchedComponent;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrophyBaseBP_C_BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_4_ComponentEndCursorOverSignature__DelegateSignature) == 0x000008, "Wrong alignment on TrophyBaseBP_C_BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_4_ComponentEndCursorOverSignature__DelegateSignature");
static_assert(sizeof(TrophyBaseBP_C_BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_4_ComponentEndCursorOverSignature__DelegateSignature) == 0x000008, "Wrong size on TrophyBaseBP_C_BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_4_ComponentEndCursorOverSignature__DelegateSignature");
static_assert(offsetof(TrophyBaseBP_C_BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_4_ComponentEndCursorOverSignature__DelegateSignature, TouchedComponent) == 0x000000, "Member 'TrophyBaseBP_C_BndEvt__InteractionCollider_K2Node_ComponentBoundEvent_4_ComponentEndCursorOverSignature__DelegateSignature::TouchedComponent' has a wrong offset!");

// Function TrophyBaseBP.TrophyBaseBP_C.DidOneSecondPass
// 0x000C (0x000C - 0x0000)
struct TrophyBaseBP_C_DidOneSecondPass final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrophyBaseBP_C_DidOneSecondPass) == 0x000004, "Wrong alignment on TrophyBaseBP_C_DidOneSecondPass");
static_assert(sizeof(TrophyBaseBP_C_DidOneSecondPass) == 0x00000C, "Wrong size on TrophyBaseBP_C_DidOneSecondPass");
static_assert(offsetof(TrophyBaseBP_C_DidOneSecondPass, ReturnValue) == 0x000000, "Member 'TrophyBaseBP_C_DidOneSecondPass::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_DidOneSecondPass, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000004, "Member 'TrophyBaseBP_C_DidOneSecondPass::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_DidOneSecondPass, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'TrophyBaseBP_C_DidOneSecondPass::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function TrophyBaseBP.TrophyBaseBP_C.SetTrophy
// 0x0050 (0x0050 - 0x0000)
struct TrophyBaseBP_C_SetTrophy final
{
public:
	int32                                         InTrophyIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCloudTrophy                           SelectedTrophy_0;                                  // 0x0008(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrophyBaseBP_C_SetTrophy) == 0x000008, "Wrong alignment on TrophyBaseBP_C_SetTrophy");
static_assert(sizeof(TrophyBaseBP_C_SetTrophy) == 0x000050, "Wrong size on TrophyBaseBP_C_SetTrophy");
static_assert(offsetof(TrophyBaseBP_C_SetTrophy, InTrophyIndex) == 0x000000, "Member 'TrophyBaseBP_C_SetTrophy::InTrophyIndex' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_SetTrophy, SelectedTrophy_0) == 0x000008, "Member 'TrophyBaseBP_C_SetTrophy::SelectedTrophy_0' has a wrong offset!");
static_assert(offsetof(TrophyBaseBP_C_SetTrophy, CallFunc_SetStaticMesh_ReturnValue) == 0x000048, "Member 'TrophyBaseBP_C_SetTrophy::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function TrophyBaseBP.TrophyBaseBP_C.Initialize
// 0x0008 (0x0008 - 0x0000)
struct TrophyBaseBP_C_Initialize final
{
public:
	class UWI_TrophyCustomization_C*              InCustomizationWidget;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrophyBaseBP_C_Initialize) == 0x000008, "Wrong alignment on TrophyBaseBP_C_Initialize");
static_assert(sizeof(TrophyBaseBP_C_Initialize) == 0x000008, "Wrong size on TrophyBaseBP_C_Initialize");
static_assert(offsetof(TrophyBaseBP_C_Initialize, InCustomizationWidget) == 0x000000, "Member 'TrophyBaseBP_C_Initialize::InCustomizationWidget' has a wrong offset!");

}

