#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CoopKillCharacterGA

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SCT_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CoopKillCharacterGA.CoopKillCharacterGA_C
// 0x0048 (0x0488 - 0x0440)
class UCoopKillCharacterGA_C final : public UCoopKillCharacterSkill
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0440(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	float                                         KillTime;                                          // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAgendaCoopKillEvent*                   CoopKillEvent;                                     // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             Villain;                                           // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharacterOffset;                                   // 0x0460(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      Victim;                                            // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VillainLocation;                                   // 0x0470(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               VillianRotation;                                   // 0x047C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_CoopKillCharacterGA(int32 EntryPoint);
	void Multi_Audio_Cancel_Early();
	void Multi_Audio_Killing();
	void K2_ActivateAbility();
	void IK_Positon(class ACharacter* Victim_0, class ACharacter* Villain_0, bool Enable);
	void MulticastDisableAnimIK(bool Enable, class AActor* Owning_Actor);
	void MulticastStopGrab();
	void MulticastStartGrab(const class ACharacterSCTBP_C* Victim_0, class ACharacter* Villain_0, const struct FTransform& TargetLocation);
	void InterpolatePosition();
	void Multi_Audio_Killed();
	void OnGrabbingActorChanged(class AActor* NewGrabbingActor);
	void K2_OnEndAbility(bool bWasCancelled);
	void OnFinish_1564686642A7ECF8A095139F46CF8CC4();
	void OnCompleted_0EC060B949490088EAE1629277623098();
	void OnBlendOut_0EC060B949490088EAE1629277623098();
	void OnInterrupted_0EC060B949490088EAE1629277623098();
	void OnCancelled_0EC060B949490088EAE1629277623098();
	class FText GetContextDescription();
	void EnableCharacterMovement(bool Enable);
	void AddScoreCoopKill();
	void KillTarget();
	void PlayKilledAudio();
	void StartProgressBar();
	void CallGlobalEvent();
	void Calculate_Position_Target(class AActor* Villain_0, class AActor* Victim_0, struct FVector* TargetLocation, struct FRotator* TargetRotation);
	void Disable_Collision_Between(class AActor* ActorToIgnore);
	void Enable_Collision_Between(class AActor* ActorToEnable);
	void Add_Karma_if_Killing_Early();

	bool K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, struct FGameplayTagContainer* RelevantTags) const;
	void GetTotalPersonoidsInteracting(class AActor* Owner_Actor, int32* Count) const;
	void IsTargetBeingGrabbedByPersonoid(bool* IsPersonoid) const;
	class AActor* GetTargetActor() const;
	void GetGrabbingActor(class AActor** GrabbingActor) const;
	bool CanCoopKill() const;
	void TargetBeingKilledByOther(bool* IsOther) const;
	bool AreBothPersonoids() const;
	bool K2_IsPretendAction() const;
	bool ArePersonoidsHidden() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CoopKillCharacterGA_C">();
	}
	static class UCoopKillCharacterGA_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCoopKillCharacterGA_C>();
	}
};
static_assert(alignof(UCoopKillCharacterGA_C) == 0x000008, "Wrong alignment on UCoopKillCharacterGA_C");
static_assert(sizeof(UCoopKillCharacterGA_C) == 0x000488, "Wrong size on UCoopKillCharacterGA_C");
static_assert(offsetof(UCoopKillCharacterGA_C, UberGraphFrame) == 0x000440, "Member 'UCoopKillCharacterGA_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCoopKillCharacterGA_C, KillTime) == 0x000448, "Member 'UCoopKillCharacterGA_C::KillTime' has a wrong offset!");
static_assert(offsetof(UCoopKillCharacterGA_C, CoopKillEvent) == 0x000450, "Member 'UCoopKillCharacterGA_C::CoopKillEvent' has a wrong offset!");
static_assert(offsetof(UCoopKillCharacterGA_C, Villain) == 0x000458, "Member 'UCoopKillCharacterGA_C::Villain' has a wrong offset!");
static_assert(offsetof(UCoopKillCharacterGA_C, CharacterOffset) == 0x000460, "Member 'UCoopKillCharacterGA_C::CharacterOffset' has a wrong offset!");
static_assert(offsetof(UCoopKillCharacterGA_C, Victim) == 0x000468, "Member 'UCoopKillCharacterGA_C::Victim' has a wrong offset!");
static_assert(offsetof(UCoopKillCharacterGA_C, VillainLocation) == 0x000470, "Member 'UCoopKillCharacterGA_C::VillainLocation' has a wrong offset!");
static_assert(offsetof(UCoopKillCharacterGA_C, VillianRotation) == 0x00047C, "Member 'UCoopKillCharacterGA_C::VillianRotation' has a wrong offset!");

}

