#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ALS_Interface

#include "Basic.hpp"

#include "ALS_Interface_classes.hpp"
#include "ALS_Interface_parameters.hpp"


namespace SDK
{

// Function ALS_Interface.ALS_Interface_C.Set ALS_Gait BPI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EALS_Gait                               ALS_Gait                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IALS_Interface_C::Set_ALS_Gait_BPI(EALS_Gait ALS_Gait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Interface_C", "Set ALS_Gait BPI");

	Params::ALS_Interface_C_Set_ALS_Gait_BPI Parms{};

	Parms.ALS_Gait = ALS_Gait;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Interface.ALS_Interface_C.Set ALS_Stance BPI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EALS_Stance                             ALS_Stance                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IALS_Interface_C::Set_ALS_Stance_BPI(EALS_Stance ALS_Stance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Interface_C", "Set ALS_Stance BPI");

	Params::ALS_Interface_C_Set_ALS_Stance_BPI Parms{};

	Parms.ALS_Stance = ALS_Stance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Interface.ALS_Interface_C.Set ALS_RotationMode BPI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EALS_RotationMode                       ALS_RotationMode_BPI                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IALS_Interface_C::Set_ALS_RotationMode_BPI(EALS_RotationMode ALS_RotationMode_BPI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Interface_C", "Set ALS_RotationMode BPI");

	Params::ALS_Interface_C_Set_ALS_RotationMode_BPI Parms{};

	Parms.ALS_RotationMode_BPI = ALS_RotationMode_BPI;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Interface.ALS_Interface_C.Set ALS_MovementMode BPI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EALS_MovementMode                       ALS_MovementMode                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IALS_Interface_C::Set_ALS_MovementMode_BPI(EALS_MovementMode ALS_MovementMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Interface_C", "Set ALS_MovementMode BPI");

	Params::ALS_Interface_C_Set_ALS_MovementMode_BPI Parms{};

	Parms.ALS_MovementMode = ALS_MovementMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Interface.ALS_Interface_C.AnimNotify_Pivot BPI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPivotParams                     PivotParams                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IALS_Interface_C::AnimNotify_Pivot_BPI(const struct FPivotParams& PivotParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Interface_C", "AnimNotify_Pivot BPI");

	Params::ALS_Interface_C_AnimNotify_Pivot_BPI Parms{};

	Parms.PivotParams = std::move(PivotParams);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Interface.ALS_Interface_C.AnimNotify_TurningInPlace BPI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     TurnInPlaceMontage                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldTurnInPlace                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    TurningInPlace                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    TurningRight                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IALS_Interface_C::AnimNotify_TurningInPlace_BPI(class UAnimMontage* TurnInPlaceMontage, bool ShouldTurnInPlace, bool TurningInPlace, bool TurningRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Interface_C", "AnimNotify_TurningInPlace BPI");

	Params::ALS_Interface_C_AnimNotify_TurningInPlace_BPI Parms{};

	Parms.TurnInPlaceMontage = TurnInPlaceMontage;
	Parms.ShouldTurnInPlace = ShouldTurnInPlace;
	Parms.TurningInPlace = TurningInPlace;
	Parms.TurningRight = TurningRight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Interface.ALS_Interface_C.AnimNotify_IdleEntryState BPI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EIdleEntryState                         IdleEntryState                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IALS_Interface_C::AnimNotify_IdleEntryState_BPI(EIdleEntryState IdleEntryState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Interface_C", "AnimNotify_IdleEntryState BPI");

	Params::ALS_Interface_C_AnimNotify_IdleEntryState_BPI Parms{};

	Parms.IdleEntryState = IdleEntryState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Interface.ALS_Interface_C.Set ALS_Aiming BPI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Aiming                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IALS_Interface_C::Set_ALS_Aiming_BPI(bool Aiming)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Interface_C", "Set ALS_Aiming BPI");

	Params::ALS_Interface_C_Set_ALS_Aiming_BPI Parms{};

	Parms.Aiming = Aiming;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Interface.ALS_Interface_C.Play_GetUp_Anim BPI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FaceDown                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IALS_Interface_C::Play_GetUp_Anim_BPI(bool FaceDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Interface_C", "Play_GetUp_Anim BPI");

	Params::ALS_Interface_C_Play_GetUp_Anim_BPI Parms{};

	Parms.FaceDown = FaceDown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Interface.ALS_Interface_C.SavePoseSnapshot_BPI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             PoseName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IALS_Interface_C::SavePoseSnapshot_BPI(class FName PoseName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Interface_C", "SavePoseSnapshot_BPI");

	Params::ALS_Interface_C_SavePoseSnapshot_BPI Parms{};

	Parms.PoseName = PoseName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Interface.ALS_Interface_C.AddCharacterRotation_BPI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         AddAmount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IALS_Interface_C::AddCharacterRotation_BPI(const struct FRotator& AddAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Interface_C", "AddCharacterRotation_BPI");

	Params::ALS_Interface_C_AddCharacterRotation_BPI Parms{};

	Parms.AddAmount = std::move(AddAmount);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Interface.ALS_Interface_C.Set ALS_ViewMode BPI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EALS_ViewMode                           ViewMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IALS_Interface_C::Set_ALS_ViewMode_BPI(EALS_ViewMode ViewMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Interface_C", "Set ALS_ViewMode BPI");

	Params::ALS_Interface_C_Set_ALS_ViewMode_BPI Parms{};

	Parms.ViewMode = ViewMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Interface.ALS_Interface_C.ShowTraces_BPI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShowTraces                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IALS_Interface_C::ShowTraces_BPI(bool ShowTraces)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Interface_C", "ShowTraces_BPI");

	Params::ALS_Interface_C_ShowTraces_BPI Parms{};

	Parms.ShowTraces = ShowTraces;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Interface.ALS_Interface_C.Set WalkingSpeed BPI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   WalkingSpeed                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IALS_Interface_C::Set_WalkingSpeed_BPI(float WalkingSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Interface_C", "Set WalkingSpeed BPI");

	Params::ALS_Interface_C_Set_WalkingSpeed_BPI Parms{};

	Parms.WalkingSpeed = WalkingSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Interface.ALS_Interface_C.Set RunningSpeed BPI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   RunningSpeed                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IALS_Interface_C::Set_RunningSpeed_BPI(float RunningSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Interface_C", "Set RunningSpeed BPI");

	Params::ALS_Interface_C_Set_RunningSpeed_BPI Parms{};

	Parms.RunningSpeed = RunningSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Interface.ALS_Interface_C.Set SprintingSpeed BPI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   SprintingSpeed                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IALS_Interface_C::Set_SprintingSpeed_BPI(float SprintingSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Interface_C", "Set SprintingSpeed BPI");

	Params::ALS_Interface_C_Set_SprintingSpeed_BPI Parms{};

	Parms.SprintingSpeed = SprintingSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Interface.ALS_Interface_C.Set CrouchingSpeed BPI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CrouchingSpeed                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IALS_Interface_C::Set_CrouchingSpeed_BPI(float CrouchingSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Interface_C", "Set CrouchingSpeed BPI");

	Params::ALS_Interface_C_Set_CrouchingSpeed_BPI Parms{};

	Parms.CrouchingSpeed = CrouchingSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Interface.ALS_Interface_C.CameraShake_BPI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           ShakeClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IALS_Interface_C::CameraShake_BPI(class UClass* ShakeClass, float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Interface_C", "CameraShake_BPI");

	Params::ALS_Interface_C_CameraShake_BPI Parms{};

	Parms.ShakeClass = ShakeClass;
	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_Interface.ALS_Interface_C.Set RF_BPI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RF                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IALS_Interface_C::Set_RF_BPI(bool RF)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_Interface_C", "Set RF_BPI");

	Params::ALS_Interface_C_Set_RF_BPI Parms{};

	Parms.RF = RF;

	UObject::ProcessEvent(Func, &Parms);
}

}

