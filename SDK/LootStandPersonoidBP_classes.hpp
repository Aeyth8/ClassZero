#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LootStandPersonoidBP

#include "Basic.hpp"

#include "LootStandBP_classes.hpp"
#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass LootStandPersonoidBP.LootStandPersonoidBP_C
// 0x0070 (0x03D8 - 0x0368)
class ALootStandPersonoidBP_C final : public ALootStandBP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_LootStandPersonoidBP_C;             // 0x0368(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UStaticMeshComponent*                   PadLock1;                                          // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractionProgressBarCreator*         InteractionProgressBarCreatorPadLocked;            // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Padlock;                                           // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UContextStaticMeshComponent*            ContextMeshPadLock;                                // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   XrayModel;                                         // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Tutorial;                                          // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPOI_WidgetComponent_DroppedSyringe_C*  POI_WidgetComponent_Syringe;                       // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   OverdoseSyringeMesh;                               // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          InstancedStaticMesh;                               // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Base;                                              // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight_0;                                       // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          AquirePersonoidLoot;                               // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PadLocked;                                         // 0x03D0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)

public:
	void ExecuteUbergraph_LootStandPersonoidBP(int32 EntryPoint);
	void SetPadLock();
	void ReceiveBeginPlay();
	void OpenStart_Cosmetic();
	void Confirmed_Empty_Or_Item_Looted();
	void OpenFinished_Cosmetic();
	void AutoGrantLoot(class UInventory* Instigator_Inventory);
	void OnRep_NotOpened();
	void RenderXray(bool On);
	void OnRep_PadLocked();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LootStandPersonoidBP_C">();
	}
	static class ALootStandPersonoidBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALootStandPersonoidBP_C>();
	}
};
static_assert(alignof(ALootStandPersonoidBP_C) == 0x000008, "Wrong alignment on ALootStandPersonoidBP_C");
static_assert(sizeof(ALootStandPersonoidBP_C) == 0x0003D8, "Wrong size on ALootStandPersonoidBP_C");
static_assert(offsetof(ALootStandPersonoidBP_C, UberGraphFrame_LootStandPersonoidBP_C) == 0x000368, "Member 'ALootStandPersonoidBP_C::UberGraphFrame_LootStandPersonoidBP_C' has a wrong offset!");
static_assert(offsetof(ALootStandPersonoidBP_C, PadLock1) == 0x000370, "Member 'ALootStandPersonoidBP_C::PadLock1' has a wrong offset!");
static_assert(offsetof(ALootStandPersonoidBP_C, InteractionProgressBarCreatorPadLocked) == 0x000378, "Member 'ALootStandPersonoidBP_C::InteractionProgressBarCreatorPadLocked' has a wrong offset!");
static_assert(offsetof(ALootStandPersonoidBP_C, Padlock) == 0x000380, "Member 'ALootStandPersonoidBP_C::Padlock' has a wrong offset!");
static_assert(offsetof(ALootStandPersonoidBP_C, ContextMeshPadLock) == 0x000388, "Member 'ALootStandPersonoidBP_C::ContextMeshPadLock' has a wrong offset!");
static_assert(offsetof(ALootStandPersonoidBP_C, XrayModel) == 0x000390, "Member 'ALootStandPersonoidBP_C::XrayModel' has a wrong offset!");
static_assert(offsetof(ALootStandPersonoidBP_C, Tutorial) == 0x000398, "Member 'ALootStandPersonoidBP_C::Tutorial' has a wrong offset!");
static_assert(offsetof(ALootStandPersonoidBP_C, POI_WidgetComponent_Syringe) == 0x0003A0, "Member 'ALootStandPersonoidBP_C::POI_WidgetComponent_Syringe' has a wrong offset!");
static_assert(offsetof(ALootStandPersonoidBP_C, OverdoseSyringeMesh) == 0x0003A8, "Member 'ALootStandPersonoidBP_C::OverdoseSyringeMesh' has a wrong offset!");
static_assert(offsetof(ALootStandPersonoidBP_C, InstancedStaticMesh) == 0x0003B0, "Member 'ALootStandPersonoidBP_C::InstancedStaticMesh' has a wrong offset!");
static_assert(offsetof(ALootStandPersonoidBP_C, Base) == 0x0003B8, "Member 'ALootStandPersonoidBP_C::Base' has a wrong offset!");
static_assert(offsetof(ALootStandPersonoidBP_C, SpotLight_0) == 0x0003C0, "Member 'ALootStandPersonoidBP_C::SpotLight_0' has a wrong offset!");
static_assert(offsetof(ALootStandPersonoidBP_C, AquirePersonoidLoot) == 0x0003C8, "Member 'ALootStandPersonoidBP_C::AquirePersonoidLoot' has a wrong offset!");
static_assert(offsetof(ALootStandPersonoidBP_C, PadLocked) == 0x0003D0, "Member 'ALootStandPersonoidBP_C::PadLocked' has a wrong offset!");

}

