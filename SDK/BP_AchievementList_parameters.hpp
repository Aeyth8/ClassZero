#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AchievementList

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_AchievementList.BP_AchievementList_C.Initialize Achievements
// 0x0058 (0x0058 - 0x0000)
struct BP_AchievementList_C_Initialize_Achievements final
{
public:
	TArray<class UFCTAchievement*>                AchievementInfos;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UBP_AchievementPanel_C*                 TempAchievementWidget;                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFCTAchievement*                        TempAchievementInfo;                               // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFCTAchievement*                        CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AchievementPanel_C*                 CallFunc_Create_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AchievementList_C_Initialize_Achievements) == 0x000008, "Wrong alignment on BP_AchievementList_C_Initialize_Achievements");
static_assert(sizeof(BP_AchievementList_C_Initialize_Achievements) == 0x000058, "Wrong size on BP_AchievementList_C_Initialize_Achievements");
static_assert(offsetof(BP_AchievementList_C_Initialize_Achievements, AchievementInfos) == 0x000000, "Member 'BP_AchievementList_C_Initialize_Achievements::AchievementInfos' has a wrong offset!");
static_assert(offsetof(BP_AchievementList_C_Initialize_Achievements, TempAchievementWidget) == 0x000010, "Member 'BP_AchievementList_C_Initialize_Achievements::TempAchievementWidget' has a wrong offset!");
static_assert(offsetof(BP_AchievementList_C_Initialize_Achievements, TempAchievementInfo) == 0x000018, "Member 'BP_AchievementList_C_Initialize_Achievements::TempAchievementInfo' has a wrong offset!");
static_assert(offsetof(BP_AchievementList_C_Initialize_Achievements, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_AchievementList_C_Initialize_Achievements::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AchievementList_C_Initialize_Achievements, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_AchievementList_C_Initialize_Achievements::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AchievementList_C_Initialize_Achievements, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_AchievementList_C_Initialize_Achievements::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AchievementList_C_Initialize_Achievements, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_AchievementList_C_Initialize_Achievements::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AchievementList_C_Initialize_Achievements, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_AchievementList_C_Initialize_Achievements::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AchievementList_C_Initialize_Achievements, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_AchievementList_C_Initialize_Achievements::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AchievementList_C_Initialize_Achievements, CallFunc_GetOwningPlayer_ReturnValue) == 0x000040, "Member 'BP_AchievementList_C_Initialize_Achievements::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AchievementList_C_Initialize_Achievements, CallFunc_Create_ReturnValue) == 0x000048, "Member 'BP_AchievementList_C_Initialize_Achievements::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AchievementList_C_Initialize_Achievements, CallFunc_AddChild_ReturnValue) == 0x000050, "Member 'BP_AchievementList_C_Initialize_Achievements::CallFunc_AddChild_ReturnValue' has a wrong offset!");

}

