#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerListEntrySCT

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SCT_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.ExecuteUbergraph_PlayerListEntrySCT
// 0x0178 (0x0178 - 0x0000)
struct PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFCTPlatformPlayerInfo                 K2Node_CustomEvent_PlatformInfo_1;                 // 0x0008(0x0020)()
	int32                                         K2Node_CustomEvent_Code_1;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Message_1;                      // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const struct FFCTPlatformPlayerInfo& PlatformInfo, int32 Code, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	struct FFCTPlatformPlayerInfo                 K2Node_CustomEvent_PlatformInfo;                   // 0x0050(0x0020)()
	int32                                         K2Node_CustomEvent_Code;                           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Message;                        // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const struct FFCTPlatformPlayerInfo& PlatformInfo, int32 Code, const class FString& Message)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 Temp_string_Variable;                              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFCTPlatformPlayerInfo                 Temp_struct_Variable;                              // 0x00D0(0x0020)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsMuted;                        // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsTalking;                      // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsLocal;                        // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Is_Talking;                     // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Is_Local;                       // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NetSynchronized_Return_Value;             // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0117(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWidget*                                K2Node_Select_Default;                             // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFCTGetUserPlatformInfoCallbackProxy*   CallFunc_GetUserPlatformInfo_ReturnValue;          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMutedByLocalPlayer_ReturnValue;         // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMutedByLocalPlayer_ReturnValue_1;       // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default_1;                           // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0140(0x0028)(UObjectWrapper)
	bool                                          CallFunc_NotEqual_LinearColorLinearColor_ReturnValue; // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default_2;                           // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT) == 0x000008, "Wrong alignment on PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT");
static_assert(sizeof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT) == 0x000178, "Wrong size on PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, EntryPoint) == 0x000000, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, K2Node_CustomEvent_PlatformInfo_1) == 0x000008, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::K2Node_CustomEvent_PlatformInfo_1' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, K2Node_CustomEvent_Code_1) == 0x000028, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::K2Node_CustomEvent_Code_1' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, K2Node_CustomEvent_Message_1) == 0x000030, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::K2Node_CustomEvent_Message_1' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, K2Node_CustomEvent_PlatformInfo) == 0x000050, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::K2Node_CustomEvent_PlatformInfo' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, K2Node_CustomEvent_Code) == 0x000070, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::K2Node_CustomEvent_Code' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, K2Node_CustomEvent_Message) == 0x000078, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::K2Node_CustomEvent_Message' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, K2Node_CreateDelegate_OutputDelegate_1) == 0x000088, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, Temp_string_Variable) == 0x000098, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, Temp_int_Variable) == 0x0000A8, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, CallFunc_Conv_IntToString_ReturnValue) == 0x0000B0, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C0, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, Temp_struct_Variable) == 0x0000D0, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000F0, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000100, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, K2Node_CustomEvent_IsMuted) == 0x000110, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::K2Node_CustomEvent_IsMuted' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, K2Node_CustomEvent_IsTalking) == 0x000111, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::K2Node_CustomEvent_IsTalking' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, K2Node_CustomEvent_IsLocal) == 0x000112, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::K2Node_CustomEvent_IsLocal' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, K2Node_CustomEvent_Is_Talking) == 0x000113, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::K2Node_CustomEvent_Is_Talking' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, K2Node_CustomEvent_Is_Local) == 0x000114, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::K2Node_CustomEvent_Is_Local' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, CallFunc_NetSynchronized_Return_Value) == 0x000115, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::CallFunc_NetSynchronized_Return_Value' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, K2Node_Event_IsDesignTime) == 0x000116, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, Temp_bool_Variable) == 0x000117, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, K2Node_Select_Default) == 0x000118, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, CallFunc_IsValid_ReturnValue) == 0x000120, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, CallFunc_GetUserPlatformInfo_ReturnValue) == 0x000128, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::CallFunc_GetUserPlatformInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, CallFunc_IsValid_ReturnValue_1) == 0x000130, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, CallFunc_IsMutedByLocalPlayer_ReturnValue) == 0x000131, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::CallFunc_IsMutedByLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, CallFunc_IsMutedByLocalPlayer_ReturnValue_1) == 0x000132, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::CallFunc_IsMutedByLocalPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, Temp_bool_Variable_1) == 0x000133, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, K2Node_Select_Default_1) == 0x000138, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, K2Node_MakeStruct_SlateColor) == 0x000140, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, CallFunc_NotEqual_LinearColorLinearColor_ReturnValue) == 0x000168, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::CallFunc_NotEqual_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, Temp_bool_Variable_2) == 0x000169, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT, K2Node_Select_Default_2) == 0x000170, "Member 'PlayerListEntrySCT_C_ExecuteUbergraph_PlayerListEntrySCT::K2Node_Select_Default_2' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct PlayerListEntrySCT_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListEntrySCT_C_PreConstruct) == 0x000001, "Wrong alignment on PlayerListEntrySCT_C_PreConstruct");
static_assert(sizeof(PlayerListEntrySCT_C_PreConstruct) == 0x000001, "Wrong size on PlayerListEntrySCT_C_PreConstruct");
static_assert(offsetof(PlayerListEntrySCT_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'PlayerListEntrySCT_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.OnTalking
// 0x0002 (0x0002 - 0x0000)
struct PlayerListEntrySCT_C_OnTalking final
{
public:
	bool                                          Is_Talking;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Is_Local;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListEntrySCT_C_OnTalking) == 0x000001, "Wrong alignment on PlayerListEntrySCT_C_OnTalking");
static_assert(sizeof(PlayerListEntrySCT_C_OnTalking) == 0x000002, "Wrong size on PlayerListEntrySCT_C_OnTalking");
static_assert(offsetof(PlayerListEntrySCT_C_OnTalking, Is_Talking) == 0x000000, "Member 'PlayerListEntrySCT_C_OnTalking::Is_Talking' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_OnTalking, Is_Local) == 0x000001, "Member 'PlayerListEntrySCT_C_OnTalking::Is_Local' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.OnTalkingPersonoid
// 0x0002 (0x0002 - 0x0000)
struct PlayerListEntrySCT_C_OnTalkingPersonoid final
{
public:
	bool                                          IsTalking_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLocal;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListEntrySCT_C_OnTalkingPersonoid) == 0x000001, "Wrong alignment on PlayerListEntrySCT_C_OnTalkingPersonoid");
static_assert(sizeof(PlayerListEntrySCT_C_OnTalkingPersonoid) == 0x000002, "Wrong size on PlayerListEntrySCT_C_OnTalkingPersonoid");
static_assert(offsetof(PlayerListEntrySCT_C_OnTalkingPersonoid, IsTalking_0) == 0x000000, "Member 'PlayerListEntrySCT_C_OnTalkingPersonoid::IsTalking_0' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_OnTalkingPersonoid, IsLocal) == 0x000001, "Member 'PlayerListEntrySCT_C_OnTalkingPersonoid::IsLocal' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.OnMuting
// 0x0001 (0x0001 - 0x0000)
struct PlayerListEntrySCT_C_OnMuting final
{
public:
	bool                                          IsMuted_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListEntrySCT_C_OnMuting) == 0x000001, "Wrong alignment on PlayerListEntrySCT_C_OnMuting");
static_assert(sizeof(PlayerListEntrySCT_C_OnMuting) == 0x000001, "Wrong size on PlayerListEntrySCT_C_OnMuting");
static_assert(offsetof(PlayerListEntrySCT_C_OnMuting, IsMuted_0) == 0x000000, "Member 'PlayerListEntrySCT_C_OnMuting::IsMuted_0' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.OnSuccess_984BE7584A47CE1F5FBC0AAC766B42D9
// 0x0038 (0x0038 - 0x0000)
struct PlayerListEntrySCT_C_OnSuccess_984BE7584A47CE1F5FBC0AAC766B42D9 final
{
public:
	struct FFCTPlatformPlayerInfo                 PlatformInfo;                                      // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Code;                                              // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerListEntrySCT_C_OnSuccess_984BE7584A47CE1F5FBC0AAC766B42D9) == 0x000008, "Wrong alignment on PlayerListEntrySCT_C_OnSuccess_984BE7584A47CE1F5FBC0AAC766B42D9");
static_assert(sizeof(PlayerListEntrySCT_C_OnSuccess_984BE7584A47CE1F5FBC0AAC766B42D9) == 0x000038, "Wrong size on PlayerListEntrySCT_C_OnSuccess_984BE7584A47CE1F5FBC0AAC766B42D9");
static_assert(offsetof(PlayerListEntrySCT_C_OnSuccess_984BE7584A47CE1F5FBC0AAC766B42D9, PlatformInfo) == 0x000000, "Member 'PlayerListEntrySCT_C_OnSuccess_984BE7584A47CE1F5FBC0AAC766B42D9::PlatformInfo' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_OnSuccess_984BE7584A47CE1F5FBC0AAC766B42D9, Code) == 0x000020, "Member 'PlayerListEntrySCT_C_OnSuccess_984BE7584A47CE1F5FBC0AAC766B42D9::Code' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_OnSuccess_984BE7584A47CE1F5FBC0AAC766B42D9, Message) == 0x000028, "Member 'PlayerListEntrySCT_C_OnSuccess_984BE7584A47CE1F5FBC0AAC766B42D9::Message' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.OnError_984BE7584A47CE1F5FBC0AAC766B42D9
// 0x0038 (0x0038 - 0x0000)
struct PlayerListEntrySCT_C_OnError_984BE7584A47CE1F5FBC0AAC766B42D9 final
{
public:
	struct FFCTPlatformPlayerInfo                 PlatformInfo;                                      // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Code;                                              // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerListEntrySCT_C_OnError_984BE7584A47CE1F5FBC0AAC766B42D9) == 0x000008, "Wrong alignment on PlayerListEntrySCT_C_OnError_984BE7584A47CE1F5FBC0AAC766B42D9");
static_assert(sizeof(PlayerListEntrySCT_C_OnError_984BE7584A47CE1F5FBC0AAC766B42D9) == 0x000038, "Wrong size on PlayerListEntrySCT_C_OnError_984BE7584A47CE1F5FBC0AAC766B42D9");
static_assert(offsetof(PlayerListEntrySCT_C_OnError_984BE7584A47CE1F5FBC0AAC766B42D9, PlatformInfo) == 0x000000, "Member 'PlayerListEntrySCT_C_OnError_984BE7584A47CE1F5FBC0AAC766B42D9::PlatformInfo' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_OnError_984BE7584A47CE1F5FBC0AAC766B42D9, Code) == 0x000020, "Member 'PlayerListEntrySCT_C_OnError_984BE7584A47CE1F5FBC0AAC766B42D9::Code' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_OnError_984BE7584A47CE1F5FBC0AAC766B42D9, Message) == 0x000028, "Member 'PlayerListEntrySCT_C_OnError_984BE7584A47CE1F5FBC0AAC766B42D9::Message' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.LerpToNewPosition
// 0x0060 (0x0060 - 0x0000)
struct PlayerListEntrySCT_C_LerpToNewPosition final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0044(0x001C)(NoDestructor)
};
static_assert(alignof(PlayerListEntrySCT_C_LerpToNewPosition) == 0x000008, "Wrong alignment on PlayerListEntrySCT_C_LerpToNewPosition");
static_assert(sizeof(PlayerListEntrySCT_C_LerpToNewPosition) == 0x000060, "Wrong size on PlayerListEntrySCT_C_LerpToNewPosition");
static_assert(offsetof(PlayerListEntrySCT_C_LerpToNewPosition, Temp_bool_Variable) == 0x000000, "Member 'PlayerListEntrySCT_C_LerpToNewPosition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_LerpToNewPosition, Temp_float_Variable) == 0x000004, "Member 'PlayerListEntrySCT_C_LerpToNewPosition::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_LerpToNewPosition, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'PlayerListEntrySCT_C_LerpToNewPosition::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_LerpToNewPosition, CallFunc_GetTimeSeconds_ReturnValue) == 0x000010, "Member 'PlayerListEntrySCT_C_LerpToNewPosition::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_LerpToNewPosition, CallFunc_BreakVector2D_X) == 0x000014, "Member 'PlayerListEntrySCT_C_LerpToNewPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_LerpToNewPosition, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'PlayerListEntrySCT_C_LerpToNewPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_LerpToNewPosition, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x00001C, "Member 'PlayerListEntrySCT_C_LerpToNewPosition::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_LerpToNewPosition, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000020, "Member 'PlayerListEntrySCT_C_LerpToNewPosition::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_LerpToNewPosition, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'PlayerListEntrySCT_C_LerpToNewPosition::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_LerpToNewPosition, CallFunc_Less_FloatFloat_ReturnValue) == 0x000028, "Member 'PlayerListEntrySCT_C_LerpToNewPosition::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_LerpToNewPosition, K2Node_Select_Default) == 0x00002C, "Member 'PlayerListEntrySCT_C_LerpToNewPosition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_LerpToNewPosition, CallFunc_GetFloatValue_ReturnValue) == 0x000030, "Member 'PlayerListEntrySCT_C_LerpToNewPosition::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_LerpToNewPosition, CallFunc_Lerp_ReturnValue) == 0x000034, "Member 'PlayerListEntrySCT_C_LerpToNewPosition::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_LerpToNewPosition, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'PlayerListEntrySCT_C_LerpToNewPosition::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_LerpToNewPosition, CallFunc_MakeVector2D_ReturnValue) == 0x00003C, "Member 'PlayerListEntrySCT_C_LerpToNewPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_LerpToNewPosition, K2Node_MakeStruct_WidgetTransform) == 0x000044, "Member 'PlayerListEntrySCT_C_LerpToNewPosition::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.Init
// 0x0008 (0x0008 - 0x0000)
struct PlayerListEntrySCT_C_Init final
{
public:
	class ASCTPlayerState*                        Player_State;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerListEntrySCT_C_Init) == 0x000008, "Wrong alignment on PlayerListEntrySCT_C_Init");
static_assert(sizeof(PlayerListEntrySCT_C_Init) == 0x000008, "Wrong size on PlayerListEntrySCT_C_Init");
static_assert(offsetof(PlayerListEntrySCT_C_Init, Player_State) == 0x000000, "Member 'PlayerListEntrySCT_C_Init::Player_State' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.UpdatePlayerName
// 0x0060 (0x0060 - 0x0000)
struct PlayerListEntrySCT_C_UpdatePlayerName final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0048(0x0018)()
};
static_assert(alignof(PlayerListEntrySCT_C_UpdatePlayerName) == 0x000008, "Wrong alignment on PlayerListEntrySCT_C_UpdatePlayerName");
static_assert(sizeof(PlayerListEntrySCT_C_UpdatePlayerName) == 0x000060, "Wrong size on PlayerListEntrySCT_C_UpdatePlayerName");
static_assert(offsetof(PlayerListEntrySCT_C_UpdatePlayerName, Temp_bool_Variable) == 0x000000, "Member 'PlayerListEntrySCT_C_UpdatePlayerName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_UpdatePlayerName, CallFunc_GetPlayerName_ReturnValue) == 0x000008, "Member 'PlayerListEntrySCT_C_UpdatePlayerName::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_UpdatePlayerName, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'PlayerListEntrySCT_C_UpdatePlayerName::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_UpdatePlayerName, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'PlayerListEntrySCT_C_UpdatePlayerName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_UpdatePlayerName, K2Node_Select_Default) == 0x000048, "Member 'PlayerListEntrySCT_C_UpdatePlayerName::K2Node_Select_Default' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.BindToCallbacks
// 0x0020 (0x0020 - 0x0000)
struct PlayerListEntrySCT_C_BindToCallbacks final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const class FString& NewName)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(PlayerListEntrySCT_C_BindToCallbacks) == 0x000004, "Wrong alignment on PlayerListEntrySCT_C_BindToCallbacks");
static_assert(sizeof(PlayerListEntrySCT_C_BindToCallbacks) == 0x000020, "Wrong size on PlayerListEntrySCT_C_BindToCallbacks");
static_assert(offsetof(PlayerListEntrySCT_C_BindToCallbacks, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'PlayerListEntrySCT_C_BindToCallbacks::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_BindToCallbacks, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'PlayerListEntrySCT_C_BindToCallbacks::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.OnPlayerNameChanged
// 0x0010 (0x0010 - 0x0000)
struct PlayerListEntrySCT_C_OnPlayerNameChanged final
{
public:
	class FString                                 New_Player_Name;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerListEntrySCT_C_OnPlayerNameChanged) == 0x000008, "Wrong alignment on PlayerListEntrySCT_C_OnPlayerNameChanged");
static_assert(sizeof(PlayerListEntrySCT_C_OnPlayerNameChanged) == 0x000010, "Wrong size on PlayerListEntrySCT_C_OnPlayerNameChanged");
static_assert(offsetof(PlayerListEntrySCT_C_OnPlayerNameChanged, New_Player_Name) == 0x000000, "Member 'PlayerListEntrySCT_C_OnPlayerNameChanged::New_Player_Name' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.SetVoteCountText
// 0x0028 (0x0028 - 0x0000)
struct PlayerListEntrySCT_C_SetVoteCountText final
{
public:
	int32                                         Vote_Count;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             Text_Target;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
};
static_assert(alignof(PlayerListEntrySCT_C_SetVoteCountText) == 0x000008, "Wrong alignment on PlayerListEntrySCT_C_SetVoteCountText");
static_assert(sizeof(PlayerListEntrySCT_C_SetVoteCountText) == 0x000028, "Wrong size on PlayerListEntrySCT_C_SetVoteCountText");
static_assert(offsetof(PlayerListEntrySCT_C_SetVoteCountText, Vote_Count) == 0x000000, "Member 'PlayerListEntrySCT_C_SetVoteCountText::Vote_Count' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_SetVoteCountText, Text_Target) == 0x000008, "Member 'PlayerListEntrySCT_C_SetVoteCountText::Text_Target' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_SetVoteCountText, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'PlayerListEntrySCT_C_SetVoteCountText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.UpdateVoteIcons
// 0x0020 (0x0020 - 0x0000)
struct PlayerListEntrySCT_C_UpdateVoteIcons final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMoreUpvotes_Return_Value;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default_1;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasEqualVotes_Return_Value;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListEntrySCT_C_UpdateVoteIcons) == 0x000008, "Wrong alignment on PlayerListEntrySCT_C_UpdateVoteIcons");
static_assert(sizeof(PlayerListEntrySCT_C_UpdateVoteIcons) == 0x000020, "Wrong size on PlayerListEntrySCT_C_UpdateVoteIcons");
static_assert(offsetof(PlayerListEntrySCT_C_UpdateVoteIcons, Temp_bool_Variable) == 0x000000, "Member 'PlayerListEntrySCT_C_UpdateVoteIcons::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_UpdateVoteIcons, Temp_bool_Variable_1) == 0x000001, "Member 'PlayerListEntrySCT_C_UpdateVoteIcons::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_UpdateVoteIcons, CallFunc_HasMoreUpvotes_Return_Value) == 0x000002, "Member 'PlayerListEntrySCT_C_UpdateVoteIcons::CallFunc_HasMoreUpvotes_Return_Value' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_UpdateVoteIcons, K2Node_Select_Default) == 0x000008, "Member 'PlayerListEntrySCT_C_UpdateVoteIcons::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_UpdateVoteIcons, K2Node_Select_Default_1) == 0x000010, "Member 'PlayerListEntrySCT_C_UpdateVoteIcons::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_UpdateVoteIcons, CallFunc_HasEqualVotes_Return_Value) == 0x000018, "Member 'PlayerListEntrySCT_C_UpdateVoteIcons::CallFunc_HasEqualVotes_Return_Value' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.Disconnected
// 0x0070 (0x0070 - 0x0000)
struct PlayerListEntrySCT_C_Disconnected final
{
public:
	bool                                          CallFunc_IsInBackfill_IsWarmuap;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0058(0x0018)()
};
static_assert(alignof(PlayerListEntrySCT_C_Disconnected) == 0x000008, "Wrong alignment on PlayerListEntrySCT_C_Disconnected");
static_assert(sizeof(PlayerListEntrySCT_C_Disconnected) == 0x000070, "Wrong size on PlayerListEntrySCT_C_Disconnected");
static_assert(offsetof(PlayerListEntrySCT_C_Disconnected, CallFunc_IsInBackfill_IsWarmuap) == 0x000000, "Member 'PlayerListEntrySCT_C_Disconnected::CallFunc_IsInBackfill_IsWarmuap' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_Disconnected, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'PlayerListEntrySCT_C_Disconnected::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_Disconnected, K2Node_MakeArray_Array) == 0x000048, "Member 'PlayerListEntrySCT_C_Disconnected::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_Disconnected, CallFunc_Format_ReturnValue) == 0x000058, "Member 'PlayerListEntrySCT_C_Disconnected::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.Init VOIP
// 0x0048 (0x0048 - 0x0000)
struct PlayerListEntrySCT_C_Init_VOIP final
{
public:
	bool                                          CallFunc_IsMutedByLocalPlayer_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bIsMuted)>                K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVivoxLocalPlayer*                      CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& ParticipantID, bool bIsMuted)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVivoxLocalPlayer*                      CallFunc_GetLocalPlayerSubsystem_ReturnValue_1;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Local_Entry_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListEntrySCT_C_Init_VOIP) == 0x000008, "Wrong alignment on PlayerListEntrySCT_C_Init_VOIP");
static_assert(sizeof(PlayerListEntrySCT_C_Init_VOIP) == 0x000048, "Wrong size on PlayerListEntrySCT_C_Init_VOIP");
static_assert(offsetof(PlayerListEntrySCT_C_Init_VOIP, CallFunc_IsMutedByLocalPlayer_ReturnValue) == 0x000000, "Member 'PlayerListEntrySCT_C_Init_VOIP::CallFunc_IsMutedByLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_Init_VOIP, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'PlayerListEntrySCT_C_Init_VOIP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_Init_VOIP, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'PlayerListEntrySCT_C_Init_VOIP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_Init_VOIP, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000018, "Member 'PlayerListEntrySCT_C_Init_VOIP::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_Init_VOIP, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'PlayerListEntrySCT_C_Init_VOIP::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_Init_VOIP, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'PlayerListEntrySCT_C_Init_VOIP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_Init_VOIP, CallFunc_GetLocalPlayerSubsystem_ReturnValue_1) == 0x000038, "Member 'PlayerListEntrySCT_C_Init_VOIP::CallFunc_GetLocalPlayerSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_Init_VOIP, CallFunc_Is_Local_Entry_ReturnValue) == 0x000040, "Member 'PlayerListEntrySCT_C_Init_VOIP::CallFunc_Is_Local_Entry_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_Init_VOIP, CallFunc_IsValid_ReturnValue_2) == 0x000041, "Member 'PlayerListEntrySCT_C_Init_VOIP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.VivoxTalkerBindings
// 0x0030 (0x0030 - 0x0000)
struct PlayerListEntrySCT_C_VivoxTalkerBindings final
{
public:
	TDelegate<void(bool IsTalking, bool IsLocallyControlled)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool IsTalking, bool IsLocallyControlled)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool IsTalking, bool IsLocallyControlled)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(PlayerListEntrySCT_C_VivoxTalkerBindings) == 0x000004, "Wrong alignment on PlayerListEntrySCT_C_VivoxTalkerBindings");
static_assert(sizeof(PlayerListEntrySCT_C_VivoxTalkerBindings) == 0x000030, "Wrong size on PlayerListEntrySCT_C_VivoxTalkerBindings");
static_assert(offsetof(PlayerListEntrySCT_C_VivoxTalkerBindings, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'PlayerListEntrySCT_C_VivoxTalkerBindings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_VivoxTalkerBindings, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'PlayerListEntrySCT_C_VivoxTalkerBindings::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_VivoxTalkerBindings, K2Node_CreateDelegate_OutputDelegate_2) == 0x000020, "Member 'PlayerListEntrySCT_C_VivoxTalkerBindings::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.Reinitialize
// 0x0008 (0x0008 - 0x0000)
struct PlayerListEntrySCT_C_Reinitialize final
{
public:
	class ASCTPlayerState*                        PlayerState_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerListEntrySCT_C_Reinitialize) == 0x000008, "Wrong alignment on PlayerListEntrySCT_C_Reinitialize");
static_assert(sizeof(PlayerListEntrySCT_C_Reinitialize) == 0x000008, "Wrong size on PlayerListEntrySCT_C_Reinitialize");
static_assert(offsetof(PlayerListEntrySCT_C_Reinitialize, PlayerState_0) == 0x000000, "Member 'PlayerListEntrySCT_C_Reinitialize::PlayerState_0' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.OnMuteChangedOtherParticipant
// 0x0018 (0x0018 - 0x0000)
struct PlayerListEntrySCT_C_OnMuteChangedOtherParticipant final
{
public:
	class FString                                 ParticipantID;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bIsMuted;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListEntrySCT_C_OnMuteChangedOtherParticipant) == 0x000008, "Wrong alignment on PlayerListEntrySCT_C_OnMuteChangedOtherParticipant");
static_assert(sizeof(PlayerListEntrySCT_C_OnMuteChangedOtherParticipant) == 0x000018, "Wrong size on PlayerListEntrySCT_C_OnMuteChangedOtherParticipant");
static_assert(offsetof(PlayerListEntrySCT_C_OnMuteChangedOtherParticipant, ParticipantID) == 0x000000, "Member 'PlayerListEntrySCT_C_OnMuteChangedOtherParticipant::ParticipantID' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_OnMuteChangedOtherParticipant, bIsMuted) == 0x000010, "Member 'PlayerListEntrySCT_C_OnMuteChangedOtherParticipant::bIsMuted' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_OnMuteChangedOtherParticipant, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000011, "Member 'PlayerListEntrySCT_C_OnMuteChangedOtherParticipant::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.OnMuteChangedLocalPlayer
// 0x0002 (0x0002 - 0x0000)
struct PlayerListEntrySCT_C_OnMuteChangedLocalPlayer final
{
public:
	bool                                          IsMuted_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Local_Entry_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListEntrySCT_C_OnMuteChangedLocalPlayer) == 0x000001, "Wrong alignment on PlayerListEntrySCT_C_OnMuteChangedLocalPlayer");
static_assert(sizeof(PlayerListEntrySCT_C_OnMuteChangedLocalPlayer) == 0x000002, "Wrong size on PlayerListEntrySCT_C_OnMuteChangedLocalPlayer");
static_assert(offsetof(PlayerListEntrySCT_C_OnMuteChangedLocalPlayer, IsMuted_0) == 0x000000, "Member 'PlayerListEntrySCT_C_OnMuteChangedLocalPlayer::IsMuted_0' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_OnMuteChangedLocalPlayer, CallFunc_Is_Local_Entry_ReturnValue) == 0x000001, "Member 'PlayerListEntrySCT_C_OnMuteChangedLocalPlayer::CallFunc_Is_Local_Entry_ReturnValue' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.HasEqualVotes
// 0x0002 (0x0002 - 0x0000)
struct PlayerListEntrySCT_C_HasEqualVotes final
{
public:
	bool                                          Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListEntrySCT_C_HasEqualVotes) == 0x000001, "Wrong alignment on PlayerListEntrySCT_C_HasEqualVotes");
static_assert(sizeof(PlayerListEntrySCT_C_HasEqualVotes) == 0x000002, "Wrong size on PlayerListEntrySCT_C_HasEqualVotes");
static_assert(offsetof(PlayerListEntrySCT_C_HasEqualVotes, Return_Value) == 0x000000, "Member 'PlayerListEntrySCT_C_HasEqualVotes::Return_Value' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_HasEqualVotes, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'PlayerListEntrySCT_C_HasEqualVotes::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.HasMoreUpvotes
// 0x0002 (0x0002 - 0x0000)
struct PlayerListEntrySCT_C_HasMoreUpvotes final
{
public:
	bool                                          Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListEntrySCT_C_HasMoreUpvotes) == 0x000001, "Wrong alignment on PlayerListEntrySCT_C_HasMoreUpvotes");
static_assert(sizeof(PlayerListEntrySCT_C_HasMoreUpvotes) == 0x000002, "Wrong size on PlayerListEntrySCT_C_HasMoreUpvotes");
static_assert(offsetof(PlayerListEntrySCT_C_HasMoreUpvotes, Return_Value) == 0x000000, "Member 'PlayerListEntrySCT_C_HasMoreUpvotes::Return_Value' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_HasMoreUpvotes, CallFunc_Greater_IntInt_ReturnValue) == 0x000001, "Member 'PlayerListEntrySCT_C_HasMoreUpvotes::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.IsLocalPersonoid
// 0x0030 (0x0030 - 0x0000)
struct PlayerListEntrySCT_C_IsLocalPersonoid final
{
public:
	bool                                          IsPersonoid;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      CallFunc_GetSCT_Player_Character_AsCharacter_SCT;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventory*                             CallFunc_GetSCT_Player_Character_CharacterInventory; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPersonoidBPI_IsPersonoid;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListEntrySCT_C_IsLocalPersonoid) == 0x000008, "Wrong alignment on PlayerListEntrySCT_C_IsLocalPersonoid");
static_assert(sizeof(PlayerListEntrySCT_C_IsLocalPersonoid) == 0x000030, "Wrong size on PlayerListEntrySCT_C_IsLocalPersonoid");
static_assert(offsetof(PlayerListEntrySCT_C_IsLocalPersonoid, IsPersonoid) == 0x000000, "Member 'PlayerListEntrySCT_C_IsLocalPersonoid::IsPersonoid' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_IsLocalPersonoid, CallFunc_GetSCT_Player_Character_AsCharacter_SCT) == 0x000008, "Member 'PlayerListEntrySCT_C_IsLocalPersonoid::CallFunc_GetSCT_Player_Character_AsCharacter_SCT' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_IsLocalPersonoid, CallFunc_GetSCT_Player_Character_CharacterInventory) == 0x000010, "Member 'PlayerListEntrySCT_C_IsLocalPersonoid::CallFunc_GetSCT_Player_Character_CharacterInventory' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_IsLocalPersonoid, K2Node_DynamicCast_AsICharacter_SCT) == 0x000018, "Member 'PlayerListEntrySCT_C_IsLocalPersonoid::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_IsLocalPersonoid, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PlayerListEntrySCT_C_IsLocalPersonoid::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_IsLocalPersonoid, CallFunc_IsPersonoidBPI_IsPersonoid) == 0x000029, "Member 'PlayerListEntrySCT_C_IsLocalPersonoid::CallFunc_IsPersonoidBPI_IsPersonoid' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.Is Local Entry
// 0x0018 (0x0018 - 0x0000)
struct PlayerListEntrySCT_C_Is_Local_Entry final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListEntrySCT_C_Is_Local_Entry) == 0x000008, "Wrong alignment on PlayerListEntrySCT_C_Is_Local_Entry");
static_assert(sizeof(PlayerListEntrySCT_C_Is_Local_Entry) == 0x000018, "Wrong size on PlayerListEntrySCT_C_Is_Local_Entry");
static_assert(offsetof(PlayerListEntrySCT_C_Is_Local_Entry, ReturnValue) == 0x000000, "Member 'PlayerListEntrySCT_C_Is_Local_Entry::ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_Is_Local_Entry, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'PlayerListEntrySCT_C_Is_Local_Entry::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_Is_Local_Entry, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'PlayerListEntrySCT_C_Is_Local_Entry::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_Is_Local_Entry, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'PlayerListEntrySCT_C_Is_Local_Entry::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.NetSynchronized
// 0x0003 (0x0003 - 0x0000)
struct PlayerListEntrySCT_C_NetSynchronized final
{
public:
	bool                                          Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListEntrySCT_C_NetSynchronized) == 0x000001, "Wrong alignment on PlayerListEntrySCT_C_NetSynchronized");
static_assert(sizeof(PlayerListEntrySCT_C_NetSynchronized) == 0x000003, "Wrong size on PlayerListEntrySCT_C_NetSynchronized");
static_assert(offsetof(PlayerListEntrySCT_C_NetSynchronized, Return_Value) == 0x000000, "Member 'PlayerListEntrySCT_C_NetSynchronized::Return_Value' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_NetSynchronized, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'PlayerListEntrySCT_C_NetSynchronized::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_NetSynchronized, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'PlayerListEntrySCT_C_NetSynchronized::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.IsMutedByLocalPlayer
// 0x0028 (0x0028 - 0x0000)
struct PlayerListEntrySCT_C_IsMutedByLocalPlayer final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVivoxLocalPlayer*                      CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Local_Entry_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsMutedMic_ReturnValue;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UVivoxLocalPlayer*                      CallFunc_GetLocalPlayerSubsystem_ReturnValue_1;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsParticipantMuted_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListEntrySCT_C_IsMutedByLocalPlayer) == 0x000008, "Wrong alignment on PlayerListEntrySCT_C_IsMutedByLocalPlayer");
static_assert(sizeof(PlayerListEntrySCT_C_IsMutedByLocalPlayer) == 0x000028, "Wrong size on PlayerListEntrySCT_C_IsMutedByLocalPlayer");
static_assert(offsetof(PlayerListEntrySCT_C_IsMutedByLocalPlayer, ReturnValue) == 0x000000, "Member 'PlayerListEntrySCT_C_IsMutedByLocalPlayer::ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_IsMutedByLocalPlayer, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'PlayerListEntrySCT_C_IsMutedByLocalPlayer::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_IsMutedByLocalPlayer, CallFunc_Is_Local_Entry_ReturnValue) == 0x000010, "Member 'PlayerListEntrySCT_C_IsMutedByLocalPlayer::CallFunc_Is_Local_Entry_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_IsMutedByLocalPlayer, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'PlayerListEntrySCT_C_IsMutedByLocalPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_IsMutedByLocalPlayer, CallFunc_GetIsMutedMic_ReturnValue) == 0x000012, "Member 'PlayerListEntrySCT_C_IsMutedByLocalPlayer::CallFunc_GetIsMutedMic_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_IsMutedByLocalPlayer, CallFunc_GetLocalPlayerSubsystem_ReturnValue_1) == 0x000018, "Member 'PlayerListEntrySCT_C_IsMutedByLocalPlayer::CallFunc_GetLocalPlayerSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_IsMutedByLocalPlayer, CallFunc_IsParticipantMuted_ReturnValue) == 0x000020, "Member 'PlayerListEntrySCT_C_IsMutedByLocalPlayer::CallFunc_IsParticipantMuted_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_IsMutedByLocalPlayer, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'PlayerListEntrySCT_C_IsMutedByLocalPlayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PlayerListEntrySCT.PlayerListEntrySCT_C.IsInBackfill
// 0x0020 (0x0020 - 0x0000)
struct PlayerListEntrySCT_C_IsInBackfill final
{
public:
	bool                                          IsWarmuap;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCTGameState_Warmup*                   K2Node_DynamicCast_AsSCTGame_State_Warmup;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListEntrySCT_C_IsInBackfill) == 0x000008, "Wrong alignment on PlayerListEntrySCT_C_IsInBackfill");
static_assert(sizeof(PlayerListEntrySCT_C_IsInBackfill) == 0x000020, "Wrong size on PlayerListEntrySCT_C_IsInBackfill");
static_assert(offsetof(PlayerListEntrySCT_C_IsInBackfill, IsWarmuap) == 0x000000, "Member 'PlayerListEntrySCT_C_IsInBackfill::IsWarmuap' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_IsInBackfill, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'PlayerListEntrySCT_C_IsInBackfill::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_IsInBackfill, K2Node_DynamicCast_AsSCTGame_State_Warmup) == 0x000010, "Member 'PlayerListEntrySCT_C_IsInBackfill::K2Node_DynamicCast_AsSCTGame_State_Warmup' has a wrong offset!");
static_assert(offsetof(PlayerListEntrySCT_C_IsInBackfill, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PlayerListEntrySCT_C_IsInBackfill::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

