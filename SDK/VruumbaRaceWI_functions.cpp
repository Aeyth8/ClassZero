#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VruumbaRaceWI

#include "Basic.hpp"

#include "VruumbaRaceWI_classes.hpp"
#include "VruumbaRaceWI_parameters.hpp"


namespace SDK
{

// Function VruumbaRaceWI.VruumbaRaceWI_C.ExecuteUbergraph_VruumbaRaceWI
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVruumbaRaceWI_C::ExecuteUbergraph_VruumbaRaceWI(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VruumbaRaceWI_C", "ExecuteUbergraph_VruumbaRaceWI");

	Params::VruumbaRaceWI_C_ExecuteUbergraph_VruumbaRaceWI Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VruumbaRaceWI.VruumbaRaceWI_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UVruumbaRaceWI_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VruumbaRaceWI_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VruumbaRaceWI.VruumbaRaceWI_C.Start timer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             RaceTime                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UVruumbaRaceWI_C::Start_timer(const class FText& RaceTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VruumbaRaceWI_C", "Start timer");

	Params::VruumbaRaceWI_C_Start_timer Parms{};

	Parms.RaceTime = std::move(RaceTime);

	UObject::ProcessEvent(Func, &Parms);
}


// Function VruumbaRaceWI.VruumbaRaceWI_C.Player Best Time
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             PlayerBestTime                                         (BlueprintVisible, BlueprintReadOnly, Parm)

void UVruumbaRaceWI_C::Player_Best_Time(const class FText& PlayerBestTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VruumbaRaceWI_C", "Player Best Time");

	Params::VruumbaRaceWI_C_Player_Best_Time Parms{};

	Parms.PlayerBestTime = std::move(PlayerBestTime);

	UObject::ProcessEvent(Func, &Parms);
}


// Function VruumbaRaceWI.VruumbaRaceWI_C.NewHighestScore
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             NewGlobalLead                                          (BlueprintVisible, BlueprintReadOnly, Parm)
// class FString                           RacerName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FLinearColor                     RaceColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVruumbaRaceWI_C::NewHighestScore(const class FText& NewGlobalLead, const class FString& RacerName, const struct FLinearColor& RaceColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VruumbaRaceWI_C", "NewHighestScore");

	Params::VruumbaRaceWI_C_NewHighestScore Parms{};

	Parms.NewGlobalLead = std::move(NewGlobalLead);
	Parms.RacerName = std::move(RacerName);
	Parms.RaceColor = std::move(RaceColor);

	UObject::ProcessEvent(Func, &Parms);
}

}

