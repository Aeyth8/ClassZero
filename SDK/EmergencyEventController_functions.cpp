#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EmergencyEventController

#include "Basic.hpp"

#include "EmergencyEventController_classes.hpp"
#include "EmergencyEventController_parameters.hpp"


namespace SDK
{

// Function EmergencyEventController.EmergencyEventController_C.ExecuteUbergraph_EmergencyEventController
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyEventController_C::ExecuteUbergraph_EmergencyEventController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEventController_C", "ExecuteUbergraph_EmergencyEventController");

	Params::EmergencyEventController_C_ExecuteUbergraph_EmergencyEventController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyEventController.EmergencyEventController_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AEmergencyEventController_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEventController_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEventController.EmergencyEventController_C.Remote Call Attempt Start
// (BlueprintCallable, BlueprintEvent)

void AEmergencyEventController_C::Remote_Call_Attempt_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEventController_C", "Remote Call Attempt Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEventController.EmergencyEventController_C.Alarm Visuals Off
// (BlueprintCallable, BlueprintEvent)

void AEmergencyEventController_C::Alarm_Visuals_Off()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEventController_C", "Alarm Visuals Off");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEventController.EmergencyEventController_C.Alarm Visuals On
// (BlueprintCallable, BlueprintEvent)

void AEmergencyEventController_C::Alarm_Visuals_On()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEventController_C", "Alarm Visuals On");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEventController.EmergencyEventController_C.Audio Alarm Start
// (BlueprintCallable, BlueprintEvent)

void AEmergencyEventController_C::Audio_Alarm_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEventController_C", "Audio Alarm Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEventController.EmergencyEventController_C.Multi_Audio Part Succes
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AEmergencyEventController_C::Multi_Audio_Part_Succes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEventController_C", "Multi_Audio Part Succes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEventController.EmergencyEventController_C.Audio End
// (BlueprintCallable, BlueprintEvent)

void AEmergencyEventController_C::Audio_End()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEventController_C", "Audio End");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEventController.EmergencyEventController_C.Cancel Emergency Event
// (BlueprintCallable, BlueprintEvent)

void AEmergencyEventController_C::Cancel_Emergency_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEventController_C", "Cancel Emergency Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEventController.EmergencyEventController_C.Attempt Start Emergency Event
// (BlueprintCallable, BlueprintEvent)

void AEmergencyEventController_C::Attempt_Start_Emergency_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEventController_C", "Attempt Start Emergency Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEventController.EmergencyEventController_C.Message Players
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void AEmergencyEventController_C::Message_Players(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEventController_C", "Message Players");

	Params::EmergencyEventController_C_Message_Players Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyEventController.EmergencyEventController_C.Remove Emergency Death Timer
// (BlueprintCallable, BlueprintEvent)

void AEmergencyEventController_C::Remove_Emergency_Death_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEventController_C", "Remove Emergency Death Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEventController.EmergencyEventController_C.Show Emergency Death Timer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Duration_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyEventController_C::Show_Emergency_Death_Timer(float Duration_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEventController_C", "Show Emergency Death Timer");

	Params::EmergencyEventController_C_Show_Emergency_Death_Timer Parms{};

	Parms.Duration_0 = Duration_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyEventController.EmergencyEventController_C.Complete B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AEmergencyEvent_Base_C*           EmergencyBase                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyEventController_C::Complete_B(class AEmergencyEvent_Base_C* EmergencyBase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEventController_C", "Complete B");

	Params::EmergencyEventController_C_Complete_B Parms{};

	Parms.EmergencyBase = EmergencyBase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyEventController.EmergencyEventController_C.Complete A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AEmergencyEvent_Base_C*           EmergencyBase                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyEventController_C::Complete_A(class AEmergencyEvent_Base_C* EmergencyBase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEventController_C", "Complete A");

	Params::EmergencyEventController_C_Complete_A Parms{};

	Parms.EmergencyBase = EmergencyBase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EmergencyEventController.EmergencyEventController_C.Fail Emergency Task
// (BlueprintCallable, BlueprintEvent)

void AEmergencyEventController_C::Fail_Emergency_Task()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEventController_C", "Fail Emergency Task");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEventController.EmergencyEventController_C.Complete Emergency Task
// (BlueprintCallable, BlueprintEvent)

void AEmergencyEventController_C::Complete_Emergency_Task()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEventController_C", "Complete Emergency Task");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEventController.EmergencyEventController_C.Start Emergency
// (BlueprintCallable, BlueprintEvent)

void AEmergencyEventController_C::Start_Emergency()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEventController_C", "Start Emergency");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEventController.EmergencyEventController_C.Get2RandomBases
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AEmergencyEvent_Base_C*           A                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AEmergencyEvent_Base_C*           B                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEmergencyEventController_C::Get2RandomBases(class AEmergencyEvent_Base_C** A, class AEmergencyEvent_Base_C** B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEventController_C", "Get2RandomBases");

	Params::EmergencyEventController_C_Get2RandomBases Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (A != nullptr)
		*A = Parms.A;

	if (B != nullptr)
		*B = Parms.B;
}


// Function EmergencyEventController.EmergencyEventController_C.OnRep_EmergencyActive
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void AEmergencyEventController_C::OnRep_EmergencyActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEventController_C", "OnRep_EmergencyActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEventController.EmergencyEventController_C.OnRep_AComplete
// (BlueprintCallable, BlueprintEvent)

void AEmergencyEventController_C::OnRep_AComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEventController_C", "OnRep_AComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEventController.EmergencyEventController_C.OnRep_BComplete
// (BlueprintCallable, BlueprintEvent)

void AEmergencyEventController_C::OnRep_BComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEventController_C", "OnRep_BComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EmergencyEventController.EmergencyEventController_C.GetCanStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AEmergencyEventController_C::GetCanStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEventController_C", "GetCanStart");

	Params::EmergencyEventController_C_GetCanStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function EmergencyEventController.EmergencyEventController_C.RandomChance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Succes__                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Succes                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AEmergencyEventController_C::RandomChance(int32 Succes__, bool* Succes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyEventController_C", "RandomChance");

	Params::EmergencyEventController_C_RandomChance Parms{};

	Parms.Succes__ = Succes__;

	UObject::ProcessEvent(Func, &Parms);

	if (Succes != nullptr)
		*Succes = Parms.Succes;
}

}

