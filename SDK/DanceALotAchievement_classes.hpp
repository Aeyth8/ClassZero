#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DanceALotAchievement

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SCT_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass DanceALotAchievement.DanceALotAchievement_C
// 0x0020 (0x0060 - 0x0040)
class UDanceALotAchievement_C final : public UAchievementObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0040(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAgendaControllerEvent*                 OnDanced;                                          // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RequiredDances;                                    // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasDanceAchievement;                               // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_DanceALotAchievement(int32 EntryPoint);
	void On_Danced(class APlayerController* Controller_0);
	void K2_Initialize();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DanceALotAchievement_C">();
	}
	static class UDanceALotAchievement_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDanceALotAchievement_C>();
	}
};
static_assert(alignof(UDanceALotAchievement_C) == 0x000008, "Wrong alignment on UDanceALotAchievement_C");
static_assert(sizeof(UDanceALotAchievement_C) == 0x000060, "Wrong size on UDanceALotAchievement_C");
static_assert(offsetof(UDanceALotAchievement_C, UberGraphFrame) == 0x000040, "Member 'UDanceALotAchievement_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UDanceALotAchievement_C, OnDanced) == 0x000048, "Member 'UDanceALotAchievement_C::OnDanced' has a wrong offset!");
static_assert(offsetof(UDanceALotAchievement_C, Count) == 0x000050, "Member 'UDanceALotAchievement_C::Count' has a wrong offset!");
static_assert(offsetof(UDanceALotAchievement_C, RequiredDances) == 0x000054, "Member 'UDanceALotAchievement_C::RequiredDances' has a wrong offset!");
static_assert(offsetof(UDanceALotAchievement_C, HasDanceAchievement) == 0x000058, "Member 'UDanceALotAchievement_C::HasDanceAchievement' has a wrong offset!");

}

