#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemWheelV3SlotWI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_ItemSlotStates_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SCT_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ItemWheelV3SlotWI.ItemWheelV3SlotWI_C
// 0x0100 (0x0360 - 0x0260)
class UItemWheelV3SlotWI_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UWidgetAnimation*                       Clicked;                                           // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           ButtonElements;                                    // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ButtonImage;                                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CenterCircle;                                      // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CircleBG;                                          // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UControllerIconHelperWI_C*              ControllerIconHelperWI;                            // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EquipBox;                                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              GamepadDisplay;                                    // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Infinity;                                    // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 OuterCircle;                                       // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SlotIcon;                                          // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Amount;                                       // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_EquipHover;                                   // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_EquipmentSlot;                                // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_NotEquipHover;                                // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           IconAndStackSize;                                  // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 PieImage;                                          // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ItemSlotStates                              E_ItemSlotStates;                                  // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEquipped;                                        // 0x02F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F2[0x6];                                      // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UItem*                                  Item;                                              // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Light80;                                           // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Dark100;                                           // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Dark80;                                            // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ZeroOpacity;                                       // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Light100;                                          // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemWheelV2WI_C*                       ParentWidgetItemWheel;                             // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak;                                                // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ItemWheelV3SlotWI(int32 EntryPoint);
	void BndEvt__ItemWheelV3SlotWI_ControllerIconHelperWI_K2Node_ComponentBoundEvent_3_OnShowControllerKeyText__DelegateSignature(const class FText& Text);
	void BndEvt__ItemWheelV3SlotWI_ControllerIconHelperWI_K2Node_ComponentBoundEvent_2_OnShowControllerKeyIcon__DelegateSignature(class UTexture2D* Icon);
	void BndEvt__ItemWheelV3SlotWI_ControllerIconHelperWI_K2Node_ComponentBoundEvent_1_OnShowControllerKeyIcon__DelegateSignature(class UTexture2D* Icon);
	void BndEvt__ItemWheelV3SlotWI_ControllerIconHelperWI_K2Node_ComponentBoundEvent_0_OnResetControllerKey__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void Rebuild(E_ItemSlotStates Selection);
	void NotEquippedHover();
	void NotEquipped();
	void Equipped(EInventorySlotID Slot_0);
	void EquippedHover();
	void Initialize(class UItem* Item_0, class UItemWheelV2WI_C* ParentWidgetItemWheel_0);
	void SetIconAndStacks();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ItemWheelV3SlotWI_C">();
	}
	static class UItemWheelV3SlotWI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemWheelV3SlotWI_C>();
	}
};
static_assert(alignof(UItemWheelV3SlotWI_C) == 0x000008, "Wrong alignment on UItemWheelV3SlotWI_C");
static_assert(sizeof(UItemWheelV3SlotWI_C) == 0x000360, "Wrong size on UItemWheelV3SlotWI_C");
static_assert(offsetof(UItemWheelV3SlotWI_C, UberGraphFrame) == 0x000260, "Member 'UItemWheelV3SlotWI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, Clicked) == 0x000268, "Member 'UItemWheelV3SlotWI_C::Clicked' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, ButtonElements) == 0x000270, "Member 'UItemWheelV3SlotWI_C::ButtonElements' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, ButtonImage) == 0x000278, "Member 'UItemWheelV3SlotWI_C::ButtonImage' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, CenterCircle) == 0x000280, "Member 'UItemWheelV3SlotWI_C::CenterCircle' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, CircleBG) == 0x000288, "Member 'UItemWheelV3SlotWI_C::CircleBG' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, ControllerIconHelperWI) == 0x000290, "Member 'UItemWheelV3SlotWI_C::ControllerIconHelperWI' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, EquipBox) == 0x000298, "Member 'UItemWheelV3SlotWI_C::EquipBox' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, GamepadDisplay) == 0x0002A0, "Member 'UItemWheelV3SlotWI_C::GamepadDisplay' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, Image_Infinity) == 0x0002A8, "Member 'UItemWheelV3SlotWI_C::Image_Infinity' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, OuterCircle) == 0x0002B0, "Member 'UItemWheelV3SlotWI_C::OuterCircle' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, SlotIcon) == 0x0002B8, "Member 'UItemWheelV3SlotWI_C::SlotIcon' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, Text_Amount) == 0x0002C0, "Member 'UItemWheelV3SlotWI_C::Text_Amount' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, Text_EquipHover) == 0x0002C8, "Member 'UItemWheelV3SlotWI_C::Text_EquipHover' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, Text_EquipmentSlot) == 0x0002D0, "Member 'UItemWheelV3SlotWI_C::Text_EquipmentSlot' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, Text_NotEquipHover) == 0x0002D8, "Member 'UItemWheelV3SlotWI_C::Text_NotEquipHover' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, IconAndStackSize) == 0x0002E0, "Member 'UItemWheelV3SlotWI_C::IconAndStackSize' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, PieImage) == 0x0002E8, "Member 'UItemWheelV3SlotWI_C::PieImage' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, E_ItemSlotStates) == 0x0002F0, "Member 'UItemWheelV3SlotWI_C::E_ItemSlotStates' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, IsEquipped) == 0x0002F1, "Member 'UItemWheelV3SlotWI_C::IsEquipped' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, Item) == 0x0002F8, "Member 'UItemWheelV3SlotWI_C::Item' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, Light80) == 0x000300, "Member 'UItemWheelV3SlotWI_C::Light80' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, Dark100) == 0x000310, "Member 'UItemWheelV3SlotWI_C::Dark100' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, Dark80) == 0x000320, "Member 'UItemWheelV3SlotWI_C::Dark80' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, ZeroOpacity) == 0x000330, "Member 'UItemWheelV3SlotWI_C::ZeroOpacity' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, Light100) == 0x000340, "Member 'UItemWheelV3SlotWI_C::Light100' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, ParentWidgetItemWheel) == 0x000350, "Member 'UItemWheelV3SlotWI_C::ParentWidgetItemWheel' has a wrong offset!");
static_assert(offsetof(UItemWheelV3SlotWI_C, Ak) == 0x000358, "Member 'UItemWheelV3SlotWI_C::Ak' has a wrong offset!");

}

