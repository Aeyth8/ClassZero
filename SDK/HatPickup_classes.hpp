#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HatPickup

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass HatPickup.HatPickup_C
// 0x00A8 (0x02C8 - 0x0220)
class AHatPickup_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UPOI_WidgetComponent_HatTag_C*          POI_WidgetComponent_HatTag;                        // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak;                                                // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Radius;                                            // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AVruumbaSCTBP_C*                        VruumbaHolder;                                     // 0x0258(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          PickedUpByPlayers;                                 // 0x0260(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AVruumbaSCTBP_C*                        PrevVruumbaHolder;                                 // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             UpdatedScore;                                      // 0x0270(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class AHatStand_C*                            HatStand;                                          // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMesh*>                    HatMeshes;                                         // 0x0288(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UMaterialInterface*>             HatDynamicMaterials;                               // 0x0298(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Hat;                                               // 0x02A8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTexture*>                       POI_Image;                                         // 0x02B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UStaticMesh*                            HatMesh;                                           // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdatedScore__DelegateSignature();
	void ExecuteUbergraph_HatPickup(int32 EntryPoint);
	void POI_visible_first_time();
	void POI_visible();
	void Widget_Update_Holder();
	void Audio_Pickup_Flag();
	void UpdateEndScore();
	void Picked_up();
	void Stop_timers();
	void Pick_up_flag();
	void UpdateScore();
	void BndEvt__Radius_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveBeginPlay();
	void Check_for_new_flagholder(class UObject* NewFlagHolder, bool* NewHolder);
	void OnRep_RoombaHolder();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HatPickup_C">();
	}
	static class AHatPickup_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHatPickup_C>();
	}
};
static_assert(alignof(AHatPickup_C) == 0x000008, "Wrong alignment on AHatPickup_C");
static_assert(sizeof(AHatPickup_C) == 0x0002C8, "Wrong size on AHatPickup_C");
static_assert(offsetof(AHatPickup_C, UberGraphFrame) == 0x000220, "Member 'AHatPickup_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AHatPickup_C, POI_WidgetComponent_HatTag) == 0x000228, "Member 'AHatPickup_C::POI_WidgetComponent_HatTag' has a wrong offset!");
static_assert(offsetof(AHatPickup_C, ParticleSystem) == 0x000230, "Member 'AHatPickup_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AHatPickup_C, Ak) == 0x000238, "Member 'AHatPickup_C::Ak' has a wrong offset!");
static_assert(offsetof(AHatPickup_C, StaticMesh) == 0x000240, "Member 'AHatPickup_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AHatPickup_C, Radius) == 0x000248, "Member 'AHatPickup_C::Radius' has a wrong offset!");
static_assert(offsetof(AHatPickup_C, Scene) == 0x000250, "Member 'AHatPickup_C::Scene' has a wrong offset!");
static_assert(offsetof(AHatPickup_C, VruumbaHolder) == 0x000258, "Member 'AHatPickup_C::VruumbaHolder' has a wrong offset!");
static_assert(offsetof(AHatPickup_C, PickedUpByPlayers) == 0x000260, "Member 'AHatPickup_C::PickedUpByPlayers' has a wrong offset!");
static_assert(offsetof(AHatPickup_C, PrevVruumbaHolder) == 0x000268, "Member 'AHatPickup_C::PrevVruumbaHolder' has a wrong offset!");
static_assert(offsetof(AHatPickup_C, UpdatedScore) == 0x000270, "Member 'AHatPickup_C::UpdatedScore' has a wrong offset!");
static_assert(offsetof(AHatPickup_C, HatStand) == 0x000280, "Member 'AHatPickup_C::HatStand' has a wrong offset!");
static_assert(offsetof(AHatPickup_C, HatMeshes) == 0x000288, "Member 'AHatPickup_C::HatMeshes' has a wrong offset!");
static_assert(offsetof(AHatPickup_C, HatDynamicMaterials) == 0x000298, "Member 'AHatPickup_C::HatDynamicMaterials' has a wrong offset!");
static_assert(offsetof(AHatPickup_C, Hat) == 0x0002A8, "Member 'AHatPickup_C::Hat' has a wrong offset!");
static_assert(offsetof(AHatPickup_C, POI_Image) == 0x0002B0, "Member 'AHatPickup_C::POI_Image' has a wrong offset!");
static_assert(offsetof(AHatPickup_C, HatMesh) == 0x0002C0, "Member 'AHatPickup_C::HatMesh' has a wrong offset!");

}

