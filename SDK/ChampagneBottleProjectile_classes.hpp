#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChampagneBottleProjectile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ChampagneBottleProjectile.ChampagneBottleProjectile_C
// 0x0120 (0x0340 - 0x0220)
class AChampagneBottleProjectile_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UControllerHapticsComponent*            ControllerHaptics;                                 // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shard18;                                           // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shard17;                                           // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shard16;                                           // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shard15;                                           // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shard14;                                           // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shard13;                                           // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shard12;                                           // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shard11;                                           // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shard10;                                           // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shard9;                                            // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shard8;                                            // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shard7;                                            // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shard6;                                            // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shard5;                                            // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shard4;                                            // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shard3;                                            // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shard2;                                            // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shard1;                                            // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak;                                                // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileMovementComponent*           ProjectileMovement;                                // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       RootCollider;                                      // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_Percent_F6AA0F9E438AFEE2B100D9B0A8A36D09; // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_F6AA0F9E438AFEE2B100D9B0A8A36D09; // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_2F5[0x3];                                      // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        HomingTarget;                                      // 0x0300(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         ProjectileSpeed;                                   // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InitialHomingSpeed;                                // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InitialHomingMaxSpeed;                             // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HomingMaxSpeed;                                    // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          BottleImpact;                                      // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          BottleThrow;                                       // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          BottlePropel;                                      // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAgendaCoopPowerEvent*                  CoopEvent;                                         // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Flying;                                            // 0x0338(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)

public:
	void ExecuteUbergraph_ChampagneBottleProjectile(int32 EntryPoint);
	void Mutation_Effect(class ACharacterSCTBP_C* Target);
	void Audio_Impact();
	void Audio_Throw_Propel();
	void Audio_Initial_Throw();
	void BndEvt__ProjectileMovement_K2Node_ComponentBoundEvent_0_OnProjectileStopDelegate__DelegateSignature(const struct FHitResult& ImpactResult);
	void ReceiveBeginPlay();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void UserConstructionScript();
	void UpdateProjectileMovement();
	void RaiseHitEvent(const struct FHitResult& Hit);
	void CallHitTargetEvent();
	void OnRep_Flying();

	void GetOwnerController(class APlayerController** Controller) const;
	void GetTargetController(class APlayerController** Controller) const;
	bool Did_Hit_Target(const struct FHitResult& Hit) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ChampagneBottleProjectile_C">();
	}
	static class AChampagneBottleProjectile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AChampagneBottleProjectile_C>();
	}
};
static_assert(alignof(AChampagneBottleProjectile_C) == 0x000008, "Wrong alignment on AChampagneBottleProjectile_C");
static_assert(sizeof(AChampagneBottleProjectile_C) == 0x000340, "Wrong size on AChampagneBottleProjectile_C");
static_assert(offsetof(AChampagneBottleProjectile_C, UberGraphFrame) == 0x000220, "Member 'AChampagneBottleProjectile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, ControllerHaptics) == 0x000228, "Member 'AChampagneBottleProjectile_C::ControllerHaptics' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, Shard18) == 0x000230, "Member 'AChampagneBottleProjectile_C::Shard18' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, Shard17) == 0x000238, "Member 'AChampagneBottleProjectile_C::Shard17' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, Shard16) == 0x000240, "Member 'AChampagneBottleProjectile_C::Shard16' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, Shard15) == 0x000248, "Member 'AChampagneBottleProjectile_C::Shard15' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, Shard14) == 0x000250, "Member 'AChampagneBottleProjectile_C::Shard14' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, Shard13) == 0x000258, "Member 'AChampagneBottleProjectile_C::Shard13' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, Shard12) == 0x000260, "Member 'AChampagneBottleProjectile_C::Shard12' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, Shard11) == 0x000268, "Member 'AChampagneBottleProjectile_C::Shard11' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, Shard10) == 0x000270, "Member 'AChampagneBottleProjectile_C::Shard10' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, Shard9) == 0x000278, "Member 'AChampagneBottleProjectile_C::Shard9' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, Shard8) == 0x000280, "Member 'AChampagneBottleProjectile_C::Shard8' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, Shard7) == 0x000288, "Member 'AChampagneBottleProjectile_C::Shard7' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, Shard6) == 0x000290, "Member 'AChampagneBottleProjectile_C::Shard6' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, Shard5) == 0x000298, "Member 'AChampagneBottleProjectile_C::Shard5' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, Shard4) == 0x0002A0, "Member 'AChampagneBottleProjectile_C::Shard4' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, Shard3) == 0x0002A8, "Member 'AChampagneBottleProjectile_C::Shard3' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, Shard2) == 0x0002B0, "Member 'AChampagneBottleProjectile_C::Shard2' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, Shard1) == 0x0002B8, "Member 'AChampagneBottleProjectile_C::Shard1' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, Ak) == 0x0002C0, "Member 'AChampagneBottleProjectile_C::Ak' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, StaticMesh) == 0x0002C8, "Member 'AChampagneBottleProjectile_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, ParticleSystem) == 0x0002D0, "Member 'AChampagneBottleProjectile_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, RotatingMovement) == 0x0002D8, "Member 'AChampagneBottleProjectile_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, ProjectileMovement) == 0x0002E0, "Member 'AChampagneBottleProjectile_C::ProjectileMovement' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, RootCollider) == 0x0002E8, "Member 'AChampagneBottleProjectile_C::RootCollider' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, Timeline_0_Percent_F6AA0F9E438AFEE2B100D9B0A8A36D09) == 0x0002F0, "Member 'AChampagneBottleProjectile_C::Timeline_0_Percent_F6AA0F9E438AFEE2B100D9B0A8A36D09' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, Timeline_0__Direction_F6AA0F9E438AFEE2B100D9B0A8A36D09) == 0x0002F4, "Member 'AChampagneBottleProjectile_C::Timeline_0__Direction_F6AA0F9E438AFEE2B100D9B0A8A36D09' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, Timeline_0) == 0x0002F8, "Member 'AChampagneBottleProjectile_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, HomingTarget) == 0x000300, "Member 'AChampagneBottleProjectile_C::HomingTarget' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, ProjectileSpeed) == 0x000308, "Member 'AChampagneBottleProjectile_C::ProjectileSpeed' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, InitialHomingSpeed) == 0x00030C, "Member 'AChampagneBottleProjectile_C::InitialHomingSpeed' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, InitialHomingMaxSpeed) == 0x000310, "Member 'AChampagneBottleProjectile_C::InitialHomingMaxSpeed' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, HomingMaxSpeed) == 0x000314, "Member 'AChampagneBottleProjectile_C::HomingMaxSpeed' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, BottleImpact) == 0x000318, "Member 'AChampagneBottleProjectile_C::BottleImpact' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, BottleThrow) == 0x000320, "Member 'AChampagneBottleProjectile_C::BottleThrow' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, BottlePropel) == 0x000328, "Member 'AChampagneBottleProjectile_C::BottlePropel' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, CoopEvent) == 0x000330, "Member 'AChampagneBottleProjectile_C::CoopEvent' has a wrong offset!");
static_assert(offsetof(AChampagneBottleProjectile_C, Flying) == 0x000338, "Member 'AChampagneBottleProjectile_C::Flying' has a wrong offset!");

}

