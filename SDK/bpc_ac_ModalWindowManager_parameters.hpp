#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: bpc_ac_ModalWindowManager

#include "Basic.hpp"

#include "InGameModalWidgets_structs.hpp"


namespace SDK::Params
{

// Function bpc_ac_ModalWindowManager.bpc_ac_ModalWindowManager_C.ExecuteUbergraph_bpc_ac_ModalWindowManager
// 0x0038 (0x0038 - 0x0000)
struct bpc_ac_ModalWindowManager_C_ExecuteUbergraph_bpc_ac_ModalWindowManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Active_Modal_Window;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Internal_Prioritize_Modal_Window_VisibleWidget; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(bpc_ac_ModalWindowManager_C_ExecuteUbergraph_bpc_ac_ModalWindowManager) == 0x000008, "Wrong alignment on bpc_ac_ModalWindowManager_C_ExecuteUbergraph_bpc_ac_ModalWindowManager");
static_assert(sizeof(bpc_ac_ModalWindowManager_C_ExecuteUbergraph_bpc_ac_ModalWindowManager) == 0x000038, "Wrong size on bpc_ac_ModalWindowManager_C_ExecuteUbergraph_bpc_ac_ModalWindowManager");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_ExecuteUbergraph_bpc_ac_ModalWindowManager, EntryPoint) == 0x000000, "Member 'bpc_ac_ModalWindowManager_C_ExecuteUbergraph_bpc_ac_ModalWindowManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_ExecuteUbergraph_bpc_ac_ModalWindowManager, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'bpc_ac_ModalWindowManager_C_ExecuteUbergraph_bpc_ac_ModalWindowManager::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_ExecuteUbergraph_bpc_ac_ModalWindowManager, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'bpc_ac_ModalWindowManager_C_ExecuteUbergraph_bpc_ac_ModalWindowManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_ExecuteUbergraph_bpc_ac_ModalWindowManager, CallFunc_GetPlayerController_ReturnValue_1) == 0x000018, "Member 'bpc_ac_ModalWindowManager_C_ExecuteUbergraph_bpc_ac_ModalWindowManager::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_ExecuteUbergraph_bpc_ac_ModalWindowManager, CallFunc_GetPlayerController_ReturnValue_2) == 0x000020, "Member 'bpc_ac_ModalWindowManager_C_ExecuteUbergraph_bpc_ac_ModalWindowManager::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_ExecuteUbergraph_bpc_ac_ModalWindowManager, K2Node_CustomEvent_Active_Modal_Window) == 0x000028, "Member 'bpc_ac_ModalWindowManager_C_ExecuteUbergraph_bpc_ac_ModalWindowManager::K2Node_CustomEvent_Active_Modal_Window' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_ExecuteUbergraph_bpc_ac_ModalWindowManager, CallFunc_Internal_Prioritize_Modal_Window_VisibleWidget) == 0x000030, "Member 'bpc_ac_ModalWindowManager_C_ExecuteUbergraph_bpc_ac_ModalWindowManager::CallFunc_Internal_Prioritize_Modal_Window_VisibleWidget' has a wrong offset!");

// Function bpc_ac_ModalWindowManager.bpc_ac_ModalWindowManager_C.Internal SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct bpc_ac_ModalWindowManager_C_Internal_SetInputMode final
{
public:
	bool                                          Active_Modal_Window_0;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(bpc_ac_ModalWindowManager_C_Internal_SetInputMode) == 0x000001, "Wrong alignment on bpc_ac_ModalWindowManager_C_Internal_SetInputMode");
static_assert(sizeof(bpc_ac_ModalWindowManager_C_Internal_SetInputMode) == 0x000001, "Wrong size on bpc_ac_ModalWindowManager_C_Internal_SetInputMode");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Internal_SetInputMode, Active_Modal_Window_0) == 0x000000, "Member 'bpc_ac_ModalWindowManager_C_Internal_SetInputMode::Active_Modal_Window_0' has a wrong offset!");

// Function bpc_ac_ModalWindowManager.bpc_ac_ModalWindowManager_C.Internal Prioritize Modal Window
// 0x0030 (0x0030 - 0x0000)
struct bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window final
{
public:
	EInGameModalWidgets                           Desired_Modal_Window_to_Toggle;                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            WidgetCandidate;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            VisibleWidget;                                     // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            L_DesiredWidgetToToggle;                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_DesireGranted;                                   // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_Modal;                                           // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_5;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window) == 0x000008, "Wrong alignment on bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window");
static_assert(sizeof(bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window) == 0x000030, "Wrong size on bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window, Desired_Modal_Window_to_Toggle) == 0x000000, "Member 'bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window::Desired_Modal_Window_to_Toggle' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window, WidgetCandidate) == 0x000008, "Member 'bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window::WidgetCandidate' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window, VisibleWidget) == 0x000010, "Member 'bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window::VisibleWidget' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window, L_DesiredWidgetToToggle) == 0x000018, "Member 'bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window::L_DesiredWidgetToToggle' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window, L_DesireGranted) == 0x000020, "Member 'bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window::L_DesireGranted' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window, L_Modal) == 0x000021, "Member 'bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window::L_Modal' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window, K2Node_SwitchEnum_CmpSuccess) == 0x000022, "Member 'bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window, CallFunc_IsValid_ReturnValue) == 0x000023, "Member 'bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window, K2Node_SwitchEnum_CmpSuccess_1) == 0x000024, "Member 'bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window, K2Node_SwitchEnum_CmpSuccess_2) == 0x000025, "Member 'bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window, K2Node_SwitchEnum_CmpSuccess_3) == 0x000026, "Member 'bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window, CallFunc_IsValid_ReturnValue_1) == 0x000027, "Member 'bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window, K2Node_SwitchEnum_CmpSuccess_4) == 0x000028, "Member 'bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window, K2Node_SwitchEnum_CmpSuccess_5) == 0x000029, "Member 'bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window::K2Node_SwitchEnum_CmpSuccess_5' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002B, "Member 'bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window, CallFunc_IsValid_ReturnValue_2) == 0x00002C, "Member 'bpc_ac_ModalWindowManager_C_Internal_Prioritize_Modal_Window::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function bpc_ac_ModalWindowManager.bpc_ac_ModalWindowManager_C.Internal Set New Active Window
// 0x0002 (0x0002 - 0x0000)
struct bpc_ac_ModalWindowManager_C_Internal_Set_New_Active_Window final
{
public:
	EInGameModalWidgets                           New_Active_modal_window;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(bpc_ac_ModalWindowManager_C_Internal_Set_New_Active_Window) == 0x000001, "Wrong alignment on bpc_ac_ModalWindowManager_C_Internal_Set_New_Active_Window");
static_assert(sizeof(bpc_ac_ModalWindowManager_C_Internal_Set_New_Active_Window) == 0x000002, "Wrong size on bpc_ac_ModalWindowManager_C_Internal_Set_New_Active_Window");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Internal_Set_New_Active_Window, New_Active_modal_window) == 0x000000, "Member 'bpc_ac_ModalWindowManager_C_Internal_Set_New_Active_Window::New_Active_modal_window' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Internal_Set_New_Active_Window, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'bpc_ac_ModalWindowManager_C_Internal_Set_New_Active_Window::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function bpc_ac_ModalWindowManager.bpc_ac_ModalWindowManager_C.GetInGameWidget
// 0x0020 (0x0020 - 0x0000)
struct bpc_ac_ModalWindowManager_C_GetInGameWidget final
{
public:
	class UUserWidget*                            Return_Value;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(bpc_ac_ModalWindowManager_C_GetInGameWidget) == 0x000008, "Wrong alignment on bpc_ac_ModalWindowManager_C_GetInGameWidget");
static_assert(sizeof(bpc_ac_ModalWindowManager_C_GetInGameWidget) == 0x000020, "Wrong size on bpc_ac_ModalWindowManager_C_GetInGameWidget");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_GetInGameWidget, Return_Value) == 0x000000, "Member 'bpc_ac_ModalWindowManager_C_GetInGameWidget::Return_Value' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_GetInGameWidget, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'bpc_ac_ModalWindowManager_C_GetInGameWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_GetInGameWidget, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'bpc_ac_ModalWindowManager_C_GetInGameWidget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_GetInGameWidget, CallFunc_Create_ReturnValue) == 0x000018, "Member 'bpc_ac_ModalWindowManager_C_GetInGameWidget::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function bpc_ac_ModalWindowManager.bpc_ac_ModalWindowManager_C.GetAirlockVotingBoxWidget
// 0x0020 (0x0020 - 0x0000)
struct bpc_ac_ModalWindowManager_C_GetAirlockVotingBoxWidget final
{
public:
	class UUserWidget*                            Return_Value;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(bpc_ac_ModalWindowManager_C_GetAirlockVotingBoxWidget) == 0x000008, "Wrong alignment on bpc_ac_ModalWindowManager_C_GetAirlockVotingBoxWidget");
static_assert(sizeof(bpc_ac_ModalWindowManager_C_GetAirlockVotingBoxWidget) == 0x000020, "Wrong size on bpc_ac_ModalWindowManager_C_GetAirlockVotingBoxWidget");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_GetAirlockVotingBoxWidget, Return_Value) == 0x000000, "Member 'bpc_ac_ModalWindowManager_C_GetAirlockVotingBoxWidget::Return_Value' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_GetAirlockVotingBoxWidget, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'bpc_ac_ModalWindowManager_C_GetAirlockVotingBoxWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_GetAirlockVotingBoxWidget, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'bpc_ac_ModalWindowManager_C_GetAirlockVotingBoxWidget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_GetAirlockVotingBoxWidget, CallFunc_Create_ReturnValue) == 0x000018, "Member 'bpc_ac_ModalWindowManager_C_GetAirlockVotingBoxWidget::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function bpc_ac_ModalWindowManager.bpc_ac_ModalWindowManager_C.Toggle Airlock Voting box
// 0x0028 (0x0028 - 0x0000)
struct bpc_ac_ModalWindowManager_C_Toggle_Airlock_Voting_box final
{
public:
	class Ubp_wi_VotingBox_C*                     Visible_Voting_Box;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetAirlockVotingBoxWidget_Return_Value;   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Internal_Prioritize_Modal_Window_VisibleWidget; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Ubp_wi_VotingBox_C*                     K2Node_DynamicCast_AsBp_Wi_Voting_Box;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(bpc_ac_ModalWindowManager_C_Toggle_Airlock_Voting_box) == 0x000008, "Wrong alignment on bpc_ac_ModalWindowManager_C_Toggle_Airlock_Voting_box");
static_assert(sizeof(bpc_ac_ModalWindowManager_C_Toggle_Airlock_Voting_box) == 0x000028, "Wrong size on bpc_ac_ModalWindowManager_C_Toggle_Airlock_Voting_box");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Toggle_Airlock_Voting_box, Visible_Voting_Box) == 0x000000, "Member 'bpc_ac_ModalWindowManager_C_Toggle_Airlock_Voting_box::Visible_Voting_Box' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Toggle_Airlock_Voting_box, CallFunc_GetAirlockVotingBoxWidget_Return_Value) == 0x000008, "Member 'bpc_ac_ModalWindowManager_C_Toggle_Airlock_Voting_box::CallFunc_GetAirlockVotingBoxWidget_Return_Value' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Toggle_Airlock_Voting_box, CallFunc_Internal_Prioritize_Modal_Window_VisibleWidget) == 0x000010, "Member 'bpc_ac_ModalWindowManager_C_Toggle_Airlock_Voting_box::CallFunc_Internal_Prioritize_Modal_Window_VisibleWidget' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Toggle_Airlock_Voting_box, K2Node_DynamicCast_AsBp_Wi_Voting_Box) == 0x000018, "Member 'bpc_ac_ModalWindowManager_C_Toggle_Airlock_Voting_box::K2Node_DynamicCast_AsBp_Wi_Voting_Box' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Toggle_Airlock_Voting_box, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'bpc_ac_ModalWindowManager_C_Toggle_Airlock_Voting_box::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function bpc_ac_ModalWindowManager.bpc_ac_ModalWindowManager_C.Toggle Thumb Vote
// 0x0030 (0x0030 - 0x0000)
struct bpc_ac_ModalWindowManager_C_Toggle_Thumb_Vote final
{
public:
	class UUserWidget*                            Thumb_vote_Widget;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Ubp_wi_ThumbsVoteMenu_C*                Visible_thumb_vote_Widget;                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_SpawnAkComponentAtLocation_ReturnValue;   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Internal_Prioritize_Modal_Window_VisibleWidget; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Ubp_wi_ThumbsVoteMenu_C*                K2Node_DynamicCast_AsBp_Wi_Thumbs_Vote_Menu;       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(bpc_ac_ModalWindowManager_C_Toggle_Thumb_Vote) == 0x000008, "Wrong alignment on bpc_ac_ModalWindowManager_C_Toggle_Thumb_Vote");
static_assert(sizeof(bpc_ac_ModalWindowManager_C_Toggle_Thumb_Vote) == 0x000030, "Wrong size on bpc_ac_ModalWindowManager_C_Toggle_Thumb_Vote");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Toggle_Thumb_Vote, Thumb_vote_Widget) == 0x000000, "Member 'bpc_ac_ModalWindowManager_C_Toggle_Thumb_Vote::Thumb_vote_Widget' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Toggle_Thumb_Vote, Visible_thumb_vote_Widget) == 0x000008, "Member 'bpc_ac_ModalWindowManager_C_Toggle_Thumb_Vote::Visible_thumb_vote_Widget' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Toggle_Thumb_Vote, CallFunc_SpawnAkComponentAtLocation_ReturnValue) == 0x000010, "Member 'bpc_ac_ModalWindowManager_C_Toggle_Thumb_Vote::CallFunc_SpawnAkComponentAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Toggle_Thumb_Vote, CallFunc_Internal_Prioritize_Modal_Window_VisibleWidget) == 0x000018, "Member 'bpc_ac_ModalWindowManager_C_Toggle_Thumb_Vote::CallFunc_Internal_Prioritize_Modal_Window_VisibleWidget' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Toggle_Thumb_Vote, K2Node_DynamicCast_AsBp_Wi_Thumbs_Vote_Menu) == 0x000020, "Member 'bpc_ac_ModalWindowManager_C_Toggle_Thumb_Vote::K2Node_DynamicCast_AsBp_Wi_Thumbs_Vote_Menu' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Toggle_Thumb_Vote, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'bpc_ac_ModalWindowManager_C_Toggle_Thumb_Vote::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function bpc_ac_ModalWindowManager.bpc_ac_ModalWindowManager_C.Toggle Puzzle Widget
// 0x0028 (0x0028 - 0x0000)
struct bpc_ac_ModalWindowManager_C_Toggle_Puzzle_Widget final
{
public:
	class Ubp_wi_Puzzle_C*                        Puzzle_Puzzle_Widget;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            Visible_Puzzle_Widget;                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Internal_Prioritize_Modal_Window_VisibleWidget; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Ubp_wi_Puzzle_C*                        K2Node_DynamicCast_AsBp_Wi_Puzzle;                 // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(bpc_ac_ModalWindowManager_C_Toggle_Puzzle_Widget) == 0x000008, "Wrong alignment on bpc_ac_ModalWindowManager_C_Toggle_Puzzle_Widget");
static_assert(sizeof(bpc_ac_ModalWindowManager_C_Toggle_Puzzle_Widget) == 0x000028, "Wrong size on bpc_ac_ModalWindowManager_C_Toggle_Puzzle_Widget");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Toggle_Puzzle_Widget, Puzzle_Puzzle_Widget) == 0x000000, "Member 'bpc_ac_ModalWindowManager_C_Toggle_Puzzle_Widget::Puzzle_Puzzle_Widget' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Toggle_Puzzle_Widget, Visible_Puzzle_Widget) == 0x000008, "Member 'bpc_ac_ModalWindowManager_C_Toggle_Puzzle_Widget::Visible_Puzzle_Widget' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Toggle_Puzzle_Widget, CallFunc_Internal_Prioritize_Modal_Window_VisibleWidget) == 0x000010, "Member 'bpc_ac_ModalWindowManager_C_Toggle_Puzzle_Widget::CallFunc_Internal_Prioritize_Modal_Window_VisibleWidget' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Toggle_Puzzle_Widget, K2Node_DynamicCast_AsBp_Wi_Puzzle) == 0x000018, "Member 'bpc_ac_ModalWindowManager_C_Toggle_Puzzle_Widget::K2Node_DynamicCast_AsBp_Wi_Puzzle' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Toggle_Puzzle_Widget, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'bpc_ac_ModalWindowManager_C_Toggle_Puzzle_Widget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function bpc_ac_ModalWindowManager.bpc_ac_ModalWindowManager_C.Toggle Ingame Menu
// 0x0020 (0x0020 - 0x0000)
struct bpc_ac_ModalWindowManager_C_Toggle_Ingame_Menu final
{
public:
	class UUserWidget*                            Visible_Ingame_Widget;                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetInGameWidget_Return_Value;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Internal_Prioritize_Modal_Window_VisibleWidget; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(bpc_ac_ModalWindowManager_C_Toggle_Ingame_Menu) == 0x000008, "Wrong alignment on bpc_ac_ModalWindowManager_C_Toggle_Ingame_Menu");
static_assert(sizeof(bpc_ac_ModalWindowManager_C_Toggle_Ingame_Menu) == 0x000020, "Wrong size on bpc_ac_ModalWindowManager_C_Toggle_Ingame_Menu");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Toggle_Ingame_Menu, Visible_Ingame_Widget) == 0x000000, "Member 'bpc_ac_ModalWindowManager_C_Toggle_Ingame_Menu::Visible_Ingame_Widget' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Toggle_Ingame_Menu, CallFunc_PostEventAtLocation_ReturnValue) == 0x000008, "Member 'bpc_ac_ModalWindowManager_C_Toggle_Ingame_Menu::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Toggle_Ingame_Menu, CallFunc_GetInGameWidget_Return_Value) == 0x000010, "Member 'bpc_ac_ModalWindowManager_C_Toggle_Ingame_Menu::CallFunc_GetInGameWidget_Return_Value' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_Toggle_Ingame_Menu, CallFunc_Internal_Prioritize_Modal_Window_VisibleWidget) == 0x000018, "Member 'bpc_ac_ModalWindowManager_C_Toggle_Ingame_Menu::CallFunc_Internal_Prioritize_Modal_Window_VisibleWidget' has a wrong offset!");

// Function bpc_ac_ModalWindowManager.bpc_ac_ModalWindowManager_C.SetActiveWidget
// 0x0010 (0x0010 - 0x0000)
struct bpc_ac_ModalWindowManager_C_SetActiveWidget final
{
public:
	class UUserWidget*                            New_User_Widget;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(bpc_ac_ModalWindowManager_C_SetActiveWidget) == 0x000008, "Wrong alignment on bpc_ac_ModalWindowManager_C_SetActiveWidget");
static_assert(sizeof(bpc_ac_ModalWindowManager_C_SetActiveWidget) == 0x000010, "Wrong size on bpc_ac_ModalWindowManager_C_SetActiveWidget");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_SetActiveWidget, New_User_Widget) == 0x000000, "Member 'bpc_ac_ModalWindowManager_C_SetActiveWidget::New_User_Widget' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_SetActiveWidget, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'bpc_ac_ModalWindowManager_C_SetActiveWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function bpc_ac_ModalWindowManager.bpc_ac_ModalWindowManager_C.SetPreviousModalWindow
// 0x0001 (0x0001 - 0x0000)
struct bpc_ac_ModalWindowManager_C_SetPreviousModalWindow final
{
public:
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(bpc_ac_ModalWindowManager_C_SetPreviousModalWindow) == 0x000001, "Wrong alignment on bpc_ac_ModalWindowManager_C_SetPreviousModalWindow");
static_assert(sizeof(bpc_ac_ModalWindowManager_C_SetPreviousModalWindow) == 0x000001, "Wrong size on bpc_ac_ModalWindowManager_C_SetPreviousModalWindow");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_SetPreviousModalWindow, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000000, "Member 'bpc_ac_ModalWindowManager_C_SetPreviousModalWindow::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function bpc_ac_ModalWindowManager.bpc_ac_ModalWindowManager_C.IsModalVisible
// 0x0002 (0x0002 - 0x0000)
struct bpc_ac_ModalWindowManager_C_IsModalVisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(bpc_ac_ModalWindowManager_C_IsModalVisible) == 0x000001, "Wrong alignment on bpc_ac_ModalWindowManager_C_IsModalVisible");
static_assert(sizeof(bpc_ac_ModalWindowManager_C_IsModalVisible) == 0x000002, "Wrong size on bpc_ac_ModalWindowManager_C_IsModalVisible");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_IsModalVisible, ReturnValue) == 0x000000, "Member 'bpc_ac_ModalWindowManager_C_IsModalVisible::ReturnValue' has a wrong offset!");
static_assert(offsetof(bpc_ac_ModalWindowManager_C_IsModalVisible, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'bpc_ac_ModalWindowManager_C_IsModalVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

