#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DrowningCollider

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function DrowningCollider.DrowningCollider_C.ExecuteUbergraph_DrowningCollider
// 0x0160 (0x0160 - 0x0000)
struct DrowningCollider_C_ExecuteUbergraph_DrowningCollider final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      K2Node_Event_Character;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDrowningLevel_Level;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1; // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_2; // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1;  // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetActiveGameplayEffectTotalDuration_ReturnValue; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0080(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x00C8(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider) == 0x000010, "Wrong alignment on DrowningCollider_C_ExecuteUbergraph_DrowningCollider");
static_assert(sizeof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider) == 0x000160, "Wrong size on DrowningCollider_C_ExecuteUbergraph_DrowningCollider");
static_assert(offsetof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider, EntryPoint) == 0x000000, "Member 'DrowningCollider_C_ExecuteUbergraph_DrowningCollider::EntryPoint' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x000004, "Member 'DrowningCollider_C_ExecuteUbergraph_DrowningCollider::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider, CallFunc_HasAuthority_ReturnValue) == 0x000005, "Member 'DrowningCollider_C_ExecuteUbergraph_DrowningCollider::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider, K2Node_Event_Character) == 0x000008, "Member 'DrowningCollider_C_ExecuteUbergraph_DrowningCollider::K2Node_Event_Character' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000010, "Member 'DrowningCollider_C_ExecuteUbergraph_DrowningCollider::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'DrowningCollider_C_ExecuteUbergraph_DrowningCollider::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000020, "Member 'DrowningCollider_C_ExecuteUbergraph_DrowningCollider::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000030, "Member 'DrowningCollider_C_ExecuteUbergraph_DrowningCollider::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider, CallFunc_GetDrowningLevel_Level) == 0x000034, "Member 'DrowningCollider_C_ExecuteUbergraph_DrowningCollider::CallFunc_GetDrowningLevel_Level' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider, CallFunc_Array_AddUnique_ReturnValue) == 0x000038, "Member 'DrowningCollider_C_ExecuteUbergraph_DrowningCollider::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider, CallFunc_IsValid_ReturnValue_1) == 0x00003C, "Member 'DrowningCollider_C_ExecuteUbergraph_DrowningCollider::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000040, "Member 'DrowningCollider_C_ExecuteUbergraph_DrowningCollider::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000048, "Member 'DrowningCollider_C_ExecuteUbergraph_DrowningCollider::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1) == 0x000050, "Member 'DrowningCollider_C_ExecuteUbergraph_DrowningCollider::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_2) == 0x000058, "Member 'DrowningCollider_C_ExecuteUbergraph_DrowningCollider::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x000060, "Member 'DrowningCollider_C_ExecuteUbergraph_DrowningCollider::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000070, "Member 'DrowningCollider_C_ExecuteUbergraph_DrowningCollider::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider, CallFunc_GetActiveGameplayEffectTotalDuration_ReturnValue) == 0x000074, "Member 'DrowningCollider_C_ExecuteUbergraph_DrowningCollider::CallFunc_GetActiveGameplayEffectTotalDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider, K2Node_CustomEvent_Actor) == 0x000078, "Member 'DrowningCollider_C_ExecuteUbergraph_DrowningCollider::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider, CallFunc_GetTransform_ReturnValue) == 0x000080, "Member 'DrowningCollider_C_ExecuteUbergraph_DrowningCollider::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider, CallFunc_TransformLocation_ReturnValue) == 0x0000B0, "Member 'DrowningCollider_C_ExecuteUbergraph_DrowningCollider::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider, CallFunc_Add_VectorVector_ReturnValue) == 0x0000BC, "Member 'DrowningCollider_C_ExecuteUbergraph_DrowningCollider::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0000C8, "Member 'DrowningCollider_C_ExecuteUbergraph_DrowningCollider::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_ExecuteUbergraph_DrowningCollider, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000154, "Member 'DrowningCollider_C_ExecuteUbergraph_DrowningCollider::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function DrowningCollider.DrowningCollider_C.Spawn Item
// 0x0008 (0x0008 - 0x0000)
struct DrowningCollider_C_Spawn_Item final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DrowningCollider_C_Spawn_Item) == 0x000008, "Wrong alignment on DrowningCollider_C_Spawn_Item");
static_assert(sizeof(DrowningCollider_C_Spawn_Item) == 0x000008, "Wrong size on DrowningCollider_C_Spawn_Item");
static_assert(offsetof(DrowningCollider_C_Spawn_Item, Actor) == 0x000000, "Member 'DrowningCollider_C_Spawn_Item::Actor' has a wrong offset!");

// Function DrowningCollider.DrowningCollider_C.Character Entered
// 0x0008 (0x0008 - 0x0000)
struct DrowningCollider_C_Character_Entered final
{
public:
	class ACharacterSCTBP_C*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DrowningCollider_C_Character_Entered) == 0x000008, "Wrong alignment on DrowningCollider_C_Character_Entered");
static_assert(sizeof(DrowningCollider_C_Character_Entered) == 0x000008, "Wrong size on DrowningCollider_C_Character_Entered");
static_assert(offsetof(DrowningCollider_C_Character_Entered, Character) == 0x000000, "Member 'DrowningCollider_C_Character_Entered::Character' has a wrong offset!");

// Function DrowningCollider.DrowningCollider_C.GetDrowningLevel
// 0x0028 (0x0028 - 0x0000)
struct DrowningCollider_C_GetDrowningLevel final
{
public:
	class ACharacterSCT*                          Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Level;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ContainsPowerType_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ContainsPowerType_ReturnValue_1;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DrowningCollider_C_GetDrowningLevel) == 0x000008, "Wrong alignment on DrowningCollider_C_GetDrowningLevel");
static_assert(sizeof(DrowningCollider_C_GetDrowningLevel) == 0x000028, "Wrong size on DrowningCollider_C_GetDrowningLevel");
static_assert(offsetof(DrowningCollider_C_GetDrowningLevel, Character) == 0x000000, "Member 'DrowningCollider_C_GetDrowningLevel::Character' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_GetDrowningLevel, Level) == 0x000008, "Member 'DrowningCollider_C_GetDrowningLevel::Level' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_GetDrowningLevel, Temp_bool_Variable) == 0x00000C, "Member 'DrowningCollider_C_GetDrowningLevel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_GetDrowningLevel, Temp_float_Variable) == 0x000010, "Member 'DrowningCollider_C_GetDrowningLevel::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_GetDrowningLevel, CallFunc_ContainsPowerType_ReturnValue) == 0x000014, "Member 'DrowningCollider_C_GetDrowningLevel::CallFunc_ContainsPowerType_ReturnValue' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_GetDrowningLevel, CallFunc_ContainsPowerType_ReturnValue_1) == 0x000015, "Member 'DrowningCollider_C_GetDrowningLevel::CallFunc_ContainsPowerType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_GetDrowningLevel, Temp_float_Variable_1) == 0x000018, "Member 'DrowningCollider_C_GetDrowningLevel::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_GetDrowningLevel, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'DrowningCollider_C_GetDrowningLevel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_GetDrowningLevel, CallFunc_BooleanOR_ReturnValue) == 0x00001D, "Member 'DrowningCollider_C_GetDrowningLevel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(DrowningCollider_C_GetDrowningLevel, K2Node_Select_Default) == 0x000020, "Member 'DrowningCollider_C_GetDrowningLevel::K2Node_Select_Default' has a wrong offset!");

}

