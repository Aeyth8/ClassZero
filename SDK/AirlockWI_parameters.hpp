#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AirlockWI

#include "Basic.hpp"

#include "SCT_structs.hpp"
#include "UMG_structs.hpp"
#include "AkAudio_structs.hpp"
#include "PassengerLogFactType_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AirlockWI.AirlockWI_C.ExecuteUbergraph_AirlockWI
// 0x0160 (0x0160 - 0x0000)
struct AirlockWI_C_ExecuteUbergraph_AirlockWI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0018(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0028(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0038(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Text;                           // 0x0068(0x0018)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_In;                             // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked_1;           // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked;             // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT_1;             // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x00C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Duration;                       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Character;                      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT_2;             // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerNameBPI_Name;                    // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0118(0x0018)()
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_SpawnAkComponentAtLocation_ReturnValue;   // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockWI_C_ExecuteUbergraph_AirlockWI) == 0x000008, "Wrong alignment on AirlockWI_C_ExecuteUbergraph_AirlockWI");
static_assert(sizeof(AirlockWI_C_ExecuteUbergraph_AirlockWI) == 0x000160, "Wrong size on AirlockWI_C_ExecuteUbergraph_AirlockWI");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, EntryPoint) == 0x000000, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::EntryPoint' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, Temp_struct_Variable) == 0x000008, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, Temp_delegate_Variable) == 0x000018, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, Temp_struct_Variable_1) == 0x000028, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, Temp_delegate_Variable_1) == 0x000038, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, Temp_int_Variable) == 0x000048, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, CallFunc_PostAkEvent_ReturnValue) == 0x00004C, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, Temp_int_Variable_1) == 0x000058, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00005C, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, K2Node_CustomEvent_Text) == 0x000068, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, K2Node_Event_IsDesignTime) == 0x000080, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, K2Node_CustomEvent_In) == 0x000081, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::K2Node_CustomEvent_In' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, K2Node_ComponentBoundEvent_bIsChecked_1) == 0x000082, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::K2Node_ComponentBoundEvent_bIsChecked_1' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, K2Node_ComponentBoundEvent_bIsChecked) == 0x000083, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::K2Node_ComponentBoundEvent_bIsChecked' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000088, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, K2Node_DynamicCast_AsICharacter_SCT) == 0x000090, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, K2Node_DynamicCast_AsICharacter_SCT_1) == 0x0000A8, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::K2Node_DynamicCast_AsICharacter_SCT_1' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, Temp_int_Variable_2) == 0x0000BC, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0000C0, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000C4, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, CallFunc_K2_SetTimer_ReturnValue) == 0x0000C8, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, CallFunc_PlayAnimationForward_ReturnValue) == 0x0000D0, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, CallFunc_PlayAnimationReverse_ReturnValue) == 0x0000D8, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, K2Node_CustomEvent_Duration) == 0x0000E0, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, K2Node_CustomEvent_Character) == 0x0000E8, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, K2Node_DynamicCast_AsICharacter_SCT_2) == 0x0000F0, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::K2Node_DynamicCast_AsICharacter_SCT_2' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, K2Node_DynamicCast_bSuccess_2) == 0x000100, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, CallFunc_FTrunc_ReturnValue) == 0x000104, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, CallFunc_GetPlayerNameBPI_Name) == 0x000108, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::CallFunc_GetPlayerNameBPI_Name' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, CallFunc_Conv_StringToText_ReturnValue) == 0x000118, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000130, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000138, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, CallFunc_GetPlayerPawn_ReturnValue) == 0x000140, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000148, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, CallFunc_PostAkEvent_ReturnValue_1) == 0x000154, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ExecuteUbergraph_AirlockWI, CallFunc_SpawnAkComponentAtLocation_ReturnValue) == 0x000158, "Member 'AirlockWI_C_ExecuteUbergraph_AirlockWI::CallFunc_SpawnAkComponentAtLocation_ReturnValue' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.FadeInterviewInfo
// 0x0010 (0x0010 - 0x0000)
struct AirlockWI_C_FadeInterviewInfo final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Character;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockWI_C_FadeInterviewInfo) == 0x000008, "Wrong alignment on AirlockWI_C_FadeInterviewInfo");
static_assert(sizeof(AirlockWI_C_FadeInterviewInfo) == 0x000010, "Wrong size on AirlockWI_C_FadeInterviewInfo");
static_assert(offsetof(AirlockWI_C_FadeInterviewInfo, Duration) == 0x000000, "Member 'AirlockWI_C_FadeInterviewInfo::Duration' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_FadeInterviewInfo, Character) == 0x000008, "Member 'AirlockWI_C_FadeInterviewInfo::Character' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.BndEvt__TrustVoteNo_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct AirlockWI_C_BndEvt__TrustVoteNo_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockWI_C_BndEvt__TrustVoteNo_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on AirlockWI_C_BndEvt__TrustVoteNo_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(AirlockWI_C_BndEvt__TrustVoteNo_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on AirlockWI_C_BndEvt__TrustVoteNo_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(AirlockWI_C_BndEvt__TrustVoteNo_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'AirlockWI_C_BndEvt__TrustVoteNo_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.BndEvt__TrustVoteYes_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct AirlockWI_C_BndEvt__TrustVoteYes_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockWI_C_BndEvt__TrustVoteYes_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on AirlockWI_C_BndEvt__TrustVoteYes_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(AirlockWI_C_BndEvt__TrustVoteYes_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on AirlockWI_C_BndEvt__TrustVoteYes_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(AirlockWI_C_BndEvt__TrustVoteYes_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'AirlockWI_C_BndEvt__TrustVoteYes_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.FadeDisplay
// 0x0001 (0x0001 - 0x0000)
struct AirlockWI_C_FadeDisplay final
{
public:
	bool                                          In;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockWI_C_FadeDisplay) == 0x000001, "Wrong alignment on AirlockWI_C_FadeDisplay");
static_assert(sizeof(AirlockWI_C_FadeDisplay) == 0x000001, "Wrong size on AirlockWI_C_FadeDisplay");
static_assert(offsetof(AirlockWI_C_FadeDisplay, In) == 0x000000, "Member 'AirlockWI_C_FadeDisplay::In' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct AirlockWI_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockWI_C_PreConstruct) == 0x000001, "Wrong alignment on AirlockWI_C_PreConstruct");
static_assert(sizeof(AirlockWI_C_PreConstruct) == 0x000001, "Wrong size on AirlockWI_C_PreConstruct");
static_assert(offsetof(AirlockWI_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'AirlockWI_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.Type Text Announcement
// 0x0018 (0x0018 - 0x0000)
struct AirlockWI_C_Type_Text_Announcement final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(AirlockWI_C_Type_Text_Announcement) == 0x000008, "Wrong alignment on AirlockWI_C_Type_Text_Announcement");
static_assert(sizeof(AirlockWI_C_Type_Text_Announcement) == 0x000018, "Wrong size on AirlockWI_C_Type_Text_Announcement");
static_assert(offsetof(AirlockWI_C_Type_Text_Announcement, Text) == 0x000000, "Member 'AirlockWI_C_Type_Text_Announcement::Text' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.AddDeathVoteEntry
// 0x0040 (0x0040 - 0x0000)
struct AirlockWI_C_AddDeathVoteEntry final
{
public:
	class ACharacter*                             PlayerMonitored;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	class UAirlockVoteEntryWI_C*                  CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockWI_C_AddDeathVoteEntry) == 0x000008, "Wrong alignment on AirlockWI_C_AddDeathVoteEntry");
static_assert(sizeof(AirlockWI_C_AddDeathVoteEntry) == 0x000040, "Wrong size on AirlockWI_C_AddDeathVoteEntry");
static_assert(offsetof(AirlockWI_C_AddDeathVoteEntry, PlayerMonitored) == 0x000000, "Member 'AirlockWI_C_AddDeathVoteEntry::PlayerMonitored' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_AddDeathVoteEntry, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000008, "Member 'AirlockWI_C_AddDeathVoteEntry::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_AddDeathVoteEntry, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'AirlockWI_C_AddDeathVoteEntry::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_AddDeathVoteEntry, K2Node_MakeStruct_Margin) == 0x000018, "Member 'AirlockWI_C_AddDeathVoteEntry::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_AddDeathVoteEntry, CallFunc_Create_ReturnValue) == 0x000028, "Member 'AirlockWI_C_AddDeathVoteEntry::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_AddDeathVoteEntry, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000030, "Member 'AirlockWI_C_AddDeathVoteEntry::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_AddDeathVoteEntry, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'AirlockWI_C_AddDeathVoteEntry::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.LockAllVoteEntries
// 0x0020 (0x0020 - 0x0000)
struct AirlockWI_C_LockAllVoteEntries final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAirlockVoteEntryWI_C*                  CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockWI_C_LockAllVoteEntries) == 0x000008, "Wrong alignment on AirlockWI_C_LockAllVoteEntries");
static_assert(sizeof(AirlockWI_C_LockAllVoteEntries) == 0x000020, "Wrong size on AirlockWI_C_LockAllVoteEntries");
static_assert(offsetof(AirlockWI_C_LockAllVoteEntries, Temp_int_Array_Index_Variable) == 0x000000, "Member 'AirlockWI_C_LockAllVoteEntries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_LockAllVoteEntries, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'AirlockWI_C_LockAllVoteEntries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_LockAllVoteEntries, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'AirlockWI_C_LockAllVoteEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_LockAllVoteEntries, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'AirlockWI_C_LockAllVoteEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_LockAllVoteEntries, CallFunc_Array_Get_Item) == 0x000010, "Member 'AirlockWI_C_LockAllVoteEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_LockAllVoteEntries, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'AirlockWI_C_LockAllVoteEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.CountdownUpdate
// 0x0050 (0x0050 - 0x0000)
struct AirlockWI_C_CountdownUpdate final
{
public:
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_TimeSecondsToString_ReturnValue;          // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_LeftChop_ReturnValue;                     // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0018)()
};
static_assert(alignof(AirlockWI_C_CountdownUpdate) == 0x000008, "Wrong alignment on AirlockWI_C_CountdownUpdate");
static_assert(sizeof(AirlockWI_C_CountdownUpdate) == 0x000050, "Wrong size on AirlockWI_C_CountdownUpdate");
static_assert(offsetof(AirlockWI_C_CountdownUpdate, CallFunc_Less_IntInt_ReturnValue) == 0x000000, "Member 'AirlockWI_C_CountdownUpdate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_CountdownUpdate, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'AirlockWI_C_CountdownUpdate::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_CountdownUpdate, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000008, "Member 'AirlockWI_C_CountdownUpdate::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_CountdownUpdate, CallFunc_MapRangeClamped_ReturnValue) == 0x00000C, "Member 'AirlockWI_C_CountdownUpdate::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_CountdownUpdate, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'AirlockWI_C_CountdownUpdate::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_CountdownUpdate, CallFunc_Max_ReturnValue) == 0x000014, "Member 'AirlockWI_C_CountdownUpdate::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_CountdownUpdate, CallFunc_TimeSecondsToString_ReturnValue) == 0x000018, "Member 'AirlockWI_C_CountdownUpdate::CallFunc_TimeSecondsToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_CountdownUpdate, CallFunc_LeftChop_ReturnValue) == 0x000028, "Member 'AirlockWI_C_CountdownUpdate::CallFunc_LeftChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_CountdownUpdate, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'AirlockWI_C_CountdownUpdate::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.SetupDeathVote
// 0x0038 (0x0038 - 0x0000)
struct AirlockWI_C_SetupDeathVote final
{
public:
	class AAirlockVendelboSCT_C*                  AirlockActor_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACharacter*>                     Characters_0;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Countdown_0;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ExpectedVotes;                                     // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACharacter*>                     LocalPlayers;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockWI_C_SetupDeathVote) == 0x000008, "Wrong alignment on AirlockWI_C_SetupDeathVote");
static_assert(sizeof(AirlockWI_C_SetupDeathVote) == 0x000038, "Wrong size on AirlockWI_C_SetupDeathVote");
static_assert(offsetof(AirlockWI_C_SetupDeathVote, AirlockActor_0) == 0x000000, "Member 'AirlockWI_C_SetupDeathVote::AirlockActor_0' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupDeathVote, Characters_0) == 0x000008, "Member 'AirlockWI_C_SetupDeathVote::Characters_0' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupDeathVote, Countdown_0) == 0x000018, "Member 'AirlockWI_C_SetupDeathVote::Countdown_0' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupDeathVote, ExpectedVotes) == 0x00001C, "Member 'AirlockWI_C_SetupDeathVote::ExpectedVotes' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupDeathVote, LocalPlayers) == 0x000020, "Member 'AirlockWI_C_SetupDeathVote::LocalPlayers' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupDeathVote, CallFunc_PlayAnimation_ReturnValue) == 0x000030, "Member 'AirlockWI_C_SetupDeathVote::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.AddPassengerLogEntry
// 0x0038 (0x0038 - 0x0000)
struct AirlockWI_C_AddPassengerLogEntry final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	class UPassengerLogVoteEntryWI_C*             CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockWI_C_AddPassengerLogEntry) == 0x000008, "Wrong alignment on AirlockWI_C_AddPassengerLogEntry");
static_assert(sizeof(AirlockWI_C_AddPassengerLogEntry) == 0x000038, "Wrong size on AirlockWI_C_AddPassengerLogEntry");
static_assert(offsetof(AirlockWI_C_AddPassengerLogEntry, Character) == 0x000000, "Member 'AirlockWI_C_AddPassengerLogEntry::Character' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_AddPassengerLogEntry, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000008, "Member 'AirlockWI_C_AddPassengerLogEntry::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_AddPassengerLogEntry, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'AirlockWI_C_AddPassengerLogEntry::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_AddPassengerLogEntry, K2Node_MakeStruct_Margin) == 0x000018, "Member 'AirlockWI_C_AddPassengerLogEntry::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_AddPassengerLogEntry, CallFunc_Create_ReturnValue) == 0x000028, "Member 'AirlockWI_C_AddPassengerLogEntry::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_AddPassengerLogEntry, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000030, "Member 'AirlockWI_C_AddPassengerLogEntry::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.SetupPassengerLogVote
// 0x0028 (0x0028 - 0x0000)
struct AirlockWI_C_SetupPassengerLogVote final
{
public:
	class AActor*                                 AirlockActor_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACharacter*>                     Characters_0;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Countdown_0;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ExpectedVotes;                                     // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockWI_C_SetupPassengerLogVote) == 0x000008, "Wrong alignment on AirlockWI_C_SetupPassengerLogVote");
static_assert(sizeof(AirlockWI_C_SetupPassengerLogVote) == 0x000028, "Wrong size on AirlockWI_C_SetupPassengerLogVote");
static_assert(offsetof(AirlockWI_C_SetupPassengerLogVote, AirlockActor_0) == 0x000000, "Member 'AirlockWI_C_SetupPassengerLogVote::AirlockActor_0' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupPassengerLogVote, Characters_0) == 0x000008, "Member 'AirlockWI_C_SetupPassengerLogVote::Characters_0' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupPassengerLogVote, Countdown_0) == 0x000018, "Member 'AirlockWI_C_SetupPassengerLogVote::Countdown_0' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupPassengerLogVote, ExpectedVotes) == 0x00001C, "Member 'AirlockWI_C_SetupPassengerLogVote::ExpectedVotes' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupPassengerLogVote, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'AirlockWI_C_SetupPassengerLogVote::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.DisableAllOtherPassengerLogEntries
// 0x0038 (0x0038 - 0x0000)
struct AirlockWI_C_DisableAllOtherPassengerLogEntries final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPassengerLogVoteEntryWI_C*>     CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPassengerLogVoteEntryWI_C*             CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockWI_C_DisableAllOtherPassengerLogEntries) == 0x000008, "Wrong alignment on AirlockWI_C_DisableAllOtherPassengerLogEntries");
static_assert(sizeof(AirlockWI_C_DisableAllOtherPassengerLogEntries) == 0x000038, "Wrong size on AirlockWI_C_DisableAllOtherPassengerLogEntries");
static_assert(offsetof(AirlockWI_C_DisableAllOtherPassengerLogEntries, Temp_int_Array_Index_Variable) == 0x000000, "Member 'AirlockWI_C_DisableAllOtherPassengerLogEntries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_DisableAllOtherPassengerLogEntries, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'AirlockWI_C_DisableAllOtherPassengerLogEntries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_DisableAllOtherPassengerLogEntries, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'AirlockWI_C_DisableAllOtherPassengerLogEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_DisableAllOtherPassengerLogEntries, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000010, "Member 'AirlockWI_C_DisableAllOtherPassengerLogEntries::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_DisableAllOtherPassengerLogEntries, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'AirlockWI_C_DisableAllOtherPassengerLogEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_DisableAllOtherPassengerLogEntries, CallFunc_Array_Get_Item) == 0x000028, "Member 'AirlockWI_C_DisableAllOtherPassengerLogEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_DisableAllOtherPassengerLogEntries, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'AirlockWI_C_DisableAllOtherPassengerLogEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.SetupPassengerLogDisplay
// 0x0080 (0x0080 - 0x0000)
struct AirlockWI_C_SetupPassengerLogDisplay final
{
public:
	EPassengerLogFactType                         FactType;                                          // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPlayerData>                    Characters_0;                                      // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         OptionalDuration;                                  // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CharacterWithLog;                                  // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IICharacterSCT_C>      K2Node_DynamicCast_AsICharacter_SCT;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerNameBPI_Name;                    // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0018)()
};
static_assert(alignof(AirlockWI_C_SetupPassengerLogDisplay) == 0x000008, "Wrong alignment on AirlockWI_C_SetupPassengerLogDisplay");
static_assert(sizeof(AirlockWI_C_SetupPassengerLogDisplay) == 0x000080, "Wrong size on AirlockWI_C_SetupPassengerLogDisplay");
static_assert(offsetof(AirlockWI_C_SetupPassengerLogDisplay, FactType) == 0x000000, "Member 'AirlockWI_C_SetupPassengerLogDisplay::FactType' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupPassengerLogDisplay, Characters_0) == 0x000008, "Member 'AirlockWI_C_SetupPassengerLogDisplay::Characters_0' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupPassengerLogDisplay, OptionalDuration) == 0x000018, "Member 'AirlockWI_C_SetupPassengerLogDisplay::OptionalDuration' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupPassengerLogDisplay, CharacterWithLog) == 0x000020, "Member 'AirlockWI_C_SetupPassengerLogDisplay::CharacterWithLog' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupPassengerLogDisplay, K2Node_DynamicCast_AsICharacter_SCT) == 0x000028, "Member 'AirlockWI_C_SetupPassengerLogDisplay::K2Node_DynamicCast_AsICharacter_SCT' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupPassengerLogDisplay, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'AirlockWI_C_SetupPassengerLogDisplay::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupPassengerLogDisplay, CallFunc_GetPlayerNameBPI_Name) == 0x000040, "Member 'AirlockWI_C_SetupPassengerLogDisplay::CallFunc_GetPlayerNameBPI_Name' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupPassengerLogDisplay, CallFunc_PlayAnimation_ReturnValue) == 0x000050, "Member 'AirlockWI_C_SetupPassengerLogDisplay::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupPassengerLogDisplay, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'AirlockWI_C_SetupPassengerLogDisplay::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupPassengerLogDisplay, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'AirlockWI_C_SetupPassengerLogDisplay::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.SetupInterviewUI
// 0x0028 (0x0028 - 0x0000)
struct AirlockWI_C_SetupInterviewUI final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockWI_C_SetupInterviewUI) == 0x000008, "Wrong alignment on AirlockWI_C_SetupInterviewUI");
static_assert(sizeof(AirlockWI_C_SetupInterviewUI) == 0x000028, "Wrong size on AirlockWI_C_SetupInterviewUI");
static_assert(offsetof(AirlockWI_C_SetupInterviewUI, Character) == 0x000000, "Member 'AirlockWI_C_SetupInterviewUI::Character' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupInterviewUI, Duration) == 0x000008, "Member 'AirlockWI_C_SetupInterviewUI::Duration' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupInterviewUI, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x00000C, "Member 'AirlockWI_C_SetupInterviewUI::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupInterviewUI, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000010, "Member 'AirlockWI_C_SetupInterviewUI::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupInterviewUI, CallFunc_PlayAnimationForward_ReturnValue) == 0x000018, "Member 'AirlockWI_C_SetupInterviewUI::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupInterviewUI, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'AirlockWI_C_SetupInterviewUI::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.SetupDoomedScreen
// 0x0010 (0x0010 - 0x0000)
struct AirlockWI_C_SetupDoomedScreen final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockWI_C_SetupDoomedScreen) == 0x000008, "Wrong alignment on AirlockWI_C_SetupDoomedScreen");
static_assert(sizeof(AirlockWI_C_SetupDoomedScreen) == 0x000010, "Wrong size on AirlockWI_C_SetupDoomedScreen");
static_assert(offsetof(AirlockWI_C_SetupDoomedScreen, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'AirlockWI_C_SetupDoomedScreen::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupDoomedScreen, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000008, "Member 'AirlockWI_C_SetupDoomedScreen::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupDoomedScreen, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00000C, "Member 'AirlockWI_C_SetupDoomedScreen::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.GetTimeTillFade
// 0x0020 (0x0020 - 0x0000)
struct AirlockWI_C_GetTimeTillFade final
{
public:
	const class UWidgetAnimation*                 InAnimation;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Output_Get;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndTime;                                           // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockWI_C_GetTimeTillFade) == 0x000008, "Wrong alignment on AirlockWI_C_GetTimeTillFade");
static_assert(sizeof(AirlockWI_C_GetTimeTillFade) == 0x000020, "Wrong size on AirlockWI_C_GetTimeTillFade");
static_assert(offsetof(AirlockWI_C_GetTimeTillFade, InAnimation) == 0x000000, "Member 'AirlockWI_C_GetTimeTillFade::InAnimation' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_GetTimeTillFade, Output_Get) == 0x000008, "Member 'AirlockWI_C_GetTimeTillFade::Output_Get' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_GetTimeTillFade, EndTime) == 0x00000C, "Member 'AirlockWI_C_GetTimeTillFade::EndTime' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_GetTimeTillFade, CallFunc_GetEndTime_ReturnValue) == 0x000010, "Member 'AirlockWI_C_GetTimeTillFade::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_GetTimeTillFade, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000014, "Member 'AirlockWI_C_GetTimeTillFade::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_GetTimeTillFade, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'AirlockWI_C_GetTimeTillFade::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.CreateCountdown
// 0x0050 (0x0050 - 0x0000)
struct AirlockWI_C_CreateCountdown final
{
public:
	int32                                         Countdown_0;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_TimeSecondsToString_ReturnValue;          // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_LeftChop_ReturnValue;                     // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0018)()
};
static_assert(alignof(AirlockWI_C_CreateCountdown) == 0x000008, "Wrong alignment on AirlockWI_C_CreateCountdown");
static_assert(sizeof(AirlockWI_C_CreateCountdown) == 0x000050, "Wrong size on AirlockWI_C_CreateCountdown");
static_assert(offsetof(AirlockWI_C_CreateCountdown, Countdown_0) == 0x000000, "Member 'AirlockWI_C_CreateCountdown::Countdown_0' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_CreateCountdown, Player) == 0x000008, "Member 'AirlockWI_C_CreateCountdown::Player' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_CreateCountdown, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'AirlockWI_C_CreateCountdown::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_CreateCountdown, CallFunc_TimeSecondsToString_ReturnValue) == 0x000018, "Member 'AirlockWI_C_CreateCountdown::CallFunc_TimeSecondsToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_CreateCountdown, CallFunc_LeftChop_ReturnValue) == 0x000028, "Member 'AirlockWI_C_CreateCountdown::CallFunc_LeftChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_CreateCountdown, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'AirlockWI_C_CreateCountdown::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.SetupTrustVote
// 0x0018 (0x0018 - 0x0000)
struct AirlockWI_C_SetupTrustVote final
{
public:
	class AActor*                                 AirlockActor_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Countdown_0;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ExpectedVotes;                                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockWI_C_SetupTrustVote) == 0x000008, "Wrong alignment on AirlockWI_C_SetupTrustVote");
static_assert(sizeof(AirlockWI_C_SetupTrustVote) == 0x000018, "Wrong size on AirlockWI_C_SetupTrustVote");
static_assert(offsetof(AirlockWI_C_SetupTrustVote, AirlockActor_0) == 0x000000, "Member 'AirlockWI_C_SetupTrustVote::AirlockActor_0' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupTrustVote, Countdown_0) == 0x000008, "Member 'AirlockWI_C_SetupTrustVote::Countdown_0' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupTrustVote, ExpectedVotes) == 0x00000C, "Member 'AirlockWI_C_SetupTrustVote::ExpectedVotes' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupTrustVote, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'AirlockWI_C_SetupTrustVote::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.AddVoteGivenEntry
// 0x0038 (0x0038 - 0x0000)
struct AirlockWI_C_AddVoteGivenEntry final
{
public:
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVoteGivenWI_C*                         CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockWI_C_AddVoteGivenEntry) == 0x000008, "Wrong alignment on AirlockWI_C_AddVoteGivenEntry");
static_assert(sizeof(AirlockWI_C_AddVoteGivenEntry) == 0x000038, "Wrong size on AirlockWI_C_AddVoteGivenEntry");
static_assert(offsetof(AirlockWI_C_AddVoteGivenEntry, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000000, "Member 'AirlockWI_C_AddVoteGivenEntry::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_AddVoteGivenEntry, K2Node_MakeStruct_Margin) == 0x000004, "Member 'AirlockWI_C_AddVoteGivenEntry::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_AddVoteGivenEntry, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'AirlockWI_C_AddVoteGivenEntry::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_AddVoteGivenEntry, CallFunc_Create_ReturnValue) == 0x000020, "Member 'AirlockWI_C_AddVoteGivenEntry::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_AddVoteGivenEntry, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000028, "Member 'AirlockWI_C_AddVoteGivenEntry::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_AddVoteGivenEntry, CallFunc_Array_Add_ReturnValue) == 0x000030, "Member 'AirlockWI_C_AddVoteGivenEntry::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.CreateVoteTracker
// 0x0014 (0x0014 - 0x0000)
struct AirlockWI_C_CreateVoteTracker final
{
public:
	int32                                         VotesExpected;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockWI_C_CreateVoteTracker) == 0x000004, "Wrong alignment on AirlockWI_C_CreateVoteTracker");
static_assert(sizeof(AirlockWI_C_CreateVoteTracker) == 0x000014, "Wrong size on AirlockWI_C_CreateVoteTracker");
static_assert(offsetof(AirlockWI_C_CreateVoteTracker, VotesExpected) == 0x000000, "Member 'AirlockWI_C_CreateVoteTracker::VotesExpected' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_CreateVoteTracker, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'AirlockWI_C_CreateVoteTracker::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_CreateVoteTracker, Temp_int_Variable) == 0x000008, "Member 'AirlockWI_C_CreateVoteTracker::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_CreateVoteTracker, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'AirlockWI_C_CreateVoteTracker::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_CreateVoteTracker, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'AirlockWI_C_CreateVoteTracker::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.UpdateVoteTracker
// 0x0018 (0x0018 - 0x0000)
struct AirlockWI_C_UpdateVoteTracker final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVoteGivenWI_C*                         CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockWI_C_UpdateVoteTracker) == 0x000008, "Wrong alignment on AirlockWI_C_UpdateVoteTracker");
static_assert(sizeof(AirlockWI_C_UpdateVoteTracker) == 0x000018, "Wrong size on AirlockWI_C_UpdateVoteTracker");
static_assert(offsetof(AirlockWI_C_UpdateVoteTracker, Temp_int_Variable) == 0x000000, "Member 'AirlockWI_C_UpdateVoteTracker::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_UpdateVoteTracker, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'AirlockWI_C_UpdateVoteTracker::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_UpdateVoteTracker, CallFunc_Array_Get_Item) == 0x000008, "Member 'AirlockWI_C_UpdateVoteTracker::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_UpdateVoteTracker, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'AirlockWI_C_UpdateVoteTracker::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.SetupInfoUI
// 0x0020 (0x0020 - 0x0000)
struct AirlockWI_C_SetupInfoUI final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockWI_C_SetupInfoUI) == 0x000008, "Wrong alignment on AirlockWI_C_SetupInfoUI");
static_assert(sizeof(AirlockWI_C_SetupInfoUI) == 0x000020, "Wrong size on AirlockWI_C_SetupInfoUI");
static_assert(offsetof(AirlockWI_C_SetupInfoUI, InText) == 0x000000, "Member 'AirlockWI_C_SetupInfoUI::InText' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_SetupInfoUI, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'AirlockWI_C_SetupInfoUI::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.ChangeWidgetSwitcher
// 0x001C (0x001C - 0x0000)
struct AirlockWI_C_ChangeWidgetSwitcher final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AirlockWI_C_ChangeWidgetSwitcher) == 0x000004, "Wrong alignment on AirlockWI_C_ChangeWidgetSwitcher");
static_assert(sizeof(AirlockWI_C_ChangeWidgetSwitcher) == 0x00001C, "Wrong size on AirlockWI_C_ChangeWidgetSwitcher");
static_assert(offsetof(AirlockWI_C_ChangeWidgetSwitcher, Index_0) == 0x000000, "Member 'AirlockWI_C_ChangeWidgetSwitcher::Index_0' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ChangeWidgetSwitcher, Temp_bool_Variable) == 0x000004, "Member 'AirlockWI_C_ChangeWidgetSwitcher::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ChangeWidgetSwitcher, K2Node_SwitchInteger_CmpSuccess) == 0x000005, "Member 'AirlockWI_C_ChangeWidgetSwitcher::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ChangeWidgetSwitcher, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000006, "Member 'AirlockWI_C_ChangeWidgetSwitcher::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ChangeWidgetSwitcher, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000007, "Member 'AirlockWI_C_ChangeWidgetSwitcher::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ChangeWidgetSwitcher, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000008, "Member 'AirlockWI_C_ChangeWidgetSwitcher::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ChangeWidgetSwitcher, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000009, "Member 'AirlockWI_C_ChangeWidgetSwitcher::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ChangeWidgetSwitcher, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'AirlockWI_C_ChangeWidgetSwitcher::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ChangeWidgetSwitcher, CallFunc_BooleanOR_ReturnValue_1) == 0x00000B, "Member 'AirlockWI_C_ChangeWidgetSwitcher::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ChangeWidgetSwitcher, CallFunc_BooleanOR_ReturnValue_2) == 0x00000C, "Member 'AirlockWI_C_ChangeWidgetSwitcher::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ChangeWidgetSwitcher, CallFunc_BooleanOR_ReturnValue_3) == 0x00000D, "Member 'AirlockWI_C_ChangeWidgetSwitcher::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ChangeWidgetSwitcher, CallFunc_BooleanOR_ReturnValue_4) == 0x00000E, "Member 'AirlockWI_C_ChangeWidgetSwitcher::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ChangeWidgetSwitcher, Temp_byte_Variable) == 0x00000F, "Member 'AirlockWI_C_ChangeWidgetSwitcher::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ChangeWidgetSwitcher, Temp_byte_Variable_1) == 0x000010, "Member 'AirlockWI_C_ChangeWidgetSwitcher::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ChangeWidgetSwitcher, Temp_bool_Variable_1) == 0x000011, "Member 'AirlockWI_C_ChangeWidgetSwitcher::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ChangeWidgetSwitcher, K2Node_Select_Default) == 0x000012, "Member 'AirlockWI_C_ChangeWidgetSwitcher::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ChangeWidgetSwitcher, Temp_byte_Variable_2) == 0x000013, "Member 'AirlockWI_C_ChangeWidgetSwitcher::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ChangeWidgetSwitcher, Temp_byte_Variable_3) == 0x000014, "Member 'AirlockWI_C_ChangeWidgetSwitcher::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ChangeWidgetSwitcher, Temp_bool_Variable_2) == 0x000015, "Member 'AirlockWI_C_ChangeWidgetSwitcher::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ChangeWidgetSwitcher, K2Node_Select_Default_1) == 0x000016, "Member 'AirlockWI_C_ChangeWidgetSwitcher::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ChangeWidgetSwitcher, Temp_byte_Variable_4) == 0x000017, "Member 'AirlockWI_C_ChangeWidgetSwitcher::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ChangeWidgetSwitcher, Temp_byte_Variable_5) == 0x000018, "Member 'AirlockWI_C_ChangeWidgetSwitcher::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_ChangeWidgetSwitcher, K2Node_Select_Default_2) == 0x000019, "Member 'AirlockWI_C_ChangeWidgetSwitcher::K2Node_Select_Default_2' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.UpdateDisplay
// 0x0040 (0x0040 - 0x0000)
struct AirlockWI_C_UpdateDisplay final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockWI_C_UpdateDisplay) == 0x000008, "Wrong alignment on AirlockWI_C_UpdateDisplay");
static_assert(sizeof(AirlockWI_C_UpdateDisplay) == 0x000040, "Wrong size on AirlockWI_C_UpdateDisplay");
static_assert(offsetof(AirlockWI_C_UpdateDisplay, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'AirlockWI_C_UpdateDisplay::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_UpdateDisplay, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'AirlockWI_C_UpdateDisplay::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_UpdateDisplay, Temp_int_Array_Index_Variable) == 0x000008, "Member 'AirlockWI_C_UpdateDisplay::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_UpdateDisplay, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'AirlockWI_C_UpdateDisplay::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_UpdateDisplay, CallFunc_Array_Get_Item) == 0x000010, "Member 'AirlockWI_C_UpdateDisplay::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_UpdateDisplay, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'AirlockWI_C_UpdateDisplay::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_UpdateDisplay, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'AirlockWI_C_UpdateDisplay::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_UpdateDisplay, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'AirlockWI_C_UpdateDisplay::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_UpdateDisplay, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'AirlockWI_C_UpdateDisplay::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_UpdateDisplay, K2Node_SwitchInteger_CmpSuccess) == 0x000028, "Member 'AirlockWI_C_UpdateDisplay::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_UpdateDisplay, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'AirlockWI_C_UpdateDisplay::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_UpdateDisplay, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'AirlockWI_C_UpdateDisplay::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_UpdateDisplay, CallFunc_Less_IntInt_ReturnValue_1) == 0x00003C, "Member 'AirlockWI_C_UpdateDisplay::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function AirlockWI.AirlockWI_C.RestoreNonInterview
// 0x0010 (0x0010 - 0x0000)
struct AirlockWI_C_RestoreNonInterview final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AirlockWI_C_RestoreNonInterview) == 0x000008, "Wrong alignment on AirlockWI_C_RestoreNonInterview");
static_assert(sizeof(AirlockWI_C_RestoreNonInterview) == 0x000010, "Wrong size on AirlockWI_C_RestoreNonInterview");
static_assert(offsetof(AirlockWI_C_RestoreNonInterview, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000000, "Member 'AirlockWI_C_RestoreNonInterview::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_RestoreNonInterview, CallFunc_GetRenderOpacity_ReturnValue) == 0x000008, "Member 'AirlockWI_C_RestoreNonInterview::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(AirlockWI_C_RestoreNonInterview, CallFunc_Less_FloatFloat_ReturnValue) == 0x00000C, "Member 'AirlockWI_C_RestoreNonInterview::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

}

