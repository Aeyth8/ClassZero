#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ClientEntryPCBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_StartScreenTabs_structs.hpp"
#include "FCT_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ClientEntryPCBP.ClientEntryPCBP_C
// 0x0138 (0x06F0 - 0x05B8)
class AClientEntryPCBP_C final : public AClientEntryPC
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UClearCustomGameSettingsComponent*      ClearCustomGameSettings;                           // 0x05C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMenuCamController_C*                   MenuCamController;                                 // 0x05C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class Ubp_wi_FindGame_C*                      FindGameTAB;                                       // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Ubp_wi_EnterAvatarName_C*               AvatarName;                                        // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnGRoundLogin;                                     // 0x05E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             ShowGuestMenu;                                     // 0x05F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UFCTGameInstanceBP_C*                   GameInstance;                                      // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Ubp_wi_StartScreen_C*                   StartSCreen;                                       // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            InitialLoadWidget;                                 // 0x0610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNewUI;                                            // 0x0618(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_619[0x7];                                      // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCM_MainMenuWI_C*                       CM_MainMenu;                                       // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsConsoleInviteEventSet;                           // 0x0628(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_629[0x7];                                      // 0x0629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnRightShoulderPressed;                            // 0x0630(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnLeftShoulderPressed;                             // 0x0640(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnRightFaceButtonPressed;                          // 0x0650(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnRightTriggerPressed;                             // 0x0660(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnLeftTriggerPressed;                              // 0x0670(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnSpecialRightPressed;                             // 0x0680(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnLeftFaceButtonPressed;                           // 0x0690(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnRightFaceButtonReleased;                         // 0x06A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnLeftFaceButtonReleased;                          // 0x06B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnSpecialLeftPressed;                              // 0x06C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnTopFaceButtonPressed;                            // 0x06D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnBottomFaceButtonPressed;                         // 0x06E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnGRoundLogin__DelegateSignature();
	void ShowGuestMenu__DelegateSignature();
	void OnRightShoulderPressed__DelegateSignature();
	void OnLeftShoulderPressed__DelegateSignature();
	void OnRightFaceButtonPressed__DelegateSignature();
	void OnRightTriggerPressed__DelegateSignature();
	void OnLeftTriggerPressed__DelegateSignature();
	void OnSpecialRightPressed__DelegateSignature();
	void OnLeftFaceButtonPressed__DelegateSignature();
	void OnRightFaceButtonReleased__DelegateSignature();
	void OnLeftFaceButtonReleased__DelegateSignature();
	void OnSpecialLeftPressed__DelegateSignature();
	void OnTopFaceButtonPressed__DelegateSignature();
	void OnBottomFaceButtonPressed__DelegateSignature();
	void ExecuteUbergraph_ClientEntryPCBP(int32 EntryPoint);
	void OnUpdateXboxCrossPlaySetting();
	void OnXboxUserLogOut();
	void OnSetupXboxUserLogOutEvent();
	void K2_OnApplicationResume();
	void OnConsoleLaunchMultiplayerIntentAtLaunch();
	void OnConsoleLaunchIntentAtLaunch();
	void OnConsoleLaunchMultiplayerIntent();
	void OnConsoleLaunchIntent();
	void OnRemoveConsoleInviteAcceptedAtLaunchEvent();
	void OnSetConsoleInviteAcceptedAtLaunchEvent();
	void OnConsoleInviteAcceptedAtLaunch();
	void OnSetConsoleInviteAcceptedEvent();
	void OnConsoleInviteAccepted();
	void OnInitialLoadComplete();
	void Test_Get_Avatar_Name();
	void ShowGuestMenu_Event();
	void ShowPatchNotes();
	void ShowMainMenu();
	void ReceiveBeginPlay();
	void OnSuccess_14D593504A1CBE5686FA6E8D556EF916(int32 Code, const class FString& Message);
	void OnFail_14D593504A1CBE5686FA6E8D556EF916(int32 Code, const class FString& Message);
	void InpActEvt_Gamepad_FaceButton_Bottom_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_Gamepad_FaceButton_Top_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void InpActEvt_Gamepad_FaceButton_Left_K2Node_InputKeyEvent_3(const struct FKey& Key);
	void InpActEvt_Gamepad_FaceButton_Left_K2Node_InputKeyEvent_4(const struct FKey& Key);
	void InpActEvt_Gamepad_Special_Right_K2Node_InputKeyEvent_5(const struct FKey& Key);
	void InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_6(const struct FKey& Key);
	void InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_7(const struct FKey& Key);
	void InpActEvt_Gamepad_FaceButton_Right_K2Node_InputKeyEvent_8(const struct FKey& Key);
	void InpActEvt_Gamepad_FaceButton_Right_K2Node_InputKeyEvent_9(const struct FKey& Key);
	void InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_10(const struct FKey& Key);
	void InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_11(const struct FKey& Key);
	void InpActEvt_AnyKey_K2Node_InputKeyEvent_12(const struct FKey& Key);
	void OnSuccess_4BFDBE944E82291A0D039093523502A0(const class FString& Result, int32 Code);
	void OnError_4BFDBE944E82291A0D039093523502A0(const class FString& Result, int32 Code);
	void OnSuccess_0B283603447D3C4D31F1E79B74F6F95F();
	void OnFail_0B283603447D3C4D31F1E79B74F6F95F();
	void DebugLog(bool Success, const class FString& Node, const class FString& Error_Message);
	void InitializeStartingMenu();
	void JoinGame(const class FString& Ip, int32 Port, const class FString& PlayerSessionId);
	void GetIntroComplete(bool* IntroComplete);
	void SetGameInstanceReference();
	void Set_Default_Mouse_Position();
	void SetupConsoleInviteEvent();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ClientEntryPCBP_C">();
	}
	static class AClientEntryPCBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AClientEntryPCBP_C>();
	}
};
static_assert(alignof(AClientEntryPCBP_C) == 0x000008, "Wrong alignment on AClientEntryPCBP_C");
static_assert(sizeof(AClientEntryPCBP_C) == 0x0006F0, "Wrong size on AClientEntryPCBP_C");
static_assert(offsetof(AClientEntryPCBP_C, UberGraphFrame) == 0x0005B8, "Member 'AClientEntryPCBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AClientEntryPCBP_C, ClearCustomGameSettings) == 0x0005C0, "Member 'AClientEntryPCBP_C::ClearCustomGameSettings' has a wrong offset!");
static_assert(offsetof(AClientEntryPCBP_C, MenuCamController) == 0x0005C8, "Member 'AClientEntryPCBP_C::MenuCamController' has a wrong offset!");
static_assert(offsetof(AClientEntryPCBP_C, FindGameTAB) == 0x0005D0, "Member 'AClientEntryPCBP_C::FindGameTAB' has a wrong offset!");
static_assert(offsetof(AClientEntryPCBP_C, AvatarName) == 0x0005D8, "Member 'AClientEntryPCBP_C::AvatarName' has a wrong offset!");
static_assert(offsetof(AClientEntryPCBP_C, OnGRoundLogin) == 0x0005E0, "Member 'AClientEntryPCBP_C::OnGRoundLogin' has a wrong offset!");
static_assert(offsetof(AClientEntryPCBP_C, ShowGuestMenu) == 0x0005F0, "Member 'AClientEntryPCBP_C::ShowGuestMenu' has a wrong offset!");
static_assert(offsetof(AClientEntryPCBP_C, GameInstance) == 0x000600, "Member 'AClientEntryPCBP_C::GameInstance' has a wrong offset!");
static_assert(offsetof(AClientEntryPCBP_C, StartSCreen) == 0x000608, "Member 'AClientEntryPCBP_C::StartSCreen' has a wrong offset!");
static_assert(offsetof(AClientEntryPCBP_C, InitialLoadWidget) == 0x000610, "Member 'AClientEntryPCBP_C::InitialLoadWidget' has a wrong offset!");
static_assert(offsetof(AClientEntryPCBP_C, bNewUI) == 0x000618, "Member 'AClientEntryPCBP_C::bNewUI' has a wrong offset!");
static_assert(offsetof(AClientEntryPCBP_C, CM_MainMenu) == 0x000620, "Member 'AClientEntryPCBP_C::CM_MainMenu' has a wrong offset!");
static_assert(offsetof(AClientEntryPCBP_C, IsConsoleInviteEventSet) == 0x000628, "Member 'AClientEntryPCBP_C::IsConsoleInviteEventSet' has a wrong offset!");
static_assert(offsetof(AClientEntryPCBP_C, OnRightShoulderPressed) == 0x000630, "Member 'AClientEntryPCBP_C::OnRightShoulderPressed' has a wrong offset!");
static_assert(offsetof(AClientEntryPCBP_C, OnLeftShoulderPressed) == 0x000640, "Member 'AClientEntryPCBP_C::OnLeftShoulderPressed' has a wrong offset!");
static_assert(offsetof(AClientEntryPCBP_C, OnRightFaceButtonPressed) == 0x000650, "Member 'AClientEntryPCBP_C::OnRightFaceButtonPressed' has a wrong offset!");
static_assert(offsetof(AClientEntryPCBP_C, OnRightTriggerPressed) == 0x000660, "Member 'AClientEntryPCBP_C::OnRightTriggerPressed' has a wrong offset!");
static_assert(offsetof(AClientEntryPCBP_C, OnLeftTriggerPressed) == 0x000670, "Member 'AClientEntryPCBP_C::OnLeftTriggerPressed' has a wrong offset!");
static_assert(offsetof(AClientEntryPCBP_C, OnSpecialRightPressed) == 0x000680, "Member 'AClientEntryPCBP_C::OnSpecialRightPressed' has a wrong offset!");
static_assert(offsetof(AClientEntryPCBP_C, OnLeftFaceButtonPressed) == 0x000690, "Member 'AClientEntryPCBP_C::OnLeftFaceButtonPressed' has a wrong offset!");
static_assert(offsetof(AClientEntryPCBP_C, OnRightFaceButtonReleased) == 0x0006A0, "Member 'AClientEntryPCBP_C::OnRightFaceButtonReleased' has a wrong offset!");
static_assert(offsetof(AClientEntryPCBP_C, OnLeftFaceButtonReleased) == 0x0006B0, "Member 'AClientEntryPCBP_C::OnLeftFaceButtonReleased' has a wrong offset!");
static_assert(offsetof(AClientEntryPCBP_C, OnSpecialLeftPressed) == 0x0006C0, "Member 'AClientEntryPCBP_C::OnSpecialLeftPressed' has a wrong offset!");
static_assert(offsetof(AClientEntryPCBP_C, OnTopFaceButtonPressed) == 0x0006D0, "Member 'AClientEntryPCBP_C::OnTopFaceButtonPressed' has a wrong offset!");
static_assert(offsetof(AClientEntryPCBP_C, OnBottomFaceButtonPressed) == 0x0006E0, "Member 'AClientEntryPCBP_C::OnBottomFaceButtonPressed' has a wrong offset!");

}

