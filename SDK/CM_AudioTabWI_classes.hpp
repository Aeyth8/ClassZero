#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CM_AudioTabWI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CM_SettingsTab_Base_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass CM_AudioTabWI.CM_AudioTabWI_C
// 0x0038 (0x02A0 - 0x0268)
class UCM_AudioTabWI_C final : public UCM_SettingsTab_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_CM_AudioTabWI_C;                    // 0x0268(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UCM_TabTitle_C*                         CM_TabTitle;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_MasterVolume;                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_MusicVolume;                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOptionsSliderWI_C*                     MasterVolumeSlider;                                // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOptionsSliderWI_C*                     MusicVolumeSlider;                                 // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_AudioTab;                              // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_CM_AudioTabWI(int32 EntryPoint);
	void BndEvt__CM_AudioTabWI_MusicVolumeSlider_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature(float Value);
	void BndEvt__CM_AudioTabWI_MasterVolumeSlider_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature(float Value);
	void Set_Gamepad_Focus();
	void Update_Music_Volume();
	void Update_Master_Volume();
	void BndEvt__CM_AudioTabWI_MusicVolumeSlider_1_K2Node_ComponentBoundEvent_1_OnMouseCaptureEnd__DelegateSignature();
	void BndEvt__CM_AudioTabWI_MasterVolumeSlider_K2Node_ComponentBoundEvent_0_OnMouseCaptureEnd__DelegateSignature();
	void Update_Values();
	void UpdateAndSaveMasterRTPC(float Value, class Ubp_SpecialOptionsSave_C* SpecialOptions);
	void UpdateAndSaveMusicRTPC(float Value, class Ubp_SpecialOptionsSave_C* SpecialOptions);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CM_AudioTabWI_C">();
	}
	static class UCM_AudioTabWI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCM_AudioTabWI_C>();
	}
};
static_assert(alignof(UCM_AudioTabWI_C) == 0x000008, "Wrong alignment on UCM_AudioTabWI_C");
static_assert(sizeof(UCM_AudioTabWI_C) == 0x0002A0, "Wrong size on UCM_AudioTabWI_C");
static_assert(offsetof(UCM_AudioTabWI_C, UberGraphFrame_CM_AudioTabWI_C) == 0x000268, "Member 'UCM_AudioTabWI_C::UberGraphFrame_CM_AudioTabWI_C' has a wrong offset!");
static_assert(offsetof(UCM_AudioTabWI_C, CM_TabTitle) == 0x000270, "Member 'UCM_AudioTabWI_C::CM_TabTitle' has a wrong offset!");
static_assert(offsetof(UCM_AudioTabWI_C, HorizontalBox_MasterVolume) == 0x000278, "Member 'UCM_AudioTabWI_C::HorizontalBox_MasterVolume' has a wrong offset!");
static_assert(offsetof(UCM_AudioTabWI_C, HorizontalBox_MusicVolume) == 0x000280, "Member 'UCM_AudioTabWI_C::HorizontalBox_MusicVolume' has a wrong offset!");
static_assert(offsetof(UCM_AudioTabWI_C, MasterVolumeSlider) == 0x000288, "Member 'UCM_AudioTabWI_C::MasterVolumeSlider' has a wrong offset!");
static_assert(offsetof(UCM_AudioTabWI_C, MusicVolumeSlider) == 0x000290, "Member 'UCM_AudioTabWI_C::MusicVolumeSlider' has a wrong offset!");
static_assert(offsetof(UCM_AudioTabWI_C, VerticalBox_AudioTab) == 0x000298, "Member 'UCM_AudioTabWI_C::VerticalBox_AudioTab' has a wrong offset!");

}

