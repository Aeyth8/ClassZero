#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: bp_wi_VotingBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_AirLockVotes_structs.hpp"
#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function bp_wi_VotingBox.bp_wi_VotingBox_C.OnVoteCast__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct bp_wi_VotingBox_C_OnVoteCast__DelegateSignature final
{
public:
	int32                                         VotingOptionIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(bp_wi_VotingBox_C_OnVoteCast__DelegateSignature) == 0x000004, "Wrong alignment on bp_wi_VotingBox_C_OnVoteCast__DelegateSignature");
static_assert(sizeof(bp_wi_VotingBox_C_OnVoteCast__DelegateSignature) == 0x000004, "Wrong size on bp_wi_VotingBox_C_OnVoteCast__DelegateSignature");
static_assert(offsetof(bp_wi_VotingBox_C_OnVoteCast__DelegateSignature, VotingOptionIndex) == 0x000000, "Member 'bp_wi_VotingBox_C_OnVoteCast__DelegateSignature::VotingOptionIndex' has a wrong offset!");

// Function bp_wi_VotingBox.bp_wi_VotingBox_C.ExecuteUbergraph_bp_wi_VotingBox
// 0x01A0 (0x01A0 - 0x0000)
struct bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(int32 VotingOptionIndex)>      K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_New_Headline_1;                 // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_CustomEvent_New_Voting_Entries;             // 0x0048(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_CustomEvent_Play_Pop_Up_Sound;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_AirLockVotes                                K2Node_CustomEvent_E_AirLockVotes;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTextureRenderTarget2D*>         K2Node_CustomEvent_PlayerImages;                   // 0x0060(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_CustomEvent_OneShouldDie;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0078(0x0018)()
	class FText                                   K2Node_CustomEvent_New_Headline;                   // 0x0090(0x0018)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_CustomEvent_Only_One_Should_Die;            // 0x00C0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Stage;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class Ubpc_ac_ModalWindowManager_C*           CallFunc_Get_Modall_Window_Manager_ModalWindowManagerComponent; // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_VotingOptionIndex;              // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTextureRenderTarget2D*>         K2Node_MakeArray_Array_1;                          // 0x00E0(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00F8(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0110(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_AsTimespan_Timespan_ReturnValue;          // 0x0118(0x0018)()
	float                                         CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue_1;               // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_AsTimespan_Timespan_ReturnValue_1;        // 0x0140(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0170(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class Ubp_wi_VotingEntryOption_C*             K2Node_DynamicCast_AsBp_Wi_Voting_Entry_Option;    // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19A[0x2];                                      // 0x019A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox) == 0x000008, "Wrong alignment on bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox");
static_assert(sizeof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox) == 0x0001A0, "Wrong size on bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, EntryPoint) == 0x000000, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, Temp_struct_Variable) == 0x000008, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000028, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, CallFunc_GetChildrenCount_ReturnValue) == 0x000030, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, K2Node_CustomEvent_New_Headline_1) == 0x000038, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::K2Node_CustomEvent_New_Headline_1' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, K2Node_CustomEvent_New_Voting_Entries) == 0x000048, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::K2Node_CustomEvent_New_Voting_Entries' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, K2Node_CustomEvent_Play_Pop_Up_Sound) == 0x000058, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::K2Node_CustomEvent_Play_Pop_Up_Sound' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, K2Node_CustomEvent_E_AirLockVotes) == 0x000059, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::K2Node_CustomEvent_E_AirLockVotes' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, K2Node_CustomEvent_PlayerImages) == 0x000060, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::K2Node_CustomEvent_PlayerImages' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, K2Node_CustomEvent_OneShouldDie) == 0x000070, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::K2Node_CustomEvent_OneShouldDie' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, CallFunc_Subtract_IntInt_ReturnValue) == 0x000074, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, CallFunc_Conv_StringToText_ReturnValue) == 0x000078, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, K2Node_CustomEvent_New_Headline) == 0x000090, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::K2Node_CustomEvent_New_Headline' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, K2Node_Event_IsDesignTime) == 0x0000A8, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, K2Node_MakeArray_Array) == 0x0000B0, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, K2Node_CustomEvent_Only_One_Should_Die) == 0x0000C0, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::K2Node_CustomEvent_Only_One_Should_Die' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, K2Node_CustomEvent_Stage) == 0x0000C4, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::K2Node_CustomEvent_Stage' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, K2Node_SwitchInteger_CmpSuccess) == 0x0000C8, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, CallFunc_Get_Modall_Window_Manager_ModalWindowManagerComponent) == 0x0000D0, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::CallFunc_Get_Modall_Window_Manager_ModalWindowManagerComponent' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, K2Node_CustomEvent_VotingOptionIndex) == 0x0000D8, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::K2Node_CustomEvent_VotingOptionIndex' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, K2Node_SwitchEnum_CmpSuccess) == 0x0000DC, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, K2Node_MakeArray_Array_1) == 0x0000E0, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, CallFunc_GetTimeSeconds_ReturnValue) == 0x0000F0, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, CallFunc_FTrunc_ReturnValue) == 0x0000F4, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000F8, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, CallFunc_MakeTimespan_ReturnValue) == 0x000108, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000110, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, CallFunc_AsTimespan_Timespan_ReturnValue) == 0x000118, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::CallFunc_AsTimespan_Timespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x000130, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, CallFunc_FTrunc_ReturnValue_1) == 0x000134, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, CallFunc_MakeTimespan_ReturnValue_1) == 0x000138, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::CallFunc_MakeTimespan_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, CallFunc_AsTimespan_Timespan_ReturnValue_1) == 0x000140, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::CallFunc_AsTimespan_Timespan_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, CallFunc_PlayAnimation_ReturnValue) == 0x000158, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, CallFunc_PlayAnimation_ReturnValue_1) == 0x000160, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, CallFunc_PlayAnimation_ReturnValue_2) == 0x000168, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, Temp_delegate_Variable) == 0x000170, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, CallFunc_PostEvent_ReturnValue) == 0x000180, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, Temp_int_Variable) == 0x000184, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, CallFunc_GetChildAt_ReturnValue) == 0x000188, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, K2Node_DynamicCast_AsBp_Wi_Voting_Entry_Option) == 0x000190, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::K2Node_DynamicCast_AsBp_Wi_Voting_Entry_Option' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, K2Node_DynamicCast_bSuccess) == 0x000198, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000199, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox, CallFunc_Add_IntInt_ReturnValue) == 0x00019C, "Member 'bp_wi_VotingBox_C_ExecuteUbergraph_bp_wi_VotingBox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function bp_wi_VotingBox.bp_wi_VotingBox_C.HandleSubVotingButtonClicked
// 0x0004 (0x0004 - 0x0000)
struct bp_wi_VotingBox_C_HandleSubVotingButtonClicked final
{
public:
	int32                                         VotingOptionIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(bp_wi_VotingBox_C_HandleSubVotingButtonClicked) == 0x000004, "Wrong alignment on bp_wi_VotingBox_C_HandleSubVotingButtonClicked");
static_assert(sizeof(bp_wi_VotingBox_C_HandleSubVotingButtonClicked) == 0x000004, "Wrong size on bp_wi_VotingBox_C_HandleSubVotingButtonClicked");
static_assert(offsetof(bp_wi_VotingBox_C_HandleSubVotingButtonClicked, VotingOptionIndex) == 0x000000, "Member 'bp_wi_VotingBox_C_HandleSubVotingButtonClicked::VotingOptionIndex' has a wrong offset!");

// Function bp_wi_VotingBox.bp_wi_VotingBox_C.Set Stage
// 0x0004 (0x0004 - 0x0000)
struct bp_wi_VotingBox_C_Set_Stage final
{
public:
	int32                                         Stage;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(bp_wi_VotingBox_C_Set_Stage) == 0x000004, "Wrong alignment on bp_wi_VotingBox_C_Set_Stage");
static_assert(sizeof(bp_wi_VotingBox_C_Set_Stage) == 0x000004, "Wrong size on bp_wi_VotingBox_C_Set_Stage");
static_assert(offsetof(bp_wi_VotingBox_C_Set_Stage, Stage) == 0x000000, "Member 'bp_wi_VotingBox_C_Set_Stage::Stage' has a wrong offset!");

// Function bp_wi_VotingBox.bp_wi_VotingBox_C.State_Who Should Die
// 0x0001 (0x0001 - 0x0000)
struct bp_wi_VotingBox_C_State_Who_Should_Die final
{
public:
	bool                                          Only_One_Should_Die;                               // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(bp_wi_VotingBox_C_State_Who_Should_Die) == 0x000001, "Wrong alignment on bp_wi_VotingBox_C_State_Who_Should_Die");
static_assert(sizeof(bp_wi_VotingBox_C_State_Who_Should_Die) == 0x000001, "Wrong size on bp_wi_VotingBox_C_State_Who_Should_Die");
static_assert(offsetof(bp_wi_VotingBox_C_State_Who_Should_Die, Only_One_Should_Die) == 0x000000, "Member 'bp_wi_VotingBox_C_State_Who_Should_Die::Only_One_Should_Die' has a wrong offset!");

// Function bp_wi_VotingBox.bp_wi_VotingBox_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct bp_wi_VotingBox_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(bp_wi_VotingBox_C_PreConstruct) == 0x000001, "Wrong alignment on bp_wi_VotingBox_C_PreConstruct");
static_assert(sizeof(bp_wi_VotingBox_C_PreConstruct) == 0x000001, "Wrong size on bp_wi_VotingBox_C_PreConstruct");
static_assert(offsetof(bp_wi_VotingBox_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'bp_wi_VotingBox_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function bp_wi_VotingBox.bp_wi_VotingBox_C.SetHeadline
// 0x0018 (0x0018 - 0x0000)
struct bp_wi_VotingBox_C_SetHeadline final
{
public:
	class FText                                   New_Headline;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(bp_wi_VotingBox_C_SetHeadline) == 0x000008, "Wrong alignment on bp_wi_VotingBox_C_SetHeadline");
static_assert(sizeof(bp_wi_VotingBox_C_SetHeadline) == 0x000018, "Wrong size on bp_wi_VotingBox_C_SetHeadline");
static_assert(offsetof(bp_wi_VotingBox_C_SetHeadline, New_Headline) == 0x000000, "Member 'bp_wi_VotingBox_C_SetHeadline::New_Headline' has a wrong offset!");

// Function bp_wi_VotingBox.bp_wi_VotingBox_C.Update
// 0x0040 (0x0040 - 0x0000)
struct bp_wi_VotingBox_C_Update final
{
public:
	class FString                                 New_Headline;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FName>                           New_Voting_Entries;                                // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Play_Pop_Up_Sound;                                 // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_AirLockVotes                                E_AirLockVotes;                                    // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTextureRenderTarget2D*>         PlayerImages;                                      // 0x0028(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          OneShouldDie;                                      // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(bp_wi_VotingBox_C_Update) == 0x000008, "Wrong alignment on bp_wi_VotingBox_C_Update");
static_assert(sizeof(bp_wi_VotingBox_C_Update) == 0x000040, "Wrong size on bp_wi_VotingBox_C_Update");
static_assert(offsetof(bp_wi_VotingBox_C_Update, New_Headline) == 0x000000, "Member 'bp_wi_VotingBox_C_Update::New_Headline' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_Update, New_Voting_Entries) == 0x000010, "Member 'bp_wi_VotingBox_C_Update::New_Voting_Entries' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_Update, Play_Pop_Up_Sound) == 0x000020, "Member 'bp_wi_VotingBox_C_Update::Play_Pop_Up_Sound' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_Update, E_AirLockVotes) == 0x000021, "Member 'bp_wi_VotingBox_C_Update::E_AirLockVotes' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_Update, PlayerImages) == 0x000028, "Member 'bp_wi_VotingBox_C_Update::PlayerImages' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_Update, OneShouldDie) == 0x000038, "Member 'bp_wi_VotingBox_C_Update::OneShouldDie' has a wrong offset!");

// Function bp_wi_VotingBox.bp_wi_VotingBox_C.Get_Time_Text
// 0x0018 (0x0018 - 0x0000)
struct bp_wi_VotingBox_C_Get_Time_Text final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(bp_wi_VotingBox_C_Get_Time_Text) == 0x000008, "Wrong alignment on bp_wi_VotingBox_C_Get_Time_Text");
static_assert(sizeof(bp_wi_VotingBox_C_Get_Time_Text) == 0x000018, "Wrong size on bp_wi_VotingBox_C_Get_Time_Text");
static_assert(offsetof(bp_wi_VotingBox_C_Get_Time_Text, ReturnValue) == 0x000000, "Member 'bp_wi_VotingBox_C_Get_Time_Text::ReturnValue' has a wrong offset!");

// Function bp_wi_VotingBox.bp_wi_VotingBox_C.SetCharacterNameBasedOnCainwoodCharWidget
// 0x0010 (0x0010 - 0x0000)
struct bp_wi_VotingBox_C_SetCharacterNameBasedOnCainwoodCharWidget final
{
public:
	TArray<class UUserWidget*>                    CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(bp_wi_VotingBox_C_SetCharacterNameBasedOnCainwoodCharWidget) == 0x000008, "Wrong alignment on bp_wi_VotingBox_C_SetCharacterNameBasedOnCainwoodCharWidget");
static_assert(sizeof(bp_wi_VotingBox_C_SetCharacterNameBasedOnCainwoodCharWidget) == 0x000010, "Wrong size on bp_wi_VotingBox_C_SetCharacterNameBasedOnCainwoodCharWidget");
static_assert(offsetof(bp_wi_VotingBox_C_SetCharacterNameBasedOnCainwoodCharWidget, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000000, "Member 'bp_wi_VotingBox_C_SetCharacterNameBasedOnCainwoodCharWidget::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");

// Function bp_wi_VotingBox.bp_wi_VotingBox_C.StartCountdown
// 0x0038 (0x0038 - 0x0000)
struct bp_wi_VotingBox_C_StartCountdown final
{
public:
	float                                         CountdownTime;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(bp_wi_VotingBox_C_StartCountdown) == 0x000008, "Wrong alignment on bp_wi_VotingBox_C_StartCountdown");
static_assert(sizeof(bp_wi_VotingBox_C_StartCountdown) == 0x000038, "Wrong size on bp_wi_VotingBox_C_StartCountdown");
static_assert(offsetof(bp_wi_VotingBox_C_StartCountdown, CountdownTime) == 0x000000, "Member 'bp_wi_VotingBox_C_StartCountdown::CountdownTime' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_StartCountdown, CallFunc_PostEventAtLocation_ReturnValue) == 0x000004, "Member 'bp_wi_VotingBox_C_StartCountdown::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_StartCountdown, CallFunc_Round_ReturnValue) == 0x000008, "Member 'bp_wi_VotingBox_C_StartCountdown::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_StartCountdown, CallFunc_K2_SetTimer_ReturnValue) == 0x000010, "Member 'bp_wi_VotingBox_C_StartCountdown::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_StartCountdown, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'bp_wi_VotingBox_C_StartCountdown::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_StartCountdown, CallFunc_K2_SetTimer_ReturnValue_1) == 0x000030, "Member 'bp_wi_VotingBox_C_StartCountdown::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");

// Function bp_wi_VotingBox.bp_wi_VotingBox_C.Countdown
// 0x0028 (0x0028 - 0x0000)
struct bp_wi_VotingBox_C_Countdown final
{
public:
	float                                         CallFunc_GetRTPCValue_Value;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERTPCValueType                                CallFunc_GetRTPCValue_OutputValueType;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
};
static_assert(alignof(bp_wi_VotingBox_C_Countdown) == 0x000008, "Wrong alignment on bp_wi_VotingBox_C_Countdown");
static_assert(sizeof(bp_wi_VotingBox_C_Countdown) == 0x000028, "Wrong size on bp_wi_VotingBox_C_Countdown");
static_assert(offsetof(bp_wi_VotingBox_C_Countdown, CallFunc_GetRTPCValue_Value) == 0x000000, "Member 'bp_wi_VotingBox_C_Countdown::CallFunc_GetRTPCValue_Value' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_Countdown, CallFunc_GetRTPCValue_OutputValueType) == 0x000004, "Member 'bp_wi_VotingBox_C_Countdown::CallFunc_GetRTPCValue_OutputValueType' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_Countdown, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x000008, "Member 'bp_wi_VotingBox_C_Countdown::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_Countdown, CallFunc_Round_ReturnValue) == 0x00000C, "Member 'bp_wi_VotingBox_C_Countdown::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_Countdown, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'bp_wi_VotingBox_C_Countdown::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function bp_wi_VotingBox.bp_wi_VotingBox_C.StopCountdown
// 0x0010 (0x0010 - 0x0000)
struct bp_wi_VotingBox_C_StopCountdown final
{
public:
	int32                                         CallFunc_PostEventAtLocation_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(bp_wi_VotingBox_C_StopCountdown) == 0x000008, "Wrong alignment on bp_wi_VotingBox_C_StopCountdown");
static_assert(sizeof(bp_wi_VotingBox_C_StopCountdown) == 0x000010, "Wrong size on bp_wi_VotingBox_C_StopCountdown");
static_assert(offsetof(bp_wi_VotingBox_C_StopCountdown, CallFunc_PostEventAtLocation_ReturnValue) == 0x000000, "Member 'bp_wi_VotingBox_C_StopCountdown::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(bp_wi_VotingBox_C_StopCountdown, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'bp_wi_VotingBox_C_StopCountdown::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

}

