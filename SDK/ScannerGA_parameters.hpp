#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScannerGA

#include "Basic.hpp"

#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function ScannerGA.ScannerGA_C.ExecuteUbergraph_ScannerGA
// 0x00C8 (0x00C8 - 0x0000)
struct ScannerGA_C_ExecuteUbergraph_ScannerGA final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0018(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsPersonoid;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCT*                          K2Node_DynamicCast_AsCharacter_SCT;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCTPlayerController_Match*             K2Node_DynamicCast_AsSCTPlayer_Controller_Match;   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          K2Node_CustomEvent_AkEvent;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScannerDisplayWI_C*                    CallFunc_Create_ReturnValue;                       // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0098(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue_1; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP_1;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNetAuthority_ReturnValue;               // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNetAuthority_ReturnValue_1;             // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ScannerGA_C_ExecuteUbergraph_ScannerGA) == 0x000008, "Wrong alignment on ScannerGA_C_ExecuteUbergraph_ScannerGA");
static_assert(sizeof(ScannerGA_C_ExecuteUbergraph_ScannerGA) == 0x0000C8, "Wrong size on ScannerGA_C_ExecuteUbergraph_ScannerGA");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, EntryPoint) == 0x000000, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::EntryPoint' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, CallFunc_WaitDelay_ReturnValue) == 0x000008, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, Temp_bool_IsClosed_Variable) == 0x000010, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, Temp_bool_Has_Been_Initd_Variable) == 0x000012, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, Temp_struct_Variable) == 0x000018, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, K2Node_CustomEvent_IsPersonoid) == 0x000030, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::K2Node_CustomEvent_IsPersonoid' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, K2Node_DynamicCast_AsCharacter_SCTBP) == 0x000038, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::K2Node_DynamicCast_AsCharacter_SCTBP' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, CallFunc_IsDedicatedServer_ReturnValue) == 0x000041, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000048, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, K2Node_DynamicCast_AsCharacter_SCT) == 0x000050, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::K2Node_DynamicCast_AsCharacter_SCT' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, K2Node_CreateDelegate_OutputDelegate) == 0x00005C, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, CallFunc_GetController_ReturnValue) == 0x000070, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, K2Node_DynamicCast_AsSCTPlayer_Controller_Match) == 0x000078, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::K2Node_DynamicCast_AsSCTPlayer_Controller_Match' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, K2Node_CustomEvent_AkEvent) == 0x000088, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::K2Node_CustomEvent_AkEvent' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, CallFunc_Create_ReturnValue) == 0x000090, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, Temp_delegate_Variable) == 0x000098, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, CallFunc_GetOwningActorFromActorInfo_ReturnValue_1) == 0x0000A8, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::CallFunc_GetOwningActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, K2Node_DynamicCast_AsCharacter_SCTBP_1) == 0x0000B0, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::K2Node_DynamicCast_AsCharacter_SCTBP_1' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, K2Node_DynamicCast_bSuccess_3) == 0x0000B8, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, CallFunc_PostAkEvent_ReturnValue) == 0x0000BC, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, CallFunc_K2_CommitAbility_ReturnValue) == 0x0000C0, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, CallFunc_IsNetAuthority_ReturnValue) == 0x0000C1, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::CallFunc_IsNetAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_ExecuteUbergraph_ScannerGA, CallFunc_IsNetAuthority_ReturnValue_1) == 0x0000C2, "Member 'ScannerGA_C_ExecuteUbergraph_ScannerGA::CallFunc_IsNetAuthority_ReturnValue_1' has a wrong offset!");

// Function ScannerGA.ScannerGA_C.Audio Post Event
// 0x0008 (0x0008 - 0x0000)
struct ScannerGA_C_Audio_Post_Event final
{
public:
	class UAkAudioEvent*                          AkEvent;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ScannerGA_C_Audio_Post_Event) == 0x000008, "Wrong alignment on ScannerGA_C_Audio_Post_Event");
static_assert(sizeof(ScannerGA_C_Audio_Post_Event) == 0x000008, "Wrong size on ScannerGA_C_Audio_Post_Event");
static_assert(offsetof(ScannerGA_C_Audio_Post_Event, AkEvent) == 0x000000, "Member 'ScannerGA_C_Audio_Post_Event::AkEvent' has a wrong offset!");

// Function ScannerGA.ScannerGA_C.Start Scan
// 0x0001 (0x0001 - 0x0000)
struct ScannerGA_C_Start_Scan final
{
public:
	bool                                          IsPersonoid;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ScannerGA_C_Start_Scan) == 0x000001, "Wrong alignment on ScannerGA_C_Start_Scan");
static_assert(sizeof(ScannerGA_C_Start_Scan) == 0x000001, "Wrong size on ScannerGA_C_Start_Scan");
static_assert(offsetof(ScannerGA_C_Start_Scan, IsPersonoid) == 0x000000, "Member 'ScannerGA_C_Start_Scan::IsPersonoid' has a wrong offset!");

// Function ScannerGA.ScannerGA_C.GiveScore
// 0x0038 (0x0038 - 0x0000)
struct ScannerGA_C_GiveScore final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCTBP_C*                      K2Node_DynamicCast_AsCharacter_SCTBP;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ScannerGA_C_GiveScore) == 0x000008, "Wrong alignment on ScannerGA_C_GiveScore");
static_assert(sizeof(ScannerGA_C_GiveScore) == 0x000038, "Wrong size on ScannerGA_C_GiveScore");
static_assert(offsetof(ScannerGA_C_GiveScore, Temp_bool_Variable) == 0x000000, "Member 'ScannerGA_C_GiveScore::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_GiveScore, Temp_name_Variable) == 0x000004, "Member 'ScannerGA_C_GiveScore::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_GiveScore, Temp_name_Variable_1) == 0x00000C, "Member 'ScannerGA_C_GiveScore::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_GiveScore, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000018, "Member 'ScannerGA_C_GiveScore::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_GiveScore, K2Node_DynamicCast_AsCharacter_SCTBP) == 0x000020, "Member 'ScannerGA_C_GiveScore::K2Node_DynamicCast_AsCharacter_SCTBP' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_GiveScore, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ScannerGA_C_GiveScore::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_GiveScore, K2Node_Select_Default) == 0x00002C, "Member 'ScannerGA_C_GiveScore::K2Node_Select_Default' has a wrong offset!");

// Function ScannerGA.ScannerGA_C.CallEvent
// 0x0020 (0x0020 - 0x0000)
struct ScannerGA_C_CallEvent final
{
public:
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCTPlayerController*                   CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCTPlayerController*                   CallFunc_GetPlayerController_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ScannerGA_C_CallEvent) == 0x000008, "Wrong alignment on ScannerGA_C_CallEvent");
static_assert(sizeof(ScannerGA_C_CallEvent) == 0x000020, "Wrong size on ScannerGA_C_CallEvent");
static_assert(offsetof(ScannerGA_C_CallEvent, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000000, "Member 'ScannerGA_C_CallEvent::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_CallEvent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'ScannerGA_C_CallEvent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_CallEvent, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'ScannerGA_C_CallEvent::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_CallEvent, CallFunc_GetPlayerController_ReturnValue_1) == 0x000018, "Member 'ScannerGA_C_CallEvent::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");

// Function ScannerGA.ScannerGA_C.Add Personoid Scanned Timestamp To Player State
// 0x0028 (0x0028 - 0x0000)
struct ScannerGA_C_Add_Personoid_Scanned_Timestamp_To_Player_State final
{
public:
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCT*                          K2Node_DynamicCast_AsCharacter_SCT;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState_MatchBP_C*              K2Node_DynamicCast_AsSCTPlayer_State_Match_BP;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ScannerGA_C_Add_Personoid_Scanned_Timestamp_To_Player_State) == 0x000008, "Wrong alignment on ScannerGA_C_Add_Personoid_Scanned_Timestamp_To_Player_State");
static_assert(sizeof(ScannerGA_C_Add_Personoid_Scanned_Timestamp_To_Player_State) == 0x000028, "Wrong size on ScannerGA_C_Add_Personoid_Scanned_Timestamp_To_Player_State");
static_assert(offsetof(ScannerGA_C_Add_Personoid_Scanned_Timestamp_To_Player_State, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000000, "Member 'ScannerGA_C_Add_Personoid_Scanned_Timestamp_To_Player_State::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_Add_Personoid_Scanned_Timestamp_To_Player_State, K2Node_DynamicCast_AsCharacter_SCT) == 0x000008, "Member 'ScannerGA_C_Add_Personoid_Scanned_Timestamp_To_Player_State::K2Node_DynamicCast_AsCharacter_SCT' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_Add_Personoid_Scanned_Timestamp_To_Player_State, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ScannerGA_C_Add_Personoid_Scanned_Timestamp_To_Player_State::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_Add_Personoid_Scanned_Timestamp_To_Player_State, K2Node_DynamicCast_AsSCTPlayer_State_Match_BP) == 0x000018, "Member 'ScannerGA_C_Add_Personoid_Scanned_Timestamp_To_Player_State::K2Node_DynamicCast_AsSCTPlayer_State_Match_BP' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_Add_Personoid_Scanned_Timestamp_To_Player_State, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'ScannerGA_C_Add_Personoid_Scanned_Timestamp_To_Player_State::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function ScannerGA.ScannerGA_C.AddGotScannedTimestampToPlayerState
// 0x0018 (0x0018 - 0x0000)
struct ScannerGA_C_AddGotScannedTimestampToPlayerState final
{
public:
	class ACharacterSCTBP_C*                      Scanned_Player;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCTPlayerState_MatchBP_C*              K2Node_DynamicCast_AsSCTPlayer_State_Match_BP;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ScannerGA_C_AddGotScannedTimestampToPlayerState) == 0x000008, "Wrong alignment on ScannerGA_C_AddGotScannedTimestampToPlayerState");
static_assert(sizeof(ScannerGA_C_AddGotScannedTimestampToPlayerState) == 0x000018, "Wrong size on ScannerGA_C_AddGotScannedTimestampToPlayerState");
static_assert(offsetof(ScannerGA_C_AddGotScannedTimestampToPlayerState, Scanned_Player) == 0x000000, "Member 'ScannerGA_C_AddGotScannedTimestampToPlayerState::Scanned_Player' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_AddGotScannedTimestampToPlayerState, K2Node_DynamicCast_AsSCTPlayer_State_Match_BP) == 0x000008, "Member 'ScannerGA_C_AddGotScannedTimestampToPlayerState::K2Node_DynamicCast_AsSCTPlayer_State_Match_BP' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_AddGotScannedTimestampToPlayerState, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ScannerGA_C_AddGotScannedTimestampToPlayerState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ScannerGA.ScannerGA_C.AddLastPlayerScannedToSelf
// 0x0038 (0x0038 - 0x0000)
struct ScannerGA_C_AddLastPlayerScannedToSelf final
{
public:
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacterSCT*                          K2Node_DynamicCast_AsCharacter_SCT;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState_MatchBP_C*              K2Node_DynamicCast_AsSCTPlayer_State_Match_BP;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCTPlayerState_MatchBP_C*              K2Node_DynamicCast_AsSCTPlayer_State_Match_BP_1;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ScannerGA_C_AddLastPlayerScannedToSelf) == 0x000008, "Wrong alignment on ScannerGA_C_AddLastPlayerScannedToSelf");
static_assert(sizeof(ScannerGA_C_AddLastPlayerScannedToSelf) == 0x000038, "Wrong size on ScannerGA_C_AddLastPlayerScannedToSelf");
static_assert(offsetof(ScannerGA_C_AddLastPlayerScannedToSelf, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000000, "Member 'ScannerGA_C_AddLastPlayerScannedToSelf::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_AddLastPlayerScannedToSelf, K2Node_DynamicCast_AsCharacter_SCT) == 0x000008, "Member 'ScannerGA_C_AddLastPlayerScannedToSelf::K2Node_DynamicCast_AsCharacter_SCT' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_AddLastPlayerScannedToSelf, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ScannerGA_C_AddLastPlayerScannedToSelf::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_AddLastPlayerScannedToSelf, K2Node_DynamicCast_AsSCTPlayer_State_Match_BP) == 0x000018, "Member 'ScannerGA_C_AddLastPlayerScannedToSelf::K2Node_DynamicCast_AsSCTPlayer_State_Match_BP' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_AddLastPlayerScannedToSelf, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'ScannerGA_C_AddLastPlayerScannedToSelf::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_AddLastPlayerScannedToSelf, K2Node_DynamicCast_AsSCTPlayer_State_Match_BP_1) == 0x000028, "Member 'ScannerGA_C_AddLastPlayerScannedToSelf::K2Node_DynamicCast_AsSCTPlayer_State_Match_BP_1' has a wrong offset!");
static_assert(offsetof(ScannerGA_C_AddLastPlayerScannedToSelf, K2Node_DynamicCast_bSuccess_2) == 0x000030, "Member 'ScannerGA_C_AddLastPlayerScannedToSelf::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

}

