#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InGameReportEntry

#include "Basic.hpp"


namespace SDK::Params
{

// Function InGameReportEntry.InGameReportEntry_C.ExecuteUbergraph_InGameReportEntry
// 0x0060 (0x0060 - 0x0000)
struct InGameReportEntry_C_ExecuteUbergraph_InGameReportEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UReportPlayerWI_C*                      CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(InGameReportEntry_C_ExecuteUbergraph_InGameReportEntry) == 0x000008, "Wrong alignment on InGameReportEntry_C_ExecuteUbergraph_InGameReportEntry");
static_assert(sizeof(InGameReportEntry_C_ExecuteUbergraph_InGameReportEntry) == 0x000060, "Wrong size on InGameReportEntry_C_ExecuteUbergraph_InGameReportEntry");
static_assert(offsetof(InGameReportEntry_C_ExecuteUbergraph_InGameReportEntry, EntryPoint) == 0x000000, "Member 'InGameReportEntry_C_ExecuteUbergraph_InGameReportEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(InGameReportEntry_C_ExecuteUbergraph_InGameReportEntry, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'InGameReportEntry_C_ExecuteUbergraph_InGameReportEntry::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(InGameReportEntry_C_ExecuteUbergraph_InGameReportEntry, CallFunc_Create_ReturnValue) == 0x000010, "Member 'InGameReportEntry_C_ExecuteUbergraph_InGameReportEntry::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(InGameReportEntry_C_ExecuteUbergraph_InGameReportEntry, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'InGameReportEntry_C_ExecuteUbergraph_InGameReportEntry::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(InGameReportEntry_C_ExecuteUbergraph_InGameReportEntry, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'InGameReportEntry_C_ExecuteUbergraph_InGameReportEntry::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(InGameReportEntry_C_ExecuteUbergraph_InGameReportEntry, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'InGameReportEntry_C_ExecuteUbergraph_InGameReportEntry::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InGameReportEntry_C_ExecuteUbergraph_InGameReportEntry, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000050, "Member 'InGameReportEntry_C_ExecuteUbergraph_InGameReportEntry::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function InGameReportEntry.InGameReportEntry_C.SetNavigateUp
// 0x0010 (0x0010 - 0x0000)
struct InGameReportEntry_C_SetNavigateUp final
{
public:
	class UWidget*                                WidgetTargetLeft;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                WidgetTargetRight;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InGameReportEntry_C_SetNavigateUp) == 0x000008, "Wrong alignment on InGameReportEntry_C_SetNavigateUp");
static_assert(sizeof(InGameReportEntry_C_SetNavigateUp) == 0x000010, "Wrong size on InGameReportEntry_C_SetNavigateUp");
static_assert(offsetof(InGameReportEntry_C_SetNavigateUp, WidgetTargetLeft) == 0x000000, "Member 'InGameReportEntry_C_SetNavigateUp::WidgetTargetLeft' has a wrong offset!");
static_assert(offsetof(InGameReportEntry_C_SetNavigateUp, WidgetTargetRight) == 0x000008, "Member 'InGameReportEntry_C_SetNavigateUp::WidgetTargetRight' has a wrong offset!");

// Function InGameReportEntry.InGameReportEntry_C.SetNavigateDown
// 0x0010 (0x0010 - 0x0000)
struct InGameReportEntry_C_SetNavigateDown final
{
public:
	class UWidget*                                WidgetTargetLeft;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                WidgetTargetRight;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InGameReportEntry_C_SetNavigateDown) == 0x000008, "Wrong alignment on InGameReportEntry_C_SetNavigateDown");
static_assert(sizeof(InGameReportEntry_C_SetNavigateDown) == 0x000010, "Wrong size on InGameReportEntry_C_SetNavigateDown");
static_assert(offsetof(InGameReportEntry_C_SetNavigateDown, WidgetTargetLeft) == 0x000000, "Member 'InGameReportEntry_C_SetNavigateDown::WidgetTargetLeft' has a wrong offset!");
static_assert(offsetof(InGameReportEntry_C_SetNavigateDown, WidgetTargetRight) == 0x000008, "Member 'InGameReportEntry_C_SetNavigateDown::WidgetTargetRight' has a wrong offset!");

// Function InGameReportEntry.InGameReportEntry_C.GetWidgetLeft
// 0x0010 (0x0010 - 0x0000)
struct InGameReportEntry_C_GetWidgetLeft final
{
public:
	class UWidget*                                WidgetLeft;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetNavigationWidget_NavigationWidget;     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InGameReportEntry_C_GetWidgetLeft) == 0x000008, "Wrong alignment on InGameReportEntry_C_GetWidgetLeft");
static_assert(sizeof(InGameReportEntry_C_GetWidgetLeft) == 0x000010, "Wrong size on InGameReportEntry_C_GetWidgetLeft");
static_assert(offsetof(InGameReportEntry_C_GetWidgetLeft, WidgetLeft) == 0x000000, "Member 'InGameReportEntry_C_GetWidgetLeft::WidgetLeft' has a wrong offset!");
static_assert(offsetof(InGameReportEntry_C_GetWidgetLeft, CallFunc_GetNavigationWidget_NavigationWidget) == 0x000008, "Member 'InGameReportEntry_C_GetWidgetLeft::CallFunc_GetNavigationWidget_NavigationWidget' has a wrong offset!");

// Function InGameReportEntry.InGameReportEntry_C.GetWidgetRight
// 0x0010 (0x0010 - 0x0000)
struct InGameReportEntry_C_GetWidgetRight final
{
public:
	class UWidget*                                WidgetRight;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetNavigationWidget_NavigationWidget;     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InGameReportEntry_C_GetWidgetRight) == 0x000008, "Wrong alignment on InGameReportEntry_C_GetWidgetRight");
static_assert(sizeof(InGameReportEntry_C_GetWidgetRight) == 0x000010, "Wrong size on InGameReportEntry_C_GetWidgetRight");
static_assert(offsetof(InGameReportEntry_C_GetWidgetRight, WidgetRight) == 0x000000, "Member 'InGameReportEntry_C_GetWidgetRight::WidgetRight' has a wrong offset!");
static_assert(offsetof(InGameReportEntry_C_GetWidgetRight, CallFunc_GetNavigationWidget_NavigationWidget) == 0x000008, "Member 'InGameReportEntry_C_GetWidgetRight::CallFunc_GetNavigationWidget_NavigationWidget' has a wrong offset!");

}

