#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AirlockVoteWI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EAirlockVoteType_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AirlockVoteWI.AirlockVoteWI_C
// 0x0030 (0x0290 - 0x0260)
class UAirlockVoteWI_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UHorizontalBox*                         HorizontalBox_Entries;                             // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Main;                               // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EAirlockVoteType                              VoteType;                                          // 0x0278(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsInQuestion;                                  // 0x0280(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, ExposeOnSpawn)

public:
	void ExecuteUbergraph_AirlockVoteWI(int32 EntryPoint);
	void Construct();
	void AddEntries();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AirlockVoteWI_C">();
	}
	static class UAirlockVoteWI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAirlockVoteWI_C>();
	}
};
static_assert(alignof(UAirlockVoteWI_C) == 0x000008, "Wrong alignment on UAirlockVoteWI_C");
static_assert(sizeof(UAirlockVoteWI_C) == 0x000290, "Wrong size on UAirlockVoteWI_C");
static_assert(offsetof(UAirlockVoteWI_C, UberGraphFrame) == 0x000260, "Member 'UAirlockVoteWI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAirlockVoteWI_C, HorizontalBox_Entries) == 0x000268, "Member 'UAirlockVoteWI_C::HorizontalBox_Entries' has a wrong offset!");
static_assert(offsetof(UAirlockVoteWI_C, WidgetSwitcher_Main) == 0x000270, "Member 'UAirlockVoteWI_C::WidgetSwitcher_Main' has a wrong offset!");
static_assert(offsetof(UAirlockVoteWI_C, VoteType) == 0x000278, "Member 'UAirlockVoteWI_C::VoteType' has a wrong offset!");
static_assert(offsetof(UAirlockVoteWI_C, ActorsInQuestion) == 0x000280, "Member 'UAirlockVoteWI_C::ActorsInQuestion' has a wrong offset!");

}

