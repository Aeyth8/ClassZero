#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerListEntrySCT

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PlayerListEntrySCT.PlayerListEntrySCT_C
// 0x0188 (0x03E8 - 0x0260)
class UPlayerListEntrySCT_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UImage*                                 BackgroundGradient;                                // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DownvoteBackground;                                // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DownVoteCount;                                     // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DownVoted;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DownvoteFrame;                                     // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_167;                                         // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IsMuted;                                           // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IsNotTalking;                                      // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IsTalking;                                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IsTalkingPersonoid;                                // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PlatformIcon_C*                     PlatformIconWidget;                                // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PlayerBackground;                                  // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PlayerName;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPlayerPortrait_C*                      Portrait;                                          // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TopLine;                                           // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             UpvoteCount;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Upvoted;                                           // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UpvoteFrame;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_VOIPIcon;                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ASCTPlayerState*                        PlayerState;                                       // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debugging;                                         // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            PositiveColor;                                     // 0x0310(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            NegativeColor;                                     // 0x0338(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            NeutralColor;                                      // 0x0360(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Lerping;                                           // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389[0x3];                                      // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OldPosition;                                       // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartMoveStamp;                                    // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveTime;                                          // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetYPosition;                                   // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetXPosition;                                   // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            ChangePositionCurve;                               // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorScheme;                                       // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PortraitMaterial;                                  // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CachedPlayerName;                                  // 0x03C0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UPlayerListSCT_C*                       ListContainer;                                     // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         CachedPlayerID;                                    // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_PlayerListEntrySCT(int32 EntryPoint);
	void UpdateColorRepeated();
	void OnAddPresence();
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void Initialize_Network_Data();
	void OnTalking(bool Is_Talking, bool Is_Local);
	void OnTalkingPersonoid(bool IsTalking_0, bool IsLocal);
	void OnMuting(bool IsMuted_0);
	void OnSuccess_984BE7584A47CE1F5FBC0AAC766B42D9(const struct FFCTPlatformPlayerInfo& PlatformInfo, int32 Code, const class FString& Message);
	void OnError_984BE7584A47CE1F5FBC0AAC766B42D9(const struct FFCTPlatformPlayerInfo& PlatformInfo, int32 Code, const class FString& Message);
	void LerpToNewPosition();
	void Init(class ASCTPlayerState* Player_State);
	void UpdatePlayerName();
	void BindToCallbacks();
	void OnPlayerNameChanged(const class FString& New_Player_Name);
	void UpdateVoteState();
	void HideBothVoteIcons();
	void UpdateVoteCountTexts();
	void SetVoteCountText(int32 Vote_Count, class UTextBlock* Text_Target);
	void UpdateVoteIcons();
	void Disconnected();
	void Reconnected();
	void InitPortrait();
	void Init_VOIP();
	void VivoxTalkerBindings();
	void Reinitialize(class ASCTPlayerState* PlayerState_0);
	void OnMuteChangedOtherParticipant(const class FString& ParticipantID, bool bIsMuted);
	void OnMuteChangedLocalPlayer(bool IsMuted_0);
	void RemoveSelf();

	void HasEqualVotes(bool* Return_Value) const;
	void HasMoreUpvotes(bool* Return_Value) const;
	void IsLocalPersonoid(bool* IsPersonoid) const;
	bool Is_Local_Entry() const;
	void NetSynchronized(bool* Return_Value) const;
	bool IsMutedByLocalPlayer() const;
	void IsInBackfill(bool* IsWarmuap) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerListEntrySCT_C">();
	}
	static class UPlayerListEntrySCT_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerListEntrySCT_C>();
	}
};
static_assert(alignof(UPlayerListEntrySCT_C) == 0x000008, "Wrong alignment on UPlayerListEntrySCT_C");
static_assert(sizeof(UPlayerListEntrySCT_C) == 0x0003E8, "Wrong size on UPlayerListEntrySCT_C");
static_assert(offsetof(UPlayerListEntrySCT_C, UberGraphFrame) == 0x000260, "Member 'UPlayerListEntrySCT_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, BackgroundGradient) == 0x000268, "Member 'UPlayerListEntrySCT_C::BackgroundGradient' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, DownvoteBackground) == 0x000270, "Member 'UPlayerListEntrySCT_C::DownvoteBackground' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, DownVoteCount) == 0x000278, "Member 'UPlayerListEntrySCT_C::DownVoteCount' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, DownVoted) == 0x000280, "Member 'UPlayerListEntrySCT_C::DownVoted' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, DownvoteFrame) == 0x000288, "Member 'UPlayerListEntrySCT_C::DownvoteFrame' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, Image_167) == 0x000290, "Member 'UPlayerListEntrySCT_C::Image_167' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, IsMuted) == 0x000298, "Member 'UPlayerListEntrySCT_C::IsMuted' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, IsNotTalking) == 0x0002A0, "Member 'UPlayerListEntrySCT_C::IsNotTalking' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, IsTalking) == 0x0002A8, "Member 'UPlayerListEntrySCT_C::IsTalking' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, IsTalkingPersonoid) == 0x0002B0, "Member 'UPlayerListEntrySCT_C::IsTalkingPersonoid' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, PlatformIconWidget) == 0x0002B8, "Member 'UPlayerListEntrySCT_C::PlatformIconWidget' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, PlayerBackground) == 0x0002C0, "Member 'UPlayerListEntrySCT_C::PlayerBackground' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, PlayerName) == 0x0002C8, "Member 'UPlayerListEntrySCT_C::PlayerName' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, Portrait) == 0x0002D0, "Member 'UPlayerListEntrySCT_C::Portrait' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, TopLine) == 0x0002D8, "Member 'UPlayerListEntrySCT_C::TopLine' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, UpvoteCount) == 0x0002E0, "Member 'UPlayerListEntrySCT_C::UpvoteCount' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, Upvoted) == 0x0002E8, "Member 'UPlayerListEntrySCT_C::Upvoted' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, UpvoteFrame) == 0x0002F0, "Member 'UPlayerListEntrySCT_C::UpvoteFrame' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, WidgetSwitcher_VOIPIcon) == 0x0002F8, "Member 'UPlayerListEntrySCT_C::WidgetSwitcher_VOIPIcon' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, PlayerState) == 0x000300, "Member 'UPlayerListEntrySCT_C::PlayerState' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, Debugging) == 0x000308, "Member 'UPlayerListEntrySCT_C::Debugging' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, PositiveColor) == 0x000310, "Member 'UPlayerListEntrySCT_C::PositiveColor' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, NegativeColor) == 0x000338, "Member 'UPlayerListEntrySCT_C::NegativeColor' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, NeutralColor) == 0x000360, "Member 'UPlayerListEntrySCT_C::NeutralColor' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, Lerping) == 0x000388, "Member 'UPlayerListEntrySCT_C::Lerping' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, OldPosition) == 0x00038C, "Member 'UPlayerListEntrySCT_C::OldPosition' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, StartMoveStamp) == 0x000390, "Member 'UPlayerListEntrySCT_C::StartMoveStamp' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, MoveTime) == 0x000394, "Member 'UPlayerListEntrySCT_C::MoveTime' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, TargetYPosition) == 0x000398, "Member 'UPlayerListEntrySCT_C::TargetYPosition' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, TargetXPosition) == 0x00039C, "Member 'UPlayerListEntrySCT_C::TargetXPosition' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, ChangePositionCurve) == 0x0003A0, "Member 'UPlayerListEntrySCT_C::ChangePositionCurve' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, ColorScheme) == 0x0003A8, "Member 'UPlayerListEntrySCT_C::ColorScheme' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, PortraitMaterial) == 0x0003B8, "Member 'UPlayerListEntrySCT_C::PortraitMaterial' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, CachedPlayerName) == 0x0003C0, "Member 'UPlayerListEntrySCT_C::CachedPlayerName' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, ListContainer) == 0x0003D8, "Member 'UPlayerListEntrySCT_C::ListContainer' has a wrong offset!");
static_assert(offsetof(UPlayerListEntrySCT_C, CachedPlayerID) == 0x0003E0, "Member 'UPlayerListEntrySCT_C::CachedPlayerID' has a wrong offset!");

}

