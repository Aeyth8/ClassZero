#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CustomizeHairColor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "SCT_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_CustomizeHairColor.BP_CustomizeHairColor_C
// 0x0090 (0x02F0 - 0x0260)
class UBP_CustomizeHairColor_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class USlider*                                BlueSlider;                                        // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             BlueValueText;                                     // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ColorImage;                                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                GreenSlider;                                       // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             GreenValueText;                                    // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_59;                                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_60;                                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_64;                                          // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_122;                                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                RedSlider;                                         // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RedValueText;                                      // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TopLine;                                           // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TopLine_1;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnUpdateHairColor;                                 // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	EPlayerCustomizationGender                    Gender;                                            // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnUpdateHairColor__DelegateSignature(const struct FLinearColor& HairColor);
	void ExecuteUbergraph_BP_CustomizeHairColor(int32 EntryPoint);
	void BndEvt__RedSlider_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__GreenSlider_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__BlueSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void Initialize(class ACharacterPreviewerSCTBP_C* CharacterPreviewer, const struct FLinearColor& Color, EPlayerCustomizationGender InGender);
	void UpdateUIRow(class USlider* ColorSlider, class UTextBlock* ColorText, float ColorValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CustomizeHairColor_C">();
	}
	static class UBP_CustomizeHairColor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CustomizeHairColor_C>();
	}
};
static_assert(alignof(UBP_CustomizeHairColor_C) == 0x000008, "Wrong alignment on UBP_CustomizeHairColor_C");
static_assert(sizeof(UBP_CustomizeHairColor_C) == 0x0002F0, "Wrong size on UBP_CustomizeHairColor_C");
static_assert(offsetof(UBP_CustomizeHairColor_C, UberGraphFrame) == 0x000260, "Member 'UBP_CustomizeHairColor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_CustomizeHairColor_C, BlueSlider) == 0x000268, "Member 'UBP_CustomizeHairColor_C::BlueSlider' has a wrong offset!");
static_assert(offsetof(UBP_CustomizeHairColor_C, BlueValueText) == 0x000270, "Member 'UBP_CustomizeHairColor_C::BlueValueText' has a wrong offset!");
static_assert(offsetof(UBP_CustomizeHairColor_C, ColorImage) == 0x000278, "Member 'UBP_CustomizeHairColor_C::ColorImage' has a wrong offset!");
static_assert(offsetof(UBP_CustomizeHairColor_C, GreenSlider) == 0x000280, "Member 'UBP_CustomizeHairColor_C::GreenSlider' has a wrong offset!");
static_assert(offsetof(UBP_CustomizeHairColor_C, GreenValueText) == 0x000288, "Member 'UBP_CustomizeHairColor_C::GreenValueText' has a wrong offset!");
static_assert(offsetof(UBP_CustomizeHairColor_C, Image) == 0x000290, "Member 'UBP_CustomizeHairColor_C::Image' has a wrong offset!");
static_assert(offsetof(UBP_CustomizeHairColor_C, Image_59) == 0x000298, "Member 'UBP_CustomizeHairColor_C::Image_59' has a wrong offset!");
static_assert(offsetof(UBP_CustomizeHairColor_C, Image_60) == 0x0002A0, "Member 'UBP_CustomizeHairColor_C::Image_60' has a wrong offset!");
static_assert(offsetof(UBP_CustomizeHairColor_C, Image_64) == 0x0002A8, "Member 'UBP_CustomizeHairColor_C::Image_64' has a wrong offset!");
static_assert(offsetof(UBP_CustomizeHairColor_C, Image_122) == 0x0002B0, "Member 'UBP_CustomizeHairColor_C::Image_122' has a wrong offset!");
static_assert(offsetof(UBP_CustomizeHairColor_C, RedSlider) == 0x0002B8, "Member 'UBP_CustomizeHairColor_C::RedSlider' has a wrong offset!");
static_assert(offsetof(UBP_CustomizeHairColor_C, RedValueText) == 0x0002C0, "Member 'UBP_CustomizeHairColor_C::RedValueText' has a wrong offset!");
static_assert(offsetof(UBP_CustomizeHairColor_C, TopLine) == 0x0002C8, "Member 'UBP_CustomizeHairColor_C::TopLine' has a wrong offset!");
static_assert(offsetof(UBP_CustomizeHairColor_C, TopLine_1) == 0x0002D0, "Member 'UBP_CustomizeHairColor_C::TopLine_1' has a wrong offset!");
static_assert(offsetof(UBP_CustomizeHairColor_C, OnUpdateHairColor) == 0x0002D8, "Member 'UBP_CustomizeHairColor_C::OnUpdateHairColor' has a wrong offset!");
static_assert(offsetof(UBP_CustomizeHairColor_C, Gender) == 0x0002E8, "Member 'UBP_CustomizeHairColor_C::Gender' has a wrong offset!");

}

