#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ControllerIconWI

#include "Basic.hpp"


namespace SDK::Params
{

// Function ControllerIconWI.ControllerIconWI_C.ExecuteUbergraph_ControllerIconWI
// 0x0058 (0x0058 - 0x0000)
struct ControllerIconWI_C_ExecuteUbergraph_ControllerIconWI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Event_ButtonIcon;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Event_MouseIcon;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_KeyDisplayText;                       // 0x0028(0x0018)(ConstParm)
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0040(0x0018)()
};
static_assert(alignof(ControllerIconWI_C_ExecuteUbergraph_ControllerIconWI) == 0x000008, "Wrong alignment on ControllerIconWI_C_ExecuteUbergraph_ControllerIconWI");
static_assert(sizeof(ControllerIconWI_C_ExecuteUbergraph_ControllerIconWI) == 0x000058, "Wrong size on ControllerIconWI_C_ExecuteUbergraph_ControllerIconWI");
static_assert(offsetof(ControllerIconWI_C_ExecuteUbergraph_ControllerIconWI, EntryPoint) == 0x000000, "Member 'ControllerIconWI_C_ExecuteUbergraph_ControllerIconWI::EntryPoint' has a wrong offset!");
static_assert(offsetof(ControllerIconWI_C_ExecuteUbergraph_ControllerIconWI, K2Node_Event_ButtonIcon) == 0x000008, "Member 'ControllerIconWI_C_ExecuteUbergraph_ControllerIconWI::K2Node_Event_ButtonIcon' has a wrong offset!");
static_assert(offsetof(ControllerIconWI_C_ExecuteUbergraph_ControllerIconWI, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ControllerIconWI_C_ExecuteUbergraph_ControllerIconWI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ControllerIconWI_C_ExecuteUbergraph_ControllerIconWI, K2Node_Event_MouseIcon) == 0x000018, "Member 'ControllerIconWI_C_ExecuteUbergraph_ControllerIconWI::K2Node_Event_MouseIcon' has a wrong offset!");
static_assert(offsetof(ControllerIconWI_C_ExecuteUbergraph_ControllerIconWI, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'ControllerIconWI_C_ExecuteUbergraph_ControllerIconWI::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ControllerIconWI_C_ExecuteUbergraph_ControllerIconWI, K2Node_Event_KeyDisplayText) == 0x000028, "Member 'ControllerIconWI_C_ExecuteUbergraph_ControllerIconWI::K2Node_Event_KeyDisplayText' has a wrong offset!");
static_assert(offsetof(ControllerIconWI_C_ExecuteUbergraph_ControllerIconWI, CallFunc_TextToUpper_ReturnValue) == 0x000040, "Member 'ControllerIconWI_C_ExecuteUbergraph_ControllerIconWI::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");

// Function ControllerIconWI.ControllerIconWI_C.ShowKeyboardDisplay
// 0x0018 (0x0018 - 0x0000)
struct ControllerIconWI_C_ShowKeyboardDisplay final
{
public:
	class FText                                   KeyDisplayText;                                    // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ControllerIconWI_C_ShowKeyboardDisplay) == 0x000008, "Wrong alignment on ControllerIconWI_C_ShowKeyboardDisplay");
static_assert(sizeof(ControllerIconWI_C_ShowKeyboardDisplay) == 0x000018, "Wrong size on ControllerIconWI_C_ShowKeyboardDisplay");
static_assert(offsetof(ControllerIconWI_C_ShowKeyboardDisplay, KeyDisplayText) == 0x000000, "Member 'ControllerIconWI_C_ShowKeyboardDisplay::KeyDisplayText' has a wrong offset!");

// Function ControllerIconWI.ControllerIconWI_C.ShowMouseDisplay
// 0x0008 (0x0008 - 0x0000)
struct ControllerIconWI_C_ShowMouseDisplay final
{
public:
	class UTexture2D*                             MouseIcon;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControllerIconWI_C_ShowMouseDisplay) == 0x000008, "Wrong alignment on ControllerIconWI_C_ShowMouseDisplay");
static_assert(sizeof(ControllerIconWI_C_ShowMouseDisplay) == 0x000008, "Wrong size on ControllerIconWI_C_ShowMouseDisplay");
static_assert(offsetof(ControllerIconWI_C_ShowMouseDisplay, MouseIcon) == 0x000000, "Member 'ControllerIconWI_C_ShowMouseDisplay::MouseIcon' has a wrong offset!");

// Function ControllerIconWI.ControllerIconWI_C.ShowGamepadDisplay
// 0x0008 (0x0008 - 0x0000)
struct ControllerIconWI_C_ShowGamepadDisplay final
{
public:
	class UTexture2D*                             ButtonIcon;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControllerIconWI_C_ShowGamepadDisplay) == 0x000008, "Wrong alignment on ControllerIconWI_C_ShowGamepadDisplay");
static_assert(sizeof(ControllerIconWI_C_ShowGamepadDisplay) == 0x000008, "Wrong size on ControllerIconWI_C_ShowGamepadDisplay");
static_assert(offsetof(ControllerIconWI_C_ShowGamepadDisplay, ButtonIcon) == 0x000000, "Member 'ControllerIconWI_C_ShowGamepadDisplay::ButtonIcon' has a wrong offset!");

}

